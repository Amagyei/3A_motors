{"version":3,"file":"ej2-progressbar.umd.min.js","sources":["../src/progressbar/utils/helper.js","../src/progressbar/model/progress-base.js","../src/progressbar/model/constant.js","../src/progressbar/model/annotation.js","../src/progressbar/utils/progress-animation.js","../src/progressbar/model/progress-annotation.js","../src/progressbar/model/progress-tooltip.js","../src/progressbar/types/segment-progress.js","../src/progressbar/types/linear-progress.js","../src/progressbar/types/circular-progress.js","../src/progressbar/progressbar.js","../src/progressbar/utils/theme.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar Pos = /** @class */ (function () {\n    function Pos(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Pos;\n}());\nexport { Pos };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * Converts a color value to its hexadecimal representation.\n *\n * @param {ColorValue} value - The color value to convert.\n * @returns {string} - The hexadecimal representation of the color.\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * Converts a color component value to its hexadecimal representation.\n *\n * @param {number} value - The color component value to convert.\n * @returns {string} - The hexadecimal representation of the color component.\n * @private\n */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * Converts a hexadecimal color code to a ColorValue.\n *\n * @param {string} hex - The hexadecimal color code to convert.\n * @returns {ColorValue} - The ColorValue representing the color.\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * Converts a color name to its corresponding hexadecimal representation.\n *\n * @param {string} color - The color name to convert.\n * @returns {string} - The hexadecimal representation of the color.\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    document.body.appendChild(createElement('text', { id: 'chartmeasuretext' }));\n    var element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    remove(element);\n    var isRGBValue;\n    if (color.indexOf('rgb') === 0 || color.indexOf('hsl') === 0) {\n        color = color.replace(/\\s/g, '').replace(/[()]/g, '');\n        isRGBValue = color.slice(3).split(',');\n    }\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, fontSize, fontStyle, fontFamily, fontWeight, textAnchor, fill, x, y, width, height) {\n        this.id = id;\n        this['font-size'] = fontSize;\n        this['font-style'] = fontStyle;\n        this['font-family'] = fontFamily;\n        this['font-weight'] = fontWeight;\n        this['text-anchor'] = textAnchor;\n        this.fill = fill;\n        this.x = x;\n        this.y = y;\n        this.width = width ? width : 0;\n        this.height = height ? height : 0;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Converts polar coordinates (angle in degrees) to Cartesian coordinates.\n *\n * @param {number} centerX - The x-coordinate of the center point.\n * @param {number} centerY - The y-coordinate of the center point.\n * @param {number} radius - The radius from the center point.\n * @param {number} angleInDegrees - The angle in degrees.\n * @returns {Pos} - The Cartesian coordinates (x, y) corresponding to the given polar coordinates.\n */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/**\n * Generates an SVG path arc string based on given parameters.\n *\n * @param {number} x - The x-coordinate of the center of the arc.\n * @param {number} y - The y-coordinate of the center of the arc.\n * @param {number} radius - The radius of the arc.\n * @param {number} startAngle - The start angle of the arc in degrees.\n * @param {number} endAngle - The end angle of the arc in degrees.\n * @param {boolean} enableRtl - Indicates whether the drawing direction is right-to-left.\n * @param {boolean} pieView - Indicates whether the arc should be drawn as a pie slice.\n * @returns {string} - The SVG path arc string representing the arc.\n */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, pieView) {\n    var start = degreeToLocation(x, y, radius, startAngle);\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (pieView) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y + ' ' + 'Z';\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/**\n * Converts a string value to a number, considering the container size.\n *\n * @param {string} value - The string value to convert to a number.\n * @param {number} containerSize - The size of the container to consider for relative values.\n * @returns {number} - The converted number value.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Sets attributes on an HTML element based on the provided options.\n *\n * @param {any} options - The options object containing attributes to set.\n * @param {Element} element - The HTML element to set attributes on.\n * @returns {Element} - The modified HTML element.\n * @private\n */\nexport function setAttributes(options, element) {\n    var keys = Object.keys(options);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], options[keys[i]]);\n    }\n    return element;\n}\n/**\n * Calculates the effect value at a given time based on the start and end values, duration, and direction.\n *\n * @param {number} currentTime - The current time in milliseconds.\n * @param {number} startValue - The start value of the effect.\n * @param {number} endValue - The end value of the effect.\n * @param {number} duration - The duration of the effect in milliseconds.\n * @param {boolean} enableRtl - Indicates whether the effect direction is right-to-left.\n * @returns {number} - The calculated effect value at the given time.\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Retrieves an HTML element from the DOM by its ID.\n *\n * @param {string} id - The ID of the HTML element to retrieve.\n * @returns {Element} - The HTML element with the specified ID.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Removes an HTML element from the DOM.\n *\n * @param {string | Element} id - The ID of the HTML element or the element itself to remove.\n *                                If provided as a string, it's assumed to be the ID of the element.\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Complex } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in progressbar\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Far')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"text\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n/**\n * Configures the borders .\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n *  Options to customize the tooltip for the progress bar.\n *\n *  @default {}\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showTooltipOnHover\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: '12px', fontWeight: null, fontStyle: 'Normal', color: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * RangeColor\n */\nvar RangeColor = /** @class */ (function (_super) {\n    __extends(RangeColor, _super);\n    function RangeColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], RangeColor.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"end\", void 0);\n    return RangeColor;\n}(ChildProperty));\nexport { RangeColor };\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n/**\n * mouseClick event\n */\nexport var mouseClick = 'mouseClick';\n/**\n * mouseDown event\n */\nexport var mouseDown = 'mouseDown';\n/**\n * mouseUp event\n */\nexport var mouseUp = 'mouseUp';\n/**\n * mouseMove event\n */\nexport var mouseMove = 'mouseMove';\n/**\n * mouseLeave event\n */\nexport var mouseLeave = 'mouseLeave';\n/**\n * svgLink\n */\nexport var svgLink = 'http://www.w3.org/2000/svg';\n/**\n * gradient type\n */\nexport var gradientType = 'linearGradient';\n/**\n * stop element\n */\nexport var stopElement = 'stop';\n/**\n * Render for the tooltip.\n */\nexport var tooltipRender = 'tooltipRender';\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for progress annotation\n     *\n     * @param {ProgressBar} control It called constructor\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     *\n     * @param {ProgressAnnotationSettings} annotation One of the parameter called annotation\n     * @param {number} index Index of the annotation\n     * @param {HTMLElement} parentElement Parent element of the annotation\n     * @returns {void}\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var location = new ProgressLocation(0, 0);\n        var annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n            if (this.control.isReact) {\n                this.control.clearTemplate();\n            }\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n            if (this.control.isReact) {\n                this.control.renderReactTemplates();\n            }\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","import { Animation, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { degreeToLocation, effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius, completeAngle } from '../model/constant';\n/**\n * Animation for progress bar\n */\nvar ProgressAnimation = /** @class */ (function () {\n    function ProgressAnimation() {\n    }\n    /**\n     * Performs linear animation on the specified element.\n     *\n     * @param {Element} element - The HTML element to animate.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} delay - The delay before starting the animation, in milliseconds.\n     * @param {number} previousWidth - The previous width of the progress.\n     * @param {Element} active - The active element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doLinearAnimation = function (element, progress, delay, previousWidth, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        var width = linearPath.getAttribute('width');\n        var x = linearPath.getAttribute('x');\n        var opacityValue = 0;\n        var value = 0;\n        var start = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? previousWidth : parseInt(x, 10);\n        var end = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? parseInt(width, 10) - start :\n            parseInt(width, 10) - previousWidth;\n        var rtlX = parseInt(x, 10) - end;\n        linearPath.style.visibility = 'hidden';\n        animation.animate(linearPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), parseInt(x, 10), parseInt(width, 10), true);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, true);\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), 0, parseInt(width, 10), false);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                linearPath.style.visibility = '';\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (progress.isActive) {\n                        linearPath.setAttribute('x', x.toString());\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                    else {\n                        linearPath.setAttribute('x', rtlX.toString());\n                    }\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                    if (progress.isActive) {\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /**\n     * Initiates linear animation for an indeterminate progress bar.\n     *\n     * @param {Element} element - The HTML element representing the progress bar.\n     * @param {number} progressWidth - The width of the progress bar.\n     * @param {number} thickness - The thickness of the progress bar.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {Element} clipPath - The SVG clip path element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doLinearIndeterminate = function (element, progressWidth, thickness, progress, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var x = linearPath.getAttribute('x');\n        var width = linearPath.getAttribute('width');\n        var value = 0;\n        var start = (width) ? -(parseInt(width, 10)) : -progressWidth;\n        var end = (progress.progressRect.x + progress.progressRect.width) + ((width) ? (parseInt(width, 10)) : progressWidth);\n        var duration = (!progress.enableProgressSegments) ? progress.animation.duration : progress.animation.duration + 1000;\n        animation.animate(clipPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : duration,\n            delay: 0,\n            progress: function (args) {\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    value = effect(args.timeStamp, parseInt(x, 10) || progress.progressRect.x + progressWidth, end, args.duration, true);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n                else {\n                    value = effect(args.timeStamp, start, end, args.duration, false);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n            },\n            end: function () {\n                if (progress.enableRtl && !progress.enableProgressSegments && !(progress.cornerRadius === 'Round4px')) {\n                    linearPath.setAttribute('x', x.toString());\n                }\n                else if (!progress.enableProgressSegments) {\n                    linearPath.setAttribute('x', start.toString());\n                }\n                if (!progress.destroyIndeterminate) {\n                    _this.doLinearIndeterminate(element, progressWidth, thickness, progress, clipPath);\n                }\n            }\n        });\n    };\n    /**\n     * Performs striped animation on the specified element.\n     *\n     * @param {Element} element - The HTML element to animate.\n     * @param {ProgressBar} progress - The progress bar object.\n     * @param {number} value - The value indicating the progress of the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doStripedAnimation = function (element, progress, value) {\n        var _this = this;\n        var animation = new Animation({});\n        var point = 1000 / progress.animation.duration;\n        animation.animate(element, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration,\n            delay: progress.animation.delay,\n            progress: function () {\n                value += (progress.enableRtl) ? -point : point;\n                element.setAttribute('gradientTransform', 'translate(' + value + ') rotate(-45)');\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doStripedAnimation(element, progress, value);\n                }\n            }\n        });\n    };\n    /**\n     * Initiates circular animation on the specified element.\n     *\n     * @param {number} x - The x-coordinate of the center of the circle.\n     * @param {number} y - The y-coordinate of the center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {number} progressEnd - The end value of the progress.\n     * @param {number} totalEnd - The total end value of the progress.\n     * @param {Element} element - The HTML element representing the circular progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} thickness - The thickness of the circular progress.\n     * @param {number} delay - The delay before starting the animation, in milliseconds.\n     * @param {number} startValue - The starting value of the progress.\n     * @param {number} previousTotal - The previous total value of the progress.\n     * @param {Element} active - The active element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doCircularAnimation = function (x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var circularPath = element;\n        var start = progress.startAngle;\n        var pathRadius = radius + (thickness / 2);\n        var end = 0;\n        var opacityValue = 0;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        start += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n        totalEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            (lineCapRadius / 2) * thickness : 0;\n        progressEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? -(lineCapRadius / 2) * thickness : (lineCapRadius / 2) * thickness) : 0;\n        if (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0 && progress.startAngle === progress.endAngle) {\n            var startPosition = degreeToLocation(x, y, pathRadius, start).x;\n            var endPosition = degreeToLocation(x, y, pathRadius, progressEnd).x;\n            while (((progress.enableRtl !== progress.startAngle >= 180) ? endPosition <= startPosition : endPosition >= startPosition)) {\n                progressEnd += (progress.enableRtl ? 0.1 : -0.1);\n                endPosition = degreeToLocation(x, y, pathRadius, progressEnd).x;\n            }\n        }\n        var startPos = (!isNullOrUndefined(startValue)) ? startValue : start;\n        var endPos = (!isNullOrUndefined(startValue)) ? totalEnd - previousTotal : totalEnd;\n        circularPath.setAttribute('visibility', 'Hidden');\n        animation.animate(circularPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (args.timeStamp >= args.delay) {\n                    circularPath.setAttribute('visibility', 'visible');\n                    if (progress.isActive) {\n                        end = _this.activeAnimate((args.timeStamp / args.duration), startPos, endPos, progress.enableRtl);\n                        opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                        active.setAttribute('opacity', opacityValue.toString());\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                    else {\n                        end = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                circularPath.setAttribute('visibility', '');\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, progressEnd, progress.enableRtl, true));\n                if (progress.isActive) {\n                    _this.doCircularAnimation(x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active);\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /**\n     * Initiates circular animation for an indeterminate progress bar.\n     *\n     * @param {Element} circularProgress - The HTML element representing the circular progress bar.\n     * @param {ProgressBar} progress - The progress bar object.\n     * @param {number} start - The starting value of the progress.\n     * @param {number} end - The ending value of the progress.\n     * @param {number} x - The x-coordinate of the center of the circle.\n     * @param {number} y - The y-coordinate of the center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {number} thickness - The thickness of the circular progress bar.\n     * @param {Element} clipPath - The SVG clip path element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doCircularIndeterminate = function (circularProgress, progress, start, end, x, y, radius, thickness, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var pathRadius = radius + ((!progress.enableProgressSegments) ? (thickness / 2) : 0);\n        var duration = (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration;\n        var value = (!progress.enableProgressSegments) ? 6000 / duration : 4000 / duration;\n        animation.animate(clipPath, {\n            progress: function () {\n                circularProgress.style.visibility = 'visible';\n                start += (progress.enableRtl) ? -value : value;\n                end += (progress.enableRtl) ? -value : value;\n                circularProgress.setAttribute('d', getPathArc(x, y, pathRadius, start % 360, end % 360, progress.enableRtl, !progress.enableProgressSegments));\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius, thickness, clipPath);\n                }\n            }\n        });\n    };\n    /**\n     * Initiates label animation for a progress bar.\n     *\n     * @param {Element} labelPath - The SVG path element representing the label.\n     * @param {number} start - The starting value of the progress.\n     * @param {number} end - The ending value of the progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} delay - The delay before starting the animation, in milliseconds.\n     * @param {number} textSize - The size of the text.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doLabelAnimation = function (labelPath, start, end, progress, delay, textSize) {\n        var animation = new Animation({});\n        var label = new Animation({});\n        var startPos;\n        var endPos;\n        var text = labelPath.innerHTML;\n        var value = 0;\n        var xPos = 0;\n        var valueChanged = 0;\n        var percentage = 100;\n        var labelText = progress.labelStyle.text;\n        var labelPos = progress.labelStyle.textAlignment;\n        var posX = parseInt(labelPath.getAttribute('x'), 10);\n        labelPath.setAttribute('visibility', 'Hidden');\n        if (progress.type === 'Linear') {\n            startPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width) + (textSize / 2) :\n                start - (textSize / 2);\n            startPos = (startPos <= 0) ? 0 : startPos;\n            endPos = (progress.enableRtl) ? startPos - posX : posX - startPos;\n        }\n        animation.animate(labelPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                args.name = 'SlideRight';\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        if (labelText === '') {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            valueChanged = parseInt((((Math.round(value)) / progress.progressRect.width) * percentage).toString(), 10);\n                            labelPath.innerHTML = valueChanged.toString() + '%';\n                            if (labelPos === 'Far' || labelPos === 'Center') {\n                                xPos = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                                labelPath.setAttribute('x', xPos.toString());\n                            }\n                        }\n                    }\n                }\n                else if (progress.type === 'Circular') {\n                    if (labelText === '') {\n                        labelPath.setAttribute('visibility', 'visible');\n                        value = effect(args.timeStamp, start, end - start, args.duration, false);\n                        valueChanged = parseInt((((Math.round(value)) / progress.totalAngle) * percentage).toString(), 10);\n                        labelPath.innerHTML = valueChanged.toString() + '%';\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                if (labelText === '') {\n                    labelPath.innerHTML = text;\n                    labelPath.setAttribute('x', posX.toString());\n                }\n                else {\n                    label.animate(labelPath, {\n                        progress: function (args) {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, 0, 1, args.duration, false);\n                            labelPath.setAttribute('opacity', value.toString());\n                        },\n                        end: function () {\n                            labelPath.setAttribute('opacity', '1');\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /**\n     * Initiates annotation animation for a circular progress bar.\n     *\n     * @param {Element} circularPath - The SVG path element representing the circular progress bar.\n     * @param {ProgressBar} progress - The progress bar object.\n     * @param {number} previousEnd - The previous end value of the progress.\n     * @param {number} previousTotal - The previous total value of the progress.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doAnnotationAnimation = function (circularPath, progress, previousEnd, previousTotal) {\n        var animation = new Animation({});\n        var value = 0;\n        var percentage = 100;\n        var isAnnotation = progress.annotations.length > 0;\n        var annotatElementChanged;\n        var firstAnnotatElement;\n        var start = progress.startAngle;\n        var totalAngle = progress.totalAngle;\n        var totalEnd;\n        var annotateValueChanged;\n        var annotateValue;\n        if (isAnnotation && progress.progressAnnotationModule) {\n            firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n            if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n                if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                    annotatElementChanged = firstAnnotatElement.children[0];\n                }\n            }\n        }\n        totalEnd = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n        progress.annotateTotal = totalEnd =\n            (progress.argsData.value < progress.minimum) ? 0 : totalEnd;\n        progress.annotateEnd = start + totalEnd;\n        annotateValue = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        annotateValue = (progress.argsData.value < progress.minimum) ? 0 :\n            Math.round(annotateValue);\n        var startValue = (!isNullOrUndefined(previousEnd)) ? previousEnd : start;\n        var endValue = (!isNullOrUndefined(previousEnd)) ? totalEnd - previousTotal : totalEnd;\n        if (progress.argsData.value <= progress.minimum) {\n            annotatElementChanged.innerHTML = annotateValue + '%';\n        }\n        else {\n            animation.animate(circularPath, {\n                duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration,\n                delay: progress.animation.delay,\n                progress: function (args) {\n                    progress.cancelResize = true;\n                    if (isAnnotation && annotatElementChanged) {\n                        value = effect(args.timeStamp, startValue, endValue, args.duration, false);\n                        annotateValueChanged = parseInt((((Math.round(value) - start) / totalAngle) * percentage).toString(), 10);\n                        annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '0%';\n                    }\n                },\n                end: function () {\n                    progress.cancelResize = false;\n                    annotatElementChanged.innerHTML = annotateValue + '%';\n                }\n            });\n        }\n    };\n    ProgressAnimation.prototype.activeAnimate = function (t, start, end, enableRtl) {\n        var time = 1 - Math.pow(1 - t, 3);\n        var attrValue = start + ((!enableRtl) ? (time * end) : -(time * end));\n        return attrValue;\n    };\n    return ProgressAnimation;\n}());\nexport { ProgressAnimation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\nimport { ProgressAnimation } from '../utils/progress-animation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for ProgressBar annotation\n     *\n     * @private\n     * @param {ProgressBar} control Passed the control\n     * @param {annotations} annotations ProgressAnnotationSettings\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.animation = new ProgressAnimation();\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for ProgressBar\n     *\n     * @param {Element} element Annotation element.\n     * @returns {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n        if (this.progress.animation.enable && !this.progress.isIndeterminate) {\n            this.animation.doAnnotationAnimation(this.progress.clipPath, this.progress);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { Animation, extend } from '@syncfusion/ej2-base';\nimport { effect, ProgressLocation } from '../utils/helper';\nimport { tooltipRender } from './constant';\n/**\n * class for tooltip.\n */\nvar ProgressTooltip = /** @class */ (function () {\n    /**\n     * Constructor for progress tooltip.\n     *\n     * @param {ProgressBar} control\n     */\n    function ProgressTooltip(control) {\n        // Defines text collection passed to svg tooltip.\n        this.text = [];\n        this.control = control;\n    }\n    /**\n     * Method to render the tooltip for progress bar.\n     */\n    ProgressTooltip.prototype.tooltip = function (e) {\n        var svgElement = document.getElementById(this.control.element.id + '_tooltip');\n        var isTooltip = (svgElement && parseInt(svgElement.getAttribute('opacity'), 10) > 0);\n        this.renderTooltip(e, this.control, !isTooltip);\n        if (this.control.tooltip.enable && this.control.type === 'Circular' && this.control.animation.enable && !(this.control.tooltip.showTooltipOnHover)) {\n            svgElement.style.visibility = 'hidden';\n            var delay = this.control.secondaryProgress ? this.control.circular.delay + this.control.animation.duration :\n                this.control.animation.duration;\n            this.tooltipDelay(this.control, svgElement, delay);\n        }\n        if (this.control.animation.enable && !(this.control.tooltip.showTooltipOnHover) && !(this.control.type === 'Circular')) {\n            var delay = this.control.secondaryProgress ? this.control.linear.delay : this.control.animation.delay;\n            if (this.control.secondaryProgress) {\n                svgElement.style.visibility = 'hidden';\n            }\n            this.toolTipAnimation(svgElement, this.control, delay);\n        }\n    };\n    /**\n     * Function to delay tooltip at initial stage of circular progress.\n     */\n    ProgressTooltip.prototype.tooltipDelay = function (progress, element, delay) {\n        var animation = new Animation({});\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                args.element.style.visibility = 'visible';\n            }\n        });\n    };\n    /**\n     * Function to animate tooltip.\n     */\n    ProgressTooltip.prototype.toolTipAnimation = function (element, progress, delay) {\n        var _this = this;\n        var animation = new Animation({});\n        var endValue = parseInt(element.style.left, 10);\n        var tooltipSVG = document.getElementById(this.control.element.id + '_tooltip_svg');\n        var width = parseInt(tooltipSVG.getAttribute('width'), 10);\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                args.name = 'SlideRight';\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        args.element.style.visibility = 'visible';\n                        var value = effect(args.timeStamp, (0 - (width / 2 - _this.control.progressRect.x - 5)), endValue + (width / 2 - _this.control.progressRect.x - 5), args.duration, progress.enableRtl);\n                        args.element.style.left = '';\n                        args.element.style.left = value + 'px'.toString();\n                    }\n                }\n            },\n            end: function (args) {\n                progress.cancelResize = false;\n                args.element.style.left = '';\n                args.element.style.left = endValue + 'px'.toString();\n            }\n        });\n    };\n    ProgressTooltip.prototype.renderTooltip = function (e, chart, isFirst) {\n        this.textFormat = this.format((this.control.tooltip.showTooltipOnHover) ? e.target.id.indexOf('Linearbuffer') >= 0 || e.target.id.indexOf('Circularbuffer') >= 0 ? this.control.secondaryProgress : this.control.value : this.control.value);\n        this.triggerTooltipRender(e, isFirst, this.textFormat);\n    };\n    /**\n     * Function to get format of tooltip text.\n     */\n    ProgressTooltip.prototype.format = function (formatValue) {\n        var currentFormat = formatValue.toString();\n        var value;\n        if (this.control.tooltip.format) {\n            currentFormat = this.control.tooltip.format;\n            value = new RegExp('${value' + '}', 'gm');\n            currentFormat = currentFormat.replace(value.source, formatValue.toString());\n        }\n        return currentFormat;\n    };\n    /**\n     * Function to remove tooltip.\n     */\n    ProgressTooltip.prototype.removeTooltip = function (duration) {\n        var _this = this;\n        var tooltipElement = document.getElementById(this.control.element.id + '_tooltip');\n        if (tooltipElement) {\n            this.fadeInInterval = +setTimeout(function () {\n                if (_this.svgTooltip) {\n                    _this.svgTooltip.fadeOut();\n                }\n            }, duration);\n        }\n    };\n    /**\n     * Function to get arguments of tooltip.\n     */\n    ProgressTooltip.prototype.triggerTooltipRender = function (e, isFirst, textCollection) {\n        var padding = 5;\n        var argsData = {\n            cancel: false, name: tooltipRender, text: textCollection + '%'\n        };\n        this.control.trigger(tooltipRender, argsData);\n        textCollection = argsData.text;\n        if (!argsData.cancel) {\n            this.text = [].concat(argsData.text);\n            if (this.control.type === 'Linear') {\n                var linearEndPointX = (this.control.linear.linearProgressWidth - padding / 2 + (this.control.progressRect.x));\n                var linearEndPointY = (this.control.cornerRadius === 'Round4px') ? (this.control.progressRect.y + padding) : (this.control.progressRect.y + (this.control.progressRect.height / 2)) -\n                    (this.control.progressThickness ? this.control.progressThickness : this.control.themeStyle.linearProgressThickness) / 2 +\n                    padding;\n                this.createTooltip(this.control, isFirst, (this.control.tooltip.enable && !this.control.tooltip.showTooltipOnHover || !(e.target.id.indexOf('Linearbuffer') >= 0)) ? (new ProgressLocation((this.control.cornerRadius === 'Round4px') ? linearEndPointX - padding : linearEndPointX, linearEndPointY)) : (new ProgressLocation(this.control.linear.bufferWidth - (padding / 2) + (this.control.progressRect.x), linearEndPointY)), this.control.initialClipRect);\n            }\n            else {\n                var circularEndPointX = this.control.circular.endPosition.x - padding / 2;\n                var circularEndPointY = this.control.circular.endPosition.y + this.control.progressRect.y - padding / 2;\n                this.createTooltip(this.control, isFirst, (this.control.tooltip.enable && !this.control.tooltip.showTooltipOnHover || !(e.target.id.indexOf('Circularbuffer') >= 0)) ? (new ProgressLocation(circularEndPointX, circularEndPointY)) : (new ProgressLocation(this.control.circular.bufferEndPosition.x - padding / 2, this.control.circular.bufferEndPosition.y + this.control.progressRect.y - padding / 2)), this.control.initialClipRect);\n            }\n        }\n        this.isRendered = true;\n    };\n    /**\n     * Function to pass arguments into svg tooltip.\n     *\n     * @param {ProgressBar} chart - The progress bar chart for which the tooltip is being created.\n     * @param {boolean} isFirst - A flag indicating whether this is the first tooltip.\n     * @param {ProgressLocation} location - The location where the tooltip should be displayed.\n     * @param {ProgressLocation} bounds - The bounds within which the tooltip should be confined.\n     * @returns {void}\n     * @private\n     */\n    ProgressTooltip.prototype.createTooltip = function (chart, isFirst, location, bounds) {\n        var tooltipFont = extend({}, this.control.tooltip.textStyle, null, true);\n        tooltipFont.fontWeight = tooltipFont.fontWeight || this.control.themeStyle.tooltipLabelFont.fontWeight;\n        if (isFirst) {\n            this.svgTooltip = new SVGTooltip({\n                opacity: this.control.tooltip.textStyle.opacity ? this.control.tooltip.textStyle.opacity : ((this.control.theme === 'Material3' || this.control.theme === 'Material3Dark' || this.control.theme.indexOf('Bootstrap5') > -1) ? 1 : 0.75),\n                header: '',\n                content: this.text,\n                fill: this.control.tooltip.fill,\n                border: this.control.tooltip.border,\n                enableAnimation: true,\n                location: location,\n                theme: this.control.theme,\n                areaBounds: bounds,\n                template: null,\n                // To set tooltip location.\n                offset: 7.5,\n                // To set left and right margin of tooltip.\n                marginX: 8,\n                // To set top margin of tooltip.\n                marginY: 4.5,\n                textStyle: tooltipFont,\n                arrowPadding: 7,\n                availableSize: this.control.progressSize,\n                duration: 300,\n                blazorTemplate: { name: 'Template', parent: this.control.tooltip },\n                controlInstance: this.control,\n                enableRTL: chart.enableRtl,\n                controlName: 'Progressbar'\n            }, '#' + this.control.element.id + '_tooltip');\n        }\n        else {\n            if (this.svgTooltip) {\n                this.svgTooltip.location = location;\n                this.svgTooltip.content = this.text;\n                this.svgTooltip.header = '';\n                this.svgTooltip.offset = 7.5;\n                this.svgTooltip.textStyle = tooltipFont;\n                this.svgTooltip.areaBounds = bounds;\n                this.svgTooltip.arrowPadding = 7;\n                this.svgTooltip.dataBind();\n            }\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressTooltip.prototype.getModuleName = function () {\n        return 'ProgressTooltip';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    ProgressTooltip.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return ProgressTooltip;\n}());\nexport { ProgressTooltip };\n","import { lineCapRadius, completeAngle } from '../model/constant';\nimport { getPathArc, degreeToLocation } from '../utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * Progressbar Segment\n */\nvar Segment = /** @class */ (function () {\n    function Segment() {\n    }\n    /**\n     * Creates a linear segment element for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {string} id - The id of the segment element.\n     * @param {number} width - The width of the segment.\n     * @param {number} opacity - The opacity of the segment.\n     * @param {number} thickness - The thickness of the segment.\n     * @param {number} progressWidth - The width of the progress.\n     * @returns {Element} - The created linear segment element.\n     */\n    Segment.prototype.createLinearSegment = function (progress, id, width, opacity, thickness, progressWidth) {\n        var locX = (progress.enableRtl) ? ((progress.cornerRadius === 'Round') ?\n            (progress.progressRect.x + progress.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (progress.progressRect.x + progress.progressRect.width)) :\n            ((progress.cornerRadius === 'Round') ? (progress.progressRect.x + (lineCapRadius / 2) * thickness) : progress.progressRect.x);\n        var locY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var avlWidth = progressWidth / progress.segmentCount;\n        var avlSegWidth = (progressWidth - ((progress.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((progress.cornerRadius === 'Round') ? progress.segmentCount * (lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var gap = (progress.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (progress.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth, progress.enableRtl));\n            segmentPath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (progress.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.getLinearSegmentPath = function (x, y, width, enableRtl) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((enableRtl) ? -width : width)) + ' ' + y;\n    };\n    /**\n     * Creates a circular segment element for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {string} id - The id of the segment element.\n     * @param {number} x - The x-coordinate of the center of the circle.\n     * @param {number} y - The y-coordinate of the center of the circle.\n     * @param {number} r - The radius of the circle.\n     * @param {number} value - The value determining the angle of the segment.\n     * @param {number} opacity - The opacity of the segment.\n     * @param {number} thickness - The thickness of the segment.\n     * @param {number} totalAngle - The total angle covered by the progress.\n     * @param {number} progressWidth - The width of the progress.\n     * @returns {Element} - The created circular segment element.\n     */\n    Segment.prototype.createCircularSegment = function (progress, id, x, y, r, value, opacity, thickness, totalAngle, progressWidth) {\n        var start = progress.startAngle;\n        var end = this.widthToAngle(progress.minimum, progress.maximum, value, progress.totalAngle);\n        end -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var size = (progressWidth - ((progress.totalAngle === completeAngle) ? progress.segmentCount :\n            progress.segmentCount - 1) * (progress.gapWidth || progress.themeStyle.circularGapWidth));\n        size = (size -\n            ((progress.cornerRadius === 'Round') ?\n                (((progress.totalAngle === completeAngle) ?\n                    progress.segmentCount : progress.segmentCount - 1) * lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, progressWidth, (progressWidth / progress.segmentCount), totalAngle);\n        avlTolEnd -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var avlEnd = this.widthToAngle(0, progressWidth, size, totalAngle);\n        var gap = this.widthToAngle(0, progressWidth, (progress.gapWidth || progress.themeStyle.circularGapWidth), totalAngle);\n        gap += (progress.cornerRadius === 'Round') ? this.widthToAngle(0, progressWidth, (lineCapRadius * thickness), totalAngle) : 0;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((progress.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = progress.progressThickness || progress.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (progress.enableRtl) ? ((progress.startAngle - end > avlSegEnd) ? progress.startAngle - end : avlSegEnd) :\n                ((progress.startAngle + end < avlSegEnd) ? progress.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, progress.enableRtl);\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((progress.enableRtl) ? -gap : gap);\n            avlSegEnd += (progress.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.widthToAngle = function (min, max, value, totalAngle) {\n        var angle = ((value - min) / (max - min)) * totalAngle;\n        return angle;\n    };\n    Segment.prototype.createLinearRange = function (totalWidth, progress, progressWidth) {\n        var posX = progress.progressRect.x + ((progress.enableRtl) ? progress.progressRect.width : 0);\n        var startY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var gradX = (progress.enableRtl) ? 0.1 : -0.1;\n        var gradient;\n        var validRange;\n        var rangePath;\n        var option;\n        var startPos;\n        var endPos;\n        var startX;\n        var endX;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            validRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startPos = totalWidth * progress.calculateProgressRange(range[i].start, rangeMin, rangeMax);\n            endPos = totalWidth * progress.calculateProgressRange(range[i].end, rangeMin, rangeMax);\n            startX = posX + ((progress.enableRtl) ? -startPos : startPos);\n            endX = posX + ((progress.enableRtl) ? -endPos : endPos);\n            startX = (validRange) ? ((progress.isGradient && i > 0) ? startX + gradX : startX) : posX;\n            endX = (validRange) ? endX : posX;\n            color = (progress.isGradient) ? 'url(#lineRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_LinearRange_' + i, 'none', thickness, color, opacity, '0', 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + endX + ' ' + startY);\n            rangePath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round' && progressWidth) {\n                rangePath.setAttribute('stroke-linecap', 'round');\n            }\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setLinearGradientColor(i, range[i].color, endColor, startX, endX, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.createCircularRange = function (centerX, centerY, radius, progress) {\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var start = progress.startAngle;\n        var tolAngle = this.widthToAngle(progress.minimum, progress.maximum, progress.value, progress.totalAngle);\n        var gradient;\n        var startAngle;\n        var endAngle;\n        var rangePath;\n        var isValidRange;\n        var option;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            isValidRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startAngle = this.widthToAngle(rangeMin, rangeMax, range[i].start, tolAngle);\n            endAngle = this.widthToAngle(rangeMin, rangeMax, range[i].end, tolAngle);\n            startAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -startAngle : startAngle)) % 360 : start;\n            endAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -endAngle : endAngle)) % 360 : start;\n            color = (progress.isGradient) ? 'url(#circleRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_CircularRange_' + i, 'none', thickness, color, opacity, '0', getPathArc(centerX, centerY, radius, startAngle, endAngle, progress.enableRtl));\n            rangePath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                rangePath.setAttribute('stroke-linecap', 'round');\n            }\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setCircularGradientColor(i, range[i].color, endColor, startAngle, endAngle, radius, centerX, centerY, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.setLinearGradientColor = function (id, startColor, endColor, start, end, progress) {\n        var stopColor = [];\n        var option = { id: 'lineRangeGrad_' + id + '', x1: start.toString(), x2: end.toString() };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        var linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    Segment.prototype.setCircularGradientColor = function (id, startColor, endColor, start, end, rad, x, y, progress) {\n        var stopColor = [];\n        var pos1 = degreeToLocation(x, y, rad, start);\n        var pos2 = degreeToLocation(x, y, rad, end);\n        var option = {\n            id: 'circleRangeGrad_' + id + '', x1: pos1.x.toString(), x2: pos2.x.toString(),\n            y1: pos1.y.toString(), y2: pos2.y.toString()\n        };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        var linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    return Segment;\n}());\nexport { Segment };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { TextOption, setAttributes } from '../utils/helper';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { Segment } from './segment-progress';\nimport { svgLink, gradientType, stopElement } from '../model/constant';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\n * Progress Bar of type Linear\n */\nvar Linear = /** @class */ (function () {\n    function Linear(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /**\n     * To render the linear track.\n     *\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearTrack = function () {\n        var progress = this.progress;\n        var linearTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearTrackGroup' });\n        var linearTrack;\n        var option;\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        var thickness = (progress.trackThickness || progress.themeStyle.linearTrackThickness);\n        var stroke = (progress.argsData.trackColor || progress.themeStyle.linearTrackColor);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearTrack = this.createRoundCornerSegment('_LinearTrack_', stroke, thickness, true, 0, progress);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Lineartrack', stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, progress.progressRect.width, thickness, 4, ''));\n                linearTrack = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Lineartrack', 'none', thickness, stroke, progress.themeStyle.trackOpacity, '0', progress.getPathLine(progress.progressRect.x, progress.progressRect.width, thickness));\n            linearTrack = progress.renderer.drawPath(option);\n            progress.trackWidth = linearTrack.getTotalLength();\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            if (progress.segmentCount > 1 && !this.isRange && !progress.enableProgressSegments) {\n                progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, thickness);\n                linearTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n        }\n        linearTrackGroup.appendChild(linearTrack);\n        progress.svgObject.appendChild(linearTrackGroup);\n    };\n    /**\n     * Renders linear progress, optionally refreshing progress and specifying previous width.\n     *\n     * @param {boolean} refresh - Indicates whether to refresh the progress.\n     * @param {number} previousWidth - The previous width of the progress. Defaults to 0.\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearProgress = function (refresh, previousWidth) {\n        if (previousWidth === void 0) { previousWidth = 0; }\n        var progress = this.progress;\n        var option;\n        var linearProgress;\n        var clipPathLinear;\n        var clipPathIndeterminate;\n        var linearProgressGroup;\n        var animationdelay;\n        var segmentWidth;\n        var strippedStroke;\n        var ismaximum = (progress.value >= progress.maximum);\n        var previousProgressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value > progress.maximum ? progress.maximum : progress.value);\n        var progressWidth = progress.calculateProgressRange(progress.argsData.value > progress.maximum ?\n            progress.maximum : progress.argsData.value);\n        this.linearProgressWidth = progress.progressRect.width *\n            ((progress.isIndeterminate && !progress.enableProgressSegments) ? 1 : progressWidth);\n        if (!refresh) {\n            linearProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearProgressGroup' });\n        }\n        else {\n            linearProgressGroup = getElement(progress.element.id + '_LinearProgressGroup');\n        }\n        var thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        var stroke = (!progress.isStriped) ? this.checkingLinearProgressColor() : 'url(#' + progress.element.id + '_LinearStriped)';\n        if (progress.cornerRadius === 'Round4px') {\n            option = new PathOption(progress.element.id + '_Linearprogress', stroke, 0, 'none', progress.themeStyle.progressOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, this.linearProgressWidth, thickness, 4, (ismaximum || progress.isIndeterminate) ? '' : 'start'));\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearprogress', 'none', thickness, stroke, progress.themeStyle.progressOpacity, '0', progress.getPathLine(progress.progressRect.x, this.linearProgressWidth, thickness));\n        }\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = (!progress.enableProgressSegments) ? progress.segmentSize :\n            progress.calculateSegmentSize(progress.progressWidth, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderLinearBuffer(progress);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.cornerRadius === 'Round4px') {\n                if (progress.segmentCount > 1) {\n                    linearProgress = this.createRoundCornerSegment('_Linearprogress_', stroke, thickness, false, this.linearProgressWidth, progress, progress.themeStyle.progressOpacity);\n                }\n                else {\n                    linearProgress = progress.renderer.drawPath(option);\n                }\n            }\n            else {\n                if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                    segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                    linearProgress = this.segment.createLinearSegment(progress, '_LinearProgressSegment', this.linearProgressWidth, progress.themeStyle.progressOpacity, thickness, segmentWidth);\n                }\n                else if (this.isRange && !progress.isIndeterminate) {\n                    linearProgress = this.segment.createLinearRange(this.linearProgressWidth, progress, progressWidth);\n                }\n                else {\n                    if (!refresh) {\n                        linearProgress = progress.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(progress.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', progress.getPathLine(progress.progressRect.x, this.linearProgressWidth, thickness));\n                        linearProgress.setAttribute('stroke', stroke);\n                    }\n                    if (progress.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                    }\n                    if (progress.cornerRadius === 'Round' && progressWidth) {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n            }\n            linearProgressGroup.appendChild(linearProgress);\n            if (progress.isStriped && !progress.isIndeterminate) {\n                strippedStroke = this.checkingLinearProgressColor();\n                this.renderLinearStriped(strippedStroke, linearProgressGroup, progress);\n            }\n            if (progress.isActive && !progress.isIndeterminate && !progress.isStriped) {\n                this.renderActiveState(linearProgressGroup, progressWidth, this.linearProgressWidth, thickness, refresh);\n            }\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate && !progress.isActive && !progress.isStriped) {\n                if ((progress.secondaryProgress !== null)) {\n                    animationdelay = progress.animation.delay + (this.bufferWidth - this.linearProgressWidth);\n                }\n                else {\n                    animationdelay = progress.animation.delay;\n                }\n                this.delay = animationdelay;\n                clipPathLinear = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.style.clipPath = 'url(#' + progress.element.id + '_clippath)';\n                this.animation.doLinearAnimation(clipPathLinear, progress, animationdelay, refresh ? previousWidth : 0);\n            }\n            if (progress.isIndeterminate) {\n                clipPathIndeterminate = progress.createClipPath(progress.clipPath, (progress.enableProgressSegments) ? 1 : progressWidth, null, refresh, thickness, progress.enableProgressSegments);\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearIndeterminate(((!progress.enableProgressSegments) ? clipPathIndeterminate : linearProgress), this.linearProgressWidth, thickness, progress, clipPathIndeterminate);\n            }\n            progress.svgObject.appendChild(linearProgressGroup);\n            progress.previousWidth = previousProgressWidth;\n        }\n    };\n    /**\n     * To render the linear buffer.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearBuffer = function (progress) {\n        var linearBuffer;\n        var clipPathBuffer;\n        var linearBufferWidth;\n        var option;\n        var segmentWidth;\n        var ismaximum = (progress.secondaryProgress >= progress.maximum);\n        var secondaryProgressWidth = progress.calculateProgressRange(progress.secondaryProgress > progress.maximum ?\n            progress.maximum : progress.secondaryProgress);\n        this.bufferWidth = linearBufferWidth = progress.progressRect.width * secondaryProgressWidth;\n        var linearBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearBufferGroup' });\n        var thickness = progress.secondaryProgressThickness ? progress.secondaryProgressThickness\n            : (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        var stroke = progress.secondaryProgressColor ? progress.secondaryProgressColor : progress.themeStyle.bufferColor ||\n            this.checkingLinearProgressColor();\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearBuffer = this.createRoundCornerSegment('_Linearbuffer_', stroke, thickness, false, linearBufferWidth, progress, progress.themeStyle.bufferOpacity);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Linearbuffer', stroke, 0, 'none', progress.themeStyle.bufferOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearBufferWidth, thickness, 4, (ismaximum) ? '' : 'start'));\n                linearBuffer = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearbuffer', 'none', thickness, stroke, progress.themeStyle.bufferOpacity, '0', progress.getPathLine(progress.progressRect.x, linearBufferWidth, thickness));\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                linearBuffer = this.segment.createLinearSegment(progress, '_LinearBufferSegment', linearBufferWidth, progress.themeStyle.bufferOpacity, (progress.progressThickness || progress.themeStyle.linearProgressThickness), segmentWidth);\n            }\n            else {\n                linearBuffer = progress.renderer.drawPath(option);\n                if (progress.segmentCount > 1 && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-linecap', 'round');\n                }\n            }\n        }\n        linearBufferGroup.appendChild(linearBuffer);\n        if ((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') {\n            clipPathBuffer = progress.createClipPath(progress.bufferClipPath, secondaryProgressWidth, null, false, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n            linearBufferGroup.appendChild(progress.bufferClipPath);\n            linearBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doLinearAnimation(clipPathBuffer, progress, progress.animation.delay, 0);\n        }\n        progress.svgObject.appendChild(linearBufferGroup);\n    };\n    /**\n     * Render the Linear Label.\n     *\n     * @param {boolean} isProgressRefresh - Indicates whether the progress should be refreshed. Defaults to false.\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearLabel = function (isProgressRefresh) {\n        if (isProgressRefresh === void 0) { isProgressRefresh = false; }\n        var linearlabel;\n        var posX;\n        var posY;\n        var textSize;\n        var percentage = 100;\n        var option;\n        var defaultPos;\n        var far;\n        var center;\n        var pos;\n        var clipPath;\n        var thickness = (this.progress.progressThickness || this.progress.themeStyle.linearProgressThickness);\n        var padding = 5;\n        var progress = this.progress;\n        var textAlignment = progress.labelStyle.textAlignment;\n        var labelText = progress.labelStyle.text;\n        var progressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value > progress.maximum ?\n            progress.maximum : progress.value);\n        var linearLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearLabelGroup' });\n        if (document.getElementById(linearLabelGroup.id)) {\n            document.getElementById(linearLabelGroup.id).remove();\n        }\n        var labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        var linearValue = (progress.value < progress.minimum) ? 0 : Math.round(labelValue);\n        var argsData = {\n            cancel: false, text: labelText ? labelText : String(linearValue) + '%', color: progress.labelStyle.color || this.progress.themeStyle.linearLabelFont.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle, progress.themeStyle.linearLabelFont);\n            defaultPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - textSize.width / 2) :\n                (progress.progressRect.x + textSize.width / 2);\n            if (progress.labelOnTrack) {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    center = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - progressWidth / 2) :\n                        (progress.progressRect.x + progressWidth / 2);\n                    pos = (progress.enableRtl) ? (center <= defaultPos) : (center >= defaultPos);\n                    posX = (progressWidth < textSize.width / 2) ? defaultPos : center;\n                }\n                else {\n                    far = (progress.enableRtl) ?\n                        ((progress.progressRect.x + progress.progressRect.width - progressWidth) + textSize.width / 2) :\n                        (progress.progressRect.x + progressWidth - textSize.width / 2);\n                    far += (progress.enableRtl) ? padding : -padding;\n                    pos = (progress.enableRtl) ? (far <= defaultPos) : (far >= defaultPos);\n                    if (pos) {\n                        posX = far;\n                    }\n                    else {\n                        posX = defaultPos;\n                    }\n                }\n            }\n            else {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    posX = (progress.progressRect.x + progress.progressRect.width) / 2;\n                }\n                else {\n                    posX = (progress.enableRtl) ?\n                        (progress.progressRect.x + textSize.width / 2) :\n                        (progress.progressRect.x + progress.progressRect.width - textSize.width / 2);\n                    posX += (progress.enableRtl) ? padding : -padding;\n                }\n            }\n            if (this.progress.cornerRadius === 'Round4px') {\n                posY = progress.progressRect.y + (thickness / 2) + (textSize.height / 4);\n            }\n            else {\n                posY = progress.progressRect.y + (progress.progressRect.height / 2) + (textSize.height / 4);\n            }\n            option = new TextOption(progress.element.id + '_linearLabel', progress.labelStyle.size || progress.themeStyle.linearLabelFont.size, progress.labelStyle.fontStyle || progress.themeStyle.linearLabelFont.fontStyle, progress.labelStyle.fontFamily || progress.themeStyle.linearLabelFont.fontFamily, progress.labelStyle.fontWeight || progress.themeStyle.linearLabelFont.fontWeight, 'middle', argsData.color, posX, posY);\n            linearlabel = progress.renderer.createText(option, argsData.text);\n            linearLabelGroup.appendChild(linearlabel);\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate) {\n                clipPath = progress.renderer.createClipPath({ 'id': progress.element.id + '_clippathLabel' });\n                progress.createClipPath(clipPath, 1, null, false, (progress.progressThickness || progress.themeStyle.linearProgressThickness), true);\n                linearLabelGroup.appendChild(clipPath);\n                linearlabel.style.clipPath = 'url(#' + progress.element.id + '_clippathLabel)';\n                this.animation.doLabelAnimation(linearlabel, (isProgressRefresh ? progress.previousLabelWidth : 0), progressWidth - (isProgressRefresh ? progress.previousLabelWidth : 0), progress, this.delay, textSize.width);\n            }\n            progress.svgObject.appendChild(linearLabelGroup);\n            progress.previousLabelWidth = progressWidth;\n        }\n    };\n    /**\n     * Renders the active state of the linear progress.\n     *\n     * @param {Element} progressGroup - The group element containing the progress.\n     * @param {number} progressWidth - The width of the progress.\n     * @param {number} linearProgressWidth - The width of the linear progress.\n     * @param {number} thickness - The thickness of the progress.\n     * @param {boolean} refresh - Indicates whether the progress should be refreshed.\n     * @returns {void}\n     * @private\n     */\n    Linear.prototype.renderActiveState = function (progressGroup, progressWidth, linearProgressWidth, thickness, refresh) {\n        var linearActive;\n        var progress = this.progress;\n        var option;\n        var ismaximum = (progress.value === progress.maximum);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearActive = this.createRoundCornerSegment('_LinearActiveProgress_', '#ffffff', thickness, false, linearProgressWidth, progress, 0.5);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', '#ffffff', 0, 'none', 0.5, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, ismaximum ? '' : 'start'));\n                linearActive = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', 'none', thickness, '#ffffff', 0.5, '', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                linearActive = progress.renderer.drawPath(option);\n            }\n            else {\n                linearActive = getElement(progress.element.id + '_LinearActiveProgress');\n                linearActive.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n            }\n            if (progress.segmentCount > 1 && !this.isRange) {\n                linearActive.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && progressWidth && !this.isRange) {\n                linearActive.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        var activeClip = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false);\n        linearActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(linearActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doLinearAnimation(activeClip, progress, 0, 0, linearActive);\n    };\n    /**\n     * Renders the linear progress with stripes.\n     *\n     * @param {string} color - The color of the progress stripes.\n     * @param {Element} group - The group element containing the progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @returns {void}\n     * @private\n     */\n    Linear.prototype.renderLinearStriped = function (color, group, progress) {\n        var defs = progress.renderer.createDefs();\n        var linearGradient = document.createElementNS(svgLink, gradientType);\n        var stripWidth = 14;\n        var stop;\n        var stopOption = [];\n        var gradOption = {\n            id: progress.element.id + '_LinearStriped', x1: (progress.progressRect.x).toString(),\n            x2: (progress.progressRect.x + stripWidth).toString(),\n            spreadMethod: 'repeat', gradientUnits: 'userSpaceOnUse', gradientTransform: 'rotate(-45)'\n        };\n        stopOption = [{ offset: '50%', 'stop-color': color, 'stop-opacity': '1' },\n            { offset: '50%', 'stop-color': color, 'stop-opacity': '0.4' }];\n        linearGradient = setAttributes(gradOption, linearGradient);\n        for (var i = 0; i < stopOption.length; i++) {\n            stop = document.createElementNS(svgLink, stopElement);\n            stop = setAttributes(stopOption[i], stop);\n            linearGradient.appendChild(stop);\n        }\n        defs.appendChild(linearGradient);\n        group.appendChild(defs);\n        if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable')) {\n            this.animation.doStripedAnimation(linearGradient, progress, 0);\n        }\n    };\n    /**\n     * Checks and retrieves the color for the linear progress.\n     *\n     * @returns {string} - The color for the linear progress.\n     * @private\n     */\n    Linear.prototype.checkingLinearProgressColor = function () {\n        var linearColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                linearColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                linearColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                linearColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                linearColor = progress.themeStyle.danger;\n                break;\n            default:\n                linearColor = (progress.argsData.progressColor || progress.themeStyle.linearProgressColor);\n        }\n        return linearColor;\n    };\n    /**\n     * Generates the SVG path string with rounded corners.\n     *\n     * @param {number} x - The x-coordinate of the starting point.\n     * @param {number} y - The y-coordinate of the starting point.\n     * @param {number} width - The width of the rectangle.\n     * @param {number} height - The height of the rectangle.\n     * @param {number} radius - The radius of the rounded corners.\n     * @param {string} pathtype - The type of SVG path ('M' for move to, 'L' for line to).\n     * @returns {string} - The SVG path string with rounded corners.\n     * @private\n     */\n    Linear.prototype.cornerRadius = function (x, y, width, height, radius, pathtype) {\n        var path = '';\n        var endWidth = width;\n        var endRadius = radius;\n        switch (pathtype) {\n            case 'start':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n                break;\n            case 'end':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (endWidth - endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + endRadius + ',' + endRadius + ' '\n                    + 'v' + (height - 2 * endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + -endRadius + ',' + endRadius + ' '\n                    + 'h' + (radius - endWidth) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            case 'none':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            default:\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width - radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + ' '\n                    + 'v' + (height - 2 * radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + ' '\n                    + 'h' + (radius - width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n        }\n        return path;\n    };\n    /**\n     * Creates a round-corner segment element for the progress bar.\n     *\n     * @param {string} id - The id of the segment element.\n     * @param {string} stroke - The stroke color of the segment.\n     * @param {number} thickness - The thickness of the segment.\n     * @param {boolean} isTrack - Indicates whether the segment is a track.\n     * @param {number} progressWidth - The width of the progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} opacity - The opacity of the segment.\n     * @returns {Element} - The created round-corner segment element.\n     */\n    Linear.prototype.createRoundCornerSegment = function (id, stroke, thickness, isTrack, progressWidth, progress, opacity) {\n        var locX = progress.progressRect.x;\n        var locY = progress.progressRect.y;\n        var width = progress.progressRect.width;\n        var option;\n        var pathType;\n        var avlWidth;\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var segWidth = (width - ((progress.segmentCount - 1) * gapWidth)) / progress.segmentCount;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id + 'SegmentGroup' });\n        var segmentPath;\n        for (var i = 1; i <= progress.segmentCount; i++) {\n            if (i === 1 || i === progress.segmentCount) {\n                pathType = (i === 1) ? 'start' : 'end';\n            }\n            else {\n                pathType = 'none';\n            }\n            if (isTrack) {\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(locX, locY, segWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n            }\n            else {\n                avlWidth = (progressWidth < segWidth) ? progressWidth : segWidth;\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', opacity, '0', this.cornerRadius(locX, locY, avlWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n                progressWidth -= (segWidth + gapWidth);\n                if (progressWidth <= 0) {\n                    break;\n                }\n            }\n        }\n        return segmentGroup;\n    };\n    return Linear;\n}());\nexport { Linear };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getPathArc, degreeToLocation } from '../utils/helper';\nimport { Segment } from './segment-progress';\nimport { TextOption } from '../utils/helper';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\n * Progressbar of type circular\n */\nvar Circular = /** @class */ (function () {\n    function Circular(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /**\n     * To render the circular track.\n     *\n     * @returns {void}\n     */\n    Circular.prototype.renderCircularTrack = function () {\n        var progress = this.progress;\n        var circularTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularTrackGroup' });\n        var radius;\n        var endAngle;\n        var startAngle = progress.startAngle;\n        progress.totalAngle = (progress.endAngle - progress.startAngle) % 360;\n        progress.totalAngle = (progress.totalAngle <= 0 ? (360 + progress.totalAngle) : progress.totalAngle);\n        progress.totalAngle -= (progress.totalAngle === 360) ? 0.01 : 0;\n        this.trackEndAngle = endAngle = (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : +progress.totalAngle)) % 360;\n        this.centerX = progress.progressRect.x + (progress.progressRect.width / 2);\n        this.centerY = progress.progressRect.y + (progress.progressRect.height / 2);\n        this.maxThickness = Math.max(progress.trackThickness, progress.progressThickness) ||\n            Math.max(progress.themeStyle.circularProgressThickness, progress.themeStyle.circularTrackThickness);\n        this.availableSize = (Math.min(progress.progressRect.height, progress.progressRect.width) / 2) - this.maxThickness / 2;\n        radius = stringToNumber(progress.radius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        var stroke = (progress.argsData.trackColor || progress.themeStyle.circularTrackColor);\n        var fill = (progress.enablePieProgress) ? (progress.argsData.trackColor || progress.themeStyle.circularTrackColor) : 'none';\n        var strokeWidth = (progress.enablePieProgress) ? 0 :\n            (progress.trackThickness || progress.themeStyle.circularTrackThickness);\n        var circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        var option = new PathOption(progress.element.id + '_Circulartrack', fill, strokeWidth, stroke, progress.themeStyle.trackOpacity, '0', circularPath);\n        var circularTrack = progress.renderer.drawPath(option);\n        progress.trackWidth = circularTrack.getTotalLength();\n        if (progress.segmentCount > 1 && !progress.enableProgressSegments && !progress.enablePieProgress && !this.isRange) {\n            progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, strokeWidth);\n            circularTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round' && !progress.enablePieProgress && !this.isRange) {\n            circularTrack.setAttribute('stroke-linecap', 'round');\n        }\n        circularTrackGroup.appendChild(circularTrack);\n        progress.svgObject.appendChild(circularTrackGroup);\n    };\n    /**\n     * Renders circular progress to update previous progress.\n     *\n     * @param {number} previousEnd - The previous end value of the progress.\n     * @param {number} previousTotalEnd - The previous total end value of the progress.\n     * @param {boolean} refresh - Indicates whether to refresh the progress.\n     * @returns {void}\n     */\n    Circular.prototype.renderCircularProgress = function (previousEnd, previousTotalEnd, refresh) {\n        var progress = this.progress;\n        var startAngle = progress.startAngle;\n        var endAngle;\n        var totalAngle;\n        var radius;\n        var previousPath;\n        var progressTotalAngle;\n        var progressEnd;\n        var circularProgress;\n        var linearClipPath;\n        var circularProgressGroup;\n        var segmentWidth;\n        if (!refresh) {\n            circularProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularProgressGroup' });\n        }\n        else {\n            circularProgressGroup = getElement(progress.element.id + '_CircularProgressGroup');\n        }\n        radius = stringToNumber(progress.innerRadius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        progress.previousTotalEnd = progressEnd = progress.calculateProgressRange(progress.argsData.value > progress.maximum ?\n            progress.maximum : progress.argsData.value);\n        var progressEndAngle = (progress.startAngle + ((progress.enableRtl) ? -progressEnd : progressEnd)) % 360;\n        progress.previousEndAngle = endAngle = ((progress.isIndeterminate && !progress.enableProgressSegments) ? (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : progress.totalAngle)) % 360 : progressEndAngle);\n        progressTotalAngle = (progressEnd - progress.startAngle) % 360;\n        progressTotalAngle = (progressTotalAngle <= 0 ? (360 + progressTotalAngle) : progressTotalAngle);\n        progressTotalAngle -= (progressTotalAngle === 360) ? 0.01 : 0;\n        var circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        var stroke = this.checkingCircularProgressColor();\n        var fill = (progress.enablePieProgress) ? stroke : 'none';\n        var thickness = (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        var strokeWidth = (progress.enablePieProgress) ? 0 : thickness;\n        var option = new PathOption(progress.element.id + '_Circularprogress', fill, strokeWidth, stroke, progress.themeStyle.progressOpacity, '0', circularPath);\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = this.validateSegmentSize(progress, thickness);\n        this.endPosition = degreeToLocation(this.centerX, this.centerY, radius, endAngle);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderCircularBuffer(progress, radius, progressTotalAngle);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress) {\n                totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                circularProgress = this.segment.createCircularSegment(progress, '_CircularProgressSegment', this.centerX, this.centerY, radius, progress.argsData.value, progress.themeStyle.progressOpacity, thickness, totalAngle, segmentWidth);\n            }\n            else if (this.isRange && !progress.isIndeterminate) {\n                circularProgress = this.segment.createCircularRange(this.centerX, this.centerY, radius, progress);\n            }\n            else {\n                if (!refresh) {\n                    circularProgress = progress.renderer.drawPath(option);\n                }\n                else {\n                    circularProgress = getElement(progress.element.id + '_Circularprogress');\n                    previousPath = circularProgress.getAttribute('d');\n                    circularProgress.setAttribute('stroke', stroke);\n                    circularProgress.setAttribute('d', circularPath);\n                }\n                if (progress.segmentCount > 1 && !progress.enablePieProgress) {\n                    circularProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                    circularProgress.setAttribute('stroke-linecap', 'round');\n                }\n            }\n            circularProgressGroup.appendChild(circularProgress);\n            if (progress.isActive && !progress.isIndeterminate && !progress.enablePieProgress) {\n                this.renderActiveState(circularProgressGroup, radius, strokeWidth, circularPath, progressEndAngle, progressEnd, refresh);\n            }\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') || progress.isIndeterminate) {\n                this.delay = (progress.secondaryProgress !== null) ? 300 : progress.animation.delay;\n                linearClipPath = progress.createClipPath(progress.clipPath, null, refresh ? previousPath : '', refresh);\n                circularProgressGroup.appendChild(progress.clipPath);\n                if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate && !progress.isActive) {\n                    circularProgress.style.clipPath = 'url(#' + progress.element.id + '_clippath)';\n                    this.animation.doCircularAnimation(this.centerX, this.centerY, radius, progressEndAngle, progressEnd, linearClipPath, progress, thickness, this.delay, refresh ? previousEnd : null, refresh ? previousTotalEnd : null);\n                }\n                if (progress.isIndeterminate) {\n                    if (progress.enableProgressSegments) {\n                        linearClipPath.setAttribute('d', getPathArc(this.centerX, this.centerY, radius + (thickness / 2), progress.startAngle, this.trackEndAngle, progress.enableRtl, true));\n                    }\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularIndeterminate((!progress.enableProgressSegments) ? linearClipPath : circularProgress, progress, startAngle, progressEndAngle, this.centerX, this.centerY, radius, thickness, linearClipPath);\n                }\n            }\n            progress.svgObject.appendChild(circularProgressGroup);\n        }\n    };\n    /**\n     * Renders circular buffer for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} radius - The radius of the circular buffer.\n     * @param {number} progressTotalAngle - The total angle covered by the progress.\n     * @returns {void}\n     * @private\n     */\n    Circular.prototype.renderCircularBuffer = function (progress, radius, progressTotalAngle) {\n        var bufferClipPath;\n        var circularBuffer;\n        var segmentWidth;\n        var totalAngle;\n        var circularBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_ CircularBufferGroup' });\n        var bufferEnd = progress.calculateProgressRange(progress.secondaryProgress > progress.maximum ?\n            progress.maximum : progress.secondaryProgress);\n        var endAngle = (progress.startAngle + ((progress.enableRtl) ? -bufferEnd : bufferEnd)) % 360;\n        var circularPath = getPathArc(this.centerX, this.centerY, radius, progress.startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.bufferEndPosition = degreeToLocation(this.centerX, this.centerY, radius, endAngle);\n        var stroke = progress.secondaryProgressColor ? progress.secondaryProgressColor : progress.themeStyle.bufferColor ||\n            this.checkingCircularProgressColor();\n        var fill = (progress.enablePieProgress) ? stroke : 'none';\n        var strokeWidth = (progress.enablePieProgress) ? 0 :\n            (progress.secondaryProgressThickness ? progress.secondaryProgressThickness :\n                (progress.progressThickness || progress.themeStyle.circularProgressThickness));\n        var option = new PathOption(progress.element.id + '_Circularbuffer', fill, strokeWidth, stroke, progress.themeStyle.bufferOpacity, '0', circularPath);\n        if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress && !this.isRange) {\n            totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n            segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n            circularBuffer = this.segment.createCircularSegment(progress, '_CircularBufferSegment', this.centerX, this.centerY, radius, progress.secondaryProgress > progress.maximum ? progress.maximum : progress.secondaryProgress, progress.themeStyle.bufferOpacity, strokeWidth, totalAngle, segmentWidth);\n        }\n        else {\n            circularBuffer = progress.renderer.drawPath(option);\n            if (progress.segmentCount > 1 && !progress.enablePieProgress && !this.isRange) {\n                circularBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                circularBuffer.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        circularBufferGroup.appendChild(circularBuffer);\n        if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isActive) {\n            bufferClipPath = progress.createClipPath(progress.bufferClipPath, null, '', false);\n            circularBufferGroup.appendChild(progress.bufferClipPath);\n            circularBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, bufferEnd, bufferClipPath, progress, (progress.progressThickness || progress.themeStyle.circularProgressThickness), progress.animation.delay);\n        }\n        progress.svgObject.appendChild(circularBufferGroup);\n    };\n    /**\n     * To render the circular Label.\n     *\n     * @param {boolean} isProgressRefresh - Indicates whether progress should be refreshed. Defaults to false.\n     * @returns {void}\n     */\n    Circular.prototype.renderCircularLabel = function (isProgressRefresh) {\n        if (isProgressRefresh === void 0) { isProgressRefresh = false; }\n        var end;\n        var circularLabel;\n        var centerY;\n        var textSize;\n        var option;\n        var percentage = 100;\n        var progress = this.progress;\n        var labelText = progress.labelStyle.text;\n        var circularLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularLabelGroup' });\n        if (document.getElementById(circularLabelGroup.id)) {\n            document.getElementById(circularLabelGroup.id).remove();\n        }\n        var labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        var circularValue = (progress.value < progress.minimum) ? 0 : Math.round(labelValue);\n        var argsData = {\n            cancel: false, text: labelText ? labelText : String(circularValue) + '%', color: progress.labelStyle.color || progress.themeStyle.circularLabelFont.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle, progress.themeStyle.circularLabelFont);\n            centerY = this.centerY + (textSize.height / 2);\n            option = new TextOption(progress.element.id + '_circularLabel', progress.labelStyle.size || progress.themeStyle.circularLabelFont.size, progress.labelStyle.fontStyle || progress.themeStyle.circularLabelFont.fontStyle, progress.labelStyle.fontFamily || progress.themeStyle.circularLabelFont.fontFamily, progress.labelStyle.fontWeight ||\n                progress.themeStyle.circularLabelFont.fontWeight, 'middle', argsData.color, this.centerX, centerY, progress.progressRect.width, progress.progressRect.height);\n            circularLabel = progress.renderer.createText(option, argsData.text);\n            circularLabelGroup.appendChild(circularLabel);\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate) {\n                end = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n                end = (progress.value < progress.minimum) ? 0 : end;\n                this.animation.doLabelAnimation(circularLabel, isProgressRefresh ? progress.previousWidth :\n                    progress.startAngle, end, progress, this.delay);\n            }\n            progress.svgObject.appendChild(circularLabelGroup);\n            progress.previousWidth = end;\n        }\n    };\n    /**\n     * Renders the active state of the circular progress.\n     *\n     * @param {Element} progressGroup - The group element containing the progress.\n     * @param {number} radius - The radius of the circular progress.\n     * @param {number} strokeWidth - The width of the progress stroke.\n     * @param {string} circularPath - The path representing the circular progress.\n     * @param {number} endAngle - The angle at which the progress ends.\n     * @param {number} totalEnd - The total end value of the progress.\n     * @param {boolean} refresh - Indicates whether the progress should be refreshed.\n     * @returns {void}\n     * @private\n     */\n    Circular.prototype.renderActiveState = function (progressGroup, radius, strokeWidth, circularPath, endAngle, totalEnd, refresh) {\n        var circularActive;\n        var option;\n        var progress = this.progress;\n        var thickness = strokeWidth + 1;\n        if (!refresh) {\n            option = new PathOption(progress.element.id + '_CircularActiveProgress', 'none', thickness, '#ffffff', 0.5, '0', circularPath);\n            circularActive = progress.renderer.drawPath(option);\n        }\n        else {\n            circularActive = getElement(progress.element.id + '_CircularActiveProgress');\n            circularActive.setAttribute('d', circularPath);\n        }\n        if (progress.segmentCount > 1) {\n            circularActive.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round') {\n            circularActive.setAttribute('stroke-linecap', 'round');\n        }\n        var activeClip = progress.createClipPath(progress.clipPath, null, '', refresh);\n        circularActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(circularActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, totalEnd, activeClip, progress, thickness, 0, null, null, circularActive);\n    };\n    /**\n     * Validates the segment size for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} thickness - The thickness of the progress segments.\n     * @returns {string} - The validated segment size.\n     * @private\n     */\n    Circular.prototype.validateSegmentSize = function (progress, thickness) {\n        var validSegment;\n        var progressSegment;\n        var rDiff = parseInt(progress.radius, 10) - parseInt(progress.innerRadius, 10);\n        if (rDiff !== 0 && !progress.enableProgressSegments) {\n            progressSegment = progress.trackWidth + ((rDiff < 0) ? (progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10) :\n                -(progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10));\n            validSegment = progress.calculateSegmentSize(progressSegment, thickness);\n        }\n        else if (progress.enableProgressSegments) {\n            validSegment = progress.calculateSegmentSize(progress.progressWidth, thickness);\n        }\n        else {\n            validSegment = progress.segmentSize;\n        }\n        return validSegment;\n    };\n    /**\n     * Checks and retrieves the color for the circular progress.\n     *\n     * @returns {string} - The color for the circular progress.\n     * @private\n     */\n    Circular.prototype.checkingCircularProgressColor = function () {\n        var circularColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                circularColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                circularColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                circularColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                circularColor = progress.themeStyle.danger;\n                break;\n            default:\n                circularColor = (progress.argsData.progressColor || progress.themeStyle.circularProgressColor);\n        }\n        return circularColor;\n    };\n    return Circular;\n}());\nexport { Circular };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection, EventHandler } from '@syncfusion/ej2-base';\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, Size, RectOption, stringToNumber } from './utils/helper';\nimport { Margin, Animation, Font, RangeColor, TooltipSettings } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { mouseClick, mouseDown, mouseLeave, mouseMove, mouseUp } from './model/constant';\nimport { ProgressTooltip } from './model/index';\nimport { ProgressAnnotationSettings } from './model/index';\nimport { Linear } from './types/linear-progress';\nimport { Circular } from './types/circular-progress';\nimport { ProgressAnimation } from './utils/progress-animation';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.linear = new Linear(_this);\n        /** @private */\n        _this.circular = new Circular(_this);\n        /** @private */\n        _this.annotateAnimation = new ProgressAnimation();\n        /** @private */\n        // private resizeTo: number;\n        /** @private */\n        _this.destroyIndeterminate = false;\n        /** @private */\n        _this.scaleX = 1;\n        /** @private */\n        _this.scaleY = 1;\n        ProgressBar_1.Inject(ProgressTooltip);\n        return _this;\n    }\n    ProgressBar_1 = ProgressBar;\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.wireEvents();\n    };\n    ProgressBar.prototype.initPrivateVariable = function () {\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n    };\n    ProgressBar.prototype.render = function () {\n        var _this = this;\n        this.trigger('load', { progressBar: this });\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.element.setAttribute('role', 'progressbar');\n        this.element.setAttribute('aria-valuemin', this.minimum.toString());\n        this.element.setAttribute('aria-valuemax', this.maximum.toString());\n        this.element.setAttribute('aria-valuenow', this.value ? this.value.toString() : '0');\n        this.element.setAttribute('tabindex', '0');\n        this.element.setAttribute('aria-label', this.labelStyle.text || 'progress bar');\n        this.calculateProgressBarSize();\n        this.setTheme();\n        this.createSVG();\n        this.argsData = { value: this.value, progressColor: this.progressColor, trackColor: this.trackColor };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData, function () { _this.controlRendering(); });\n        }\n        else {\n            this.trigger(valueChanged, this.argsData, function () { _this.controlRendering(); });\n        }\n    };\n    ProgressBar.prototype.controlRendering = function () {\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * calculate size of the progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width = this.progressSize.width - (this.margin.left + this.margin.right);\n        this.progressRect.height = this.progressSize.height - (this.margin.top + this.margin.bottom);\n        this.initialClipRect = new Rect(this.progressRect.x, this.progressRect.y, this.progressSize.height, this.progressSize.width);\n    };\n    /**\n     * Render Annotation in progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.renderAnnotation();\n    };\n    /**\n     * Render SVG Element.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.createSecondaryElement();\n        this.renderTrack();\n        this.renderProgress();\n        this.renderLabel();\n        if (this.annotations.length > 0) {\n            this.renderAnnotations();\n        }\n        this.setSecondaryElementPosition();\n        if (this.tooltip.enable && !(this.tooltip.showTooltipOnHover)) {\n            this.progressTooltipModule.tooltip();\n        }\n    };\n    ProgressBar.prototype.createSecondaryElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (this.tooltip.enable) {\n            this.tooltipElement = createElement('div', {\n                id: this.element.id + '_tooltip',\n                className: 'ejSVGTooltip',\n                styles: 'pointer-events: none; position: absolute; zIndex: 1; visibility: visible'\n            });\n            if (secElement) {\n                this.secElement.appendChild(this.tooltipElement);\n            }\n        }\n        var tooltipElement = document.getElementById(this.element.id + '_tooltip');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = tooltipElement ? secElement.appendChild(tooltipElement) : secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute'\n        });\n        this.element.appendChild(this.secElement);\n        if (this.tooltipElement) {\n            this.secElement.appendChild(this.tooltipElement);\n        }\n    };\n    /**\n     * To set the left and top position for annotation for center aligned.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        if (getElement(this.svgObject.id)) {\n            var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n            element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n            element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n        }\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.removeSvg();\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.renderTrack = function () {\n        if (this.type === 'Linear') {\n            this.linear.renderLinearTrack();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularTrack();\n        }\n    };\n    ProgressBar.prototype.renderProgress = function () {\n        this.clipPathElement();\n        if (this.type === 'Linear') {\n            this.linear.renderLinearProgress();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularProgress();\n        }\n    };\n    ProgressBar.prototype.renderLabel = function () {\n        if (this.type === 'Linear' && this.showProgressValue && !this.isIndeterminate) {\n            this.linear.renderLinearLabel();\n        }\n        else if (this.type === 'Circular' && this.showProgressValue && !this.isIndeterminate) {\n            this.circular.renderCircularLabel();\n        }\n        this.element.appendChild(this.svgObject);\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n        thickness = width < thickness && this.cornerRadius === 'Round' ? width : thickness;\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round' && width) ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round' && width) ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (value, minimum, maximum) {\n        var min = minimum || this.minimum;\n        var max = maximum || this.maximum;\n        var endValue = (value - min) / (max - min) * ((this.type === 'Linear') ? 1 : this.totalAngle);\n        var result = (value < min || value > max) ? 0 : endValue;\n        return result;\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, range, d, refresh, thickness, isLabel, isMaximum) {\n        var path;\n        var rect;\n        var option;\n        var posx;\n        var posy;\n        var pathWidth;\n        var x = this.progressRect.x;\n        var totalWidth = this.progressRect.width;\n        if (this.type === 'Linear') {\n            if (this.cornerRadius === 'Round4px') {\n                posx = x;\n                pathWidth = totalWidth * range;\n                posx += (!isLabel) ? (-4) : 0;\n                posy = this.progressRect.y;\n                pathWidth += ((!isLabel && isMaximum) || this.isIndeterminate) ? 4 : 0;\n            }\n            else {\n                //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n                posx = (this.enableRtl && !isLabel) ? (x + totalWidth + (this.cornerRadius === 'Round' ? thickness / 10 : 0)) : x - (this.cornerRadius === 'Round' ? thickness / 10 : 0);\n                pathWidth = totalWidth * range;\n                //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n                //posx += (this.cornerRadius === 'Round' && !isLabel) ?\n                //    ((this.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n                posy = (this.progressRect.y + (this.progressRect.height / 2)) - (thickness / 2);\n                pathWidth += (this.cornerRadius === 'Round' && !isLabel) ? (lineCapRadius * thickness) : 0;\n            }\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect' + (isLabel ? 'label' : ''), 'transparent', 1, 'transparent', 1, new Rect(posx, posy, thickness, pathWidth));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect' + (isLabel ? 'label' : ''));\n                path.setAttribute('width', (pathWidth).toString());\n                if (this.isActive) {\n                    path.setAttribute('x', (posx).toString());\n                }\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    /**\n     * Theming for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.cornerRadius = this.cornerRadius === 'Auto' ?\n                    ((this.type === 'Linear') ? 'Round4px' : 'Round') : this.cornerRadius;\n                break;\n            case 'Fluent2':\n            case 'Fluent2Dark':\n            case 'Fluent2HighContrast':\n            case 'Bootstrap5':\n            case 'Bootstrap5Dark':\n                this.cornerRadius = this.cornerRadius === 'Auto' && this.type === 'Linear' ? 'Round' : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * Annotation for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function () {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n            cancel: (this.cancelResize) ? true : false\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            if ((_this.width === null || _this.height === null || _this.width.indexOf('%') > -1 || _this.height.indexOf('%') > -1)\n                && !arg.cancel) {\n                if (_this.secElement) {\n                    _this.secElement.innerHTML = '';\n                }\n                _this.calculateProgressBarSize();\n                _this.createSVG();\n                _this.renderElements();\n            }\n        }, 500);\n        return false;\n    };\n    ProgressBar.prototype.progressMouseClick = function (e) {\n        this.mouseEvent(mouseClick, e);\n    };\n    ProgressBar.prototype.progressMouseDown = function (e) {\n        this.mouseEvent(mouseDown, e);\n    };\n    ProgressBar.prototype.progressMouseMove = function (e) {\n        this.mouseEvent(mouseMove, e);\n        var target = e.target;\n        if (this.tooltip.enable && this.tooltip.showTooltipOnHover) {\n            if (target.id.indexOf('Circularprogress') >= 0 || target.id.indexOf('Circularbuffer') >= 0 || target.id.indexOf('Linearprogress') >= 0 || target.id.indexOf('Linearbuffer') >= 0 || target.id.indexOf('Linearbuffer') >= 0) {\n                this.progressTooltipModule.tooltip(e);\n            }\n            else if (this.progressTooltipModule.isRendered) {\n                this.progressTooltipModule.removeTooltip(1000);\n                this.progressTooltipModule.isRendered = false;\n            }\n        }\n    };\n    ProgressBar.prototype.progressMouseUp = function (e) {\n        this.mouseEvent(mouseUp, e);\n    };\n    ProgressBar.prototype.progressMouseLeave = function (e) {\n        this.mouseEvent(mouseLeave, e);\n    };\n    ProgressBar.prototype.mouseEvent = function (eventName, e) {\n        var element = e.target;\n        this.trigger(eventName, { target: element.id });\n    };\n    /**\n     * Method to un-bind events for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, 'click', this.progressMouseClick);\n        EventHandler.remove(this.element, startEvent, this.progressMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.progressMouseMove);\n        EventHandler.remove(this.element, stopEvent, this.progressMouseUp);\n        EventHandler.remove(this.element, cancelEvent, this.progressMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, 'click', this.progressMouseClick, this);\n        EventHandler.add(this.element, startEvent, this.progressMouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.progressMouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.progressMouseUp, this);\n        EventHandler.add(this.element, cancelEvent, this.progressMouseLeave, this);\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    break;\n                case 'value':\n                    this.cancelResize = (this.animation.enable) ? true : false;\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.argsData.progressColor,\n                        trackColor: this.argsData.trackColor\n                    };\n                    if (this.argsData.value < oldProp.value && this.animation.enable) {\n                        this.argsData.value = oldProp.value;\n                    }\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.circular.renderCircularProgress(this.previousEndAngle, this.previousTotalEnd, !isNullOrUndefined(oldProp.value));\n                        if (this.showProgressValue) {\n                            this.circular.renderCircularLabel(true);\n                        }\n                        if (this.progressAnnotationModule && this.animation.enable && !this.isIndeterminate) {\n                            this.annotateAnimation.doAnnotationAnimation(this.clipPath, this, this.annotateEnd, this.annotateTotal);\n                        }\n                    }\n                    else {\n                        this.linear.renderLinearProgress(!isNullOrUndefined(oldProp.value), this.previousWidth);\n                        if (this.showProgressValue) {\n                            this.linear.renderLinearLabel(true);\n                        }\n                    }\n                    this.element.setAttribute('aria-valuenow', this.argsData.value ? this.argsData.value.toString() : '0');\n                    break;\n                case 'animation':\n                    this.createSVG();\n                    this.renderElements();\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'ProgressTooltip',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    ProgressBar.prototype.show = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Visible');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = false;\n                if (this.type === 'Linear') {\n                    this.linear.renderLinearProgress(true);\n                }\n                else {\n                    this.circular.renderCircularProgress(null, null, true);\n                }\n            }\n        }\n    };\n    ProgressBar.prototype.hide = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Hidden');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = true;\n            }\n        }\n    };\n    /**\n     * To destroy the widget.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n        if (!this.refreshing) {\n            this.destroyIndeterminate = true;\n        }\n    };\n    var ProgressBar_1;\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"secondaryProgressColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgressThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isActive\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isGradient\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isStriped\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"role\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(true)\n    ], ProgressBar.prototype, \"labelOnTrack\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enablePieProgress\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableProgressSegments\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: null, fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], ProgressBar.prototype, \"tooltip\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([{}], RangeColor)\n    ], ProgressBar.prototype, \"rangeColors\", void 0);\n    ProgressBar = ProgressBar_1 = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","import { Browser } from '@syncfusion/ej2-base';\n/**\n * Retrieves the theme color settings for a progress bar.\n *\n * @param {ProgressTheme} theme - The theme of the progress bar.\n * @returns {IProgressStyle} - The style settings for the progress bar based on the theme.\n * @private\n */\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#4caf50',\n                danger: '#ff6652',\n                warning: '#ff9800',\n                info: '#03a9f4',\n                tooltipLabelFont: {\n                    color: 'rgba(249, 250, 251, 1)', fontFamily: 'Roboto', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: 'Roboto'\n                }\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#48b14c',\n                danger: '#d44f4f',\n                warning: '#fac168',\n                info: '#2aaac0',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Helvetica Neue', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                }\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#28a745',\n                danger: '#dc3545',\n                warning: '#ffc107',\n                info: '#17a2b8',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Helvetica Neue', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                }\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#2bc700',\n                danger: '#ff6161',\n                warning: '#ff7d1a',\n                info: '#66b0ff',\n                tooltipLabelFont: {\n                    color: '#000000', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Tailwind3':\n            style = {\n                linearTrackColor: '#E5E7EB',\n                linearProgressColor: '#4F46E5',\n                circularTrackColor: '#E5E7EB',\n                circularProgressColor: '#4F46E5',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                bufferColor: '#818CF8',\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#111827',\n                tooltipLightLabel: '#F9FAFB',\n                success: '#15803D',\n                danger: '#DC2626',\n                warning: '#C2410C',\n                info: '#0E7490',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Inter', fontWeight: '500'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '10', fontWeight: '500', color: '#4F46E5', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'Tailwind3Dark':\n            style = {\n                linearTrackColor: '#282F3C',\n                linearProgressColor: '#6366F1',\n                circularTrackColor: '#282F3C',\n                circularProgressColor: '#6366F1',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.45,\n                bufferColor: '#3730A3',\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#F9FAFB',\n                tooltipLightLabel: '#1F2937',\n                success: '#22C55E',\n                danger: '#F87171',\n                warning: '#F97316',\n                info: '#38BDF8',\n                tooltipLabelFont: {\n                    color: '#1F2937', fontFamily: 'Inter', fontWeight: '500'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '10', fontWeight: '500', color: '#6366F1', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'Tailwind':\n            style = {\n                linearTrackColor: '#E5E7EB',\n                linearProgressColor: '#4F46E5',\n                circularTrackColor: '#E5E7EB',\n                circularProgressColor: '#4F46E5',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#15803D',\n                danger: '#DC2626',\n                warning: '#C2410C',\n                info: '#0E7490',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Inter', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'TailwindDark':\n            style = {\n                linearTrackColor: '#4B5563',\n                linearProgressColor: '#22D3EE',\n                circularTrackColor: '#4B5563',\n                circularProgressColor: '#22D3EE',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.45,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#22C55E',\n                danger: '#F87171',\n                warning: '#ea580c',\n                info: '#06B6D4',\n                tooltipLabelFont: {\n                    color: '#1F2937', fontFamily: 'Inter', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#D1D5DB', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#D1D5DB', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'FabricDark':\n        case 'BootstrapDark':\n        case 'MaterialDark':\n            style = {\n                linearTrackColor: '#C8C8C8',\n                linearProgressColor: '#9A9A9A',\n                circularTrackColor: '#C8C8C8',\n                circularProgressColor: '#9A9A9A',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#22b24b',\n                danger: '#ac2a2a',\n                warning: '#ffca1c',\n                info: '#489bd5',\n                tooltipLabelFont: {\n                    color: theme === 'BootstrapDark' ? '#1A1A1A' : theme === 'FabricDark' ? '#DADADA' : 'rgba(18, 18, 18, 1)', fontFamily: theme === 'BootstrapDark' ? 'Helvetica Neue' : theme === 'FabricDark' ? 'Segoe UI' : 'Roboto', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: theme === 'BootstrapDark' ? 'Helvetica Neue' : theme === 'FabricDark' ? 'Segoe UI' : 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: theme === 'BootstrapDark' ? 'Helvetica Neue' : theme === 'FabricDark' ? 'Segoe UI' : 'Roboto'\n                }\n            };\n            break;\n        case 'Bootstrap5':\n            style = {\n                linearTrackColor: '#DEE2E6',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#DEE2E6',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 2,\n                circularProgressThickness: 2,\n                tooltipFill: '#000000E5',\n                tooltipLightLabel: '#FFFFFF',\n                success: '#198754',\n                danger: '#DC3545',\n                warning: '#FFC107',\n                info: '#0DCAF0',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Bootstrap5Dark':\n            style = {\n                linearTrackColor: '#495057',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#495057',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 2,\n                circularProgressThickness: 2,\n                tooltipFill: '#FFFFFFE5',\n                tooltipLightLabel: '#212529',\n                success: '#198754',\n                danger: '#DC3545',\n                warning: '#FFC107',\n                info: '#0DCAF0',\n                tooltipLabelFont: {\n                    color: '#212529', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent':\n            style = {\n                linearTrackColor: '#F3F2F1',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#F3F2F1',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.45,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    color: '#323130', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'FluentDark':\n            style = {\n                linearTrackColor: '#3B4248',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#3B4248',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    color: '#F3F2F1', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent2':\n            style = {\n                linearTrackColor: '#E6E6E6',\n                linearProgressColor: '#0F6CBD',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0F6CBD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: Browser.isDevice ? 4 : 2,\n                linearProgressThickness: Browser.isDevice ? 4 : 2,\n                circularTrackThickness: Browser.isDevice ? 2 : 2,\n                circularProgressThickness: Browser.isDevice ? 2 : 2,\n                tooltipFill: '#FFFFFF',\n                tooltipLightLabel: '#242424',\n                success: '#107C10',\n                danger: '#D13438',\n                warning: '#BC4B09',\n                info: '#008AA9',\n                tooltipLabelFont: {\n                    color: '#242424', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#242424', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent2Dark':\n            style = {\n                linearTrackColor: '#333333',\n                linearProgressColor: '#115EA3',\n                circularTrackColor: '#333333',\n                circularProgressColor: '#115EA3',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: Browser.isDevice ? 4 : 2,\n                linearProgressThickness: Browser.isDevice ? 4 : 2,\n                circularTrackThickness: Browser.isDevice ? 2 : 2,\n                circularProgressThickness: Browser.isDevice ? 2 : 2,\n                tooltipFill: '#292929',\n                tooltipLightLabel: '#FFFFFF',\n                success: '#107C10',\n                danger: '#DC626D',\n                warning: '#FAA06B',\n                info: '#0099BC',\n                tooltipLabelFont: {\n                    color: '#FFFFFF', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent2HighContrast':\n            style = {\n                linearTrackColor: '#000000',\n                linearProgressColor: '#1AEBFF',\n                circularTrackColor: '#000000',\n                circularProgressColor: '#1AEBFF',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: Browser.isDevice ? 4 : 2,\n                linearProgressThickness: Browser.isDevice ? 4 : 2,\n                circularTrackThickness: Browser.isDevice ? 2 : 2,\n                circularProgressThickness: Browser.isDevice ? 2 : 2,\n                tooltipFill: '#000000',\n                tooltipLightLabel: '#FFFFFF',\n                success: '#107C10',\n                danger: '#C50F1F',\n                warning: '#F7630C',\n                info: '#0099BC',\n                tooltipLabelFont: {\n                    color: '#FFFFFF', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Material3':\n            style = {\n                linearTrackColor: '#E7E0EC',\n                linearProgressColor: '#6750A4',\n                circularTrackColor: '#E7E0EC',\n                circularProgressColor: '#6750A4',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.24,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#313033',\n                tooltipLightLabel: '#F4EFF4',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    size: '12px', fontWeight: '400', color: '#F4EFF4', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#6750A4', fontStyle: 'Normal', fontFamily: 'Roboto'\n                }\n            };\n            break;\n        case 'Material3Dark':\n            style = {\n                linearTrackColor: '#49454F',\n                linearProgressColor: '#D0BCFF',\n                circularTrackColor: '#49454F',\n                circularProgressColor: '#D0BCFF',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.24,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#E6E1E5',\n                tooltipLightLabel: '#313033',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    color: '#313033', fontFamily: 'roboto', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#371E73', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#D0BCFF', fontStyle: 'Normal', fontFamily: 'Roboto'\n                }\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#166600',\n                danger: '#b30900',\n                warning: '#944000',\n                info: '#0056b3',\n                tooltipLabelFont: {\n                    color: '#333333', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: null, fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: null, fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n    }\n    return style;\n}\n"],"names":["Pos","x","y","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_super","__extends","__","constructor","prototype","create","Rect","height","width","Size","RectOption","PathOption","id","fill","color","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","ColorValue","r","g","convertToHexCode","value","componentToHex","hex","toString","length","TextOption","fontSize","fontStyle","fontFamily","fontWeight","textAnchor","degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","cos","sin","getPathArc","startAngle","endAngle","enableRtl","pieView","start","end","largeArcFlag","sweepFlag","stringToNumber","containerSize","indexOf","parseInt","setAttributes","options","element","keys","i","setAttribute","effect","currentTime","startValue","endValue","duration","annotationRender","getElement","document","getElementById","removeElement","remove","ProgressLocation","__decorate","decorators","target","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Margin","ChildProperty","Property","apply","Font","Animation","ProgressAnnotationSettings","Border","TooltipSettings","Complex","size","RangeColor","lineCapRadius","completeAngle","valueChanged","progressCompleted","svgLink","tooltipRender","AnnotationBase","render","annotation","index","createElement","control","styles","innerHTML","content","processAnnotation","parentElement","location","annotationElement","setElementStyle","redraw","isReact","clearTemplate","argsData","cancel","name","trigger","result","Location","annotationRadius","annotationAngle","style","left","top","appendChild","renderReactTemplates","angle","radius1","parseFloat","progressRect","round","progressSize","ProgressAnimation","doLinearAnimation","progress","delay","previousWidth","active","animation","linearPath","getAttribute","opacityValue","cornerRadius","rtlX","visibility","animate","animationMode","args","cancelResize","timeStamp","isActive","activeAnimate","trackColor","progressColor","doLinearIndeterminate","progressWidth","thickness","clipPath","enableProgressSegments","getPathLine","destroyIndeterminate","doStripedAnimation","point","doCircularAnimation","progressEnd","totalEnd","previousTotal","circularPath","pathRadius","startPosition","endPosition","startPos","isNullOrUndefined","endPos","doCircularIndeterminate","circularProgress","doLabelAnimation","labelPath","textSize","label","text","xPos","labelText","labelStyle","labelPos","textAlignment","posX","type","totalAngle","doAnnotationAnimation","previousEnd","annotatElementChanged","annotateValueChanged","annotateValue","isAnnotation","annotations","progressAnnotationModule","firstAnnotatElement","children","tagName","minimum","maximum","annotateTotal","annotateEnd","t","time","pow","ProgressAnnotation","renderAnnotations","map","enable","isIndeterminate","getModuleName","destroy","ProgressTooltip","tooltip","e","svgElement","isTooltip","renderTooltip","secondaryProgress","circular","tooltipDelay","linear","toolTipAnimation","tooltipSVG","chart","isFirst","textFormat","format","triggerTooltipRender","formatValue","currentFormat","RegExp","replace","source","removeTooltip","fadeInInterval","setTimeout","svgTooltip","fadeOut","textCollection","concat","linearEndPointX","linearProgressWidth","padding","linearEndPointY","progressThickness","themeStyle","linearProgressThickness","createTooltip","showTooltipOnHover","bufferWidth","initialClipRect","circularEndPointX","circularEndPointY","bufferEndPosition","isRendered","bounds","tooltipFont","extend","textStyle","tooltipLabelFont","SVGTooltip","theme","header","border","enableAnimation","areaBounds","template","offset","marginX","marginY","arrowPadding","availableSize","blazorTemplate","parent","controlInstance","enableRTL","controlName","dataBind","Segment","createLinearSegment","segmentPath","locX","locY","gapWidth","linearGapWidth","avlWidth","segmentCount","avlSegWidth","gap","segmentGroup","renderer","createGroup","count","ceil","j","tolWidth","linearThickness","segmentColor","option","getLinearSegmentPath","drawPath","createCircularSegment","widthToAngle","circularSegment","segmentEnd","circularGapWidth","avlTolEnd","avlEnd","gapCount","floor","avlSegEnd","circularThickness","circularProgressThickness","min","max","createLinearRange","totalWidth","rangePath","startX","endX","endColor","startY","rangeGroup","range","rangeColors","progressOpacity","rangeMin","rangeMax","gradX","validRange","calculateProgressRange","isGradient","gradient","setLinearGradientColor","createCircularRange","tolAngle","isValidRange","setCircularGradientColor","startColor","stopColor","x1","x2","linearGradient","colorStop","drawGradient","firstElementChild","rad","pos1","pos2","y1","y2","Linear","renderLinearTrack","linearTrack","linearTrackGroup","isRange","trackThickness","linearTrackThickness","linearTrackColor","createRoundCornerSegment","trackOpacity","trackWidth","getTotalLength","segmentSize","calculateSegmentSize","svgObject","renderLinearProgress","refresh","linearProgress","linearProgressGroup","ismaximum","previousProgressWidth","isStriped","checkingLinearProgressColor","renderLinearBuffer","segment","segmentWidth","strippedStroke","renderLinearStriped","renderActiveState","animationdelay","clipPathLinear","createClipPath","clipPathIndeterminate","linearBuffer","linearBufferWidth","secondaryProgressWidth","linearBufferGroup","secondaryProgressThickness","secondaryProgressColor","bufferColor","bufferOpacity","clipPathBuffer","bufferClipPath","renderLinearLabel","isProgressRefresh","defaultPos","linearLabelGroup","labelValue","linearValue","String","linearLabelFont","measureText","labelOnTrack","center","far","posY","linearlabel","createText","previousLabelWidth","progressGroup","linearActive","activeClip","group","stop","defs","createDefs","createElementNS","stopOption","stop-color","stop-opacity","spreadMethod","gradientUnits","gradientTransform","linearColor","role","success","info","warning","danger","linearProgressColor","pathtype","path","endWidth","endRadius","isTrack","pathType","segWidth","Circular","renderCircularTrack","circularTrackGroup","trackEndAngle","maxThickness","circularTrackThickness","circularTrackColor","strokeWidth","enablePieProgress","circularTrack","renderCircularProgress","previousTotalEnd","previousPath","progressTotalAngle","linearClipPath","circularProgressGroup","innerRadius","progressEndAngle","previousEndAngle","checkingCircularProgressColor","validateSegmentSize","renderCircularBuffer","circularBuffer","circularBufferGroup","bufferEnd","renderCircularLabel","circularLabelGroup","circularValue","circularLabelFont","circularLabel","circularActive","rDiff","validSegment","progressSegment","abs","circularColor","circularProgressColor","ProgressBar_1","ProgressBar","Component","preRender","unWireEvents","initPrivateVariable","wireEvents","progressBar","display","position","calculateProgressBarSize","setTheme","createSVG","controlRendering","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","margin","right","bottom","renderAnnotation","createSecondaryElement","renderTrack","renderProgress","renderLabel","setSecondaryElementPosition","progressTooltipModule","secElement","tooltipElement","className","svgRect","getBoundingClientRect","removeSvg","SvgRenderer","createSvg","backgroundColor","clipPathElement","showProgressValue","moveTo","lineTo","cornerCount","isLabel","isMaximum","posx","posy","pathWidth","drawRectangle","tooltipFill","tooltipLightLabel","Browser","isDevice","progressResize","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","isDestroyed","progressMouseClick","mouseEvent","progressMouseDown","progressMouseMove","progressMouseUp","progressMouseLeave","eventName","startEvent","touchStartEvent","moveEvent","touchMoveEvent","stopEvent","touchEndEvent","cancelEvent","isPointer","EventHandler","window","removeEventListener","isTouch","resizeBounds","add","bind","addEventListener","onPropertyChanged","newProp","oldProp","_i","_a","annotateAnimation","requiredModules","modules","some","push","member","getPersistData","show","hide","classList","refreshing","Event","Collection","NotifyPropertyChanges","scaleX","scaleY","Inject","body","isRGBValue","getComputedStyle","slice","split","exec"],"mappings":"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"}