{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/common/actions/common.js","../../src/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/common/base/themes.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/actions/pdf-export-helper.js","../../src/pivotchart/actions/chart-export.js","../../src/pivotview/base/pivotview.js","../../src/base/export-util.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/pager.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { SizeF } from '@syncfusion/ej2-pdf-export';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n *\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        var dateValue = new Date(value);\n        if (typeof value === 'boolean') {\n            val = 'boolean';\n        }\n        else if (!isNaN(Number(value))) {\n            val = 'number';\n        }\n        else if (dateValue instanceof Date && !isNaN(dateValue.valueOf())) {\n            val = (dateValue && dateValue.getDay() && (dateValue.getHours() > 0 || dateValue.getMinutes() > 0 ||\n                dateValue.getSeconds() > 0 || dateValue.getMilliseconds() > 0) ? 'datetime' : 'date');\n        }\n        else {\n            val = typeof (value);\n        }\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                var framedSet = {};\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedCSVData = function (data) {\n        var clonedData = data.map(function (row) { return row.slice(); });\n        return clonedData;\n    };\n    PivotUtil.getDefinedObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                if (!(data[fields[keyPos]] === null\n                    || data[fields[keyPos]] === undefined)) {\n                    framedSet[fields[keyPos]] = data[fields[keyPos]];\n                }\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = this.getDefinedObj({\n            type: dataSourceSettings.type,\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            valueIndex: dataSourceSettings.valueIndex,\n            grandTotalsPosition: dataSourceSettings.grandTotalsPosition,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            fieldMapping: this.cloneFieldSettings(dataSourceSettings.fieldMapping),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            subTotalsPosition: dataSourceSettings.subTotalsPosition,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings),\n            showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n            authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication)\n        });\n        return clonesDataSource;\n    };\n    PivotUtil.getClonedFieldList = function (fieldListObj) {\n        var keys = Object.keys(fieldListObj);\n        var clonedfieldlistObj = {};\n        for (var i = 0, keysLength = keys.length; i < keysLength; i++) {\n            var fieldlistObj = fieldListObj[keys[i]];\n            if (fieldListObj[keys[i]]) {\n                clonedfieldlistObj[keys[i]] = {\n                    type: fieldlistObj.type,\n                    caption: fieldlistObj.caption,\n                    id: fieldlistObj.id,\n                    isSelected: fieldlistObj.isSelected,\n                    sort: fieldlistObj.sort,\n                    filterType: fieldlistObj.filterType,\n                    index: fieldlistObj.index,\n                    filter: fieldlistObj.filter,\n                    isCustomField: fieldlistObj.isCustomField,\n                    showRemoveIcon: fieldlistObj.showRemoveIcon,\n                    showFilterIcon: fieldlistObj.showFilterIcon,\n                    showSortIcon: fieldlistObj.showSortIcon,\n                    showNoDataItems: fieldlistObj.showNoDataItems,\n                    isCalculatedField: fieldlistObj.isCalculatedField,\n                    showEditIcon: fieldlistObj.showEditIcon,\n                    showValueTypeIcon: fieldlistObj.showValueTypeIcon,\n                    allowDragAndDrop: fieldlistObj.allowDragAndDrop,\n                    showSubTotals: fieldlistObj.showSubTotals,\n                    expandAll: fieldlistObj.expandAll,\n                    pid: fieldlistObj.pid,\n                    aggregateType: fieldlistObj.aggregateType,\n                    baseField: fieldlistObj.baseField,\n                    baseItem: fieldlistObj.baseItem,\n                    dateMember: this.cloneDateMembers(fieldlistObj.dateMember),\n                    members: this.cloneFormatMembers(fieldlistObj.members),\n                    formatString: fieldlistObj.formatString,\n                    format: fieldlistObj.format,\n                    formula: fieldlistObj.formula,\n                    isExcelFilter: fieldlistObj.isExcelFilter,\n                    membersOrder: (fieldlistObj.membersOrder ? fieldlistObj.membersOrder.slice() :\n                        fieldlistObj.membersOrder),\n                    isAlphanumeric: fieldlistObj.isAlphanumeric,\n                    tag: fieldlistObj.tag,\n                    expanded: fieldlistObj.expanded,\n                    spriteCssClass: fieldlistObj.spriteCssClass,\n                    name: fieldlistObj.name,\n                    defaultHierarchy: fieldlistObj.defaultHierarchy,\n                    hasAllMember: fieldlistObj.hasAllMember,\n                    allMember: fieldlistObj.allMember,\n                    isChecked: fieldlistObj.isChecked,\n                    filterMembers: this.cloneFieldMembers(fieldlistObj.filterMembers),\n                    childMembers: this.cloneFieldMembers(fieldlistObj.childMembers),\n                    searchMembers: this.cloneFieldMembers(fieldlistObj.searchMembers),\n                    htmlAttributes: this.getDefinedObj(fieldlistObj.htmlAttributes),\n                    currrentMembers: this.cloneFormatMembers(fieldlistObj.currrentMembers),\n                    isHierarchy: fieldlistObj.isHierarchy,\n                    isNamedSets: fieldlistObj.isNamedSets,\n                    actualFilter: fieldlistObj.actualFilter ? fieldlistObj.actualFilter.slice() : fieldlistObj.actualFilter,\n                    levels: this.cloneFieldMembers(fieldlistObj.levels),\n                    levelCount: fieldlistObj.levelCount,\n                    fieldType: fieldlistObj.fieldType,\n                    memberType: fieldlistObj.memberType,\n                    parentHierarchy: fieldlistObj.parentHierarchy\n                };\n            }\n        }\n        return clonedfieldlistObj;\n    };\n    PivotUtil.cloneDateMembers = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                clonedCollection.push({\n                    formattedText: set.formattedText,\n                    actualText: set.actualText\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatMembers = function (collection) {\n        if (collection) {\n            var keys = Object.keys(collection);\n            var clonedFormatMembers = {};\n            for (var i = 0, keysLength = keys.length; i < keysLength; i++) {\n                var cloneFormatMembersObj = collection[keys[i]];\n                clonedFormatMembers[keys[i]] = {\n                    index: cloneFormatMembersObj.index ? cloneFormatMembersObj.index.slice() : cloneFormatMembersObj.index,\n                    isDrilled: cloneFormatMembersObj.isDrilled,\n                    ordinal: cloneFormatMembersObj.ordinal\n                };\n            }\n            return clonedFormatMembers;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFieldMembers = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push({\n                    caption: set.caption,\n                    hasChildren: set.hasChildren,\n                    id: set.id,\n                    isSelected: set.isSelected,\n                    name: set.name,\n                    tag: set.tag,\n                    htmlAttributes: this.getDefinedObj(set.htmlAttributes),\n                    type: set.type,\n                    spriteCssClass: set.spriteCssClass,\n                    pid: set.pid,\n                    isChecked: set.isChecked\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            this.setPivotProperties(control, {\n                dataSourceSettings: this.getDefinedObj({\n                    type: dataSourceSettings.type,\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    grandTotalsPosition: dataSourceSettings.grandTotalsPosition,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    fieldMapping: dataSourceSettings.fieldMapping,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    subTotalsPosition: dataSourceSettings.subTotalsPosition,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings,\n                    showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n                    authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication)\n                })\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type,\n                    dataType: set.dataType,\n                    showFilterIcon: set.showFilterIcon,\n                    showSortIcon: set.showSortIcon,\n                    showRemoveIcon: set.showRemoveIcon,\n                    showValueTypeIcon: set.showValueTypeIcon,\n                    showEditIcon: set.showEditIcon,\n                    allowDragAndDrop: set.allowDragAndDrop,\n                    expandAll: set.expandAll,\n                    groupName: set.groupName\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneOlapFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    caption: set.caption,\n                    hasChildren: set.hasChildren,\n                    id: set.id,\n                    isSelected: set.isSelected,\n                    name: set.name,\n                    spriteCssClass: set.spriteCssClass,\n                    tag: set.tag,\n                    type: set.type,\n                    pid: set.pid,\n                    expanded: set.expanded,\n                    defaultHierarchy: set.defaultHierarchy,\n                    hasAllMember: set.hasAllMember,\n                    allMember: set.allMember,\n                    isChecked: set.isChecked,\n                    filterMembers: set.filterMembers,\n                    childMembers: set.childMembers,\n                    searchMembers: set.searchMembers,\n                    htmlAttributes: this.getDefinedObj(set.htmlAttributes),\n                    currrentMembers: set.currrentMembers,\n                    isHierarchy: set.isHierarchy,\n                    isNamedSets: set.isNamedSets,\n                    formatString: set.formatString,\n                    actualFilter: set.actualFilter,\n                    levels: set.levels,\n                    levelCount: set.levelCount,\n                    memberType: set.memberType,\n                    fieldType: set.fieldType,\n                    parentHierarchy: set.parentHierarchy\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    order: set.order,\n                    membersOrder: set.membersOrder ? set.membersOrder.slice() : set.membersOrder\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    /**\n     * It format the headers of pivot table.\n     *\n     * @param {IAxisSet} headerCell - It contains the header cell.\n     * @param {PivotEngine} engine - It contains the instance of pivot engine.\n     * @returns {IAxisSet} - It returns the formatted header data as IAxisSet.\n     * @hidden\n     */\n    PivotUtil.getFormattedHeader = function (headerCell, engine) {\n        var clonedHeader = PivotUtil.frameHeaderWithKeys(headerCell);\n        if (clonedHeader.valueSort && clonedHeader.valueSort['axis']) {\n            var fieldName = clonedHeader.valueSort['axis'];\n            var isDateType = this.isDateField(fieldName, engine);\n            clonedHeader.formattedText = isDateType || !engine.formatFields[fieldName] || headerCell.isSum === true ?\n                clonedHeader.formattedText : engine.getFormattedValue(clonedHeader.actualText, fieldName).formattedText;\n        }\n        return clonedHeader;\n    };\n    /**\n     * It format the members of field.\n     *\n     * @param {IMembers} members - It contains the members.\n     * @param {string} fieldName - It contains the field Name.\n     * @param {PivotEngine} engine - It contains the instance of pivot engine.\n     * @returns {IMembers} - It returns the formatted members as IMembers.\n     * @hidden\n     */\n    PivotUtil.getFormattedMembers = function (members, fieldName, engine) {\n        var isDateField = this.isDateField(fieldName, engine);\n        if (isDateField || engine.groupingFields[fieldName]) {\n            var fieldMembers = {};\n            var keys = Object.keys(members);\n            var dateMember = engine.fieldList[fieldName].dateMember;\n            for (var i = 0, j = keys.length; i < j; i++) {\n                var values = members[keys[i]];\n                if (isDateField) {\n                    fieldMembers[values.caption] = values;\n                }\n                else {\n                    var commonValue = dateMember[values.ordinal - 1].actualText;\n                    fieldMembers[commonValue] = values;\n                }\n            }\n            return fieldMembers;\n        }\n        return members;\n    };\n    /**\n     * It determines whether the specified field is of date type.\n     *\n     * @param {string} fieldName - It contains the field Name.\n     * @param {PivotEngine} engineModule - It contains the instance of pivot engine.\n     * @returns {boolean} - It  returns whether the field is of date type or not.\n     * @hidden\n     */\n    PivotUtil.isDateField = function (fieldName, engineModule) {\n        return (engineModule.formatFields[fieldName] &&\n            (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1));\n    };\n    /**\n     * It format the headers of pivot chart.\n     *\n     * @param {string[]} values - It contains the headers.\n     * @param {PivotChart} chartModule - It contains the instance of pivot chart.\n     * @param {boolean} isColumnHeader - It determines whether the specified header is column or row.\n     * @returns {string} - It returns the formatted header.\n     * @hidden\n     */\n    PivotUtil.formatChartHeaders = function (values, chartModule, isColumnHeader) {\n        var formattedValues = [];\n        for (var i = 0, j = values.length; i < j; i++) {\n            var fieldName = isColumnHeader ? ((chartModule.parent.dataSourceSettings.columns.length > 0 &&\n                !isNullOrUndefined(chartModule.parent.dataSourceSettings.columns[i])) ?\n                chartModule.parent.dataSourceSettings.columns[i].name : undefined) :\n                (chartModule.parent.dataSourceSettings.rows.length > 0 &&\n                    !isNullOrUndefined(chartModule.parent.dataSourceSettings.rows[i])) ?\n                    chartModule.parent.dataSourceSettings.rows[i].name : undefined;\n            if (!isNullOrUndefined(fieldName)) {\n                if ((chartModule.engineModule.formatFields[fieldName] &&\n                    (['date', 'dateTime', 'time'].indexOf(chartModule.engineModule.formatFields[fieldName].type) > -1))) {\n                    formattedValues.push(values[i]);\n                }\n                else {\n                    formattedValues.push(chartModule.engineModule.getFormattedValue(values[i], fieldName).formattedText);\n                }\n            }\n            else {\n                formattedValues.push(values[i]);\n            }\n        }\n        return formattedValues.join(' - ');\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneAuthenticationObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                userName: collection.userName,\n                password: collection.password\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_10 = collection; _i < collection_10.length; _i++) {\n                var set = collection_10[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_11 = collection; _i < collection_11.length; _i++) {\n                var set = collection_11[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_12 = collection; _i < collection_12.length; _i++) {\n                var set = collection_12[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                }));\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotUtil.getFieldInfo = function (fieldName, control, hasAllField) {\n        if (!hasAllField) {\n            var rows = this.cloneFieldSettings(control.dataSourceSettings.rows);\n            var columns = this.cloneFieldSettings(control.dataSourceSettings.columns);\n            var values = this.cloneFieldSettings(control.dataSourceSettings.values);\n            var filters = this.cloneFieldSettings(control.dataSourceSettings.filters);\n            var fields = [rows, columns, values, filters];\n            for (var i = 0, len = fields.length; i < len; i++) {\n                for (var j = 0, cnt = (fields[i] ? fields[i].length : 0); j < cnt; j++) {\n                    if (fields[i][j] && fields[i][j].name === fieldName) {\n                        return { fieldName: fieldName, fieldItem: fields[i][j], axis: i === 0 ? 'rows' : i === 1 ? 'columns' : i === 2 ? 'values' : 'filters', position: j };\n                    }\n                }\n            }\n        }\n        var fieldList = control.dataType === 'olap' ?\n            control.olapEngineModule.fieldList[fieldName] : control.engineModule.fieldList[fieldName];\n        var fieldItem = (fieldList ? {\n            name: fieldName,\n            caption: fieldList.caption,\n            baseField: fieldList.baseField,\n            baseItem: fieldList.baseItem,\n            isCalculatedField: fieldList.isCalculatedField,\n            isNamedSet: fieldList.isNamedSets,\n            showNoDataItems: fieldList.showNoDataItems,\n            showSubTotals: fieldList.showSubTotals,\n            type: fieldList.aggregateType,\n            showFilterIcon: fieldList.showFilterIcon,\n            showSortIcon: fieldList.showSortIcon,\n            showRemoveIcon: fieldList.showRemoveIcon,\n            showValueTypeIcon: fieldList.showValueTypeIcon,\n            showEditIcon: fieldList.showEditIcon,\n            allowDragAndDrop: fieldList.allowDragAndDrop,\n            expandAll: fieldList.expandAll\n        } : undefined);\n        return { fieldName: fieldName, fieldItem: fieldItem, axis: 'fieldlist', position: -1 };\n    };\n    PivotUtil.isButtonIconRefesh = function (prop, oldProp, newProp) {\n        var isButtonRefresh = false;\n        try {\n            if (prop === 'dataSourceSettings' && oldProp.dataSourceSettings && newProp.dataSourceSettings) {\n                var propValidation = ['notAvail', 'notAvail', 'notAvail', 'notAvail'];\n                var oldAxesProp = Object.keys(oldProp.dataSourceSettings);\n                var newAxesProp = Object.keys(newProp.dataSourceSettings);\n                if (oldAxesProp && newAxesProp && newAxesProp.length > 0 && oldAxesProp.length === newAxesProp.length) {\n                    var axes = ['rows', 'columns', 'values', 'filters'];\n                    for (var i = 0; i < newAxesProp.length; i++) {\n                        var oldAxis = (newAxesProp[i] in oldProp.dataSourceSettings &&\n                            !isNullOrUndefined(oldProp.dataSourceSettings[newAxesProp[i]])) ?\n                            Object.keys(oldProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        var newAxis = (newAxesProp[i] in newProp.dataSourceSettings &&\n                            !isNullOrUndefined(newProp.dataSourceSettings[newAxesProp[i]])) ?\n                            Object.keys(newProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        if (axes.indexOf(newAxesProp[i]) !== -1 && axes.indexOf(oldAxesProp[i]) !== -1 &&\n                            oldAxis && newAxis && newAxis.length > 0 && oldAxis.length === newAxis.length) {\n                            var options = ['showFilterIcon', 'showSortIcon', 'showRemoveIcon', 'showValueTypeIcon', 'showEditIcon', 'allowDragAndDrop', 'expandAll'];\n                            for (var j = 0; j < newAxis.length; j++) {\n                                var oldAxisProp = Object.keys(oldProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                var newAxisProp = Object.keys(newProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                for (var k = 0; k < newAxisProp.length; k++) {\n                                    if (options.indexOf(newAxisProp[k]) !== -1 &&\n                                        options.indexOf(oldAxisProp[k]) !== -1) {\n                                        propValidation[i] = 'update';\n                                    }\n                                    else {\n                                        propValidation[i] = 'break';\n                                        break;\n                                    }\n                                }\n                                if (propValidation[i] === 'break') {\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            propValidation[i] = 'break';\n                        }\n                        if (propValidation[i] === 'break') {\n                            break;\n                        }\n                    }\n                }\n                var a = 0;\n                var b = 0;\n                var c = 0;\n                for (var _i = 0, propValidation_1 = propValidation; _i < propValidation_1.length; _i++) {\n                    var validation = propValidation_1[_i];\n                    if (validation === 'break') {\n                        a++;\n                    }\n                    if (validation === 'notAvail') {\n                        b++;\n                    }\n                    if (validation === 'update') {\n                        c++;\n                    }\n                }\n                isButtonRefresh = (a > 0 || b === 4) ? false : (a === 0 && b < 4 && c > 0);\n            }\n        }\n        catch (exception) {\n            isButtonRefresh = false;\n        }\n        return isButtonRefresh;\n    };\n    PivotUtil.formatPivotValues = function (pivotValues) {\n        var values = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                values[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        values[i][j] = {\n                            axis: pivotValues[i][j].Axis,\n                            actualText: pivotValues[i][j].ActualText,\n                            indexObject: pivotValues[i][j].IndexObject,\n                            index: pivotValues[i][j].Index,\n                            rowHeaders: pivotValues[i][j].RowHeaders,\n                            columnHeaders: pivotValues[i][j].ColumnHeaders,\n                            formattedText: pivotValues[i][j].FormattedText,\n                            actualValue: pivotValues[i][j].ActualValue,\n                            rowIndex: pivotValues[i][j].RowIndex,\n                            colIndex: pivotValues[i][j].ColIndex,\n                            colSpan: pivotValues[i][j].ColSpan,\n                            level: pivotValues[i][j].Level,\n                            rowSpan: pivotValues[i][j].RowSpan,\n                            isSum: pivotValues[i][j].IsSum,\n                            isGrandSum: pivotValues[i][j].IsGrandSum,\n                            valueSort: pivotValues[i][j].ValueSort,\n                            ordinal: pivotValues[i][j].Ordinal,\n                            hasChild: pivotValues[i][j].HasChild,\n                            isDrilled: pivotValues[i][j].IsDrilled,\n                            value: pivotValues[i][j].Value,\n                            type: pivotValues[i][j].Type,\n                            members: pivotValues[i][j].Members\n                        };\n                    }\n                }\n            }\n        }\n        return values;\n    };\n    PivotUtil.formatFieldList = function (fieldList) {\n        var keys = Object.keys(fieldList);\n        var fList = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (fieldList[keys[i]]) {\n                fList[keys[i]] = {\n                    id: fieldList[keys[i]].Id,\n                    caption: fieldList[keys[i]].Caption,\n                    type: fieldList[keys[i]].Type,\n                    formatString: fieldList[keys[i]].FormatString,\n                    index: fieldList[keys[i]].Index,\n                    members: fieldList[keys[i]].Members,\n                    formattedMembers: fieldList[keys[i]].FormattedMembers,\n                    dateMember: fieldList[keys[i]].DateMember,\n                    filter: fieldList[keys[i]].Filter,\n                    sort: fieldList[keys[i]].Sort,\n                    aggregateType: fieldList[keys[i]].AggregateType,\n                    baseField: fieldList[keys[i]].BaseField,\n                    baseItem: fieldList[keys[i]].BaseItem,\n                    filterType: fieldList[keys[i]].FilterType,\n                    format: fieldList[keys[i]].Format,\n                    formula: fieldList[keys[i]].Formula,\n                    isSelected: fieldList[keys[i]].IsSelected,\n                    isExcelFilter: fieldList[keys[i]].IsExcelFilter,\n                    showNoDataItems: fieldList[keys[i]].ShowNoDataItems,\n                    isCustomField: fieldList[keys[i]].IsCustomField,\n                    showFilterIcon: fieldList[keys[i]].ShowFilterIcon,\n                    showSortIcon: fieldList[keys[i]].ShowSortIcon,\n                    showRemoveIcon: fieldList[keys[i]].ShowRemoveIcon,\n                    showEditIcon: fieldList[keys[i]].ShowEditIcon,\n                    showValueTypeIcon: fieldList[keys[i]].ShowValueTypeIcon,\n                    allowDragAndDrop: fieldList[keys[i]].AllowDragAndDrop,\n                    isCalculatedField: fieldList[keys[i]].IsCalculatedField,\n                    showSubTotals: fieldList[keys[i]].ShowSubTotals,\n                    expandAll: fieldList[keys[i]].expandAll,\n                    groupName: fieldList[keys[i]].groupName\n                };\n            }\n        }\n        return fList;\n    };\n    PivotUtil.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    PivotUtil.getLocalizedObject = function (control) {\n        var locale = {};\n        locale['Null'] = control.localeObj.getConstant('null');\n        locale['Years'] = control.localeObj.getConstant('Years');\n        locale['Quarters'] = control.localeObj.getConstant('Quarters');\n        locale['Months'] = control.localeObj.getConstant('Months');\n        locale['Days'] = control.localeObj.getConstant('Days');\n        locale['Hours'] = control.localeObj.getConstant('Hours');\n        locale['Minutes'] = control.localeObj.getConstant('Minutes');\n        locale['Seconds'] = control.localeObj.getConstant('Seconds');\n        locale['QuarterYear'] = control.localeObj.getConstant('QuarterYear');\n        locale['Of'] = control.localeObj.getConstant('of');\n        locale['Qtr'] = control.localeObj.getConstant('qtr');\n        locale['Undefined'] = control.localeObj.getConstant('undefined');\n        locale['GroupOutOfRange'] = control.localeObj.getConstant('groupOutOfRange');\n        locale['Group'] = control.localeObj.getConstant('group');\n        return locale;\n    };\n    PivotUtil.updateReport = function (control, report) {\n        control.setProperties({ dataSourceSettings: { rows: [] } }, true);\n        control.setProperties({ dataSourceSettings: { columns: [] } }, true);\n        control.setProperties({ dataSourceSettings: { formatSettings: [] } }, true);\n        for (var i = 0; i < report.Rows.length; i++) {\n            control.dataSourceSettings.rows.push({\n                name: report.Rows[i].Name,\n                caption: report.Rows[i].Caption,\n                showNoDataItems: report.Rows[i].ShowNoDataItems,\n                baseField: report.Rows[i].BaseField,\n                baseItem: report.Rows[i].BaseItem,\n                showFilterIcon: report.Rows[i].ShowFilterIcon,\n                showSortIcon: report.Rows[i].ShowSortIcon,\n                showEditIcon: report.Rows[i].ShowEditIcon,\n                showRemoveIcon: report.Rows[i].ShowRemoveIcon,\n                showSubTotals: report.Rows[i].ShowValueTypeIcon,\n                allowDragAndDrop: report.Rows[i].AllowDragAndDrop,\n                axis: report.Rows[i].Axis,\n                dataType: report.Rows[i].DataType,\n                isCalculatedField: report.Rows[i].IsCalculatedField,\n                showValueTypeIcon: report.Rows[i].ShowValueTypeIcon,\n                type: report.Rows[i].Type,\n                expandAll: report.Rows[i].expandAll\n            });\n        }\n        for (var i = 0; i < report.Columns.length; i++) {\n            control.dataSourceSettings.columns.push({\n                name: report.Columns[i].Name,\n                caption: report.Columns[i].Caption,\n                showNoDataItems: report.Columns[i].ShowNoDataItems,\n                baseField: report.Columns[i].BaseField,\n                baseItem: report.Columns[i].BaseItem,\n                showFilterIcon: report.Columns[i].ShowFilterIcon,\n                showSortIcon: report.Columns[i].ShowSortIcon,\n                showEditIcon: report.Columns[i].ShowEditIcon,\n                showRemoveIcon: report.Columns[i].ShowRemoveIcon,\n                showSubTotals: report.Columns[i].ShowValueTypeIcon,\n                allowDragAndDrop: report.Columns[i].AllowDragAndDrop,\n                axis: report.Columns[i].Axis,\n                dataType: report.Columns[i].DataType,\n                isCalculatedField: report.Columns[i].IsCalculatedField,\n                showValueTypeIcon: report.Columns[i].ShowValueTypeIcon,\n                type: report.Columns[i].Type,\n                expandAll: report.Columns[i].expandAll\n            });\n        }\n        for (var i = 0; i < report.FormatSettings.length; i++) {\n            control.dataSourceSettings.formatSettings.push({\n                name: report.FormatSettings[i].Name,\n                format: report.FormatSettings[i].Format,\n                type: report.FormatSettings[i].Type,\n                currency: report.FormatSettings[i].Currency,\n                maximumFractionDigits: report.FormatSettings[i].MaximumFractionDigits,\n                maximumSignificantDigits: report.FormatSettings[i].MaximumSignificantDigits,\n                minimumFractionDigits: report.FormatSettings[i].MinimumFractionDigits,\n                minimumIntegerDigits: report.FormatSettings[i].MinimumIntegerDigits,\n                minimumSignificantDigits: report.FormatSettings[i].MinimumSignificantDigits,\n                skeleton: report.FormatSettings[i].Skeleton,\n                useGrouping: report.FormatSettings[i].UseGrouping\n            });\n        }\n    };\n    PivotUtil.generateUUID = function () {\n        var d = new Date().getTime();\n        var d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16;\n            if (d > 0) {\n                r = (d + r) % 16 | 0;\n                d = Math.floor(d / 16);\n            }\n            else {\n                r = (d2 + r) % 16 | 0;\n                d2 = Math.floor(d2 / 16);\n            }\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    };\n    /**\n     * It performing the Custom Sorting.\n     *\n     * @param {HeadersSortEventArgs} sortDetails - It contains the sort Details.\n     * @param {IAxisSet[]} sortMembersOrder - It contains the sort Members Order.\n     * @param {string | boolean} type - It contains the type.\n     * @param {boolean} hasMembersOrder - It contains the has Members Order.\n     * @param {boolean} isOlap - It contains the isOlap.\n     * @returns {IAxisSet[]} - It returns the sorted data as IAxisSet[].\n     * @hidden\n     */\n    PivotUtil.applyCustomSort = function (sortDetails, sortMembersOrder, type, hasMembersOrder, isOlap) {\n        var grandTotal;\n        var order = [];\n        if (sortDetails.IsOrderChanged) {\n            order = sortDetails.members;\n        }\n        else {\n            order = (sortDetails.sortOrder === 'Ascending' || sortDetails.sortOrder === 'None' || sortDetails.sortOrder === undefined) ? [].concat(sortDetails.members) : [].concat(sortDetails.members).reverse();\n        }\n        var updatedMembers = [];\n        var isNormalType = type === undefined || type === 'string' || type === 'number';\n        if (sortMembersOrder[0].actualText === 'Grand Total') {\n            grandTotal = sortMembersOrder[0];\n            sortMembersOrder.shift();\n        }\n        for (var i = 0, j = 0; i < sortMembersOrder.length; i++) {\n            var member = sortMembersOrder[i];\n            var sortText = isOlap ? member.formattedText : isNormalType ? member.actualText :\n                type === true ? member.actualText.toString() : member.dateText;\n            if (order[j] === sortText) {\n                sortMembersOrder.splice(j++, 0, member);\n                sortMembersOrder.splice(++i, 1);\n                if (j < order.length) {\n                    i = -1;\n                }\n                else {\n                    if (!hasMembersOrder) {\n                        updatedMembers.splice(--j, 0, sortText);\n                    }\n                    break;\n                }\n            }\n            if (i >= 0 && !hasMembersOrder) {\n                updatedMembers[i] = sortText;\n            }\n        }\n        if (!hasMembersOrder) {\n            for (var i = updatedMembers.length; i < sortMembersOrder.length; i++) {\n                var member = sortMembersOrder[i];\n                var sortText = isOlap ? member.formattedText : isNormalType ? member.actualText :\n                    type === true ? member.actualText.toString() : member.dateText;\n                updatedMembers[i] = sortText;\n            }\n            if (updatedMembers[updatedMembers.length - 1] === 'Grand Total') {\n                updatedMembers.pop();\n            }\n            sortDetails.members = updatedMembers;\n        }\n        if (grandTotal) {\n            sortMembersOrder.splice(0, 0, grandTotal);\n        }\n        return sortMembersOrder;\n    };\n    /**\n     * It performs to returnssorted headers.\n     *\n     * @param {IAxisSet[]} sortMembersOrder - It contains the sort members order.\n     * @param {string} sortOrder - It contains the sort order.\n     * @param {string | boolean} type - It contains the type.\n     * @param {boolean} isNumberGroupSorting - it defines the sorting is numer grouping or not.\n     * @returns {IAxisSet[]} - It returns the sorted data as IAxisSet[].\n     * @hidden\n     */\n    PivotUtil.applyHeadersSort = function (sortMembersOrder, sortOrder, type, isNumberGroupSorting) {\n        if (isNumberGroupSorting) {\n            sortMembersOrder = sortMembersOrder.sort(function (a, b) {\n                var aText = a.actualText;\n                var bText = b.actualText;\n                return (aText === 'Grand Total' || bText === 'Grand Total') ? 0 : (aText === 'Out of Range') ? 1 :\n                    (bText === 'Out of Range') ? -1 : !isNaN(parseFloat(aText)) && !isNaN(parseFloat(bText)) ?\n                        sortOrder === 'Ascending' ? parseFloat(aText) - parseFloat(bText) : parseFloat(bText) - parseFloat(aText) :\n                        sortOrder === 'Ascending' ? aText.localeCompare(bText, undefined, { numeric: true, sensitivity: 'base' }) :\n                            bText.localeCompare(aText, undefined, { numeric: true, sensitivity: 'base' });\n            });\n        }\n        else if (type === 'datetime' || type === 'date' || type === 'time') {\n            sortMembersOrder = sortOrder === 'Ascending'\n                ? sortMembersOrder.sort(function (a, b) {\n                    if (a.dateText === 'Out of Range') {\n                        return 1;\n                    }\n                    if (b.dateText === 'Out of Range') {\n                        return -1;\n                    }\n                    return a.dateText > b.dateText ? 1 : a.dateText < b.dateText ? -1 : 0;\n                })\n                : sortOrder === 'Descending'\n                    ? sortMembersOrder.sort(function (a, b) {\n                        if (a.dateText === 'Out of Range') {\n                            return 1;\n                        }\n                        if (b.dateText === 'Out of Range') {\n                            return -1;\n                        }\n                        return a.dateText < b.dateText ? 1 : a.dateText > b.dateText ? -1 : 0;\n                    })\n                    : sortMembersOrder;\n        }\n        else if (type === true) {\n            sortMembersOrder = sortOrder === 'Ascending' ?\n                (sortMembersOrder.sort(function (a, b) { return (a.actualText === 'Grand Total' || b.actualText === 'Grand Total') ? 0 : (a.actualText === 'Out of Range') ? 1 : (b.actualText === 'Out of Range') ? -1 : (Number(a.actualText.toString().match(/\\d+/)) > Number(b.actualText.toString().match(/\\d+/))) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)) > Number(a.actualText.toString().match(/\\d+/))) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (sortMembersOrder.sort(function (a, b) { return (a.actualText === 'Grand Total' || b.actualText === 'Grand Total') ? 0 : (a.actualText === 'Out of Range') ? -1 : (b.actualText === 'Out of Range') ? 1 : (Number(a.actualText.toString().match(/\\d+/)) < Number(b.actualText.toString().match(/\\d+/))) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)) < Number(a.actualText.toString().match(/\\d+/))) ? -1 : 0); })) :\n                    sortMembersOrder;\n        }\n        else {\n            sortMembersOrder = sortOrder === 'Ascending' ?\n                (sortMembersOrder.sort(function (a, b) { return (a.actualText === 'Grand Total' || b.actualText === 'Grand Total') ? 0 : ((a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0)); })) :\n                sortOrder === 'Descending' ?\n                    (sortMembersOrder.sort(function (a, b) { return (a.actualText === 'Grand Total' || b.actualText === 'Grand Total') ? 0 : ((a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0)); })) :\n                    sortMembersOrder;\n        }\n        return sortMembersOrder;\n    };\n    /**\n     * It performs to render the olap engine.\n     *\n     * @param {PivotView | PivotFieldList} pivot - It specifies the pivotview and pivot field list component instance.\n     * @param {IOlapCustomProperties} customProperties - It contains the internal properties that used for engine population.\n     * @returns {void}\n     * @hidden\n     */\n    PivotUtil.renderOlapEngine = function (pivot, customProperties) {\n        try {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties ? customProperties :\n                pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList), pivot.onHeadersSort ? pivot.getHeaderSortInfo.bind(pivot) : undefined);\n            pivot.setProperties({ dataSourceSettings: { valueIndex: pivot.olapEngineModule.measureIndex } }, true);\n        }\n        catch (exception) {\n            pivot.actionObj.actionName = 'engineFormation';\n            if (pivot.olapEngineModule.errorInfo) {\n                pivot.actionFailureMethod(pivot.olapEngineModule.errorInfo);\n                pivot.olapEngineModule.errorInfo = undefined;\n            }\n            else {\n                pivot.actionFailureMethod(exception);\n            }\n        }\n    };\n    /**\n     *\n     * @param {IDataSet | IAxisSet} header - It contains the value of header\n     * @returns {IAxisSet} - It frame Header With Keys\n     * @hidden */\n    PivotUtil.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    /**\n     *\n     * @param {PdfPageSize} pageSize - It contains the value of page Size\n     * @returns {SizeF} - It returns the value as SizeF\n     * @hidden */\n    PivotUtil.getPageSize = function (pageSize) {\n        switch (pageSize) {\n            case 'Letter':\n                return new SizeF(612, 792);\n            case 'Note':\n                return new SizeF(540, 720);\n            case 'Legal':\n                return new SizeF(612, 1008);\n            case 'A0':\n                return new SizeF(2380, 3368);\n            case 'A1':\n                return new SizeF(1684, 2380);\n            case 'A2':\n                return new SizeF(1190, 1684);\n            case 'A3':\n                return new SizeF(842, 1190);\n            case 'A5':\n                return new SizeF(421, 595);\n            case 'A6':\n                return new SizeF(297, 421);\n            case 'A7':\n                return new SizeF(210, 297);\n            case 'A8':\n                return new SizeF(148, 210);\n            case 'A9':\n                return new SizeF(105, 148);\n            case 'B0':\n                return new SizeF(2836, 4008);\n            case 'B1':\n                return new SizeF(2004, 2836);\n            case 'B2':\n                return new SizeF(1418, 2004);\n            case 'B3':\n                return new SizeF(1002, 1418);\n            case 'B4':\n                return new SizeF(709, 1002);\n            case 'B5':\n                return new SizeF(501, 709);\n            case 'Archa':\n                return new SizeF(648, 864);\n            case 'Archb':\n                return new SizeF(864, 1296);\n            case 'Archc':\n                return new SizeF(1296, 1728);\n            case 'Archd':\n                return new SizeF(1728, 2592);\n            case 'Arche':\n                return new SizeF(2592, 3456);\n            case 'Flsa':\n                return new SizeF(612, 936);\n            case 'HalfLetter':\n                return new SizeF(396, 612);\n            case 'Letter11x17':\n                return new SizeF(792, 1224);\n            case 'Ledger':\n                return new SizeF(1224, 792);\n            default:\n                return new SizeF(595, 842);\n        }\n    };\n    /**\n     *\n     * @param {any} aggreColl - It contains the selected header and its value cell collection, that should be sorted for value sorting.\n     * @param {string} sortOrder - It denotes the sorting order.\n     * @returns {IAxisSet[]} - It returns the sorted collection in the provided sort order.\n     * @hidden */\n    PivotUtil.getSortedValue = function (aggreColl, sortOrder) {\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ? ((b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0) -\n                (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) : ((a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0) -\n                (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        return aggreColl.map(function (item) {\n            return item['header'];\n        });\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.groupingFieldsInfo = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.columnPageCount = 0;\n        /** @hidden */\n        this.rowPageCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        /** @hidden */\n        this.isLastHeaderHasMeasures = true;\n        /** @hidden */\n        this.measureIndex = -1;\n        /** @hidden */\n        this.isPagingOrVirtualizationEnabled = false;\n        /** @hidden */\n        this.rowMaxLevel = 0;\n        this.valueMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.reformAxisCount = 0;\n        this.isEditing = false;\n        /** @hidden */\n        this.valueAxisFields = {};\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        /** @hidden */\n        this.fieldKeys = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        this.formatRegex = /^(?:[ncpae])(?:([0-9]|1[0-9]|20))?$/i;\n        this.measureNames = {};\n        this.enablePaging = false;\n        this.enableVirtualization = false;\n        this.enableHtmlSanitizer = false;\n        this.enableOptimizedRendering = false;\n        this.groupedDataType = {};\n        this.emptyRowsLength = 0;\n        this.tabularPivotValues = [];\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /**\n     * It is used to clear properties.\n     *\n     * @param {boolean} isExport - It indicates whether it is triggered after the export or not.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.clearProperties = function (isExport) {\n        if (!this.isPagingOrVirtualizationEnabled && !isExport) {\n            this.columnKeys = {};\n            this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        }\n        if (this.enableValueSorting) {\n            this.valueContent = [];\n        }\n        this.saveDataHeaders = this.allowValueFilter ? this.saveDataHeaders : {};\n        this.rMembers = [];\n        this.cMembers = [];\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.rawIndexObject = {};\n        if (this.dataSourceSettings.valueIndex > -1) {\n            this.valueAxisFields = {};\n        }\n        this.headerObjectsCollection = {};\n        this.fieldDrillCollection = {};\n    };\n    /**\n     * It is used to render the pivot engine.\n     *\n     * @param {IDataOptions} dataSource -  It contains the dataSourceSettings.\n     * @param {ICustomProperties} customProperties -  It contains the custom Properties.\n     * @param {Function} fn - It contains aggreagateCellnInfo method.\n     * @param {Function} onHeadersSort -  It contains onHeaderSort method.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn, onHeadersSort) {\n        this.getValueCellInfo = fn;\n        this.getHeaderSortInfo = onHeadersSort;\n        this.customProperties = customProperties;\n        if (this.fieldList) {\n            for (var i = 0, j = dataSource.formatSettings; i < j.length; i++) {\n                if (!this.formatFields[j[i].name] && this.fieldList[j[i].name]) {\n                    this.fieldList[j[i].name].members = {};\n                    this.fieldList[j[i].name].formattedMembers = {};\n                    this.fieldList[j[i].name].dateMember = [];\n                }\n            }\n        }\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.columnPageCount = 0;\n        this.rowPageCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.dataSourceSettings.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isLastHeaderHasMeasures = true;\n        this.isEditing = false;\n        var fields;\n        this.globalize = (customProperties && customProperties.globalize) ? customProperties.globalize : new Internationalization();\n        this.currencyCode = (customProperties && customProperties.currenyCode) ? customProperties.currenyCode : undefined;\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.clonedReport = customProperties ? (customProperties.clonedReport &&\n            customProperties.clonedReport.properties ?\n            customProperties.clonedReport.properties :\n            customProperties.clonedReport) : {};\n        this.enablePaging = customProperties.enablePaging;\n        this.enableVirtualization = customProperties.enableVirtualization;\n        this.enableOptimizedRendering = customProperties.enableOptimizedRendering;\n        this.enableHtmlSanitizer = customProperties.enableHtmlSanitizer;\n        this.isPagingOrVirtualizationEnabled = this.enablePaging || this.enableVirtualization;\n        this.enableSort = dataSource.enableSorting;\n        this.dataSourceSettings.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.dataSourceSettings.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true :\n            dataSource.showHeaderWhenEmpty;\n        this.dataSourceSettings.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.dataSourceSettings.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.dataSourceSettings.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true :\n            dataSource.showColumnSubTotals;\n        this.dataSourceSettings.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.dataSourceSettings.grandTotalsPosition = isNullOrUndefined(dataSource.grandTotalsPosition) ? 'Bottom' :\n            dataSource.grandTotalsPosition;\n        this.dataSourceSettings.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true :\n            dataSource.showRowGrandTotals;\n        this.dataSourceSettings.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true :\n            dataSource.showColumnGrandTotals;\n        this.showSubTotalsAtTop = (this.dataSourceSettings.showSubTotals && this.dataSourceSettings.showColumnSubTotals &&\n            dataSource.subTotalsPosition === 'Top') && !customProperties.isTabularLayout;\n        this.showSubTotalsAtBottom = (this.dataSourceSettings.showSubTotals && this.dataSourceSettings.showRowSubTotals &&\n            dataSource.subTotalsPosition === 'Bottom') || customProperties.isTabularLayout;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = PivotUtil.getClonedDataSourceSettings(dataSource);\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = dataSource.dataSource;\n        }\n        if (this.data && this.data[0]) {\n            if (!this.fieldList) {\n                if (dataSource.type === 'CSV') {\n                    this.fields = this.data.shift();\n                }\n                else {\n                    this.fields = Object.keys(this.data[0]);\n                }\n                for (var i = 0; i < this.fields.length; i++) {\n                    this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n                }\n            }\n            if (customProperties && customProperties.pageSettings && customProperties.allowDataCompression) {\n                this.actualData = this.data;\n                this.data = this.getGroupedRawData(dataSource);\n            }\n            this.dataSourceSettings.rows = dataSource.rows ? dataSource.rows : [];\n            this.dataSourceSettings.columns = dataSource.columns ? dataSource.columns : [];\n            this.dataSourceSettings.filters = dataSource.filters ? dataSource.filters : [];\n            this.dataSourceSettings.values = dataSource.values ? dataSource.values : [];\n            this.dataSourceSettings.formatSettings = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.dataSourceSettings.groupSettings = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.dataSourceSettings.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.dataSourceSettings.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            this.valueAxisFields = {};\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var value = _a[_i];\n                this.valueAxisFields[value.name] = value;\n            }\n            fields = this.getGroupData(this.data);\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n            }\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMultiMeasures = this.dataSourceSettings.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.measureIndex = !isNullOrUndefined(dataSource.valueIndex) ? dataSource.valueIndex : -1;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.dataSourceSettings.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.dataSourceSettings.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = customProperties && customProperties.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(Object.keys(this.fieldList));\n            this.fillFieldMembers();\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.filterMembers = [];\n            var columnLength = this.dataSourceSettings.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.dataSourceSettings.columns[columnLength].name] = this.dataSourceSettings\n                    .columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (fields) {\n        var report = {};\n        report[0] = this.dataSourceSettings.rows;\n        report[1] = this.dataSourceSettings.columns;\n        report[2] = this.dataSourceSettings.values;\n        report[3] = this.dataSourceSettings.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    var fieldName = report[pos][cnt].name;\n                    if ((this.dataSourceSettings.excludeFields.indexOf(fieldName) > -1) || (!isNullOrUndefined(fields)\n                        && fields.indexOf(fieldName) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                    else if (pos === 2) {\n                        this.measureNames[fieldName] =\n                            report[pos][cnt].caption ? report[pos][cnt].caption : fieldName;\n                        this.measureNames[report[pos][cnt].caption ?\n                            report[pos][cnt].caption : fieldName] = fieldName;\n                    }\n                }\n            }\n            pos++;\n        }\n        this.isMultiMeasures = this.dataSourceSettings.values.length > 1 ? true : false;\n        this.measureIndex = this.measureIndex === -1 ? (this.valueAxis ? report[0].length : report[1].length) : this.measureIndex;\n    };\n    PivotEngine.prototype.updateDataSourceSettings = function (dataSource, requireDatasourceUpdate) {\n        if (requireDatasourceUpdate) {\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.rowValuesLength = this.valueAxis === 1 ? this.dataSourceSettings.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.dataSourceSettings.values.length : 1;\n            this.measureIndex = !isNullOrUndefined(dataSource.valueIndex) ? dataSource.valueIndex : -1;\n            this.enableSort = dataSource.enableSorting;\n            this.dataSourceSettings.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n            this.dataSourceSettings.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true :\n                dataSource.showHeaderWhenEmpty;\n            this.dataSourceSettings.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n            this.dataSourceSettings.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n            this.dataSourceSettings.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true :\n                dataSource.showColumnSubTotals;\n            this.dataSourceSettings.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n            this.dataSourceSettings.grandTotalsPosition = isNullOrUndefined(dataSource.grandTotalsPosition) ? 'Bottom' :\n                dataSource.grandTotalsPosition;\n            this.dataSourceSettings.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true :\n                dataSource.showRowGrandTotals;\n            this.dataSourceSettings.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true :\n                dataSource.showColumnGrandTotals;\n            this.showSubTotalsAtTop = this.dataSourceSettings.showSubTotals && dataSource.subTotalsPosition === 'Top' &&\n                dataSource.showColumnSubTotals;\n            this.showSubTotalsAtBottom = this.customProperties.isTabularLayout ? true : this.dataSourceSettings.showSubTotals && dataSource.subTotalsPosition === 'Bottom' && dataSource.showRowSubTotals;\n            this.allowValueFilter = dataSource.allowValueFilter;\n            this.dataSourceSettings.formatSettings = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.dataSourceSettings.groupSettings = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.dataSourceSettings.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.dataSourceSettings.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            this.dataSourceSettings.values = dataSource.values ? dataSource.values : [];\n            this.dataSourceSettings.rows = dataSource.rows ? dataSource.rows : [];\n            this.dataSourceSettings.columns = dataSource.columns ? dataSource.columns : [];\n            this.dataSourceSettings.filters = dataSource.filters ? dataSource.filters : [];\n            this.dataSourceSettings.filterSettings = dataSource.filterSettings ? dataSource.filterSettings : [];\n            this.dataSourceSettings.sortSettings = dataSource.sortSettings ? dataSource.sortSettings : [];\n            this.dataSourceSettings.conditionalFormatSettings = dataSource.conditionalFormatSettings ?\n                dataSource.conditionalFormatSettings : [];\n            this.dataSourceSettings.valueSortSettings = dataSource.valueSortSettings ? dataSource.valueSortSettings : {};\n            this.removeIrrelevantFields(Object.keys(this.fieldList));\n        }\n    };\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = PivotUtil.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[this.fieldKeys[countFields[vPos]]] =\n                        isNullOrUndefined(currData[this.fieldKeys[countFields[vPos]]]) ?\n                            currData[this.fieldKeys[countFields[vPos]]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[this.fieldKeys[headerFields[hPos]]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[this.fieldKeys[currFieldName]];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                (groupRawData)[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    PivotEngine.prototype.getGroupData = function (data) {\n        var _this = this;\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if ((group.type === 'Date' && this_1.groupingFields[fieldName]) ||\n                    (group.type === 'Custom' && this_1.groupingFields[fieldName])) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' ||\n                        !this_1.groupingFields[fieldName]) {\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (Number(a[_this.fieldKeys[fieldName]]) >\n                                Number(b[_this.fieldKeys[fieldName]])) ? 1 :\n                                ((Number(b[_this.fieldKeys[fieldName]]) >\n                                    Number(a[_this.fieldKeys[fieldName]])) ? -1 : 0); });\n                        }\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                // else if (group.type === 'Custom' && this.fields.indexOf(fieldName + '_custom_group') > -1) {\n                //     return fieldkeySet;\n                // }\n                var len = data.length;\n                while (len--) {\n                    var item = data[len];\n                    if (item[this_1.fieldKeys[fieldName]] && group.type === 'Date') {\n                        var date = new Date(item[this_1.fieldKeys[fieldName]].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                new Date(newDate.setFullYear(date.getFullYear())).toString());\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                new Date(newDate.setMonth(date.getMonth(), 1)).toString());\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                new Date(newDate.setHours(date.getHours())).toString());\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                new Date(newDate.setMinutes(date.getMinutes())).toString());\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName :\n                                                fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                                (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                                    this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                new Date(newDate.setSeconds(date.getSeconds())).toString());\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (!isNaN(Number(item[this_1.fieldKeys[fieldName]])) && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, Number(item[this_1.fieldKeys[fieldName]]));\n                        item[this_1.fieldKeys[fieldName]] = isInRangeAvail ? undefined :\n                            item[this_1.fieldKeys[fieldName]];\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Custom' &&\n                        group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        this_1.groupingFieldsInfo[fieldName] = fieldName;\n                        this_1.groupingFieldsInfo[newFieldName] = fieldName;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            var cGroup = customGroups[i];\n                            if (cGroup.items && cGroup.items.length > 1) {\n                                customGroupFieldName = newFieldName;\n                                this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ?\n                                    (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] :\n                                        this_1.fields.length) : newFieldName;\n                                if (this_1.fields.indexOf(newFieldName) === -1) {\n                                    this_1.fields.push(newFieldName);\n                                }\n                                var isDataMatch = PivotUtil.inArray(item[this_1.fieldKeys[fieldName]].toString(), cGroup.items) === -1 ? false : true;\n                                item[this_1.fieldKeys[newFieldName]] =\n                                    (isDataMatch ? (cGroup.groupName && cGroup.groupName !== '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue &&\n                                        groupValue !== item[this_1.fieldKeys[fieldName]].toString()) ?\n                                        groupValue : item[this_1.fieldKeys[fieldName]].toString());\n                                groupValue = item[this_1.fieldKeys[newFieldName]];\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    fieldkeySet =\n                        (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    //this.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.dataSourceSettings.rows, this_1.dataSourceSettings.columns,\n                        this_1.dataSourceSettings.values, this_1.dataSourceSettings.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.dataSourceSettings.rows;\n                                    dataFields = dataFields.concat(this_1.dataSourceSettings.columns, this_1.dataSourceSettings.values, this_1.dataSourceSettings.filters);\n                                    while (gCnt--) {\n                                        var caption_1 = actualField.caption ? actualField.caption : actualField.name;\n                                        if (this_1.clonedReport) {\n                                            var clonedFields = this_1.clonedReport.rows;\n                                            clonedFields = clonedFields.concat(this_1.clonedReport.columns, this_1.clonedReport.values, this_1.clonedReport.filters);\n                                            var cloneField = PivotUtil.getFieldByName(groupKeys[gCnt], clonedFields);\n                                            if (cloneField) {\n                                                caption_1 = cloneField.caption ? cloneField.caption : cloneField.name;\n                                            }\n                                        }\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            caption_1 = (caption_1.indexOf(' (') !== -1 && caption_1.indexOf(')') !== -1) ?\n                                                caption_1.slice(caption_1.indexOf('(') + 1, caption_1.length - 1) : caption_1;\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + caption_1 + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                                showFilterIcon: actualField.showFilterIcon,\n                                                showSortIcon: actualField.showSortIcon,\n                                                showEditIcon: actualField.showEditIcon,\n                                                showRemoveIcon: actualField.showRemoveIcon,\n                                                showSubTotals: actualField.showValueTypeIcon,\n                                                allowDragAndDrop: actualField.allowDragAndDrop,\n                                                expandAll: actualField.expandAll,\n                                                groupName: actualField.groupName\n                                            };\n                                            axis.splice(i, 0, newField);\n                                            this_1.groupingFieldsInfo[newField.name] = fieldName;\n                                        }\n                                        else {\n                                            this_1.groupingFieldsInfo[groupKeys[gCnt]] = fieldName;\n                                        }\n                                    }\n                                    break;\n                                }\n                                else if (axis[i].name.indexOf(fieldName) > -1) {\n                                    var axisField = groupFields[axis[i].name];\n                                    var currentField = axis.filter(function (axisField) {\n                                        return axisField.name === fieldName;\n                                    })[0];\n                                    if (!isNullOrUndefined(currentField)) {\n                                        var currentFieldCaption = (currentField.caption.indexOf(' (') !== -1 &&\n                                            currentField.caption.indexOf(')') !== -1) ? currentField.caption.slice(currentField.caption.indexOf('(') + 1, currentField.caption.length - 1) : currentField.caption;\n                                        axis[i].caption = (this_1.localeObj ? this_1.localeObj.getConstant(axisField) : currentField)\n                                            + ' (' + currentFieldCaption + ')';\n                                    }\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    var field = this_1.getMappingField(fieldName, this_1.clonedReport ? this_1.clonedReport.fieldMapping\n                        : this_1.dataSourceSettings.fieldMapping);\n                    var caption_2 = field.caption ? field.caption : fieldName;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.dataSourceSettings.formatSettings.length; i < len_3; i++) {\n                            if (this_1.dataSourceSettings.formatSettings[i].name === groupKeys[gCnt]) {\n                                this_1.dataSourceSettings.formatSettings.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.dataSourceSettings.formatSettings.push(formatSettings);\n                        }\n                        if (!isDataSource) {\n                            var mappingField = this_1.getMappingField(groupKeys[gCnt], this_1.dataSourceSettings.fieldMapping);\n                            if (groupKeys[gCnt] !== fieldName && isNullOrUndefined(mappingField.name)) {\n                                var newField = {\n                                    name: groupKeys[gCnt],\n                                    caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + caption_2 + ')'\n                                };\n                                this_1.dataSourceSettings.fieldMapping.push(newField);\n                                this_1.groupingFieldsInfo[newField.name] = fieldName;\n                            }\n                            else if (groupKeys[gCnt] !== fieldName) {\n                                mappingField.caption = (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + caption_2 + ')';\n                                this_1.groupingFieldsInfo[mappingField.name] = fieldName;\n                            }\n                        }\n                    }\n                    if (!isDataSource) {\n                        var mappingField = this_1.getMappingField(fieldName, this_1.dataSourceSettings.fieldMapping);\n                        groupField = groupFields[fieldName];\n                        if (groupKeys[gCnt] !== fieldName && isNullOrUndefined(mappingField.name)) {\n                            var newField = {\n                                name: fieldName,\n                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + caption_2 + ')'\n                            };\n                            this_1.dataSourceSettings.fieldMapping.push(newField);\n                            this_1.groupingFieldsInfo[newField.name] = fieldName;\n                        }\n                        else {\n                            mappingField.caption = (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + caption_2 + ')';\n                            this_1.groupingFieldsInfo[mappingField.name] = fieldName;\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    var endingAt = void 0;\n                    var groupName = [];\n                    while (cnt < dataLength) {\n                        var numericFieldName = Number(data[cnt][fieldName]);\n                        unframedSet.push(numericFieldName);\n                        if (!isNaN(numericFieldName) && framedSet.indexOf(numericFieldName) === -1) {\n                            framedSet.push(numericFieldName);\n                        }\n                        cnt++;\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        var currentData = data[cnt];\n                        if (currentData && !isNaN(Number(currentData[fieldName]))) {\n                            endingAt = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n                            cEndValue = endingAt ? endingAt : Math.max.apply(Math, framedSet);\n                            var currentStartValue = Math.round(Number(currentData[fieldName]));\n                            var currentEndValue = Math.round(currentStartValue + (group.rangeInterval - 1));\n                            if (currentStartValue >= groupName[0] && currentStartValue <= groupName[groupName.length - 1]) {\n                                var startValue = groupName[0];\n                                var endValue = groupName[groupName.length - 1];\n                                currentData[fieldName] = this_1.getNumberGroupHeaders(startValue, endValue, cEndValue);\n                                if (isNullOrUndefined(this_1.groupedDataType[fieldName])) {\n                                    this_1.groupedDataType[fieldName] = 'string';\n                                }\n                            }\n                            else {\n                                if (groupName.length === 0) {\n                                    for (var i = currentStartValue; i <= currentEndValue; i++) {\n                                        groupName.push(i);\n                                    }\n                                    var startValue = groupName[0];\n                                    var endValue = groupName[groupName.length - 1];\n                                    currentData[fieldName] = this_1.getNumberGroupHeaders(startValue, endValue, cEndValue);\n                                    if (isNullOrUndefined(this_1.groupedDataType[fieldName])) {\n                                        this_1.groupedDataType[fieldName] = 'string';\n                                    }\n                                }\n                                else {\n                                    var startValue = groupName[groupName.length - 1] + 1;\n                                    var endValue = startValue + (group.rangeInterval - 1);\n                                    var grouping = true;\n                                    groupName.splice(0, groupName.length);\n                                    while (grouping) {\n                                        if (currentStartValue >= startValue && currentStartValue <= endValue) {\n                                            currentData[fieldName] = this_1.getNumberGroupHeaders(startValue, endValue, cEndValue);\n                                            if (isNullOrUndefined(this_1.groupedDataType[fieldName])) {\n                                                this_1.groupedDataType[fieldName] = 'string';\n                                            }\n                                            groupName.push(startValue);\n                                            groupName.push(endValue);\n                                            grouping = false;\n                                        }\n                                        startValue = endValue + 1;\n                                        endValue = startValue + (group.rangeInterval - 1);\n                                    }\n                                }\n                            }\n                            var keys = Object.keys(currentData);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((currentData[key]) ? true : false);\n                            }\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ?\n                                currentData : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.dataSourceSettings.rows, this_1.dataSourceSettings.columns,\n                        this_1.dataSourceSettings.values, this_1.dataSourceSettings.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_4 = this_1.dataSourceSettings.formatSettings.length; i < len_4; i++) {\n                        if (this_1.dataSourceSettings.formatSettings[i].name === fieldName) {\n                            this_1.dataSourceSettings.formatSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.dataSourceSettings.rows, this_1.dataSourceSettings.columns,\n                        this_1.dataSourceSettings.values, this_1.dataSourceSettings.filters];\n                    var dataFields = this_1.dataSourceSettings.rows;\n                    dataFields = dataFields.concat(this_1.dataSourceSettings.columns, this_1.dataSourceSettings.values, this_1.dataSourceSettings.filters);\n                    var pattern = [];\n                    if (!caption || caption === '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption === '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                        showSubTotals: actualField.showValueTypeIcon,\n                                        allowDragAndDrop: actualField.allowDragAndDrop,\n                                        showFilterIcon: actualField.showFilterIcon,\n                                        showSortIcon: actualField.showSortIcon,\n                                        showRemoveIcon: actualField.showRemoveIcon,\n                                        showEditIcon: actualField.showEditIcon,\n                                        expandAll: actualField.expandAll,\n                                        groupName: actualField.groupName\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    this_1.groupingFieldsInfo[newField.name] = fieldName;\n                                    this_1.groupingFieldsInfo[fieldName] = fieldName;\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption === '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                        showRemoveIcon: customGroupField.showRemoveIcon,\n                                        showSubTotals: customGroupField.showValueTypeIcon,\n                                        allowDragAndDrop: customGroupField.allowDragAndDrop,\n                                        showFilterIcon: customGroupField.showFilterIcon,\n                                        showSortIcon: customGroupField.showSortIcon,\n                                        showEditIcon: customGroupField.showEditIcon,\n                                        expandAll: customGroupField.expandAll,\n                                        groupName: customGroupField.groupName\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    this_1.groupingFieldsInfo[newField.name] = fieldName;\n                                    this_1.groupingFieldsInfo[fieldName] = fieldName;\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.dataSourceSettings.formatSettings));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.dataSourceSettings.formatSettings.push(formatfield);\n                    }\n                    this_1.groupingFields[fieldName] = fieldName;\n                }\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        //this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    PivotEngine.prototype.getNumberGroupHeaders = function (startValue, endValue, cEndValue) {\n        var fieldName = (startValue === endValue) ? startValue.toString() : (cEndValue >= startValue && cEndValue <= endValue) ?\n            (cEndValue === startValue) ? startValue.toString() : startValue.toString() + '-' + cEndValue.toString() :\n            startValue.toString() + '-' + endValue.toString();\n        return fieldName;\n    };\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (!isNaN(startValue) && cValue < startValue || !isNaN(endValue) && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getPercentFormat = function (formatField, currentField) {\n        var isHavingFormat = (!isNullOrUndefined(formatField[currentField]) &&\n            !isNullOrUndefined(this.formatFields[currentField].format)) ?\n            (this.formatFields[currentField].format).toLowerCase().match(/p[0-9]/) : undefined;\n        return !isNullOrUndefined(isHavingFormat) ? (Number((this.formatFields[currentField].format).replace(/[^0-9]/g, ''))) : 2;\n    };\n    PivotEngine.prototype.getFormattedFields = function (dataSourceSettings) {\n        this.formatFields = this.setFormattedFields(dataSourceSettings.formatSettings);\n        // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n        // if (fields[len as number] && fields[len as number].name === this.dataSourceSettings.formatSettings[cnt as number].name) {\n        //     this.formatFields[fields[len as number].name] = this.dataSourceSettings.formatSettings[cnt as number];\n        // }\n        // }\n    };\n    /**\n     * It is used to update the format fields.\n     *\n     * @param {IFormatSettings[]} formatSettings -  It contains the format settings.\n     * @returns {Object} - An object mapping keys to format settings.\n     * @hidden\n     */\n    PivotEngine.prototype.setFormattedFields = function (formatSettings) {\n        var cnt = formatSettings.length;\n        var formatFields = {};\n        while (cnt--) {\n            formatFields[formatSettings[cnt].name] = formatSettings[cnt];\n            if (formatSettings[cnt].type) {\n                this.dateFormatFunction[formatSettings[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(formatSettings[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: formatSettings[cnt].type\n                    })\n                };\n            }\n        }\n        return formatFields;\n    };\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var lenE = this.dataSourceSettings.excludeFields.length - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.dataSourceSettings.excludeFields[lenE]);\n            if (index !== -1) {\n                this.fields.splice(index, 1);\n            }\n            if (this.fieldList) {\n                delete this.fieldList[this.dataSourceSettings.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var keys = this.fields;\n        var dataFields = extend([], this.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.dataSourceSettings.columns, this.dataSourceSettings.values, this.dataSourceSettings.filters);\n        this.getFormattedFields(this.dataSourceSettings);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var len = keys.length;\n        var dataTypes = ['string', 'number', 'datetime', 'date', 'boolean'];\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key, this.dataSourceSettings.fieldMapping);\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    this.fieldList[key].showFilterIcon = (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true;\n                    this.fieldList[key].showRemoveIcon = (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true;\n                    this.fieldList[key].showSortIcon = (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true;\n                    this.fieldList[key].showEditIcon = (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true;\n                    this.fieldList[key].showValueTypeIcon = (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true;\n                    this.fieldList[key].allowDragAndDrop = (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true;\n                    this.fieldList[key].isCalculatedField = (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false;\n                    this.fieldList[key].showNoDataItems = (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false;\n                    this.fieldList[key].showSubTotals = (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true;\n                    this.fieldList[key].expandAll = (field && 'expandAll' in field) ?\n                        field.expandAll : false;\n                    this.fieldList[key].pid = (field && 'groupName' in field && field.groupName) ? field.groupName :\n                        this.groupingFieldsInfo[key] ? this.groupingFieldsInfo[key] : undefined;\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].members = {};\n                        this.fieldList[key].isMembersFilled = false;\n                    }\n                    this.updateMembersOrder(key);\n                }\n                else {\n                    if (!isNullOrUndefined(this.groupedDataType[key])) {\n                        type = this.groupedDataType[key];\n                    }\n                    else {\n                        type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                            field.dataType.toLowerCase() : type;\n                    }\n                    this.fieldList[key] = {\n                        caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                        id: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        isSelected: false,\n                        sort: isSort ? 'Ascending' : 'None',\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                        showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                            field.showRemoveIcon : true,\n                        showFilterIcon: (field && 'showFilterIcon' in field) ?\n                            field.showFilterIcon : true,\n                        showSortIcon: (field && 'showSortIcon' in field) ?\n                            field.showSortIcon : true,\n                        showNoDataItems: (field && 'showNoDataItems' in field) ?\n                            field.showNoDataItems : false,\n                        isCalculatedField: (field && 'isCalculatedField' in field) ?\n                            field.isCalculatedField : false,\n                        showEditIcon: (field && 'showEditIcon' in field) ?\n                            field.showEditIcon : true,\n                        showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                            field.showValueTypeIcon : true,\n                        allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                            field.allowDragAndDrop : true,\n                        showSubTotals: (field && 'showSubTotals' in field) ?\n                            field.showSubTotals : true,\n                        expandAll: (field && 'expandAll' in field) ?\n                            field.expandAll : false,\n                        pid: (field && 'groupName' in field && field.groupName) ? field.groupName :\n                            this.groupingFieldsInfo[key] ? this.groupingFieldsInfo[key] : undefined,\n                        aggregateType: (field && 'type' in field) ? field.type :\n                            (((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ? 'string' :\n                                (type === undefined || type === 'undefined') ? 'number' : type) === 'number' ? 'Sum' : 'Count',\n                        baseField: (field && 'baseField' in field) ?\n                            field.baseField : undefined,\n                        baseItem: (field && 'baseItem' in field) ?\n                            field.baseItem : undefined\n                    };\n                    this.updateMembersOrder(key);\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key, this.dataSourceSettings.fieldMapping);\n                if (!isNullOrUndefined(this.groupedDataType[key])) {\n                    type = this.groupedDataType[key];\n                }\n                else {\n                    type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                        field.dataType.toLowerCase() : PivotUtil.getType(fields[this.fieldKeys[key]]);\n                }\n                this.fieldList[key] = {\n                    id: key,\n                    pid: (field && 'groupName' in field && field.groupName) ? field.groupName :\n                        this.groupingFieldsInfo[key] ? this.groupingFieldsInfo[key] : undefined,\n                    caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                    showFilterIcon: (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true,\n                    showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true,\n                    showSortIcon: (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true,\n                    showEditIcon: (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true,\n                    showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true,\n                    allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true,\n                    showSubTotals: (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true,\n                    showNoDataItems: (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false,\n                    isCalculatedField: (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false,\n                    expandAll: (field && 'expandAll' in field) ?\n                        field.expandAll : false,\n                    aggregateType: (field && 'type' in field) ? field.type :\n                        (((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ? 'string' :\n                            (type === undefined || type === 'undefined') ? 'number' : type) === 'number' ? 'Sum' : 'Count',\n                    baseField: (field && 'baseField' in field) ?\n                        field.baseField : undefined,\n                    baseItem: (field && 'baseItem' in field) ?\n                        field.baseItem : undefined\n                };\n                this.updateMembersOrder(key);\n            }\n        }\n        this.groupedDataType = {};\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.updateMembersOrder = function (key) {\n        for (var _i = 0, _a = this.dataSourceSettings.sortSettings; _i < _a.length; _i++) {\n            var sortInfo = _a[_i];\n            if (key === sortInfo.name && sortInfo.membersOrder) {\n                this.fieldList[key].membersOrder = sortInfo.membersOrder;\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.getMappingField = function (key, fieldMapping) {\n        var field = {};\n        if (fieldMapping && fieldMapping.length > 0) {\n            for (var index = 0, cnt = fieldMapping.length; index < cnt; index++) {\n                if (fieldMapping[index].name === key) {\n                    field = fieldMapping[index];\n                    break;\n                }\n            }\n        }\n        return field;\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var _this = this;\n        var cnt = fields.length;\n        var lnt = this.dataSourceSettings.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.type = fields[cnt].dataType ? fields[cnt].dataType.toLowerCase() : field.type;\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n                field.allowDragAndDrop = fields[cnt].allowDragAndDrop;\n                field.showFilterIcon = fields[cnt].showFilterIcon;\n                field.showSortIcon = fields[cnt].showSortIcon;\n                field.showRemoveIcon = fields[cnt].showRemoveIcon;\n                field.showValueTypeIcon = fields[cnt].showValueTypeIcon;\n                field.showEditIcon = fields[cnt].showEditIcon;\n                field.showSubTotals = fields[cnt].showSubTotals;\n                field.expandAll = fields[cnt].expandAll;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.dataSourceSettings.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.dataSourceSettings.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.dataSourceSettings.calculatedFieldSettings[lnt].name].isCalculatedField = true;\n                this.fieldList[this.dataSourceSettings.calculatedFieldSettings[lnt].name].formula\n                    = this.dataSourceSettings.calculatedFieldSettings[lnt].formula;\n            }\n        }\n        var unBoundFields = this.dataSourceSettings.groupSettings.filter(function (groupSetting) {\n            return !fields.some(function (field) { return groupSetting.name === field.name; });\n        });\n        var groupingTypes = [\n            '_date_group_years',\n            '_date_group_quarters',\n            '_date_group_quarterYear',\n            '_date_group_months',\n            '_date_group_days',\n            '_date_group_hours',\n            '_date_group_minutes',\n            '_date_group_seconds'\n        ];\n        unBoundFields.forEach(function (unBoundField) {\n            var fieldName = unBoundField.name;\n            var fieldType = unBoundField.type.toLowerCase();\n            Object.keys(_this.fieldList).forEach(function (key) {\n                if (fieldType === 'date' && !isNullOrUndefined(unBoundField.caption) &&\n                    (groupingTypes.some(function (dateType) { return key === \"\" + fieldName + dateType; }) || key === fieldName)) {\n                    _this.fieldList[key].caption =\n                        _this.fieldList[key].caption.replace(unBoundField.name, unBoundField.caption);\n                }\n                else if (fieldType === 'custom' && !isNullOrUndefined(unBoundField.caption) && key === fieldName + \"_custom_group\") {\n                    _this.fieldList[key].caption = unBoundField.caption;\n                }\n                else if (fieldType === 'number' && !isNullOrUndefined(unBoundField.caption) && key === fieldName) {\n                    _this.fieldList[key].caption = unBoundField.caption;\n                }\n            });\n        });\n    };\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.dataSourceSettings.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).trim();\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            field.name = calcProperties ? calcProperties.name : field.name;\n            if (this_2.dataSourceSettings.type === 'CSV') {\n                if (keys.indexOf(field.name) === -1) {\n                    keys.push(field.name);\n                }\n            }\n            else {\n                keys = keys.filter(function (key) { return key !== field.name; });\n                keys.push(field.name);\n            }\n            var formulaType = actualFormula.split('\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len].trim();\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}[\\]\\r\\n/\\\\]+/);\n                var matchStrings = type.match(/^([^()]+)\\((.*)\\)$/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar', 'Median'].indexOf(selectedString) !== -1) {\n                    var index = (keys.indexOf(aggregateValue[1]) === -1 && matchStrings[2]) ?\n                        keys.indexOf(matchStrings[2]) : keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.dataSourceSettings.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.validateValueFields = function () {\n        this.isValueHasAdvancedAggregate = false;\n        for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n            var value = _a[_i];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(value.type) !== -1) {\n                this.isValueHasAdvancedAggregate = true;\n                break;\n            }\n        }\n    };\n    /**\n     * It is used to update the current field members.\n     *\n     * @param {string} fieldName -  Current field Name.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.fetchFieldMembers = function (fieldName) {\n        var fieldPosition = this.fieldList[fieldName].index;\n        this.generateMembers(fieldPosition, new Set());\n    };\n    PivotEngine.prototype.generateMembers = function (kl, formulaFields) {\n        var dlen = this.data.length;\n        var keys = this.fields;\n        var fList = this.fieldList;\n        var key = keys[kl];\n        if (!fList[key].members || this.allowDataCompression) {\n            fList[key].members = {};\n            if (this.allowDataCompression) {\n                fList[key].isMembersFilled = false;\n            }\n        }\n        if (!fList[key].dateMember || this.allowDataCompression) {\n            fList[key].dateMember = [];\n        }\n        var members = fList[key].members;\n        var dateMember = fList[key].dateMember;\n        if ((fList[key].isSelected || formulaFields.has(kl)) && !fList[key].isMembersFilled) {\n            var isDataAvail = Object.keys(members).length > 0;\n            var membersCnt = 0;\n            var isFieldHasExpandAll = fList[key].expandAll;\n            var isDateType = PivotUtil.isDateField(key, this);\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var memberkey = this.data[dl][this.fieldKeys[key]];\n                var mkey = memberkey;\n                mkey = this.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(mkey) : mkey;\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var formattedValue = isDateType ? this.getFormattedValue(mkey, key) : ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    });\n                    if (!Object.prototype.hasOwnProperty.call(members, mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll || isFieldHasExpandAll,\n                            caption: formattedValue.formattedText\n                        };\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: isDateType ?\n                                formattedValue.dateText : formattedValue.actualText });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                }\n                var memberName = isNullOrUndefined(memberkey) ? memberkey : fList[key].type === 'number' ?\n                    (!isNaN(Number(memberkey)) ? Number(memberkey) : undefined) : 1;\n                var valueMatrixInfo = {\n                    ordinal: members[mkey].ordinal,\n                    member: memberName\n                };\n                if (!(this.valueMatrix[dl])) {\n                    this.valueMatrix[dl] = [];\n                }\n                this.valueMatrix[dl][kl] = valueMatrixInfo;\n                // }\n            }\n            fList[key].isMembersFilled = true;\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function () {\n        var keys = this.fields;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        if (this.data.length - this.valueMatrix.length < 0) {\n            this.valueMatrix = this.valueMatrix.slice(0, this.data.length);\n        }\n        var formulaFields = new Set();\n        if (this.calculatedFormulas && Object.keys(this.calculatedFormulas).length > 0) {\n            for (var key in this.calculatedFormulas) {\n                if (fList[key] && fList[key].isSelected) {\n                    var calculatedFormulas = this.calculatedFormulas[key];\n                    for (var i = 0; i < calculatedFormulas.length; i++) {\n                        var values = calculatedFormulas[i];\n                        formulaFields.add(values.index);\n                    }\n                }\n            }\n        }\n        for (var kl = 0; kl < kLn; kl++) {\n            this.generateMembers(kl, formulaFields);\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    PivotEngine.prototype.generateValueMatrix = function () {\n        var keys = this.fields;\n        var len = this.data.length;\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len as number])) {\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                var field = flList[key];\n                if (field.isMembersFilled) {\n                    var fieldValue = this.data[len][this.fieldKeys[key]];\n                    this.valueMatrix[len][tkln].member =\n                        isNullOrUndefined(fieldValue) ? fieldValue : (field.type === 'number' ?\n                            (!isNaN(Number(fieldValue)) ? Number(fieldValue) : undefined) : 1);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.valueMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var isInclude = false;\n        var filter = [];\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln as number].filter ? cols[cln as number].filter.items : [];\n             if (filter.length && cols[cln as number].filter.type && cols[cln as number].filter.type === 'include') {\n                 //type = cols[cln as number].filter.type;\n                 this.frameFilterList(filter, cols[cln as number].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln as number].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.dataSourceSettings.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            isValidFilterElement = true;\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                if (fieldName === field.name) {\n                    isValidFilterElement = false;\n                    break;\n                }\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _b = 0, dataFields_2 = dataFields; _b < dataFields_2.length; _b++) {\n                var field = dataFields_2[_b];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            if (filterElement.type === 'Label') {\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ?\n                    new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ?\n                    new Date(filterElement.value2) : filterElement.value2;\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = PivotUtil.getFormattedMembers(field.members, name, this);\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (!isNullOrUndefined(filter[fln])) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        var allMember = extend({}, (type === 'row' && this.rowGrandTotal ? this.rowGrandTotal : type === 'column' && this.columnGrandTotal ? this.columnGrandTotal : (!(this.dataSourceSettings.grandTotalsPosition === 'Top') ? rows[rows.length - 1] : rows[0])), null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            if ((type === 'row' && this.rowGrandTotal === null) || (type === 'column' && this.columnGrandTotal === null)) {\n                rowFilterData.push(allMember);\n            }\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate, false) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate, false));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getValueCellInfo ? this.getCellSet(this.rawIndexObject) : [],\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (Object.prototype.hasOwnProperty.call(index, key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (Object.prototype.hasOwnProperty.call(index, key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.customProperties.isTabularLayout ? (this.rowMaxLevel + this.colValuesLength) :\n                        this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /**\n     * It is used to update the grid data.\n     *\n     * @param {IDataOptions} dataSource -  It contains the dataSourceSettings.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.updateDataSourceSettings(dataSource, true);\n        this.data = dataSource.dataSource;\n        if (this.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].dateMember = [];\n            this.fieldList[field].isMembersFilled = false;\n        }\n        this.fillFieldMembers();\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    PivotEngine.prototype.generateGridData = function (dataSource, requireDatasourceUpdate, isExport, headerCollection) {\n        if (requireDatasourceUpdate === void 0) { requireDatasourceUpdate = false; }\n        if (isNullOrUndefined(headerCollection) && this.customProperties.isTabularLayout) {\n            this.rowMaxLevel = 0;\n        }\n        this.updateDataSourceSettings(dataSource, requireDatasourceUpdate);\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        // let dataFields: IFieldOptions[] = extend([], this.dataSourceSettings.rows, null, true) as IFieldOptions[];\n        // dataFields = dataFields.concat(this.dataSourceSettings.columns, this.dataSourceSettings.values, this.dataSourceSettings.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.valueMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        this.validateValueFields();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.isLastHeaderHasMeasures = true;\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0 && values.length !== 0) {\n                    this.rMembers = this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                if (columns.length !== 0 && values.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ? filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        if (this.customProperties.isTabularLayout) {\n            this.showSubTotalsAtBottom = true;\n        }\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var updatedRowMembers = [];\n        var valuesCount = (this.dataSourceSettings.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders ? this.saveDataHeaders.rowHeaders : [];\n            var columnHeaders = this.saveDataHeaders.columnHeaders ? this.saveDataHeaders.columnHeaders : [];\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, (this.columnGrandTotal ? this.columnGrandTotal : (this.dataSourceSettings.grandTotalsPosition === 'Top' && this.dataSourceSettings.showGrandTotals) ? columnHeaders[0] : columnHeaders[columnHeaders.length - 1]), valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, (this.rowGrandTotal ? this.rowGrandTotal : (this.dataSourceSettings.grandTotalsPosition === 'Top' && this.dataSourceSettings.showGrandTotals) ? rowHeaders[0] : rowHeaders[rowHeaders.length - 1]), valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = PivotUtil.getClonedFieldList(this.fieldList);\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers();\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.filterMembers = [];\n            this.updateFilterMembers(dataSource);\n            this.isLastHeaderHasMeasures = true;\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.isPagingOrVirtualizationEnabled) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = this.customProperties.isTabularLayout ? this.rowCount + this.emptyRowsLength :\n                    headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        if (!this.valueAxis && this.isLastHeaderHasMeasures) {\n            this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        }\n        this.getHeaderData(rows, columns, values, updatedRowMembers, this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        this.getTableData((updatedRowMembers.length > 0 ? updatedRowMembers : this.rMembers), rowheads, colheads, 0, this.pivotValues, valuesCount, 0, (this.rowGrandTotal ? this.rowGrandTotal :\n            this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal :\n            this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        if (this.customProperties.isTabularLayout) {\n            this.pivotValues = this.getTabularPivotValues();\n            this.setRowSpan();\n            this.rowCount = this.rowCount - this.emptyRowsLength;\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n        this.clearProperties(isExport);\n    };\n    PivotEngine.prototype.updateHeaders = function (rowFlag, columnFlag) {\n        /* removing the row grant-total members */\n        rowFlag = (isNullOrUndefined(rowFlag) ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) ?\n            true : (this.dataSourceSettings.rows.length > 0) ? false : true : rowFlag);\n        if (((this.pageSettings && (this.removeRowGrandTotal)) || (!rowFlag && !this.rowGrandTotal)) &&\n            this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n            this.rMembers = this.rMembers.slice(0, this.rMembers.length - 1);\n        }\n        /* removing the column gran-total members */\n        columnFlag = (isNullOrUndefined(columnFlag) ? (this.dataSourceSettings.showGrandTotals &&\n            this.dataSourceSettings.showColumnGrandTotals) ? true : (this.dataSourceSettings.columns.length > 0) ? false : true :\n            columnFlag);\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) || (!columnFlag && !this.columnGrandTotal)) &&\n            this.cMembers[this.cMembers.length - 1].type === 'grand sum') {\n            this.cMembers = this.cMembers.slice(0, this.cMembers.length - 1);\n        }\n    };\n    PivotEngine.prototype.updatePivotValues = function (updateHeaders) {\n        var rowFlag = (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) ?\n            true : (this.dataSourceSettings.rows.length > 0) ? false : true;\n        var columnFlag = (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) ?\n            true : (this.dataSourceSettings.columns.length > 0) ? false : true;\n        if (updateHeaders) {\n            this.updateHeaders(rowFlag, columnFlag);\n        }\n        /* removing the row grant-totals */\n        if (((this.pageSettings && (this.removeRowGrandTotal)) ||\n            (!rowFlag && !this.rowGrandTotal)) && this.valueContent.length > 0) {\n            var slicePos = 1;\n            if (this.valueAxis && this.dataSourceSettings.values.length > 0) {\n                slicePos = 1 + this.dataSourceSettings.values.length;\n            }\n            if (this.pivotValues[this.pivotValues.length - slicePos] &&\n                this.pivotValues[this.pivotValues.length - slicePos][0].type === 'grand sum') {\n                this.pivotValues = this.pivotValues.slice(0, this.pivotValues.length - slicePos);\n                this.valueContent = this.valueContent.slice(0, this.valueContent.length - slicePos);\n            }\n        }\n        /* removing the column gran-totals */\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) ||\n            (!columnFlag && !this.columnGrandTotal)) && this.headerContent.length > 0) {\n            var slicePos = this.dataSourceSettings.values.length;\n            if (this.valueAxis && this.dataSourceSettings.values.length > 0) {\n                slicePos = 1;\n            }\n            if (this.pivotValues[0][this.pivotValues[0].length - slicePos] &&\n                this.pivotValues[0][this.pivotValues[0].length - slicePos].type === 'grand sum') {\n                for (var ln = 0; ln < this.pivotValues.length; ln++) {\n                    if (this.pivotValues[ln]) {\n                        this.pivotValues[ln] =\n                            this.pivotValues[ln].slice(0, this.pivotValues[ln].length - slicePos);\n                    }\n                    if (this.headerContent[ln]) {\n                        for (var pos = this.pivotValues[ln].length; pos < (this.pivotValues[ln].length + slicePos); pos++) {\n                            delete this.headerContent[ln][pos];\n                        }\n                    }\n                }\n            }\n        }\n        this.removeRowGrandTotal = this.removeColumnGrandTotal = false;\n    };\n    /**\n     * It performs the updateing Engine by the drilled item.\n     *\n     * @param {IDrilledItem} drilledItem -  It cotains the drilled items.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        if (!this.enableVirtualization && !this.enablePaging && this.customProperties.isTabularLayout) {\n            this.rowMaxLevel = 0;\n        }\n        this.frameDrillObject(drilledItem);\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /**\n     * It performs to update the engine by sorting data.\n     *\n     * @param {ISort} sortItem - It cotains the drilled item data.\n     * @param {IDataOptions} dataSource - It contains dataSource.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.onSort = function (sortItem, dataSource) {\n        if (dataSource) {\n            this.updateDataSourceSettings(dataSource, true);\n        }\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /**\n     * It performs to update the engine by filtering data.\n     *\n     * @param {IFilter} filterItem - It contains the value of filter Item.\n     * @param {IDataOptions} dataSource - It contains dataSource.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        this.updateDataSourceSettings(dataSource, true);\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        this.isLastHeaderHasMeasures = (this.valueAxis && headersInfo.axis === 'row') ||\n            (!this.valueAxis && headersInfo.axis === 'column') ? true : this.isLastHeaderHasMeasures;\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.dataSourceSettings.rows[0] && this.dataSourceSettings.rows[0].showNoDataItems) || (this.dataSourceSettings.columns[0] && this.dataSourceSettings.columns[0].showNoDataItems);\n        if (showNoDataItems && this.columnKeys[filterItem.name]) {\n            showNoDataItems = (this.dataSourceSettings.columns[0] && this.dataSourceSettings.columns[0].showNoDataItems) ? true : false;\n        }\n        else if (showNoDataItems && headersInfo.axis === 'row') {\n            showNoDataItems = (this.dataSourceSettings.rows[0] && this.dataSourceSettings.rows[0].showNoDataItems) ? true : false;\n        }\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.valueMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        if (this.customProperties.isTabularLayout) {\n            this.rowCount = this.rowCount - this.emptyRowsLength;\n        }\n        this.updateEngine();\n    };\n    /**\n     * It performs to update the engine by the aggregation.\n     *\n     * @param {IFieldOptions} field -  It cotains the field data.\n     * @param {IDataOptions} dataSource - It contains dataSource.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.onAggregation = function (field, dataSource) {\n        if (dataSource) {\n            this.updateDataSourceSettings(dataSource, true);\n        }\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.generateValueMatrix();\n        }\n        this.updateEngine();\n    };\n    /**\n     * It performs to update the engine by the calculated field operation.\n     *\n     * @param {ICalculatedFields} field -  It cotains the Calculated Fields.\n     * @param {IDataOptions} dataSourceSettings -  It cotains the dataSourceSettings.\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.onCalcOperation = function (field, dataSourceSettings) {\n        this.dataSourceSettings.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ?\n            dataSourceSettings.calculatedFieldSettings : [];\n        this.dataSourceSettings.values = dataSourceSettings.values ? dataSourceSettings.values : [];\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.dataSourceSettings.values.length - 1)) * this.dataSourceSettings.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.dataSourceSettings.values.length - 1)) * this.dataSourceSettings.values.length;\n            }\n        }\n        this.getFormattedFields(dataSourceSettings);\n        this.fillFieldMembers();\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                var levelName = headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                if (drilledItem.memberName === levelName.join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                            this.rowCount += (this.showSubTotalsAtBottom ? 1 : 0);\n                        }\n                        else {\n                            var showSubTotals = this.dataSourceSettings.showSubTotals &&\n                                this.dataSourceSettings.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                        if (drilledItem.axis === 'row') {\n                            this.rowCount -= (this.showSubTotalsAtBottom ? 1 : 0);\n                        }\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members =\n                    this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] === '' ? false :\n                        !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return (item.members.length > 0 || item.type === 'grand sum') ? true : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        if (headersInfo.axis === 'row' || headersInfo.axis === 'column') {\n            var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n            var filterObjects = {};\n            for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n                var item = _a[_i];\n                filterObjects[item] = item;\n            }\n            if (this.fieldFilterMem[filterItem.name]) {\n                rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n            }\n            if (addPos.length > 0 && headersInfo.fields.length > 0) {\n                this.frameHeaderObjectsCollection = true;\n                if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                    for (var i = 0; i < this.data.length; i++) {\n                        addPos.push(i);\n                    }\n                }\n                this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n                rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n                var headerNames_1 = {};\n                for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                    var header = rawHeaders_1[_b];\n                    headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n                }\n                var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                    return !headerNames_1[header.valueSort.levelName.toString()];\n                });\n                var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n                if (grandHeader.length > 0) {\n                    rawHeaders.pop();\n                }\n                rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n                if (headersInfo.axis === 'row') {\n                    this.cMembers = this.getIndexedHeaders(this.dataSourceSettings.columns, this.data, 0, this.filterMembers, 'column', '');\n                    this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                }\n                else {\n                    this.rMembers = this.getIndexedHeaders(this.dataSourceSettings.rows, this.data, 0, this.filterMembers, 'row', '');\n                    this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                }\n            }\n            if (headersInfo.axis === 'row') {\n                this.rowCount = 0;\n            }\n            else {\n                this.columnCount = 0;\n            }\n            this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n            if (headersInfo.axis === 'row') {\n                if (headersInfo.position > 0) {\n                    this.insertPosition(this.dataSourceSettings.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n                }\n                this.insertTotalPosition(rawHeaders);\n                this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n            }\n            else {\n                if (headersInfo.position > 0) {\n                    this.insertPosition(this.dataSourceSettings.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n                }\n                this.insertTotalPosition(rawHeaders);\n                this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n        }\n        else {\n            var showNoDataItems = (this.dataSourceSettings.rows[0] && this.dataSourceSettings.rows[0].showNoDataItems) || (this.dataSourceSettings.columns[0] && this.dataSourceSettings.columns[0].showNoDataItems);\n            this.rMembers = this.getIndexedHeaders(this.dataSourceSettings.rows, this.data, 0, showNoDataItems ? addPos : this.filterMembers, 'row', '');\n            this.cMembers = this.getIndexedHeaders(this.dataSourceSettings.columns, this.data, 0, showNoDataItems ? addPos : this.filterMembers, 'column', '');\n            this.insertAllMembersCommon();\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.updateHeadersCount(this.cMembers, 'column', 0, this.dataSourceSettings.columns, 'plus', false);\n            this.updateHeadersCount(this.rMembers, 'row', 0, this.dataSourceSettings.rows, 'plus', false);\n            if (showNoDataItems) {\n                this.insertPosition(this.dataSourceSettings.rows, this.data, 0, this.filterMembers, 'row', '', this.rMembers);\n                this.insertPosition(this.dataSourceSettings.columns, this.data, 0, this.filterMembers, 'column', '', this.cMembers);\n            }\n            this.headerCollection.rowHeaders = this.rMembers;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n            this.headerCollection.columnHeaders = this.cMembers;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /**\n     * It performs the updating engine.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotEngine.prototype.updateEngine = function () {\n        if (this.customProperties.isTabularLayout) {\n            this.rowCount = this.rowCount + this.emptyRowsLength;\n        }\n        this.removeCount = 0;\n        this.validateValueFields();\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var updatedRowMembers = [];\n        var valuesCount = (this.dataSourceSettings.values.length);\n        this.frameDrillObject();\n        this.getAggregatedHeaders(this.dataSourceSettings.rows, this.dataSourceSettings.columns, this.rMembers, this.cMembers, this.dataSourceSettings.values);\n        this.getHeaderData(this.dataSourceSettings.rows, this.dataSourceSettings.columns, this.dataSourceSettings.values, updatedRowMembers, this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        this.getTableData((updatedRowMembers.length > 0 ? updatedRowMembers : this.rMembers), rowheads, colheads, 0, this.pivotValues, valuesCount, 0, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        if (this.customProperties.isTabularLayout) {\n            this.pivotValues = this.getTabularPivotValues();\n            this.setRowSpan();\n            this.rowCount = this.rowCount - this.emptyRowsLength;\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.dataSourceSettings.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.dataSourceSettings.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.dataSourceSettings.showSubTotals && this.dataSourceSettings.showColumnSubTotals &&\n                (field ? field.showSubTotals : true);\n        }\n        else {\n            showSubTotals = this.dataSourceSettings.showSubTotals && this.dataSourceSettings.showRowSubTotals &&\n                (field ? field.showSubTotals : true);\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.dataSourceSettings.values.length : 1) :\n                    (this.valueAxis === 1 ? this.dataSourceSettings.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.dataSourceSettings.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.dataSourceSettings.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n                if (axis === 'row') {\n                    this.rowCount += this.showSubTotalsAtBottom && headers[lenCnt].hasChild && headers[lenCnt].isDrilled ? 1 : 0;\n                }\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /**\n     * It performs to retrieve the sorted headers.\n     *\n     * @param {IAxisSet[]} headers - It cotains the headers data.\n     * @param {string} sortOrder -  It cotains the ortOrder data\n     * @returns {IAxisSet[]} - return sorted headers as IAxisSet[].\n     * @hidden\n     */\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var fieldName = headers[0].actualText !== 'Grand Total' ? headers[0].valueSort.axis :\n            headers[1].valueSort.axis;\n        var isNotDateType = !(this.formatFields && this.formatFields[fieldName] &&\n            this.formatFields[fieldName].type);\n        var childrens = this.fieldList[fieldName];\n        if (isNotDateType) {\n            if (childrens && childrens.type === 'number' && headers.length > 0 && (typeof (headers[0].actualText) === 'string')) {\n                var stringValue = [];\n                var alphaNumbervalue = [];\n                var nullValue = [];\n                for (var i = 0; i < headers.length; i++) {\n                    if (isNaN(Number(headers[i].actualText.toString().charAt(0)))) {\n                        stringValue.push(headers[i]);\n                    }\n                    else if (headers[i].actualText === '') {\n                        nullValue.push(headers[i]);\n                    }\n                    else {\n                        alphaNumbervalue.push(headers[i]);\n                        break;\n                    }\n                }\n                if (alphaNumbervalue.length > 0) {\n                    alphaNumbervalue = this.sortHeaders(fieldName, childrens, headers, childrens.sort, childrens.isAlphanumeric);\n                }\n                return headers;\n            }\n            else {\n                return this.sortHeaders(fieldName, childrens, headers, sortOrder, childrens.type);\n            }\n        }\n        else {\n            return this.sortHeaders(fieldName, childrens, headers, sortOrder, 'date');\n        }\n    };\n    PivotEngine.prototype.sortHeaders = function (fieldName, childrens, sortMembersOrder, sortOrder, type) {\n        var isHeaderSortByDefault = false;\n        var membersInfo = this.fieldList[fieldName] && this.fieldList[fieldName].membersOrder ?\n            this.fieldList[fieldName].membersOrder.slice() : [];\n        var sortDetails = {\n            fieldName: fieldName,\n            sortOrder: sortOrder,\n            members: membersInfo && membersInfo.length > 0 ? membersInfo : Object.keys(childrens.members),\n            IsOrderChanged: false\n        };\n        type = (type === 'datetime' || type === 'date' || type === 'time') ? (this.formatFields[fieldName] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ? type : 'string' : type;\n        var isDateType = (type === 'datetime' || type === 'date' || type === 'time');\n        var isNumberGroupSorting = false;\n        if (this.dataSourceSettings.groupSettings.length > 0) {\n            var groupField = this.dataSourceSettings.groupSettings.filter(function (field) {\n                return field.name === childrens.id;\n            });\n            if (!isNullOrUndefined(groupField) && groupField.length > 0) {\n                isNumberGroupSorting = groupField[0].type.toLocaleLowerCase() === 'number' &&\n                    childrens.type.toLocaleLowerCase() === 'string';\n            }\n        }\n        if (membersInfo && membersInfo.length > 0) {\n            PivotUtil.applyCustomSort(sortDetails, sortMembersOrder, type);\n        }\n        else {\n            PivotUtil.applyHeadersSort(sortMembersOrder, sortOrder, type, isNumberGroupSorting);\n            isHeaderSortByDefault = true;\n        }\n        if (isHeaderSortByDefault && this.getHeaderSortInfo) {\n            var copyOrder = [];\n            for (var m = 0, n = 0; m < sortMembersOrder.length; m++) {\n                var member = sortMembersOrder[m];\n                var sortText = isDateType ?\n                    member.dateText : member.actualText;\n                if (member.actualText !== 'Grand Total') {\n                    copyOrder[n++] = sortText;\n                }\n            }\n            sortDetails.members = copyOrder;\n        }\n        if (this.getHeaderSortInfo) {\n            this.getHeaderSortInfo(sortDetails);\n        }\n        if (sortDetails.IsOrderChanged) {\n            PivotUtil.applyCustomSort(sortDetails, sortMembersOrder, type, true);\n        }\n        return sortMembersOrder;\n    };\n    /**\n     * It performs to applying  the value sorting.\n     *\n     * @param {IAxisSet[]} rMembers - It contains the row members data.\n     * @param {IAxisSet[]} cMembers - It contains the column members data.\n     * @returns {ISortedHeaders} - It return the sorted value as ISortedHeaders.\n     * @hidden\n     */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            this.valueSortHeaderText = undefined;\n            if (this.enableValueSorting && this.valueSortSettings.headerText && !this.valueSortHeaderText &&\n                this.valueSortSettings.headerText !== '' && this.dataSourceSettings.values.length > 0) {\n                this.valueSortHeaderText = this.valueSortSettings.headerText;\n                var textArray = this.valueSortHeaderText.split(this.valueSortSettings.headerDelimiter);\n                for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    var name_1 = field.caption ? field.caption : field.name;\n                    var valueIndex = textArray.indexOf(name_1);\n                    if (valueIndex > -1) {\n                        textArray.splice(valueIndex, 1);\n                        textArray.push(name_1);\n                        this.valueSortHeaderText = textArray.join(this.valueSortSettings.headerDelimiter);\n                        break;\n                    }\n                }\n            }\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.valueSortHeaderText) {\n            var textArray = this.valueSortHeaderText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.dataSourceSettings.values.length; i++) {\n                if (this.dataSourceSettings.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.dataSourceSettings.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.dataSourceSettings.values.length === 1 && this.dataSourceSettings.columns.length === 0) ||\n                this.dataSourceSettings.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.dataSourceSettings.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortHeaderText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.dataSourceSettings.values[0].name].index;\n                mType = this.fieldList[this.dataSourceSettings.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.isPagingOrVirtualizationEnabled) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType, false);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getValueCellInfo ? this.getCellSet(this.rawIndexObject) : [],\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        rMembers = PivotUtil.getSortedValue(aggreColl, sortOrder);\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        this.rowGrandTotal = this.columnGrandTotal = null;\n        var rowFlag = (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) ? true :\n            (this.dataSourceSettings.rows.length > 0) ? false : true;\n        var columnFlag = (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) ?\n            true : (this.dataSourceSettings.columns.length > 0) ? false : true;\n        if (this.isValueHasAdvancedAggregate) {\n            /* inserting the row grant-total members */\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n            if (rowFlag) {\n                this.rowCount += this.rowValuesLength;\n            }\n            /* inserting the column gran-total members */\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n            if (columnFlag) {\n                this.columnCount += this.colValuesLength;\n            }\n        }\n        else {\n            if (rowFlag) {\n                /* inserting the row grant-total members */\n                this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                this.rowCount += this.rowValuesLength;\n            }\n            else {\n                this.rowGrandTotal = this.insertAllMember([], this.filterMembers, '', 'row')[0];\n            }\n            if (columnFlag) {\n                /* inserting the column gran-total members */\n                this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                this.columnCount += this.colValuesLength;\n            }\n            else {\n                this.columnGrandTotal = this.insertAllMember([], this.filterMembers, '', 'column')[0];\n            }\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                var startIndex = 1;\n                var lastIndex = this.showSubTotalsAtTop ? this.reformAxisCount : colLength;\n                var colCnt = this.showSubTotalsAtTop ? startIndex : lastIndex - 1;\n                var columnSpan = void 0;\n                var memberCnt = void 0;\n                while (startIndex < lastIndex) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = this.showSubTotalsAtTop ? savedCell.colIndex + (spanCnt - 1) :\n                                savedCell.colIndex - (spanCnt - 1);\n                        }\n                        if (this.showSubTotalsAtTop) {\n                            columnSpan = memberCnt = this.getMemberSpanCount(this.pivotValues[rowCnt], colCnt);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            var curentCell = this.pivotValues[rowCnt][colCnt];\n                            if (!curentCell.isDrilled && !(!this.valueAxis && !this.isLastHeaderHasMeasures && (curentCell.members\n                                && curentCell.members.length > 0 && rowPos > this.measureIndex))) {\n                                curentCell.rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] =\n                                this.headerContent[rowPos][colCnt] = {\n                                    type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                        (cell.formattedText + ' Total')), axis: 'column', hierarchyName: cell.hierarchyName,\n                                    level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                                };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                curentCell.rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (curentCell.type !== 'sum' && (curentCell.isDrilled || (this.valueAxisFields[curentCell.actualText] &&\n                                !this.valueAxis && !this.isLastHeaderHasMeasures && curentCell.members && curentCell.members.length > 0))) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (curentCell.type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] =\n                            this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index =\n                            this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject =\n                            this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        if (this.showSubTotalsAtTop) {\n                            memberCnt--;\n                            rowCells[colCnt].colSpan = memberCnt;\n                            rowCells[colCnt].colIndex = rowCells[colCnt].colIndex + (spanCnt - 1);\n                        }\n                        else {\n                            rowCells[colCnt].colSpan = spanCnt;\n                            rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                        }\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        if (this.showSubTotalsAtTop) {\n                            savedCell.colSpan = columnSpan;\n                            savedCell.colIndex = savedCell.colIndex + (spanCnt - 1);\n                        }\n                        else {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                    }\n                    if (this.showSubTotalsAtTop && (rowCells[colCnt + 1] || colCnt + 1 === this.reformAxisCount)) {\n                        var cell_1 = this.pivotValues[rowCnt][(colCnt - spanCnt) + 1];\n                        cell_1.colSpan = columnSpan;\n                        this.pivotValues[rowCnt][(colCnt - spanCnt) + 1] = cell_1;\n                    }\n                    colCnt = this.showSubTotalsAtTop ? colCnt + 1 : colCnt - 1;\n                    startIndex++;\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getMemberSpanCount = function (rowCellArray, cellIndex) {\n        var colIndex = 1;\n        for (var i = cellIndex + 1; i < this.reformAxisCount; i++) {\n            if (!rowCellArray[i]) {\n                colIndex++;\n            }\n            else {\n                break;\n            }\n        }\n        return colIndex;\n    };\n    PivotEngine.prototype.frameDrillObject = function (vDrilledItem) {\n        if (vDrilledItem === void 0) { vDrilledItem = null; }\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            var hasValueField = false;\n            var levelCount = 1;\n            var isFieldAvail = false;\n            var field = this.fieldList[drillOption.name];\n            var isDrillMemberExpand = (field && field.expandAll);\n            for (var i = 0; i < this.dataSourceSettings.rows.length; i++) {\n                if (this.dataSourceSettings.rows[i].name === drillOption.name) {\n                    var hasMeasureIndex = this.valueAxis && (this.isMultiMeasures ||\n                        this.dataSourceSettings.alwaysShowValueHeader) && this.measureIndex > -1 && this.measureIndex <= i;\n                    levelCount = (hasMeasureIndex ? (i + 1) : i) + 1;\n                    hasValueField = hasMeasureIndex ? true : false;\n                    isFieldAvail = true;\n                    break;\n                }\n            }\n            if (!isFieldAvail) {\n                for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                    if (this.dataSourceSettings.columns[i].name === drillOption.name) {\n                        var hasMeasureIndex = !this.valueAxis && (this.isMultiMeasures ||\n                            this.dataSourceSettings.alwaysShowValueHeader) && this.measureIndex > -1 && this.measureIndex <= i;\n                        levelCount = (hasMeasureIndex ? (i + 1) : i) + 1;\n                        hasValueField = hasMeasureIndex ? true : false;\n                        isFieldAvail = true;\n                        break;\n                    }\n                }\n            }\n            for (var _i = 0, _a = drillOption.items; _i < _a.length; _i++) {\n                var drilledItem = _a[_i];\n                var members = drilledItem.split(drillOption.delimiter);\n                if (levelCount === members.length) {\n                    var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                        members.join(this.valueSortSettings.headerDelimiter);\n                    this.fieldDrillCollection[memberString] = memberString;\n                    if (hasValueField) {\n                        var isAllValuesAvail = false;\n                        if (this.isExpandAll || isDrillMemberExpand) {\n                            for (var _b = 0, _c = this.dataSourceSettings.values; _b < _c.length; _b++) {\n                                var field_1 = _c[_b];\n                                var name_2 = field_1.caption ? field_1.caption : field_1.name;\n                                members[this.measureIndex] = name_2;\n                                if (drillOption.items.indexOf(members.join(drillOption.delimiter)) > -1) {\n                                    isAllValuesAvail = true;\n                                }\n                                else {\n                                    isAllValuesAvail = false;\n                                    break;\n                                }\n                            }\n                        }\n                        if (((this.isExpandAll || isDrillMemberExpand) && isAllValuesAvail) || !this.isExpandAll || !isDrillMemberExpand) {\n                            members = drilledItem.split(drillOption.delimiter);\n                            members.splice(this.measureIndex, 1);\n                            if (vDrilledItem && vDrilledItem.memberName === drilledItem) {\n                                vDrilledItem.memberName = members.join(drillOption.delimiter);\n                            }\n                            memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                                members.join(this.valueSortSettings.headerDelimiter);\n                            this.fieldDrillCollection[memberString] = memberString;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        var keysPos = 0;\n        if (keys && keys.length > 0) {\n            keysPos++;\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            if (isNullOrUndefined(this.reportDataType)) {\n                this.reportDataType = {};\n                for (var i = 0; i < this.dataSourceSettings.rows.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.rows[i].name] =\n                        this.dataSourceSettings.rows[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.columns[i].name] =\n                        this.dataSourceSettings.columns[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.values.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.values[i].name] =\n                        this.dataSourceSettings.values[i].dataType;\n                }\n            }\n            childrens.type = !isNullOrUndefined(this.reportDataType[childrens.id]) ? this.reportDataType[childrens.id] : childrens.type;\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.dataSourceSettings.showHeaderWhenEmpty ||\n                        (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            if (axis === this.dataSourceSettings.valueAxis && this.measureIndex === keyInd &&\n                (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                this.isLastHeaderHasMeasures = false;\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                this.rowMaxLevel = (axis === 'row' && this.rowMaxLevel < keyInd) ? keyInd : this.rowMaxLevel;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.valueMatrix[position[pos]][childrens.index].ordinal;\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][this.fieldKeys[fieldName]];\n                headerValue = this.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(headerValue) : headerValue;\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.dataSourceSettings.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } : {\n                    formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                        headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                            this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                            String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                        this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                        (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                            this.localeObj.getConstant('undefined') : String(headerValue)) : headerValue\n                };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd as number];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var isFiltered = false;\n                if (showNoDataItems && childrens.filter.length > 0 && childrens.filterType === 'include') {\n                    isFiltered = true;\n                }\n                if ((!(decisionObj && decisionObj[memInd])) && (!isFiltered ||\n                    (isFiltered && childrens.filter.indexOf(headerValue.toString()) > -1))) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                        member.valueSort.uniqueName = parentMember + this.valueSortSettings.headerDelimiter +\n                            (member.actualText ? member.actualText : member.formattedText);\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + (member.actualText ?\n                            member.actualText : member.formattedText)] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                        member.valueSort[member.actualText ? member.actualText : member.formattedText] = 1;\n                        member.valueSort.uniqueName = (member.actualText ? member.actualText : member.formattedText);\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    var isExpandMember = this.isExpandAll || (field && field.expandAll);\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ? true :\n                        (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                            isExpandMember ? (!this.valueAxis && !this.isLastHeaderHasMeasures && (keysPos >= this.measureIndex) ?\n                                true : false) : true : isExpandMember;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += (this.rowValuesLength + (hierarchy[iln].isDrilled && hierarchy[iln].hasChild && this.showSubTotalsAtBottom ? 1 : 0));\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.dataSourceSettings.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0) {\n                    if (showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                        Object.keys(this.fieldList[keys[keyInd + 1].name].members).length > 0) {\n                        hierarchy[iln].hasChild = true;\n                    }\n                    else {\n                        var hIndLen = hierarchy[iln].index.length;\n                        var count = 0;\n                        for (var len = 0; len < hIndLen; len++) {\n                            var headerValue = data[hierarchy[iln].index[len]][this.fieldKeys[keys[keyInd + 1].name]];\n                            if ((isNullOrUndefined(headerValue) || (this.localeObj &&\n                                headerValue === this.localeObj.getConstant('undefined')))) {\n                                count++;\n                            }\n                        }\n                        hierarchy[iln].hasChild = count !== hIndLen;\n                    }\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.dataSourceSettings.showSubTotals && this.dataSourceSettings.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember, valueFil);\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return this.sortHeaders(fieldName, childrens, hierarchy, childrens.sort, 'date');\n                }\n                else {\n                    if (childrens.type.toLowerCase() === 'number' && hierarchy.length > 0 && (typeof (hierarchy[0].actualText) === 'string') && hierarchy[0].actualText.match(/[a-zA-Z]+/g)) {\n                        var stringValue = [];\n                        var outOfRange = void 0;\n                        var alphaNumbervalue = [];\n                        var nullValue = [];\n                        for (var i = 0; i < hierarchy.length; i++) {\n                            if (isNullOrUndefined(hierarchy[i].actualText.toString().match(/\\d+/))) {\n                                stringValue.push(hierarchy[i]);\n                                if (!outOfRange && childrens.sort !== 'None') {\n                                    if (hierarchy[i].actualText === 'Out of Range') {\n                                        outOfRange = hierarchy[i];\n                                        hierarchy.splice(i, 1);\n                                    }\n                                }\n                            }\n                            else if (hierarchy[i].actualText === '') {\n                                nullValue.push(hierarchy[i]);\n                            }\n                            else {\n                                this.fieldList[fieldName].isAlphanumeric = true;\n                                alphaNumbervalue.push(hierarchy[i]);\n                                break;\n                            }\n                        }\n                        if (outOfRange) {\n                            if (childrens.sort === 'Ascending') {\n                                if (hierarchy[0].actualText === 'Grand Total') {\n                                    hierarchy.splice(1, 0, outOfRange);\n                                }\n                                else {\n                                    hierarchy.splice(0, 0, outOfRange);\n                                }\n                            }\n                            else {\n                                if (hierarchy[hierarchy.length - 1].actualText === 'Grand Total') {\n                                    hierarchy.splice(hierarchy.length - 1, 0, outOfRange);\n                                }\n                                else {\n                                    hierarchy.splice(hierarchy.length, 0, outOfRange);\n                                }\n                            }\n                        }\n                        if (alphaNumbervalue.length > 0) {\n                            this.sortHeaders(fieldName, childrens, hierarchy, childrens.sort, childrens.isAlphanumeric);\n                        }\n                        return hierarchy;\n                    }\n                    else {\n                        return this.sortHeaders(fieldName, childrens, hierarchy, childrens.sort, childrens.type);\n                    }\n                }\n            }\n            else {\n                return hierarchy;\n            }\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.valueMatrix[position[pos]][childrens.index].ordinal;\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var value = data[position[pos]][this.fieldKeys[field]];\n                value = value === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(value)) : value;\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(value, field) : { formattedText: value.toString(), actualText: value.toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.uniqueName = parentMember + this.valueSortSettings.headerDelimiter +\n                            (slicedHeader.actualText ? slicedHeader.actualText : slicedHeader.formattedText);\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            (slicedHeader.actualText ? slicedHeader.actualText : slicedHeader.formattedText)] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                        slicedHeader.valueSort[(slicedHeader.actualText ? slicedHeader.actualText : slicedHeader.formattedText)] = 1;\n                        slicedHeader.valueSort.uniqueName =\n                            (slicedHeader.actualText ? slicedHeader.actualText : slicedHeader.formattedText);\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    hierarchy[iln].members = this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            summCell.indexObject = {};\n            for (var ln = 0, lt = this.filterMembers.length; ln < lt; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.isPagingOrVirtualizationEnabled) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.dataSourceSettings.values.length;\n            }\n            else {\n                this.colValuesLength = this.dataSourceSettings.values.length;\n            }\n            this.columnPageCount = Math.ceil(this.columnCount / this.pageSettings.columnPageSize);\n            this.rowPageCount = Math.ceil(this.rowCount / this.pageSettings.rowPageSize);\n            this.pageSettings.currentColumnPage = this.pageSettings.currentColumnPage >= this.columnPageCount ||\n                (this.enableOptimizedRendering && this.pageSettings.currentColumnPage > 1 &&\n                    ((this.pageSettings.currentColumnPage + 1) * this.colValuesLength) >= this.columnPageCount) ?\n                this.columnPageCount : this.pageSettings.currentColumnPage;\n            this.pageSettings.currentRowPage = this.pageSettings.currentRowPage >= this.rowPageCount ||\n                (this.enableOptimizedRendering && this.pageSettings.currentRowPage > 1 &&\n                    ((this.pageSettings.currentRowPage + 1) * this.rowValuesLength) >= this.rowPageCount) ?\n                this.rowPageCount : this.pageSettings.currentRowPage;\n            var requirePageCount = this.enablePaging ? 1 : this.enableOptimizedRendering ? 1.5 : 3;\n            this.memberCnt = this.enablePaging ? 0 : -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.currentRowPage * this.pageSettings.rowPageSize) -\n                (this.pageSettings.rowPageSize)) * (this.enablePaging ? 1 : this.rowValuesLength) + (this.enablePaging ? 1 : 0);\n            var exactStartPos = this.enablePaging ? this.rowStartPos :\n                (this.rowStartPos + (this.pageSettings.rowPageSize * requirePageCount * this.rowValuesLength)) > this.rowCount ?\n                    (this.rowCount - (this.pageSettings.rowPageSize * requirePageCount * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.currentRowPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowPageSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowPageSize * requirePageCount * (this.enablePaging ? 1 :\n                this.rowValuesLength)) - (this.enablePaging ? 1 : 0);\n            this.endPos = this.endPos > (this.rowCount + 1) ? (this.rowCount + 1) : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = this.enablePaging ? 0 : -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.currentColumnPage * this.pageSettings.columnPageSize) -\n                (this.pageSettings.columnPageSize)) * (this.enablePaging ? 1 : this.colValuesLength) + (this.enablePaging ? 1 : 0);\n            exactStartPos = this.enablePaging ? this.colStartPos : (this.colStartPos + (this.pageSettings.columnPageSize *\n                requirePageCount * this.colValuesLength)) > this.columnCount ? (this.columnCount - (this.pageSettings.columnPageSize *\n                requirePageCount * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.currentColumnPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnPageSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnPageSize * requirePageCount *\n                (this.enablePaging ? 1 : this.colValuesLength)) - (this.enablePaging ? 1 : 0);\n            this.endPos = this.endPos > (this.columnCount + 1) ? (this.columnCount + 1) : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n            if (this.isValueHasAdvancedAggregate) {\n                if (this.rMembers[this.rMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1].type === 'grand sum') {\n                    this.rMembers.push(this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1]);\n                    this.removeRowGrandTotal = true;\n                }\n                if (this.cMembers[this.cMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1].type === 'grand sum') {\n                    this.cMembers.push(this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1]);\n                    this.removeColumnGrandTotal = true;\n                }\n            }\n            else {\n                this.rowGrandTotal = this.rowGrandTotal ? this.rowGrandTotal :\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1];\n                this.columnGrandTotal = this.columnGrandTotal ? this.columnGrandTotal :\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1];\n            }\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            if (this.enablePaging && this.endPos <= this.memberCnt && pos !== 0) {\n                break;\n            }\n            this.memberCnt += headers[pos].level <= this.measureIndex ? (axis === 'column' ? this.colValuesLength : this.rowValuesLength) : 1;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit && !this.enablePaging) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ?\n                this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    this.memberCnt -= !(this.dataSourceSettings.showSubTotals && this.dataSourceSettings.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ?\n                        this.colValuesLength : 0;\n                }\n                else if (this.showSubTotalsAtBottom) {\n                    this.memberCnt++;\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        var grandTotalSet = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            actualText: 'Grand' + customText,\n            formattedText: this.localeObj ? this.localeObj.getConstant('grandTotal') : ('Grand' + customText),\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        grandTotalSet.valueSort[grandTotalSet.formattedText] = 1;\n        grandTotalSet.valueSort.levelName = grandTotalSet.formattedText;\n        grandTotalSet.valueSort[grandTotalSet.actualText] = 1;\n        grandTotalSet.valueSort.uniqueName = grandTotalSet.actualText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            grandTotalSet.indexObject[filter[ln]] = filter[ln];\n        }\n        if (this.dataSourceSettings.grandTotalsPosition === 'Top' && this.dataSourceSettings.showGrandTotals) {\n            set.unshift(grandTotalSet);\n        }\n        else {\n            set.push(grandTotalSet);\n        }\n        // if (axis === 'row') {\n        //     this.rowCount += this.rowValuesLength;\n        // } else {\n        //     this.columnCount += this.colValuesLength;\n        // }\n        return set;\n    };\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, pIndex, data, vlt, level, rTotal, cTotal, valueParentIndex) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            var tnum = (!this.valueAxis && !this.isLastHeaderHasMeasures && data.length <\n                (this.dataSourceSettings.columns.length + 1)) ? (this.dataSourceSettings.columns.length + 1) : data.length;\n            var row = rows[rln];\n            reformAxis[tnum] = row;\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            var isLeastNode = !reformAxis[tnum].members.length;\n            row.colIndex = 0;\n            row.rowIndex = tnum;\n            var isRowFieldsAvail = false;\n            var delimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter;\n            if (this.valueAxis && this.dataSourceSettings.rows.length === 0 && this.dataSourceSettings.values.length > 1) {\n                this.rowIndex = (isNullOrUndefined(this.rowIndex) && !isLeastNode &&\n                    this.dataSourceSettings.rows.length === 0) ? row.index : this.rowIndex;\n                isRowFieldsAvail = (this.valueAxis && this.dataSourceSettings.rows.length === 0 && row.valueSort.levelName &&\n                    row.valueSort.levelName.toString().indexOf('Grand Total' + delimiter) !== 0);\n                if (this.valueAxis && this.dataSourceSettings.rows.length === 0 &&\n                    row.valueSort.levelName.toString().indexOf('Grand Total' + delimiter) === 0) {\n                    row.index = this.rowIndex;\n                }\n            }\n            if (!isRowFieldsAvail) {\n                var isValue = false;\n                if (this.showSubTotalsAtBottom && reformAxis[pIndex] && reformAxis[pIndex].hasChild) {\n                    var axis = void 0;\n                    for (var _i = 0, _a = reformAxis[pIndex].members; _i < _a.length; _i++) {\n                        axis = _a[_i];\n                        if (axis.type === 'value') {\n                            isValue = true;\n                            break;\n                        }\n                    }\n                }\n                if (isValue && !reformAxis[tnum].isSum && reformAxis[tnum].members &&\n                    reformAxis[tnum].members.length === 0) {\n                    continue;\n                }\n                if (!data[tnum]) {\n                    data[tnum] = [];\n                    this.valueContent[actCnt] = {};\n                }\n                data[tnum][0] = reformAxis[tnum]\n                    = this.valueContent[actCnt][0] = PivotUtil.getFormattedHeader(row, this);\n                if (this.valueAxis && (this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    var hPos = tnum;\n                    var actpos = actCnt;\n                    var rowIndex = tnum;\n                    var isValueCellUpdated = false;\n                    if ((((!(level === 0 && this.measureIndex === 0) && !isLeastNode) || isLeastNode) && row.type === 'value' && !row.valueSort.axis) ||\n                        (level > this.measureIndex && row.axis === 'row' && row.valueSort.axis)) {\n                        var vln = 0;\n                        var isValueIndexFound = false;\n                        var rowUniqueName = row.valueSort.uniqueName ?\n                            row.valueSort.uniqueName.toString().split(this.valueSortSettings.headerDelimiter) : [];\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            if (!isValueIndexFound) {\n                                for (vln = 0; vln < vlt; vln++) {\n                                    if (rowUniqueName.indexOf(this.dataSourceSettings.values[vln].name) > -1) {\n                                        isValueIndexFound = true;\n                                        isValueCellUpdated = true;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (level > this.measureIndex && row.axis === 'row' && row.valueSort.axis) {\n                                this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                            }\n                            else {\n                                if (!reformAxis[pIndex]) {\n                                    isValueCellUpdated = false;\n                                    break;\n                                }\n                                var parentIndex = this.showSubTotalsAtBottom && valueParentIndex ? valueParentIndex : pIndex;\n                                this.updateRowData(reformAxis, columns, tnum, data, vln, parentIndex, cln, dln, actCnt, rTotal, cTotal);\n                            }\n                            dln = data[tnum].length;\n                        }\n                    }\n                    if (!isValueCellUpdated) {\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            dln = data[tnum].length;\n                            data[hPos][dln] = this.valueContent[actpos][dln] = {\n                                axis: 'value', actualText: '', colSpan: 1,\n                                colIndex: dln, formattedText: '', hasChild: false\n                            };\n                        }\n                    }\n                    this.recursiveRowData(rows, reformAxis, columns, rowIndex, data, vlt, isLeastNode, rln, vlt, level, rTotal, cTotal);\n                }\n                else {\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        var columnUniqueName = columns[cln].valueSort.uniqueName ?\n                            columns[cln].valueSort.uniqueName.toString().split(this.valueSortSettings.headerDelimiter) : [];\n                        for (var vln = 0; vln < vlt; vln++) {\n                            if (!this.valueAxis && !this.isLastHeaderHasMeasures) {\n                                if (columnUniqueName.indexOf(this.dataSourceSettings.values[vln].name) > -1) {\n                                    this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                                    dln = data[tnum].length;\n                                }\n                            }\n                            else {\n                                this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                                dln = data[tnum].length;\n                            }\n                        }\n                    }\n                    this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, level, rTotal, cTotal);\n                }\n            }\n            else if (!isLeastNode) {\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, level, rTotal, cTotal);\n            }\n        }\n    };\n    PivotEngine.prototype.insertRowSubTotals = function (reformAxis, columns, tnum, data, vlt, level, rTotal, cTotal) {\n        var isValueAxis = reformAxis[tnum].type ? reformAxis[tnum].type === 'value' &&\n            reformAxis[tnum].valueSort.levelName !== reformAxis[tnum].actualText : false;\n        if (reformAxis[tnum].hasChild && reformAxis[tnum].members.length > 0) {\n            var parentIndexes = [];\n            var subTotal = PivotUtil.frameHeaderWithKeys(reformAxis[tnum]);\n            if (reformAxis[tnum].members[0].type === 'value') {\n                var startIndex = 0;\n                var valueCells = [];\n                var i = 1;\n                for (var _i = 0, _a = subTotal.members; _i < _a.length; _i++) {\n                    var axis = _a[_i];\n                    if (axis.type === 'value') {\n                        valueCells[valueCells.length] = axis;\n                    }\n                }\n                while (startIndex < valueCells.length) {\n                    var valueCell = PivotUtil.frameHeaderWithKeys(valueCells[startIndex]);\n                    var index = void 0;\n                    for (i; i < reformAxis.length; i++) {\n                        if (reformAxis[i] && reformAxis[i].valueSort.levelName === valueCell.valueSort.levelName) {\n                            index = reformAxis.indexOf(reformAxis[i]);\n                            break;\n                        }\n                    }\n                    if (index > -1) {\n                        parentIndexes[parentIndexes.length] = index;\n                    }\n                    valueCell.formattedText = subTotal.formattedText + ' ' + valueCell.formattedText;\n                    valueCell.isSum = true;\n                    valueCell.members = [];\n                    this.getTableData([valueCell], reformAxis, columns, tnum, data, vlt, level, rTotal, cTotal);\n                    startIndex++;\n                }\n            }\n            else {\n                subTotal.formattedText = subTotal.formattedText + ' Total';\n                subTotal.members = [];\n                subTotal.isDrilled = false;\n                subTotal.hasChild = false;\n                subTotal.isSum = true;\n                subTotal.type = 'sum';\n                var parentIndex = isValueAxis ? this.getParentIndex(reformAxis, subTotal) : 0;\n                this.getTableData([subTotal], reformAxis, columns, tnum, data, vlt, level, rTotal, cTotal, parentIndex);\n                parentIndexes = [tnum];\n            }\n            for (var index = 0; index < parentIndexes.length; index++) {\n                var parentInfo = data[parentIndexes[index]];\n                parentInfo = parentInfo.map(function (dataValue) {\n                    dataValue.formattedText = dataValue.colIndex === 0 ? dataValue.formattedText : '';\n                    return dataValue;\n                });\n                data[parentIndexes[index]] = parentInfo;\n            }\n        }\n    };\n    PivotEngine.prototype.getParentIndex = function (reformAxis, axis) {\n        var parentIndex = 0;\n        for (var i = reformAxis.length - 1; i > 0; i--) {\n            if (axis.level === reformAxis[i].level && reformAxis[i].index) {\n                parentIndex = i;\n                break;\n            }\n        }\n        return parentIndex;\n    };\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader) &&\n                            columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader) &&\n                            columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                var level = i >= this.measureIndex ? i + 1 : i;\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, level);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    var level = i;\n                                    if (!this.valueAxis && !this.isLastHeaderHasMeasures) {\n                                        level = i >= this.measureIndex ? i + 1 : i;\n                                    }\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, level);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split(this.valueSortSettings.headerDelimiter);\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            var actualHeaders = [];\n                            if (!isChildren && type === 'row') {\n                                for (var _a = 0, headers_2 = headers; _a < headers_2.length; _a++) {\n                                    var header = headers_2[_a];\n                                    if (header.level >= rln.level) {\n                                        actualHeaders.push(header);\n                                    }\n                                }\n                            }\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : (type === 'column' ? headers : actualHeaders)), vln + 1));\n                            if (rln.members.length > 0) {\n                                var isValuesAvail = false;\n                                var members = [];\n                                if (type === 'row') {\n                                    for (var _b = 0, _c = rln.members; _b < _c.length; _b++) {\n                                        var member = _c[_b];\n                                        if (member.type === 'value' && member.members.length === 0) {\n                                            isValuesAvail = true;\n                                        }\n                                        else {\n                                            members.push(member);\n                                            isValuesAvail = false;\n                                            break;\n                                        }\n                                    }\n                                }\n                                if ((!isValuesAvail && members.length > 0) || type === 'column') {\n                                    this.getAggregatedHeaderData(type === 'column' ? rln.members : members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                                }\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if ((rln.valueSort.levelName.split(this.valueSortSettings.headerDelimiter).length - 1) === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _d = 0, _e = rln.members; _d < _e.length; _d++) {\n                                            var member = _e[_d];\n                                            aggregateHeaders.push(extend({}, member, null, true));\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(extend({}, rln, null, true));\n                                    }\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: extend([], headers, null, true),\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var rowIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            var actualText = data[rln][cln].actualText;\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    var isTotal = this.showSubTotalsAtBottom && data[rln][0].isDrilled &&\n                        data[rln][0].hasChild;\n                    if (!isTotal) {\n                        if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                            this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                            rowIndex.push(rln);\n                            for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                                var index = colIndex_1[_i];\n                                pivotIndex[rln + ',' + index] = [rln, index];\n                            }\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, rowIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n            this.updatePivotValues(true);\n        }\n        else {\n            return;\n        }\n    };\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, rowIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_3 = headers.value;\n            // let valueCount: number = (this.valueAxis && (this.isMutiMeasures || this.dataSourceSettings.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var _a = 0, rowIndex_1 = rowIndex; _a < rowIndex_1.length; _a++) {\n                            var rln = rowIndex_1[_a];\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    if (this.valueAxis === 0 || (this.valueAxis && data[rln] && data[rln][1] &&\n                                        data[rln][1].actualText === name_3)) {\n                                        selectedRowValues = data[rln];\n                                    }\n                                    else {\n                                        selectedRowValues = [];\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_5 = data.length, i = 0; i < len_5; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined && axisObj[cln].axis === 'value' && this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (selectedColumnValues.length === 0 && rowindexCollection.length === 0) {\n                            for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                var isSelectedColumn = false;\n                                if (activeColumn[cln] !== undefined &&\n                                    activeColumn[cln].valueSort.levelName.indexOf(uniqueName) === 0) {\n                                    activeValues = activeColumn[cln];\n                                    for (var lnt = data.length, j = 0; j < lnt; j++) {\n                                        var axisObj = data[j];\n                                        if (axisObj !== undefined && axisObj[0] !== undefined && axisObj[cln].axis === 'value' && this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                            isSelectedColumn = true;\n                                            // selectedColumnValues[i as number] = axisObj[cln as number] as IAxisSet;\n                                            rowindexCollection.push(j);\n                                        }\n                                    }\n                                    if (isSelectedColumn) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _b = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _b < selectedHeaderCollection_1.length; _b++) {\n                                    var item = selectedHeaderCollection_1[_b];\n                                    for (var _c = 0, rowIndex_2 = rowIndex; _c < rowIndex_2.length; _c++) {\n                                        var rln = rowIndex_2[_c];\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _d = 0, colIndex_2 = colIndex; _d < colIndex_2.length; _d++) {\n                                                    var index = colIndex_2[_d];\n                                                    var currentSet = data[rln][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                        indexCollection.push([rln, index]);\n                                                        if (pivotIndex[rln + ',' + index]) {\n                                                            delete pivotIndex[rln + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var _e = 0, rowIndex_3 = rowIndex; _e < rowIndex_3.length; _e++) {\n                                    var rlen = rowIndex_3[_e];\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 && activeValues &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _f = 0, colIndex_3 = colIndex; _f < colIndex_3.length; _f++) {\n                                                var index = colIndex_3[_f];\n                                                var currentSet = data[rlen][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                    indexCollection.push([rlen, index]);\n                                                    if (pivotIndex[rlen + ',' + index]) {\n                                                        delete pivotIndex[rlen + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _g = 0, indexCollection_2 = indexCollection; _g < indexCollection_2.length; _g++) {\n                                var index = indexCollection_2[_g];\n                                var currentSet = data[index[0]][index[1]];\n                                var actualValue = isNullOrUndefined(selectedRowValues[index[1]].actualValue) ? 0 : selectedRowValues[index[1]].actualValue;\n                                // let cVal: number = currentSet.value - (selectedRowValues[index[1]] as IAxisSet).value;\n                                var cVal = (isNullOrUndefined(currentSet.actualValue) ? 0 : currentSet.actualValue) - actualValue;\n                                cVal = isNaN(cVal) ? 0 : (currentSet.value === 0 && selectedRowValues[index[1]].value === 0) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent :\n                                        this.getFormattedValue(cVal, name_3).formattedText;\n                                }\n                                else {\n                                    // cVal = ((selectedRowValues[index[1]] as IAxisSet).value === 0 ?\n                                    // 0 : (cVal / (selectedRowValues[index[1]] as IAxisSet).value));\n                                    cVal = (actualValue === 0 ? 0 : (cVal / actualValue));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = currentSet.showSubTotals ? (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: this.getPercentFormat(this.formatFields, currentSet.actualText) }) : this.emptyCellTextContent) : currentSet.formattedText;\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _h = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _h < selectedHeaderCollection_2.length; _h++) {\n                                    var item = selectedHeaderCollection_2[_h];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] && activeValues &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _j = 0, rowindexCollection_1 = rowindexCollection; _j < rowindexCollection_1.length; _j++) {\n                                                var index = rowindexCollection_1[_j];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _k = 0, rowindexCollection_2 = rowindexCollection; _k < rowindexCollection_2.length; _k++) {\n                                                var index = rowindexCollection_2[_k];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedColumn = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedColumn = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _l = 0, indexCollection_3 = indexCollection; _l < indexCollection_3.length; _l++) {\n                                var index = indexCollection_3[_l];\n                                var currentSet = data[index[0]][index[1]];\n                                var selectedColumnValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColumnValue = this.getAggregateValue(selectedRow.index, selectedColumn.indexObject, this.fieldList[name_3].index, headers.type, false);\n                                }\n                                else {\n                                    selectedColumnValue = selectedColumnValues[index[0]].value;\n                                }\n                                var cVal = currentSet.value - selectedColumnValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent :\n                                        this.getFormattedValue(cVal, name_3).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: this.getPercentFormat(this.formatFields, currentSet.actualText) }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, rowIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _m = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _m < selectedHeaderCollection_3.length; _m++) {\n                                var item = selectedHeaderCollection_3[_m];\n                                for (var _o = 0, rowIndex_4 = rowIndex; _o < rowIndex_4.length; _o++) {\n                                    var i = rowIndex_4[_o];\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _p = 0, colIndex_4 = colIndex; _p < colIndex_4.length; _p++) {\n                                                var index = colIndex_4[_p];\n                                                var currentSet = data[i][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                    indexCollection.push([i, index]);\n                                                    if (pivotIndex[i + ',' + index]) {\n                                                        delete pivotIndex[i + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _q = 0, indexCollection_4 = indexCollection; _q < indexCollection_4.length; _q++) {\n                                var i = indexCollection_4[_q];\n                                var currentSet = data[i[0]][i[1]];\n                                // let cVal: number = currentSet.value / (selectedRowValues[i[1]] as IAxisSet).value;\n                                var selectedRowValue = 0;\n                                if (selectedRowValues.length === 0 && activeValues) {\n                                    selectedRowValue = this.getAggregateValue(activeValues.index, colheads[i[1] - 1].indexObject, this.fieldList[name_3].index, headers.type, false);\n                                }\n                                else {\n                                    selectedRowValue = selectedRowValues[i[1]] ? selectedRowValues[i[1]].actualValue : 0;\n                                }\n                                var cVal = currentSet.value / selectedRowValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = currentSet.showSubTotals ? (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: this.getPercentFormat(this.formatFields, currentSet.actualText) }) : this.emptyCellTextContent) : currentSet.formattedText;\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _r = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _r < selectedHeaderCollection_4.length; _r++) {\n                                var item = selectedHeaderCollection_4[_r];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _s = 0, rowindexCollection_3 = rowindexCollection; _s < rowindexCollection_3.length; _s++) {\n                                            var index = rowindexCollection_3[_s];\n                                            var isTotals = this.showSubTotalsAtBottom && data[index][0].isDrilled && data[index][0].hasChild;\n                                            if (!isTotals) {\n                                                var currentSet = data[index][j];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, j]);\n                                                    if (pivotIndex[index + ',' + j]) {\n                                                        delete pivotIndex[index + ',' + j];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedCol = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedCol = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _t = 0, indexCollection_5 = indexCollection; _t < indexCollection_5.length; _t++) {\n                                var i = indexCollection_5[_t];\n                                var currentSet = data[i[0]][i[1]];\n                                var selectedColValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColValue = this.getAggregateValue(selectedRow.index, selectedCol.indexObject, this.fieldList[name_3].index, headers.type, false);\n                                }\n                                else {\n                                    selectedColValue = selectedColumnValues[i[0]].value;\n                                }\n                                var val = currentSet.value / selectedColValue;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: this.getPercentFormat(this.formatFields, currentSet.actualText) }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _u = 0, colIndex_5 = colIndex; _u < colIndex_5.length; _u++) {\n                                var index = colIndex_5[_u];\n                                var cVal = 0;\n                                for (var _v = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _v < selectedHeaderCollection_5.length; _v++) {\n                                    var item = selectedHeaderCollection_5[_v];\n                                    for (var _w = 0, rowIndex_5 = rowIndex; _w < rowIndex_5.length; _w++) {\n                                        var rlen = rowIndex_5[_w];\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] && rowheads[rlen].level === item.level && currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += (!currentSet.showSubTotals && !(!isNullOrUndefined(currentSet.actualValue) && isNaN(currentSet.actualValue))) ?\n                                                        currentSet.actualValue : (!isNullOrUndefined(currentSet.value) &&\n                                                        !isNaN(currentSet.value)) ? currentSet.value : null;\n                                                    currentSet.formattedText = currentSet.showSubTotals ? (cVal === 0 &&\n                                                        (currentSet.actualValue && currentSet.actualValue !== 0) ? '' :\n                                                        this.getFormattedValue(cVal, name_3).formattedText) : currentSet.formattedText;\n                                                    if (!this.aggregatedValueMatrix[rlen]) {\n                                                        this.aggregatedValueMatrix[rlen] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + ',' + index]) {\n                                                    delete pivotIndex[rlen + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var _x = 0, rowIndex_6 = rowIndex; _x < rowIndex_6.length; _x++) {\n                                var rln = rowIndex_6[_x];\n                                if (data[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _y = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _y < selectedHeaderCollection_6.length; _y++) {\n                                        var item = selectedHeaderCollection_6[_y];\n                                        var subTotal = (rowheads[rln].hasChild && rowheads[rln].isDrilled &&\n                                            ((!isNullOrUndefined(rowheads[rln].showSubTotals) &&\n                                                !rowheads[rln].showSubTotals) || !this.dataSourceSettings.showSubTotals ||\n                                                !this.dataSourceSettings.showRowSubTotals));\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_3) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    if (!isNullOrUndefined(currentSet.value)) {\n                                                        cVal += currentSet.value;\n                                                    }\n                                                    currentSet.formattedText = subTotal ? '' : this.getFormattedValue(cVal, name_3).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln]) {\n                                                        this.aggregatedValueMatrix[rln] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + ',' + cln]) {\n                                                    delete pivotIndex[rln + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getSelectedColumn = function (name, colheads) {\n        var set = { axis: 'column', index: [], indexObject: {} };\n        for (var _i = 0, colheads_1 = colheads; _i < colheads_1.length; _i++) {\n            var head = colheads_1[_i];\n            if (head && head.valueSort && head.valueSort.levelName.indexOf(name) === 0) {\n                set.index = set.index.concat(head.index).sort(function (a, b) { return a - b; });\n                set.indexObject = __assign({}, set.indexObject, head.indexObject);\n            }\n        }\n        return set;\n    };\n    PivotEngine.prototype.getSelectedRow = function (name, rowheads) {\n        for (var _i = 0, rowheads_1 = rowheads; _i < rowheads_1.length; _i++) {\n            var head = rowheads_1[_i];\n            if (head) {\n                if (head.valueSort && head.valueSort.levelName === name) {\n                    return head;\n                }\n                else if (name === '' && head.type === 'grand sum') {\n                    return head;\n                }\n            }\n        }\n        return null;\n    };\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, level, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum].members, reformAxis, columns, tnum, data, vlt, level + 1, rTotal, cTotal);\n        }\n        if (this.showSubTotalsAtBottom && (!isNullOrUndefined(rows[rln].showSubTotals) ? rows[rln].showSubTotals : true)) {\n            this.insertRowSubTotals(reformAxis, columns, tnum, data, vlt, level, rTotal, cTotal);\n        }\n        if (!this.isPagingOrVirtualizationEnabled) {\n            reformAxis[tnum].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.dataSourceSettings.values[vln].name].index;\n        var aggregate = this.fieldList[this.dataSourceSettings.values[vln].name].aggregateType;\n        var field = this.dataSourceSettings.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        var actualValue = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [\n                        [rows[rln], columns[cln]], [rows[rln], cTotal],\n                        [rTotal, columns[cln]], [rTotal, cTotal]\n                    ];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate, i === 0 ? false : true);\n                        i++;\n                    }\n                    var val = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && rows[rln].hasChild && rows[rln].isDrilled &&\n                        ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                            !this.dataSourceSettings.showRowSubTotals || !this.dataSourceSettings.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val) ? 0 : val));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val) ? 0 : val));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] :\n                        [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate, i === 0 ? false : true);\n                        i++;\n                    }\n                    var val = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && rows[rln].hasChild && rows[rln].isDrilled &&\n                        ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                            !this.dataSourceSettings.showSubTotals || !this.dataSourceSettings.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val) ? 0 : val));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val) ? 0 : val));\n                }\n                break;\n            default:\n                {\n                    var val = this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate, false);\n                    value = (rows[rln].members.length > 0 && rows[rln].hasChild && rows[rln].isDrilled &&\n                        ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                            !this.dataSourceSettings.showSubTotals || !this.dataSourceSettings.showRowSubTotals)) ? undefined : val;\n                    actualValue = val;\n                }\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.dataSourceSettings.values[vln].name, row: rows[rln], column: columns[cln],\n            value: value,\n            cellSets: this.getValueCellInfo ? this.getCellSet(this.rawIndexObject) : [],\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate, skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild || rows[rln].type === 'grand sum' ||\n            columns[cln].type === 'grand sum' || (this.showSubTotalsAtBottom && rows[rln].isSum);\n        var isGrand = rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && rows[rln].hasChild &&\n            rows[rln].isDrilled && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.dataSourceSettings.showSubTotals || !this.dataSourceSettings.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            (aggregate === 'Count' || aggregate === 'DistinctCount') ? value.toLocaleString() :\n                this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) && (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: this.getPercentFormat(this.formatFields, cellDetails.fieldName) });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n            value = 0;\n        }\n        //dln = data[tnum as number].length;\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ?\n            this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: value,\n            hierarchyName: columns[cln].hierarchyName,\n            actualValue: actualValue,\n            rowIndex: tnum, colIndex: dln, isSum: isSum, isGrandSum: isGrand, showSubTotals: !subTotal\n        };\n        this.rawIndexObject = {};\n    };\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.updateValueMembers = function (hasMeasureIndex, headerInfo, levelInfo, columnHeaders, axis, vcnt, levelIndex) {\n        var levelName = levelInfo && !isNullOrUndefined(levelInfo.levelName) ? levelInfo.levelName.toString() : undefined;\n        var uniqueName = levelInfo && !isNullOrUndefined(levelInfo.uniqueName) ? levelInfo.uniqueName.toString() : undefined;\n        if (hasMeasureIndex) {\n            for (var vln = 0; vln < vcnt; vln++) {\n                var field = this.dataSourceSettings.values[vln];\n                var name_4 = field.caption ? field.caption : field.name;\n                var calObj = {\n                    axis: this.valueAxis ? 'row' : 'column',\n                    rowIndex: !this.valueAxis ? (headerInfo && levelIndex <= headerInfo.rowIndex ?\n                        (headerInfo.rowIndex + 1) : levelIndex) : 0,\n                    actualText: field.name,\n                    formattedText: name_4,\n                    level: 0,\n                    valueSort: {},\n                    // colIndex: (tnum) + 1 + vln,\n                    // rowIndex: this.measureIndex,\n                    members: [],\n                    type: this.valueAxis ? 'value' : (headerInfo ? headerInfo.type : null),\n                    index: !this.valueAxis && headerInfo ? headerInfo.index : null,\n                    indexObject: !this.valueAxis && headerInfo ? headerInfo.indexObject : null\n                };\n                if (axis.length > 0) {\n                    calObj.showSubTotals = field.showSubTotals;\n                }\n                var vData = calObj.valueSort;\n                vData.axis = !this.valueAxis ? field.name : undefined;\n                vData[(levelName ? (levelName + this.valueSortSettings.headerDelimiter) : '') + name_4] = 1;\n                vData[(uniqueName ? (uniqueName + this.valueSortSettings.headerDelimiter) : '') + field.name] = 1;\n                vData.levelName = (levelName ? (levelName + this.valueSortSettings.headerDelimiter) : '') + name_4;\n                vData.uniqueName = (uniqueName ? (uniqueName + this.valueSortSettings.headerDelimiter) : '') + field.name;\n                columnHeaders.push(calObj);\n                this.updateValueMembers(false, headerInfo, vData, calObj.members, axis, vcnt, levelIndex + 1);\n            }\n        }\n        else {\n            for (var rln = 0, rlt = axis.length; rln < rlt; rln++) {\n                var header = PivotUtil.frameHeaderWithKeys(axis[rln]);\n                header.members = [];\n                header.rowIndex = !this.valueAxis ? (levelIndex < 0 ? 0 : levelIndex) : header.rowIndex;\n                var hData = {};\n                hData.axis = header.valueSort.axis;\n                hData[(levelName ? (levelName + this.valueSortSettings.headerDelimiter) : '') + header.formattedText] = 1;\n                hData[(uniqueName ? (uniqueName + this.valueSortSettings.headerDelimiter) : '') + header.actualText] = 1;\n                hData.levelName = (levelName ? (levelName + this.valueSortSettings.headerDelimiter) : '') + header.formattedText;\n                hData.uniqueName = (uniqueName ? (uniqueName + this.valueSortSettings.headerDelimiter) : '') + header.actualText;\n                header.hierarchyName = header.valueSort.uniqueName;\n                header.valueSort = hData;\n                var drillInfo = hData.axis + this.valueSortSettings.headerDelimiter + hData.levelName;\n                var isFieldValueHeader = this.fieldList[hData.axis];\n                if (header.isDrilled && (((this.isExpandAll || isFieldValueHeader.expandAll) &&\n                    this.fieldDrillCollection[drillInfo]) || ((!this.isExpandAll && !isFieldValueHeader.expandAll) &&\n                    !this.fieldDrillCollection[drillInfo]))) {\n                    header.isDrilled = false;\n                }\n                columnHeaders.push(header);\n                if (header.isDrilled && axis[rln].members.length > 0) {\n                    if (this.valueAxis && levelIndex < this.measureIndex && this.measureIndex !== (levelIndex + 1) && (!(axis[rln].hasChild &&\n                        ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                            !this.dataSourceSettings.showSubTotals || !this.dataSourceSettings.showRowSubTotals)))) {\n                        this.updateValueMembers(true, header, hData, columnHeaders[columnHeaders.length - 1].members, [], vcnt, levelIndex);\n                    }\n                    this.updateValueMembers(this.measureIndex === (levelIndex + 1), header, hData, columnHeaders[columnHeaders.length - 1].members, axis[rln].members, vcnt, levelIndex + 1);\n                    if (!this.valueAxis && levelIndex < this.measureIndex && this.measureIndex !== (levelIndex + 1) &&\n                        (!(axis[rln].hasChild && ((!isNullOrUndefined(axis[rln].showSubTotals) &&\n                            !axis[rln].showSubTotals) || !this.dataSourceSettings.showSubTotals ||\n                            !this.dataSourceSettings.showColumnSubTotals)))) {\n                        this.updateValueMembers(true, header, hData, columnHeaders[columnHeaders.length - 1].members, [], vcnt, levelIndex);\n                    }\n                }\n                else if (levelIndex < this.measureIndex) {\n                    this.updateValueMembers(true, header, hData, columnHeaders[columnHeaders.length - 1].members, [], vcnt, levelIndex);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.reArrangeValueMember = function (member) {\n        var valueAxis = [];\n        for (var _i = 0, member_1 = member; _i < member_1.length; _i++) {\n            var axis = member_1[_i];\n            if (this.valueAxisFields[axis.actualText]) {\n                valueAxis[valueAxis.length] = axis;\n            }\n        }\n        return valueAxis.concat(member).slice(0, member.length);\n    };\n    PivotEngine.prototype.frameDefinedHeaderData = function (axis, reformAxis, data, levelIndex, tnum, vcnt) {\n        // let sortText: string = this.valueSortSettings.headerText;\n        for (var rln = 0, rlt = axis.length; rln < rlt; rln++) {\n            var showSubTotals = true;\n            if (axis[rln].members.length > 0 && ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.dataSourceSettings.showSubTotals || !this.dataSourceSettings.showColumnSubTotals)) {\n                showSubTotals = false;\n            }\n            var index = (this.measureIndex < levelIndex && showSubTotals ? 1 : ((this.measureIndex > levelIndex &&\n                axis[rln].members.length > 0) || !(this.measureIndex === (levelIndex + 1) &&\n                axis[rln].isDrilled) ? ((this.measureIndex === levelIndex && this.measureIndex !== 0 && showSubTotals) ? 1 : ((this.measureIndex > levelIndex && showSubTotals && axis[rln].valueSort &&\n                axis[rln].valueSort.axis && this.measureNames[axis[rln].valueSort.axis.toString()]) ? 1 : 0)) : (this.measureIndex === 0 || !showSubTotals ? 0 : 1)));\n            if (axis[rln].members.length) {\n                var pos = void 0;\n                var members = axis[rln].members;\n                if (this.showSubTotalsAtTop) {\n                    if (levelIndex + 1 < this.measureIndex && showSubTotals) {\n                        pos = tnum;\n                        members = this.reArrangeValueMember(members);\n                    }\n                    else {\n                        pos = tnum + index;\n                    }\n                }\n                else {\n                    pos = tnum;\n                }\n                this.frameDefinedHeaderData(members, reformAxis, data, levelIndex + 1, pos, vcnt);\n            }\n            // let lvl: number = axis[rln as number].level;\n            // axis[rln as number].rowIndex = lvl;\n            var level = this.measureIndex > levelIndex && axis[rln].valueSort &&\n                axis[rln].valueSort.axis && this.measureNames[axis[rln].valueSort.axis.toString()] ?\n                this.measureIndex : levelIndex;\n            tnum = this.showSubTotalsAtTop ? tnum + 1 : reformAxis.length + index;\n            if (!reformAxis[tnum - 1]) {\n                reformAxis[tnum - 1] = PivotUtil.frameHeaderWithKeys(axis[rln]);\n            }\n            axis[rln].colIndex = tnum;\n            if (!data[level]) {\n                data[level] = [];\n                this.headerContent[level] = {};\n                data[level][tnum] = this.headerContent[level][tnum]\n                    = PivotUtil.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[level][tnum] = this.headerContent[level][tnum]\n                    = PivotUtil.frameHeaderWithKeys(axis[rln]);\n            }\n            if (!this.isPagingOrVirtualizationEnabled && (this.showSubTotalsAtTop ? index !== 0 : true)) {\n                if (reformAxis[tnum - 1]) {\n                    reformAxis[tnum - 1].members = [];\n                }\n            }\n            if (this.showSubTotalsAtTop) {\n                tnum = reformAxis.length;\n                if (rln + 1 === rlt && axis[rln].level === 0) {\n                    this.reformAxisCount = reformAxis.length + 1;\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getHeaderData = function (rows, columns, values, rowAxis, axis, reformAxis, data, tnum, vcnt) {\n        if (!this.valueAxis && !this.isLastHeaderHasMeasures) {\n            var columnHeaders = [];\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals && axis[axis.length - 1].type === 'grand sum') {\n                this.updateValueMembers(this.measureIndex === 0 && axis.length > 1, null, null, columnHeaders, axis.slice(0, axis.length - 1), vcnt, 0);\n                this.updateValueMembers(false, null, null, columnHeaders, axis.slice(axis.length - 1, axis.length), vcnt, -1);\n            }\n            else if (this.dataSourceSettings.grandTotalsPosition === 'Top' && this.dataSourceSettings.showGrandTotals && this.measureIndex === 0) {\n                this.updateValueMembers(false, null, null, columnHeaders, axis.slice(0, 1), vcnt, -1);\n                this.updateValueMembers(this.measureIndex === 0 && axis.length > 1, null, null, columnHeaders, axis.slice(1, axis.length), vcnt, 0);\n            }\n            else {\n                var hasColumnTotal = columns.length === 0 && axis.length === 1 && axis[0].type === 'grand sum';\n                this.updateValueMembers(!hasColumnTotal && this.measureIndex === 0, null, null, columnHeaders, axis, vcnt, hasColumnTotal ? -1 : 0);\n            }\n            this.getAggregatedHeaders(rows, columns, this.rMembers, columnHeaders, values);\n            if (this.selectedHeaders.values.length > 0) {\n                for (var clt = this.selectedHeaders.selectedHeader.length, i = 0; i < clt; i++) {\n                    var headerData = this.selectedHeaders.selectedHeader[i];\n                    if (headerData.axis === 'column') {\n                        if (headerData.uniqueName === headerData.value) {\n                            this.selectedHeaders.selectedHeader.splice(i, 1);\n                            i--;\n                            clt--;\n                        }\n                        else if (headerData.uniqueName === 'Grand Total') {\n                            for (var clt_1 = headerData.aggregateHeaders.length, j = 0; j < clt_1; j++) {\n                                if (headerData.aggregateHeaders[j] &&\n                                    headerData.aggregateHeaders[j].members.length > 0) {\n                                    for (var _i = 0, _a = headerData.aggregateHeaders[j].members; _i < _a.length; _i++) {\n                                        var member = _a[_i];\n                                        if (member.actualText === headerData.value) {\n                                            headerData.aggregateHeaders[j] = member;\n                                            if (member.type === 'grand sum') {\n                                                headerData.uniqueName = member.valueSort.levelName;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            this.frameDefinedHeaderData(columnHeaders, reformAxis, data, 0, this.showSubTotalsAtTop ? 0 : 1, vcnt);\n            return;\n        }\n        else if (rowAxis.length === 0 && (this.valueAxis && (this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader)) &&\n            this.dataSourceSettings.values.length > 0) {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals &&\n                this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n                this.updateValueMembers(this.measureIndex === 0 && this.rMembers.length > 1, null, null, rowAxis, this.rMembers.slice(0, this.rMembers.length - 1), this.dataSourceSettings.values.length, 0);\n                this.updateValueMembers(false, null, null, rowAxis, this.rMembers.slice(this.rMembers.length - 1, this.rMembers.length), this.dataSourceSettings.values.length, -1);\n            }\n            else if (this.dataSourceSettings.grandTotalsPosition === 'Top' && this.dataSourceSettings.showGrandTotals && this.measureIndex === 0) {\n                this.updateValueMembers(false, null, null, rowAxis, this.rMembers.slice(0, 1), this.dataSourceSettings.values.length, -1);\n                this.updateValueMembers(this.measureIndex === 0 && this.rMembers.length > 1, null, null, rowAxis, this.rMembers.slice(1, this.rMembers.length), this.dataSourceSettings.values.length, 0);\n            }\n            else {\n                var hasRowTotal = rows.length === 0 && this.rMembers.length === 1 && this.rMembers[0].type === 'grand sum';\n                this.updateValueMembers(!hasRowTotal && this.measureIndex === 0, null, null, rowAxis, this.rMembers, this.dataSourceSettings.values.length, hasRowTotal ? -1 : 0);\n            }\n            this.getAggregatedHeaders(rows, columns, rowAxis, axis, values);\n            if (this.selectedHeaders.values.length > 0) {\n                for (var clt = this.selectedHeaders.selectedHeader.length, i = 0; i < clt; i++) {\n                    var headerData = this.selectedHeaders.selectedHeader[i];\n                    if (headerData.axis === 'row') {\n                        for (var clt_2 = headerData.aggregateHeaders.length, j = 0; j < clt_2; j++) {\n                            if (headerData.aggregateHeaders[j].actualText === headerData.value) {\n                                if (headerData.aggregateHeaders[j].valueSort.levelName.indexOf(headerData.uniqueName) !== -1) {\n                                    headerData.uniqueName = headerData.aggregateHeaders[j].valueSort.levelName;\n                                    headerData.aggregateHeaders.splice(j, 1);\n                                    j--;\n                                    clt_2--;\n                                }\n                                else {\n                                    for (var count = headerData.aggregateHeaders[j].members.length, k = 0; k < count; k++) {\n                                        var member = headerData.aggregateHeaders[j].members[k];\n                                        if (member.type !== 'value' && member.level ===\n                                            headerData.aggregateHeaders[j].level) {\n                                            var members = extend([], headerData.aggregateHeaders[j].members, null, true);\n                                            headerData.aggregateHeaders = [].concat(headerData.aggregateHeaders, members, headerData.aggregateHeaders.splice(j));\n                                            headerData.aggregateHeaders.splice(members.length + j, 1);\n                                            j = (members.length + j) - 1;\n                                            clt_2 = headerData.aggregateHeaders.length;\n                                        }\n                                    }\n                                }\n                            }\n                            else if (headerData.aggregateHeaders[j].actualText !== headerData.value &&\n                                headerData.aggregateHeaders[j].members.length > 0) {\n                                for (var count = headerData.aggregateHeaders[j].members.length, k = 0; k < count; k++) {\n                                    var member = headerData.aggregateHeaders[j].members[k];\n                                    if (member.actualText === headerData.value) {\n                                        if (headerData.uniqueName ===\n                                            headerData.aggregateHeaders[j].valueSort.levelName) {\n                                            headerData.uniqueName = member.valueSort.levelName;\n                                        }\n                                        headerData.aggregateHeaders[j].members.splice(k, 1);\n                                        headerData.aggregateHeaders[j] = member;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var rlt = axis.length;\n        var colItmLn = this.dataSourceSettings.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.dataSourceSettings.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            var isHidden = !isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals;\n            if (axis[rln].members.length) {\n                this.getHeaderData(rows, columns, values, rowAxis, axis[rln].members, reformAxis, data, this.showSubTotalsAtTop && !isHidden ? tnum + 1 : tnum, vcnt);\n            }\n            var isTotalHide = true;\n            tnum = this.showSubTotalsAtTop ? tnum : reformAxis.length;\n            if (isHidden || !this.dataSourceSettings.showSubTotals || !this.dataSourceSettings.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[this.showSubTotalsAtTop ? tnum : reformAxis.length] = PivotUtil.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = this.showSubTotalsAtTop ? tnum : reformAxis.length - 1;\n            }\n            else {\n                reformAxis[tnum] = PivotUtil.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            var index = (tnum * vcnt) + (this.showSubTotalsAtTop ? 1 : vcnt);\n            axis[rln].colIndex = index;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n            }\n            data[lvl][index] = this.headerContent[lvl][index] =\n                PivotUtil.getFormattedHeader(axis[rln], this);\n            var isSingleMeasure = (this.dataSourceSettings.columns.length === 0 &&\n                this.dataSourceSettings.values.length === 1) ? true : false;\n            if ((this.isMultiMeasures || this.dataSourceSettings.alwaysShowValueHeader || isSingleMeasure) &&\n                !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_5 = this.dataSourceSettings.values[vln].caption ?\n                        this.dataSourceSettings.values[vln].caption : this.dataSourceSettings.values[vln].name;\n                    var calObj = {\n                        axis: 'column', actualText: this.dataSourceSettings.values[vln].name, formattedText: name_5, level: 0, valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln, rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] =\n                            this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] =\n                            this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_5] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_5;\n                    vData[axis[rln].valueSort.uniqueName + this.valueSortSettings.headerDelimiter +\n                        this.dataSourceSettings.values[vln].name] = 1;\n                    vData.uniqueName = axis[rln].valueSort.uniqueName +\n                        this.valueSortSettings.headerDelimiter + this.dataSourceSettings.values[vln].name;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.isPagingOrVirtualizationEnabled) {\n                reformAxis[tnum].members = [];\n            }\n            if (this.showSubTotalsAtTop) {\n                tnum = reformAxis.length;\n                if (axis[rln].level === 0 && rln + 1 === rlt) {\n                    this.reformAxisCount = (reformAxis.length * vcnt) + 1;\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type, isGrandTotal) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        //let clt: number = columnIndex.length;\n        var ri = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        switch (type.toLowerCase()) {\n            case 'median':\n                {\n                    var values = [];\n                    var position = 0;\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined) {\n                            isValueExist = true;\n                            this.rawIndexObject[index] = index;\n                            if (!isNullOrUndefined(this.valueMatrix[index][value].member)) {\n                                values.push(this.valueMatrix[index][value].member);\n                            }\n                        }\n                        ri++;\n                    }\n                    var len = values.length;\n                    if (len > 0) {\n                        values.sort(function (a, b) { return a - b; });\n                        if (len % 2 === 0) {\n                            position = (len / 2) <= 1 ? 0 : ((len / 2) - 1);\n                            cellValue = (values[position] + values[position + 1]) / 2;\n                        }\n                        else {\n                            position = (len + 1) / 2 <= 1 ? 0 : (((len + 1) / 2) - 1);\n                            cellValue = values[position];\n                        }\n                    }\n                }\n                break;\n            case 'count':\n                {\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined) {\n                            isValueExist = true;\n                            this.rawIndexObject[index] = index;\n                            cellValue += (isNullOrUndefined(this.valueMatrix[index][value].member) ?\n                                0 : (this.allowDataCompression ? this.valueMatrix[index][value].member : 1));\n                        }\n                        ri++;\n                    }\n                }\n                break;\n            case 'distinctcount':\n                {\n                    var duplicateValues = [];\n                    while (rowIndex[ri] !== undefined) {\n                        if (columnIndex[rowIndex[ri]] !== undefined) {\n                            this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                            isValueExist = true;\n                            var val = (this.data[rowIndex[ri]][this.fieldKeys[this.fields[value]]]);\n                            // let currentVal: number = this.valueMatrix[rowIndex[ri as number]][value as number];\n                            if (!isNullOrUndefined(val)) {\n                                var currentVal = val.toString();\n                                if (duplicateValues.length === 0 || (duplicateValues.length > 0 &&\n                                    duplicateValues.indexOf(currentVal) === -1)) {\n                                    cellValue += (this.allowDataCompression && typeof val === 'number') ? val : 1;\n                                    duplicateValues.push(currentVal);\n                                }\n                            }\n                        }\n                        ri++;\n                    }\n                }\n                break;\n            case 'product':\n                {\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined) {\n                            this.rawIndexObject[index] = index;\n                            isValueExist = true;\n                            var currentVal = this.valueMatrix[index][value].member;\n                            if (!isNullOrUndefined(currentVal)) {\n                                cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                                cellValue *= currentVal;\n                            }\n                            else if (isInit) {\n                                cellValue = currentVal;\n                            }\n                            isInit = false;\n                        }\n                        ri++;\n                    }\n                }\n                break;\n            case 'populationstdev':\n            case 'samplestdev':\n            case 'populationvar':\n            case 'samplevar':\n                {\n                    var i = 0;\n                    var val = 0;\n                    var indexVal = [];\n                    var avgVal = 0;\n                    var cVal = 0;\n                    var avgDifferenceVal = 0;\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined) {\n                            isValueExist = true;\n                            this.rawIndexObject[index] = index;\n                            var currentVal = this.valueMatrix[index][value].member;\n                            if (!isNullOrUndefined(currentVal)) {\n                                val += currentVal;\n                                indexVal.push(currentVal);\n                                i++;\n                            }\n                        }\n                        ri++;\n                    }\n                    if (i > 0) {\n                        avgVal = val / i;\n                        for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                            var index = indexVal_1[_i];\n                            avgDifferenceVal += Math.pow((index - avgVal), 2);\n                        }\n                        if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                            cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                        }\n                        else {\n                            cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                        }\n                        cellValue = (cVal === 0 ? NaN : cVal);\n                    }\n                    else {\n                        cellValue = val;\n                    }\n                }\n                break;\n            case 'min':\n                {\n                    var isFirst = true;\n                    cellValue = undefined;\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined &&\n                            this.valueMatrix[index][value].member !== undefined) {\n                            isValueExist = true;\n                            this.rawIndexObject[index] = index;\n                            if (isNullOrUndefined(cellValue) &&\n                                isNullOrUndefined(this.valueMatrix[index][value].member)) {\n                                cellValue = this.valueMatrix[index][value].member;\n                            }\n                            else {\n                                if (isFirst) {\n                                    cellValue = this.valueMatrix[index][value].member;\n                                    isFirst = false;\n                                }\n                                else {\n                                    cellValue = this.valueMatrix[index][value].member < cellValue ?\n                                        this.valueMatrix[index][value].member : cellValue;\n                                }\n                            }\n                        }\n                        ri++;\n                    }\n                }\n                break;\n            case 'max':\n                {\n                    var isMaxFirst = true;\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined &&\n                            this.valueMatrix[index][value].member !== undefined) {\n                            isValueExist = true;\n                            this.rawIndexObject[index] = index;\n                            if (isMaxFirst) {\n                                cellValue = this.valueMatrix[index][value].member;\n                                isMaxFirst = false;\n                            }\n                            else {\n                                cellValue = this.valueMatrix[index][value].member > cellValue ?\n                                    this.valueMatrix[index][value].member : cellValue;\n                            }\n                        }\n                        ri++;\n                    }\n                }\n                break;\n            case 'calculatedfield':\n                {\n                    isValueExist = true;\n                    var calcField = this.calculatedFields[this.fields[value]];\n                    var actualFormula = calcField.formula;\n                    var aggregateField = {};\n                    if (this.calculatedFormulas[calcField.name]) {\n                        var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                        for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                            var aggregatedValue = calculatedFormulas[len];\n                            var value_1 = aggregateField[aggregatedValue.formula];\n                            if (value_1 === undefined) {\n                                var type_1 = aggregatedValue.type;\n                                value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1, false);\n                                aggregateField[aggregatedValue.formula] = value_1;\n                            }\n                            actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                        }\n                    }\n                    cellValue = this.evaluate(actualFormula);\n                    cellValue = (cellValue === Infinity || cellValue === -Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ?\n                        undefined : JSON.parse(String(cellValue)));\n                }\n                break;\n            default:\n                {\n                    cellValue = undefined;\n                    while (rowIndex[ri] !== undefined) {\n                        var index = rowIndex[ri];\n                        if (columnIndex[index] !== undefined) {\n                            isValueExist = true;\n                            if (!isGrandTotal) {\n                                this.rawIndexObject[index] = index;\n                            }\n                            //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri as number]), 1)[0] : rowIndex[ri as number];\n                            var currentVal = this.valueMatrix[index][value].member;\n                            if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                                cellValue = currentVal;\n                            }\n                            else {\n                                if (isNullOrUndefined(cellValue)) {\n                                    cellValue = 0;\n                                }\n                                cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                            }\n                            if (!isNullOrUndefined(currentVal)) {\n                                avgCnt++;\n                            }\n                        }\n                        ri++;\n                    }\n                }\n                break;\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value as number];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri as number] !== undefined) {\n                 if (mirror[rowIndex[ri as number]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri as number]), 1)[0] : rowIndex[ri as number];\n                     sum += this.valueMatrix[rowIndex[ri as number]][value as number];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    /**\n     * It performs the formatting to get formatted Value\n     *\n     * @param {number | string} value - It contains the value which went formatting.\n     * @param {string} fieldName - It contains the field name.\n     * @returns {IAxisSet} - It returns the formatted value as IAxisSet data.\n     * @hidden\n     */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && (this.formatFields[fieldName].format ||\n            this.formatFields[fieldName].skeleton) && !isNullOrUndefined(value)) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties :\n                    this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                    formattedValue.actualText = value;\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        if (isNullOrUndefined(formatSetting.minimumFractionDigits)) {\n                            delete formatSetting.minimumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.maximumFractionDigits)) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.minimumIntegerDigits)) {\n                            delete formatSetting.minimumIntegerDigits;\n                        }\n                    }\n                    formattedValue.formattedText =\n                        this.globalize.formatNumber(!isNaN(Number(value)) ? Number(value) : value, formatSetting);\n                    formattedValue.actualText = !isNaN(Number(value)) ? Number(value) : value;\n                    formattedValue.dateText = !isNaN(Number(value)) ? Number(value) : value;\n                }\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^()]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    PivotEngine.prototype.getTabularPivotValues = function () {\n        this.tabularPivotValues = [];\n        var colIndex;\n        this.emptyRowsLength = 0;\n        for (var i = 0; i < this.pivotValues.length; i++) {\n            var rowPivotValues = void 0;\n            while (isNullOrUndefined(this.pivotValues[i]) && i < this.pivotValues.length) {\n                this.tabularPivotValues.length++;\n                i++;\n            }\n            if (i < this.pivotValues.length) {\n                rowPivotValues = this.pivotValues[i];\n            }\n            var firstRow = rowPivotValues[0] ? rowPivotValues[0] : undefined;\n            if (!isNullOrUndefined(firstRow) && firstRow.axis === 'row') {\n                if (!isNullOrUndefined(rowPivotValues[1]) && !(firstRow.hasChild && firstRow.isDrilled)) {\n                    var levelName = firstRow.valueSort.levelName;\n                    var levelNameParts = levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter);\n                    colIndex = firstRow.colIndex;\n                    var currentRow = [];\n                    var dLevelName = levelNameParts[0];\n                    var level = 0;\n                    for (var k = 0; k < levelNameParts.length - 1 || k < this.rowMaxLevel; k++) {\n                        if (k < levelNameParts.length - 1) {\n                            if (k > 0) {\n                                dLevelName = dLevelName + '.' + levelNameParts[k];\n                            }\n                            var duplIsDrilled = firstRow.isDrilled;\n                            if (levelNameParts.length > 1 || k === 0) {\n                                duplIsDrilled = true;\n                            }\n                            currentRow.push({\n                                axis: firstRow.axis,\n                                formattedText: levelNameParts[k],\n                                rowIndex: this.tabularPivotValues.length,\n                                hasChild: firstRow.hasChild,\n                                isDrilled: duplIsDrilled,\n                                level: level,\n                                valueSort: {\n                                    levelName: dLevelName\n                                },\n                                colIndex: colIndex++,\n                                colSpan: 1,\n                                rowSpan: 1\n                            });\n                        }\n                        if (k >= firstRow.level) {\n                            var span = k === 0 ? this.rowMaxLevel : this.rowMaxLevel - 1;\n                            currentRow.push({\n                                axis: firstRow.axis,\n                                formattedText: firstRow.formattedText,\n                                rowIndex: this.tabularPivotValues.length,\n                                hasChild: firstRow.hasChild,\n                                isDrilled: firstRow.isDrilled,\n                                level: level,\n                                valueSort: {\n                                    levelName: firstRow.valueSort.levelName\n                                },\n                                colIndex: colIndex++,\n                                colSpan: span,\n                                rowSpan: 1\n                            });\n                        }\n                        level++;\n                    }\n                    firstRow.colIndex = colIndex;\n                    firstRow.rowIndex = this.tabularPivotValues.length;\n                    firstRow.colSpan = 1;\n                    firstRow.rowSpan = 1;\n                    currentRow.push(firstRow);\n                    this.setColumnSpan(currentRow);\n                    var colData = rowPivotValues.slice(1, rowPivotValues.length);\n                    for (var i_1 = 1; i_1 < rowPivotValues.length; i_1++) {\n                        var colDataValues = rowPivotValues[i_1];\n                        colDataValues.colIndex = colIndex + 1;\n                        colDataValues.rowIndex = this.tabularPivotValues.length;\n                        colIndex++;\n                    }\n                    currentRow = currentRow.concat(colData);\n                    this.tabularPivotValues.push(currentRow);\n                }\n                else {\n                    this.emptyRowsLength++;\n                }\n            }\n            else {\n                var emptyRow = [];\n                var headerColIndex = this.rowMaxLevel + 1;\n                for (var j = 0; j < this.rowMaxLevel; j++) {\n                    emptyRow.push(undefined);\n                }\n                emptyRow.push(firstRow);\n                var colData = rowPivotValues.slice(1, rowPivotValues.length);\n                for (var i_2 = 0; i_2 < colData.length; i_2++) {\n                    colData[i_2].colIndex = headerColIndex;\n                    colData[i_2].rowIndex = this.tabularPivotValues.length;\n                    headerColIndex++;\n                }\n                emptyRow = emptyRow.concat(colData);\n                this.tabularPivotValues.push(emptyRow);\n            }\n        }\n        return this.tabularPivotValues;\n    };\n    PivotEngine.prototype.setColumnSpan = function (currentRow) {\n        var spanlength = 1;\n        for (var f = currentRow.length - 1; f >= 0; f--) {\n            if (f !== 0) {\n                if (currentRow[f].formattedText === currentRow[f - 1].formattedText) {\n                    currentRow[f].colSpan = 0;\n                    spanlength++;\n                    currentRow[f - 1].colSpan = spanlength;\n                }\n            }\n            var splitedText = currentRow[f].formattedText.split(' ');\n            if (f < currentRow.length - 1 && splitedText[splitedText.length - 1] !== 'Total') {\n                currentRow[f].hasChild = true;\n                var drillMem = this.dataSourceSettings.drilledMembers;\n                for (var drillItem = 0; drillItem < drillMem.length; drillItem++) {\n                    for (var item = 0; item < drillMem[drillItem].items.length; item++) {\n                        if (drillMem[drillItem].items[item] === currentRow[f].formattedText) {\n                            currentRow[f].isDrilled = currentRow[f].isDrilled ? true : false;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.setRowSpan = function () {\n        var emptyHeaderLength = this.headerContent.length;\n        for (var m = 0; m < this.rowMaxLevel; m++) {\n            var rowSpan = 1;\n            if (this.tabularPivotValues.length > this.rowMaxLevel + emptyHeaderLength) {\n                for (var j = this.tabularPivotValues.length - 1; j >= emptyHeaderLength - 1; j--) {\n                    if (j !== emptyHeaderLength - 1) {\n                        var tabluarValue = this.tabularPivotValues;\n                        if (isNullOrUndefined(tabluarValue[j - 1])) {\n                            break;\n                        }\n                        if (!isNullOrUndefined(tabluarValue[j - 1][m]) &&\n                            tabluarValue[j][m].formattedText ===\n                                tabluarValue[j - 1][m].formattedText) {\n                            tabluarValue[j][m].rowSpan = 0;\n                            rowSpan++;\n                            tabluarValue[j - 1][m].rowSpan = rowSpan;\n                        }\n                        else {\n                            rowSpan = 1;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n *\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var fieldDrop = 'fieldDrop';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var exportComplete = 'exportComplete';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var editCompleted = 'editCompleted';\n/** @hidden */\nexport var multiLevelLabelClick = 'multiLevelLabelClick';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLegendClick = 'chartLegendClick';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var multiLevelLabelRender = 'multiLevelLabelRender';\n/** @hidden */\nexport var beforePrint = 'beforePrint';\n/** @hidden */\nexport var animationComplete = 'animationComplete';\n/** @hidden */\nexport var legendRender = 'legendRender';\n/** @hidden */\nexport var textRender = 'textRender';\n/** @hidden */\nexport var pointRender = 'pointRender';\n/** @hidden */\nexport var seriesRender = 'seriesRender';\n/** @hidden */\nexport var chartMouseMove = 'chartMouseMove';\n/** @hidden */\nexport var chartMouseClick = 'chartMouseClick';\n/** @hidden */\nexport var pointMove = 'pointMove';\n/** @hidden */\nexport var chartMouseLeave = 'chartMouseLeave';\n/** @hidden */\nexport var chartMouseDown = 'chartMouseDown';\n/** @hidden */\nexport var chartMouseUp = 'chartMouseUp';\n/** @hidden */\nexport var dragComplete = 'dragComplete';\n/** @hidden */\nexport var zoomComplete = 'zoomComplete';\n/** @hidden */\nexport var scrollStart = 'scrollStart';\n/** @hidden */\nexport var scrollEnd = 'scrollEnd';\n/** @hidden */\nexport var scrollChanged = 'scrollChanged';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var onHeadersSort = 'onHeadersSort';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/** @hidden */\nexport var calculatedFieldCreate = 'calculatedFieldCreate';\n/** @hidden */\nexport var memberEditorOpen = 'memberEditorOpen';\n/** @hidden */\nexport var fieldRemove = 'fieldRemove';\n/** @hidden */\nexport var numberFormatting = 'numberFormatting';\n/** @hidden */\nexport var aggregateMenuOpen = 'aggregateMenuOpen';\n/** @hidden */\nexport var fieldDragStart = 'fieldDragStart';\n/** @hidden */\nexport var chartPointClick = 'chartPointClick';\n/** @hidden */\nexport var beforeServiceInvoke = 'beforeServiceInvoke';\n/** @hidden */\nexport var afterServiceInvoke = 'afterServiceInvoke';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var actionFailure = 'actionFailure';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var verticalScroll = 'vertical-scroll';\n/** @hidden */\nexport var horizontalScroll = 'horizontal-scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initPivotPager = 'init-pivotPager';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n/**\n * Specifies action names of actionBegin events\n */\n/** @hidden */\nexport var sortValue = 'Sort value';\n/** @hidden */\nexport var drillUp = 'Drill up';\n/** @hidden */\nexport var drillDown = 'Drill down';\n/** @hidden */\nexport var addNewReport = 'Add new report';\n/** @hidden */\nexport var saveCurrentReport = 'Save current report';\n/** @hidden */\nexport var saveAsCurrentReport = 'Save as current report';\n/** @hidden */\nexport var renameCurrentReport = 'Rename current report';\n/** @hidden */\nexport var removeCurrentReport = 'Remove current report';\n/** @hidden */\nexport var loadReports = 'Load report';\n/** @hidden */\nexport var openConditionalFormatting = 'Open conditional formatting dialog';\n/** @hidden */\nexport var openNumberFormatting = 'Open number formatting dialog';\n/** @hidden */\nexport var MdxQuery = 'MdxQuery';\n/** @hidden */\nexport var showFieldList = 'Open field list';\n/** @hidden */\nexport var tableView = 'Show table view';\n/** @hidden */\nexport var chartView = 'Show chart view';\n/** @hidden */\nexport var multipleAxis = 'Multiple Axis';\n/** @hidden */\nexport var showLegend = 'Show legend';\n/** @hidden */\nexport var pdfExport = 'PDF export';\n/** @hidden */\nexport var pngExport = 'PNG export';\n/** @hidden */\nexport var excelExport = 'Excel export';\n/** @hidden */\nexport var csvExport = 'CSV export';\n/** @hidden */\nexport var jpegExport = 'JPEG export';\n/** @hidden */\nexport var svgExport = 'SVG export';\n/** @hidden */\nexport var hideSubTotals = 'Hide sub-totals';\n/** @hidden */\nexport var subTotalsRow = 'Show row sub-totals';\n/** @hidden */\nexport var subTotalsColumn = 'Show column sub-totals';\n/** @hidden */\nexport var showSubTotals = 'Show sub-totals';\n/** @hidden */\nexport var hideGrandTotals = 'Hide grand totals';\n/** @hidden */\nexport var grandTotalsRow = 'Show row grand totals';\n/** @hidden */\nexport var grandTotalsColumn = 'Show column grand totals';\n/** @hidden */\nexport var showGrandTotals = 'Show grand totals';\n/** @hidden */\nexport var numberFormattingMenu = 'Number Formatting menu';\n/** @hidden */\nexport var conditionalFormattingMenu = 'Conditional Formatting menu';\n/** @hidden */\nexport var reportChange = 'Report change';\n/** @hidden */\nexport var sortFieldTree = 'Sort field tree';\n/** @hidden */\nexport var editCalculatedField = 'Edit calculated field';\n/** @hidden */\nexport var sortField = 'Sort field';\n/** @hidden */\nexport var filterField = 'Filter field';\n/** @hidden */\nexport var removeField = 'Remove field';\n/** @hidden */\nexport var openCalculatedField = 'Open calculated field dialog';\n/** @hidden */\nexport var editRecord = 'Edit record';\n/** @hidden */\nexport var saveEditedRecords = 'Save edited records';\n/** @hidden */\nexport var addNewRecord = 'Add new record';\n/** @hidden */\nexport var removeRecord = 'Remove record';\n/** @hidden */\nexport var aggregateField = 'Aggregate field';\n/** @hidden */\nexport var contextMenuCalculatedField = 'CalculatedField Context menu';\n/** @hidden */\nexport var windowResize = 'Window resize';\n/** @hidden */\nexport var rowPageNavigation = 'Navigate row page';\n/** @hidden */\nexport var columnPageNavigation = 'Navigate column page';\n/**\n * Specifies action names of actionComplete events\n */\n/** @hidden */\nexport var calculatedFieldApplied = 'Calculated field applied';\n/** @hidden */\nexport var editedRecordsSaved = 'Edited records saved';\n/** @hidden */\nexport var newRecordAdded = 'New record added';\n/** @hidden */\nexport var recordRemoved = 'Record removed';\n/** @hidden */\nexport var closeFieldlist = 'Field list closed';\n/** @hidden */\nexport var fieldTreeSorted = 'Field tree sorted';\n/** @hidden */\nexport var reportSaved = 'Report saved';\n/** @hidden */\nexport var newReportAdded = 'New report added';\n/** @hidden */\nexport var reportReSaved = 'Report re-saved';\n/** @hidden */\nexport var reportRenamed = 'Report renamed';\n/** @hidden */\nexport var reportRemoved = 'Report removed';\n/** @hidden */\nexport var excelExported = 'Excel exported';\n/** @hidden */\nexport var csvExported = 'CSV exported';\n/** @hidden */\nexport var pdfExported = 'PDF exported';\n/** @hidden */\nexport var pngExported = 'PNG exported';\n/** @hidden */\nexport var jpegExported = 'JPEG exported';\n/** @hidden */\nexport var svgExported = 'SVG exported';\n/** @hidden */\nexport var conditionallyFormatted = 'Conditional formatting applied';\n/** @hidden */\nexport var numberFormatted = 'Number formatting applied';\n/** @hidden */\nexport var tableViewed = 'Table view shown';\n/** @hidden */\nexport var chartViewed = 'Chart view shown';\n/** @hidden */\nexport var subTotalsHidden = 'Sub-totals hidden';\n/** @hidden */\nexport var subTotalsRowShown = 'Row sub-totals shown';\n/** @hidden */\nexport var subTotalsColumnShown = 'Column sub-totals shown';\n/** @hidden */\nexport var subTotalsShown = 'Sub-totals shown';\n/** @hidden */\nexport var grandTotalsHidden = 'Grand totals hidden';\n/** @hidden */\nexport var grandTotalsRowShown = 'Row grand totals shown';\n/** @hidden */\nexport var grandTotalsColumnShown = 'Column grand totals shown';\n/** @hidden */\nexport var grandTotalsShown = 'Grand totals shown';\n/** @hidden */\nexport var valueSorted = 'Value sorted';\n/** @hidden */\nexport var calculatedFieldEdited = 'Calculated field edited';\n/** @hidden */\nexport var fieldSorted = 'Field sorted';\n/** @hidden */\nexport var fieldFiltered = 'Field filtered';\n/** @hidden */\nexport var fieldRemoved = 'Field removed';\n/** @hidden */\nexport var fieldAggregated = 'Field aggregated';\n/** @hidden */\nexport var recordEdited = 'Record edited';\n/** @hidden */\nexport var reportChanged = 'Report changed';\n/** @hidden */\nexport var windowResized = 'Window resized';\n/** @hidden */\nexport var recordUpdated = 'Records updated';\n/** @hidden */\nexport var drillThroughClosed = 'Drill-through closed';\n/** @hidden */\nexport var verticalScrolled = 'Vertically scrolled';\n/** @hidden */\nexport var horizontalScrolled = 'Horizontally scrolled';\n/** @hidden */\nexport var rowPageNavigated = 'Row page navigated';\n/** @hidden */\nexport var columnPageNavigated = 'Column page navigated';\n/** @hidden */\nexport var actionDropped = 'Action dropped';\n","/**\n * CSS Constants\n *\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var FIRST_PAGER_ICON = 'e-icon-first';\n/** @hidden */\nexport var LAST_PAGER_ICON = 'e-icon-last';\n/** @hidden */\nexport var PREV_PAGER_ICON = 'e-icon-prev';\n/** @hidden */\nexport var NEXT_PAGER_ICON = 'e-icon-next';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-container';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-container';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var BUTTON_DRAGGABLE = 'e-draggable';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_OUTER_DIV_CLASS = 'e-field-list-tree-outer-div';\n/** @hidden */\nexport var FIELD_LIST_TREE_OUTER_DIV_SEARCH_CLASS = 'e-field-list-tree-outer-div-searchMode';\n/** @hidden */\nexport var FIELD_LIST_SEARCH_MODE_CLASS = 'e-search-mode';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_TREE_PARENT = 'e-pivot-parent';\n/** @hidden */\nexport var FIELD_TREE_CHILD = 'e-pivot-child';\n/** @hidden */\nexport var FIELD_HEADER_CONTAINER_CLASS = 'e-field-header-container';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_SEARCH_CLASS = 'e-field-list-search';\n/** @hidden */\nexport var FIELD_LIST_SEARCH_INPUT_CLASS = 'e-field-list-search-input';\n/** @hidden */\nexport var FIELD_LIST_SEARCH_ICON_CLASS = 'e-field-list-search-icon';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var ALL_FIELDS_PANEL_CLASS = 'e-all-fields-axis';\n/** @hidden */\nexport var FIELD_PANEL_SCROLL_CLASS = 'e-hscroll';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-pvt-btn-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var MEMBER_SORT_CLASS = 'e-member-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DRAG_DISABLE_CLASS = 'e-disable-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-outer-container';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-container';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ALL_FIELDS_CLASS = 'e-group-all-fields';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var SELECT_CLASS = 'e-select';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-container-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-container-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var FILTER_SORT_CLASS = 'e-filter-sort';\n/** @hidden */\nexport var SORT_ASCEND_ICON_CLASS = 'e-sort-ascend-icon';\n/** @hidden */\nexport var SORT_DESCEND_ICON_CLASS = 'e-sort-descend-icon';\n/** @hidden */\nexport var SORT_SELECTED_CLASS = 'e-active';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-container';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var EDITOR_SEARCH__INPUT_CLASS = 'e-editor-search-input';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-container';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var PIVOT_CALC_CUSTOM_FORMAT_INPUTDIV = 'e-pivot-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-pivot-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var TREE_CONTAINER = 'e-treeContainer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-container';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-container';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var PIVOT_FORMAT_TITLE_CLASS = 'e-pivot-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var HIDDEN = 'e-visible-hide';\n/** @hidden */\nexport var FORMAT_INPUT_VALUE = 'e-format-input-value';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var GRANDTOTAL_CHECKBOX_TABLE = 'e-grandtotal-checkbox-table';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var VIRTUALTABLE_DIV = 'e-movablescrolldiv';\n/** @hidden */\nexport var CONTENT_VIRTUALTABLE_DIV = 'e-content-virtualtable';\n/** @hidden */\nexport var VIRTUALSCROLL_DIV = 'e-movablescroll';\n/** @hidden */\nexport var MOVABLESCROLL_DIV = 'e-movablescrollbar';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-headercontent';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var CHECKBOX_CONTAINER = 'e-checkbox-wrapper';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_ACCUMULATION_COLUMN = 'e-group-chart-accumulation-column';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN_DIV = 'e-group-chart-columns-dropdown-div';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN = 'e-group-chart-columns-dropdown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var EMPTY_FORMAT = 'e-pivot-conditional-empty-format';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n/** @hidden */\nexport var PIVOTCHART_INNER = 'e-pivotchart-inner';\n/** @hidden */\nexport var PIVOTCHART_TYPE_DIALOG = 'e-pivotchart-type-dialog';\n/** @hidden */\nexport var FORMAT_FONT_COLOR_PICKER = 'e-format-font-color-picker';\n/** @hidden */\nexport var GROUP_PIVOT_ROW = 'e-group-pivot-rows';\n/** @hidden */\nexport var TOOLBAR_MENU = 'e-pivot-toolbar-menu';\n/** @hidden */\nexport var DISABLE_FIRST_PAGE = 'e-firstpagedisabled';\n/** @hidden */\nexport var DISABLE_PREV_PAGE = 'e-prevpagedisabled';\n/** @hidden */\nexport var DISABLE_NEXT_PAGE = 'e-nextpagedisabled';\n/** @hidden */\nexport var DISABLE_LAST_PAGE = 'e-lastpagedisabled';\n/** @hidden */\nexport var GRID_PAGER = 'e-pivot-pager';\n/** @hidden */\nexport var GRID_PAGER_DIV = 'e-pivot-pager-maindiv';\n/** @hidden */\nexport var PIVOT_ROW_PAGER_DIV = 'e-pivot-pager-row-maindiv';\n/** @hidden */\nexport var PIVOT_COLUMN_PAGER_DIV = 'e-pivot-pager-column-maindiv';\n/** @hidden */\nexport var PIVOT_ROW_PAGER_SETTINGS = 'e-pivot-row-pager-settings';\n/** @hidden */\nexport var PIVOT_COLUMN_PAGER_SETTINGS = 'e-pivot-column-pager-settings';\n/** @hidden */\nexport var PIVOT_BOTH_PAGER_SETTINGS = 'e-pivot-both-pager-settings';\n/** @hidden */\nexport var PIVOT_PAGER_CONTAINER = 'e-pagercontainer';\n/** @hidden */\nexport var PIVOT_V_SEPARATOR = 'e-pivotview-vseparator';\n/** @hidden */\nexport var PIVOT_H_SEPARATOR = 'e-pivotview-hseparator';\n/** @hidden */\nexport var PIVOT_TEXT_DIV = 'e-pivotview-text-div';\n/** @hidden */\nexport var PIVOT_TEXT_DIV_1 = 'e-pivotview-text-div-1';\n/** @hidden */\nexport var PIVOT_ROW_SIZE = 'e-pivotview-row-size';\n/** @hidden */\nexport var PIVOT_ROW_PAGER_NUMBER = 'e-pivotview-row-pagerNumber';\n/** @hidden */\nexport var PIVOT_COLUMN_SIZE = 'e-pivotview-column-size';\n/** @hidden */\nexport var PIVOT_COLUMN_PAGER_NUMBER = 'e-pivotview-column-pagerNumber';\n/** @hidden */\nexport var PIVOT_ROW_PAGER_STRING = 'e-pivotview-row-pagerString';\n/** @hidden */\nexport var PIVOT_COLUMN_PAGER_STRING = 'e-pivotview-column-pagerString';\n/** @hidden */\nexport var PIVOT_ROW_OF_STRING = 'e-pivot-row-of-string';\n/** @hidden */\nexport var PIVOT_COLUMN_OF_STRING = 'e-pivot-column-of-string';\n/** @hidden */\nexport var PIVOT_ROW_DROPDOWN = 'e-pivot-pager-row-dropdown';\n/** @hidden */\nexport var PIVOT_COLUMN_DROPDOWN = 'e-pivot-pager-column-dropdown';\n/** @hidden */\nexport var PIVOT_ROW_SIZE_LIST = 'e-pivot-row-size-list';\n/** @hidden */\nexport var PIVOT_COLUMN_SIZE_LIST = 'e-pivot-column-size-list';\n/** @hidden */\nexport var INVERSE = 'e-inverse-view';\n/** @hidden */\nexport var COMPACT_VIEW = 'e-compact-view';\n/** @hidden */\nexport var PAGE_SIZE_DISABLE = 'e-page-size-disable';\n/** @hidden */\nexport var PIVOT_COMPACT_PAGER_DIV = 'e-pivot-pager-compact-maindiv';\n/** @hidden */\nexport var PIVOT_COMPACT_PAGER_NO_ROWSIZE = 'e-pivot-pager-row-maindiv-no-size';\n/** @hidden */\nexport var PIVOT_COMPACT_PAGER_NO_COLUMNSIZE = 'e-pivot-pager-column-maindiv-no-size';\n/** @hidden */\nexport var PIVOT_SINGLE_ROW_PAGER_DIV = 'e-pivot-pager-single-row-maindiv';\n/** @hidden */\nexport var PIVOT_SINGLE_COLUMN_PAGER_DIV = 'e-pivot-pager-single-column-maindiv';\n/** @hidden */\nexport var PIVOT_COMPACT_MOBILE_PAGER = 'e-pivot-pager-compact-mobile-maindiv';\n/** @hidden */\nexport var PIVOT_MOBILE_PAGER = 'e-pivot-pager-mobile-maindiv';\n/** @hidden */\nexport var PIVOT_ROW_OF_STRING_MAINDIV = 'e-pivot-row-of-string-maindiv';\n/** @hidden */\nexport var PIVOT_COLUMN_OF_STRING_MAINDIV = 'e-pivot-column-of-string-maindiv';\n/** @hidden */\nexport var PIVOT_PAGE_SIZE_LIST_MAINDIV = 'e-pager-dropdown';\n/** @hidden */\nexport var PIVOT_FIRST_ICON_DEFAULT = 'e-first e-icons e-icon-first';\n/** @hidden */\nexport var PIVOT_PREV_ICON_DEFAULT = 'e-prev e-icons e-icon-prev';\n/** @hidden */\nexport var PIVOT_NEXT_ICON_DEFAULT = 'e-next e-icons e-icon-next';\n/** @hidden */\nexport var PIVOT_LAST_ICON_DEFAULT = 'e-last e-icons e-icon-last';\n/** @hidden */\nexport var PIVOT_FIRST_ICON_ENABLE = 'e-firstpage e-pager-default';\n/** @hidden */\nexport var PIVOT_PREV_ICON_ENABLE = 'e-prevpage e-pager-default';\n/** @hidden */\nexport var PIVOT_NEXT_ICON_ENABLE = 'e-nextpage e-pager-default';\n/** @hidden */\nexport var PIVOT_LAST_ICON_ENABLE = 'e-lastpage e-pager-default';\n/** @hidden */\nexport var GRID_PAGER_TOP = 'e-pivot-pager-top';\n/** @hidden */\nexport var GRID_PAGER_BOTTOM = 'e-pivot-pager-bottom';\n/** @hidden */\nexport var GRID_PAGER_SINGLE_DIV = 'e-pivot-pager-single-maindiv';\n/** @hidden */\nexport var PIVOT_MOBILE_SINGLE_PAGER = 'e-pivot-pager-mobile-single-maindiv';\n/** @hidden */\nexport var PIVOT_COMPACT_PAGER_SINGLE_DIV = 'e-pivot-pager-compact-single-maindiv';\n/** @hidden */\nexport var PIVOT_COMPACT_MOBILE_SINGLE_PAGER = 'e-pivot-pager-compact-mobile-single-maindiv';\n/** @hidden */\nexport var PIVOT_COMPACT_MOBILE_FULL_SINGLE_PAGER = 'e-pivot-pager-compact-mobile-full-single-maindiv';\n/** @hidden */\nexport var PIVOT_PAGER_SINGLE_NO_SIZE = 'e-pivot-pager-single-maindiv-no-size';\n/** @hidden */\nexport var PIVOT_PAGER_COMPACT_SINGLE_NO_SIZE = 'e-pivot-pager-single-compact-maindiv-no-size';\n/** @hidden */\nexport var PIVOT_PAGER_NAV_CONTAINER = 'e-pivot-pager-nav-container';\n/** @hidden */\nexport var PIVOT_PAGER_INFO_CONTAINER = 'e-pivot-pager-info-container';\n/** @hidden */\nexport var PIVOT_CELL_CONTAINER = 'e-pivotcell-container';\n/** @hidden */\nexport var PIVOT_ROW_CONTAINER = 'e-pivotrow-container';\n/** @hidden */\nexport var PIVOT_FILTER_TAB_CONTAINER = 'e-filter-tab-container';\n/** @hidden */\nexport var PIVOT_FILTER_MEMBER_LIMIT = 'e-node-limit';\n/** @hidden */\nexport var FREEZED_CELL = 'e-leftfreeze';\n/** @hidden */\nexport var PIVOT_CONTENT_LOADER = 'e-pivot-content-loader';\n/** @hidden */\nexport var PIVOT_HIDE_LOADER = 'e-hide-loader';\n/** @hidden */\nexport var COLLAPSIBLE = 'e-icon-collapsible';\n/** @hidden */\nexport var EXPANDABLE = 'e-icon-expandable';\n/** @hidden */\nexport var PIVOT_VIEW_AUTOFIT = 'e-pivotview-autofit';\n/** @hidden */\nexport var RHANDLER = 'e-rhandler';\n/** @hidden */\nexport var RCURSOR = 'e-rcursor';\n/** @hidden */\nexport var RESIZED = 'e-resized';\n/** @hidden */\nexport var TABULAR_ROW_BUTTON = 'e-tabular-row-btn';\n/** @hidden */\nexport var TABULAR_PIVOT_BUTTON = 'e-tabular-pvt-btn';\n/** @hidden */\nexport var GROUP_ROW = 'e-group-row';\n/** @hidden */\nexport var FREEZE_LEFT_BORDER = 'e-freezeleftborder';\n/** @hidden */\nexport var ROWCELL = 'e-rowcell';\n/** @hidden */\nexport var ROW_CLASS = 'e-row';\n/** @hidden */\nexport var TABULAR_GROUP_ROWS = 'e-tabular-group-rows';\n/** @hidden */\nexport var TABULAR_LAYOUT_HEADER = 'e-tabular-layout-header';\n","import { createElement, remove, extend, getInstance, select } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     *\n     * @param {PivotView | PivotFieldList} parent - It contains the value of parent.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.menuInfo = [];\n        this.stringAggregateTypes = ['Count', 'DistinctCount'];\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     *\n     * @param {MouseEventArgs} args - It contains the args value\n     * @param {HTMLElement} parentElement - It contains the value of parentElement\n     * @returns {void}\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        var _this = this;\n        var fieldName = args.target.parentElement.getAttribute('data-uid');\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        this.buttonElement = args.target.parentElement;\n        var isStringField = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 1 : 0;\n        var summaryTypes = this.getMenuItem(isStringField).slice();\n        this.parent.actionObj.actionName = events.aggregateField;\n        this.parent.actionObj.fieldInfo = fieldInfo.fieldItem;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        var eventArgs = {\n            cancel: false, fieldName: fieldName, aggregateTypes: summaryTypes, displayMenuCount: 7\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        try {\n            control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    summaryTypes = observedArgs.aggregateTypes;\n                    _this.createContextMenu(isStringField, summaryTypes, observedArgs.displayMenuCount);\n                    _this.currentMenu = args.target;\n                    var pos = _this.currentMenu.getBoundingClientRect();\n                    if (_this.parent.enableRtl) {\n                        _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left - 105);\n                    }\n                    else {\n                        _this.menuInfo[isStringField].open(pos.top +\n                            (window.scrollY || document.documentElement.scrollTop), pos.left);\n                    }\n                }\n            });\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    AggregateMenu.prototype.createContextMenu = function (isStringField, summaryTypes, displayMenuCount) {\n        var _this = this;\n        var menuItems = [];\n        menuItems[isStringField] = [];\n        if (this.menuInfo[isStringField] && !this.menuInfo[isStringField].isDestroyed) {\n            this.menuInfo[isStringField].destroy();\n        }\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryTypes.length; i++) {\n            var key = summaryTypes[i];\n            if (isStringField) {\n                if ((this.stringAggregateTypes.indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + 'StringMenu_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + '_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n        }\n        if (menuItems[isStringField].length > displayMenuCount) {\n            menuItems[isStringField].splice(displayMenuCount);\n            menuItems[isStringField].push({\n                text: this.parent.localeObj.getConstant('MoreOption'),\n                id: this.parent.element.id + '_' + 'MoreOption'\n            });\n        }\n        var menuOptions = {\n            items: menuItems[isStringField],\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            cssClass: this.parent.cssClass,\n            beforeOpen: this.beforeMenuOpen.bind(this, isStringField),\n            onClose: function () {\n                select('#' + _this.buttonElement.id, _this.parentElement).focus();\n            },\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var contextMenu = document.getElementById(this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu'));\n        if (contextMenu !== null) {\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu')\n            });\n        }\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo[isStringField] = new Menu(menuOptions);\n        this.menuInfo[isStringField].isStringTemplate = true;\n        this.menuInfo[isStringField].appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField) {\n                if ((this.stringAggregateTypes.indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (isString, args) {\n        args.element.style.zIndex = (this.menuInfo[isString].element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /**\n     * create Value Settings Dialog\n     *\n     * @param {HTMLElement} target - It represent the target element.\n     * @param {HTMLElement} parentElement - It represent the parentElement.\n     * @param {string} type -It represent the type.\n     * @returns {void}\n     * @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement, type) {\n        this.parentElement = parentElement;\n        var valueDialogElement = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.getAttribute('data-uid') ? target.getAttribute('data-uid') : target.getAttribute('data-field') }\n        });\n        this.parentElement.appendChild(valueDialogElement);\n        var valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: '320px',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () {\n                        valueDialog.hide();\n                    },\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') ? false : true,\n            target: this.parentElement,\n            close: this.removeDialog.bind(this),\n            cssClass: this.parent.cssClass\n        });\n        valueDialog.isStringTemplate = true;\n        valueDialog.appendTo(valueDialogElement);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerText = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement, type) {\n        var _this = this;\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = (type && type !== 'MoreOption') ? type : buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [];\n        var summaryItems = this.parent.aggregateTypes;\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryItems.length; i++) {\n            if (this.parent.getAllSummaryType().indexOf(summaryItems[i]) > -1 &&\n                checkDuplicates.indexOf(summaryItems[i]) < 0) {\n                summaryDataSource.push({\n                    value: summaryItems[i],\n                    text: this.parent.localeObj.getConstant(summaryItems[i])\n                });\n                checkDuplicates.push(summaryItems[i]);\n            }\n        }\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        if (Object.keys(fieldDataSource).length === 0) {\n            fieldDataSource.push({ value: '', text: '' });\n            baseField = '';\n            fieldItemDataSource = [];\n        }\n        else {\n            baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n            var fieldName_1 = baseField.toString() !== 'undefined' ? baseField : fieldDataSource[0].value;\n            var isDateField_1 = PivotUtil.isDateField(fieldName_1, this.parent.engineModule);\n            fieldItemDataSource = (this.parent.engineModule.fieldList[fieldName_1].dateMember).map(function (item) {\n                return isDateField_1 ? item.formattedText :\n                    _this.parent.engineModule.getFormattedValue(item.actualText, fieldName_1).formattedText;\n            });\n        }\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-container' });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-container' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-container' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-container' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-container' });\n        var texttitle = createElement('div', { className: 'e-field-name-title' });\n        texttitle.innerText = this.parent.localeObj.getConstant('sourceName') + ' ';\n        var textContent = createElement('div', { className: 'e-field-name-content' });\n        textContent.innerText = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(buttonElement.getAttribute('data-uid') ?\n            buttonElement.getAttribute('data-uid') : buttonElement.getAttribute('data-field')) :\n            (buttonElement.getAttribute('data-uid') ? buttonElement.getAttribute('data-uid') : buttonElement.getAttribute('data-field'));\n        this.buttonElement =\n            this.buttonElement ? this.buttonElement : document.getElementsByClassName(textContent.innerText)[0];\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text'\n        });\n        inputTextDiv1.innerText = this.parent.localeObj.getConstant('sourceCaption');\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text'\n        });\n        optionTextDiv1.innerText = this.parent.localeObj.getConstant('summarizeValuesBy');\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text'\n        });\n        optionTextDiv2.innerText = this.parent.localeObj.getConstant('baseField');\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text'\n        });\n        optionTextDiv3.innerText = this.parent.localeObj.getConstant('baseItem');\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-container' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.dataBind();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n            change: function (args) {\n                var isDateField = PivotUtil.isDateField(args.value, _this.parent.engineModule);\n                fieldItemDataSource = (popupInstance.parent.engineModule.fieldList[args.value].dateMember).map(function (item) {\n                    return isDateField ? item.formattedText :\n                        _this.parent.engineModule.getFormattedValue(item.actualText, args.value).formattedText;\n                });\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3['itemData'] = null;\n                optionWrapper3.dataBind();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: fieldItemDataSource, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%'\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            value: fieldCaption, width: '100%',\n            cssClass: this.parent.cssClass\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var fieldInfo = PivotUtil.getFieldInfo((buttonElement ?\n                buttonElement.getAttribute('data-uid') : ''), this.parent);\n            this.parent.actionObj.actionName = events.aggregateField;\n            this.parent.actionObj.fieldInfo = fieldInfo.fieldItem;\n            if (this.parent.actionBeginMethod()) {\n                return;\n            }\n            var type = menu.item.id.split('_').pop();\n            try {\n                if (type === 'MoreOption' || type === 'PercentageOfDifferenceFrom'\n                    || type === 'PercentageOfParentTotal' || type === 'DifferenceFrom') {\n                    this.createValueSettingsDialog(buttonElement, this.parentElement, type);\n                }\n                else {\n                    var field = buttonElement.getAttribute('data-uid');\n                    var valuefields = this.parent.dataSourceSettings.values;\n                    var contentElement = buttonElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS);\n                    var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                        this.parent.engineModule.fieldList[field].caption;\n                    captionName = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(captionName) : captionName;\n                    if (this.parent.dataSourceSettings.showAggregationOnValueField) {\n                        contentElement.innerText = captionName;\n                    }\n                    contentElement.setAttribute('title', captionName);\n                    buttonElement.setAttribute('data-type', type);\n                    for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                        if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                            var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                                valuefields[vCnt].properties :\n                                valuefields[vCnt], null, true);\n                            dataSourceItem.type = type;\n                            this.parent.engineModule.fieldList[field].aggregateType = type;\n                            valuefields.splice(vCnt, 1, dataSourceItem);\n                            this.parent.lastAggregationInfo = dataSourceItem;\n                        }\n                    }\n                    this.updateDataSource();\n                }\n            }\n            catch (execption) {\n                this.parent.actionFailureMethod(execption);\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (this.parent.isDeferLayoutUpdate === false || (this.parent.pivotGridModule &&\n            this.parent.pivotGridModule.pivotDeferLayoutUpdate === false)\n            || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var valueDialog = getInstance(select('#' + this.parentElement.id + '_ValueDialog', document), Dialog);\n        var dialogElement = valueDialog.element;\n        var captionInstance = getInstance(select('#' + this.parentElement.id + 'type_input_option'), MaskedTextBox);\n        var summaryInstance = getInstance(select('#' + this.parentElement.id + '_type_option'), DropDownList);\n        var baseFieldInstance = getInstance(select('#' + this.parentElement.id + '_base_field_option'), DropDownList);\n        var baseItemInstance = getInstance(select('#' + this.parentElement.id + '_base_item_option'), DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement =\n                this.parentElement.getElementsByClassName(cls.PIVOT_BUTTON_CLASS + \" \" + fieldName.replace(/[^A-Z0-9]/ig, ''))[0];\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS);\n            var captionName = this.parent.dataSourceSettings.showAggregationOnValueField\n                ? (this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value)\n                : captionInstance.value;\n            captionName = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(captionName) : captionName;\n            contentElement.innerText = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        if (this.buttonElement && select('#' + this.buttonElement.id, this.parentElement)) {\n            select('#' + this.buttonElement.id, this.parentElement).focus();\n        }\n        var element = select('#' + this.parentElement.id + '_ValueDialog', document);\n        var valueDialog = element ? getInstance(element, Dialog) : null;\n        if (valueDialog && !valueDialog.isDestroyed) {\n            valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     *\n     * @returns {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo) {\n            if (this.menuInfo[1] !== undefined && !this.menuInfo[1].isDestroyed) {\n                this.menuInfo[1].destroy();\n            }\n            if (this.menuInfo[0] !== undefined && !this.menuInfo[0].isDestroyed) {\n                this.menuInfo[0].destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed, getScrollBarWidth } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement, closest, append } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, SanitizeHtmlHelper, select, selectAll } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     */\n    function Render(parent) {\n        /** @hidden */\n        this.isAutoFitEnabled = false;\n        /** @hidden */\n        this.pivotColumns = [];\n        /** @hidden */\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.drilledLevelInfo = {};\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = this.parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function (refreshRequired) {\n        if (refreshRequired) {\n            this.initProperties();\n        }\n        this.resColWidth = this.parent.isTabular ? this.gridSettings.columnWidth :\n            (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n                (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = this.parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(this.parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.' + cls.GRID_CLASS)) {\n            this.parent.notEmpty = true;\n            if (!this.engine.isEngineUpdated) {\n                this.engine.headerContent = this.frameDataSource('header');\n                this.engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.dataType !== 'olap') {\n                    if (this.parent.isTabular) {\n                        this.engine.headerContent = this.frameDataSource('header');\n                    }\n                    if (this.parent.enableValueSorting || this.parent.isTabular) {\n                        this.engine.valueContent = this.frameDataSource('value');\n                    }\n                }\n            }\n            this.engine.isEngineUpdated = false;\n            var frozenColumnsLength = this.parent.isTabular ? (this.parent.engineModule.rowMaxLevel + 1) : 1;\n            this.parent.grid.setProperties({\n                frozenColumns: frozenColumnsLength, columns: this.frameStackedHeaders(), dataSource: ((this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url !== '') ? true :\n                    (this.parent.dataSourceSettings.dataSource && this.parent.engineModule.data.length > 0 &&\n                        this.parent.dataSourceSettings.values.length > 0)) && !this.engine.isEmptyData ?\n                    this.frameGridDataSource(this.engine.valueContent) : this.frameDataSource('value')\n            }, true);\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            if (this.isAutoFitEnabled) {\n                this.addPivotAutoFitClass();\n            }\n            else {\n                this.removePivotAutoFitClass();\n            }\n            var e = this.parent.element.querySelector('.' + cls.GRID_CLASS);\n            e.querySelector('colGroup').innerHTML = this.parent.grid.getHeaderContent().querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.gridSettings.allowAutoResizing && this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.refreshUI();\n            }\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            var gridElement = createElement('div', { id: this.parent.element.id + '_grid' });\n            this.parent.element.appendChild(gridElement);\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo(gridElement);\n        }\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.initProperties = function () {\n        this.rowStartPos = undefined;\n        this.maxIndent = undefined;\n        this.resColWidth = undefined;\n        this.isOverflows = undefined;\n        this.indentCollection = {};\n        this.formatList = undefined;\n        this.colPos = 0;\n        this.colGrandPos = undefined;\n        this.rowGrandPos = undefined;\n        this.lastSpan = 0;\n        this.field = undefined;\n        this.fieldCaption = undefined;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.timeOutObj = undefined;\n    };\n    Render.prototype.refreshHeader = function () {\n        var mCont = this.parent.element.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV);\n        if (this.parent.enableVirtualization && !isNullOrUndefined(mCont)) {\n            var virtualTable = closest(mCont, '.' + cls.GRID_CONTENT).querySelector('.' + cls.VIRTUALTABLE_DIV);\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            if (mHdr.querySelector('.' + cls.TABLE)) {\n                setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                    transform: (mCont.querySelector('.' + cls.TABLE).style.transform).split(',')[0] + ',' + 0 + 'px)'\n                });\n                var freezedCellValue = parseInt(mHdr.querySelector('.' + cls.TABLE)\n                    .style.transform.split('(')[1].split(',')[0].split('px')[0], 10);\n                if (this.parent.enableRtl) {\n                    this.parent.element.querySelector('.' + cls.FREEZED_CELL).style.right\n                        = Number(freezedCellValue) + 'px';\n                }\n                else {\n                    this.parent.element.querySelector('.' + cls.FREEZED_CELL).style.left\n                        = Number(-freezedCellValue) + 'px';\n                }\n            }\n            var ele = this.parent.isAdaptive ? mCont :\n                (virtualTable && (virtualTable.style.display !== 'none')) ? virtualTable : mCont.parentElement;\n            mHdr.scrollLeft = ele.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            cssClass: this.parent.cssClass,\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? (this.gridSettings.allowAutoResizing ? this.parent.width : 400) : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            clipMode: this.gridSettings.clipMode,\n            allowReordering: this.gridSettings.allowReordering,\n            allowSelection: this.gridSettings.allowSelection,\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined,\n            pdfExportComplete: this.pdfExportComplete.bind(this),\n            excelExportComplete: this.excelExportComplete.bind(this),\n            actionComplete: this.actionComplete.bind(this)\n        });\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    Render.prototype.actionComplete = function (args) {\n        if (args && args.requestType === 'refresh' && this.isAutoFitEnabled) {\n            this.removePivotAutoFitClass();\n        }\n    };\n    /**\n     * It is used to add the pivot autofit class\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.addPivotAutoFitClass = function () {\n        if (!document.body.classList.contains(cls.PIVOT_VIEW_CLASS)) {\n            document.body.classList.add(cls.PIVOT_VIEW_CLASS);\n        }\n        if (!document.body.classList.contains(cls.PIVOT_VIEW_AUTOFIT)) {\n            document.body.classList.add(cls.PIVOT_VIEW_AUTOFIT);\n        }\n    };\n    /**\n     * It is used to remove the pivot autofit class\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.removePivotAutoFitClass = function () {\n        if (document.body.classList.contains(cls.PIVOT_VIEW_CLASS)) {\n            document.body.classList.remove(cls.PIVOT_VIEW_CLASS);\n        }\n        if (document.body.classList.contains(cls.PIVOT_VIEW_AUTOFIT)) {\n            document.body.classList.remove(cls.PIVOT_VIEW_AUTOFIT);\n        }\n    };\n    Render.prototype.headerRefreshed = function () {\n        var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1 && !isNullOrUndefined(mHdr) && mHdr.querySelector('.' + cls.TABLE) &&\n            this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.lastGridSettings = undefined;\n            this.parent.groupingBarModule.setGridRowWidth();\n        }\n    };\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    Render.prototype.pdfExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n        var exportCompleteEventArgs = {\n            type: 'PDF',\n            promise: args.promise\n        };\n        this.parent.trigger(events.exportComplete, exportCompleteEventArgs);\n    };\n    Render.prototype.excelExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n        var exportCompleteEventArgs = {\n            type: 'Excel/CSV',\n            promise: args.promise\n        };\n        this.parent.trigger(events.exportComplete, exportCompleteEventArgs);\n    };\n    Render.prototype.dataBound = function () {\n        // if ((this.parent.dataSourceSettings.valueAxis === 'row' ||\n        //     !(this.parent.dataType === 'pivot' && this.parent.dataSourceSettings.valueAxis === 'column' && this.parent.engineModule && !this.parent.engineModule.isLastHeaderHasMeasures)) &&\n        //     this.parent.element.querySelector('.e-firstcell') && !(this.parent.dataSourceSettings.values.length === 1 && this.parent.dataSourceSettings.columns.length > 0)) {\n        //     if (this.parent.enableRtl) {\n        //         (this.parent.element.querySelector('.e-firstcell') as HTMLElement).style.borderRight = 'none';\n        //     } else {\n        //         (this.parent.element.querySelector('.e-firstcell') as HTMLElement).style.borderLeft = 'none';\n        //     }\n        // }\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        if (!isNullOrUndefined(this.parent['renderReactTemplates'])) {\n            this.parent['renderReactTemplates']();\n        }\n        if (this.parent.isInitial) {\n            this.parent.isInitial = false;\n            this.parent.refreshData();\n            if (this.parent.enableVirtualization) {\n                this.parent.onContentReady();\n            }\n        }\n        this.parent.notify(events.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            addClass([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    Render.prototype.getCellElement = function (target) {\n        var currentElement = closest(target, 'td');\n        if (isNullOrUndefined(currentElement)) {\n            currentElement = closest(target, 'th');\n        }\n        return currentElement;\n    };\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        if (args.element && this.parent.cssClass) {\n            addClass([args.element.parentElement], this.parent.cssClass);\n        }\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked ? this_1.parent.lastCellClicked :\n                (this_1.parent.isAdaptive ? args.event.target : this_1.parent.lastCellClicked);\n            var elem = this_1.getCellElement(cellTarget);\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (!elem || (elem && Number(elem.getAttribute('index')) === 0 && Number(elem.getAttribute('data-colindex')) === 0)) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('data-colindex'));\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var selectedID = item.id;\n            switch (selectedID) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (selectAll('#' + this_1.parent.element.id + '_expand', args.element)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_expand', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_expand', args.element).classList.contains(cls.MENU_HIDE)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(cls.MENU_HIDE);\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (select('#' + this_1.parent.element.id + '_expand', args.element)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_collapse', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_collapse', args.element).classList.contains(cls.MENU_HIDE)) {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(cls.MENU_HIDE);\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if (selectAll('#' + this_1.parent.element.id + '_custom_group', args.element)) {\n                        addClass([select('#' + this_1.parent.element.id + '_custom_group', args.element)], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (selectAll('#' + this_1.parent.element.id + '_custom_group', args.element)) {\n                            removeClass([select('#' + this_1.parent.element.id + '_custom_group', args.element)], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if (selectAll('#' + this_1.parent.element.id + '_custom_ungroup', args.element)) {\n                        addClass([select('#' + this_1.parent.element.id + '_custom_ungroup', args.element)], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('data-colindex'))];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(),\n                                    cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (selectAll('#' + this_1.parent.element.id + '_custom_ungroup', args.element) && isUngroupOption) {\n                            removeClass([select('#' + this_1.parent.element.id + '_custom_ungroup', args.element)], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if (select('#' + this_1.parent.element.id + '_drillthrough', args.element)) {\n                            select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if (select('#' + this_1.parent.element.id + '_drillthrough', args.element)) {\n                                select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (select('#' + this_1.parent.element.id + '_sortasc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (select('#' + this_1.parent.element.id + '_sortdesc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                        select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (select('#' + this_1.parent.element.id + '_sortdesc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (select('#' + this_1.parent.element.id + '_sortasc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                        select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        select('#' + this_1.parent.element.id + '_CalculatedField', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        select('#' + this_1.parent.element.id + '_pdf', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        select('#' + this_1.parent.element.id + '_excel', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        select('#' + this_1.parent.element.id + '_csv', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        select('#' + this_1.parent.element.id + '_exporting', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if ((select('#' + this_1.parent.element.id + '_aggregate', args.element)) &&\n                        (!select('#' + this_1.parent.element.id + '_aggregate', args.element).classList.contains(cls.MENU_DISABLE))) {\n                        select('#' + this_1.parent.element.id + '_aggregate', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice(),\n                            displayMenuCount: 7\n                        };\n                        this_1.parent.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length > observedArgs.displayMenuCount) {\n                                    menuItem.splice(observedArgs.displayMenuCount);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    select('#' + _this.parent.element.id + '_aggregate', args.element).classList.remove(cls.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        var _this = this;\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var exportArgs = {};\n        var ele = this.getCellElement(target);\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('data-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' }\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                });\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' }\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                });\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' }\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                });\n                break;\n            case this.parent.element.id + '_drillthrough_menu': {\n                var event_1 = new MouseEvent('dblclick', {\n                    'view': window,\n                    'bubbles': true,\n                    'cancelable': true\n                });\n                ele.dispatchEvent(event_1);\n                break;\n            }\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = '';\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[Number(headerPosKeys[pos])][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName === '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('data-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.clipMode = this.gridSettings.clipMode;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = this.gridSettings.allowReordering;\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1 || keys.indexOf('clipMode') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                if (!isNullOrUndefined((this.parent.pivotColumns[colPos])[key])) {\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        removeClass(this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt, column) {\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        var vSort = this.parent.dataSourceSettings.valueSortSettings;\n        if (this.parent.enableValueSorting && vSort && vSort.headerText !== '') {\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (engine.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (engine.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && (rCnt === len || (rCnt + 1) === len && cell.level > -1 &&\n                engine.headerContent[(rCnt + 1)][cCnt]\n                && engine.headerContent[(rCnt + 1)][cCnt].level === -1)\n                && this.parent.dataSourceSettings.valueAxis === 'column') {\n                tCell.querySelector('div div').appendChild(createElement('span', {\n                    className: (vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending e-icons e-descending e-sortfilterdiv e-value-sort-icon' :\n                        'e-icon-ascending e-icons e-ascending e-sortfilterdiv e-value-sort-icon') + (cell.hasChild ? ' e-value-sort-align' : ''),\n                    styles: column.headerTextAlign === 'Right' ? 'float : left' : ''\n                }));\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        if (args.column.columns && args.column.columns.length > 0) {\n            this.getChildColumnWidth(args.column.columns);\n        }\n        else {\n            var column = args.column.field === '0.formattedText' ? '0.formattedText' :\n                args.column.customAttributes.cell.valueSort.levelName;\n            this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        }\n        if (this.parent.enableVirtualization && args.column.field === '0.formattedText') {\n            if (this.parent.dataSourceSettings.values.length > 1\n                && !isNullOrUndefined(this.parent.grid.columns[this.parent.grid.columns.length - 1].columns)) {\n                var gridColumns = this.parent.grid.columns[this.parent.grid.columns.length - 1].columns;\n                gridColumns[gridColumns.length - 1].minWidth = this.parent.gridSettings.columnWidth;\n            }\n            else {\n                this.parent.grid.columns[this.parent.grid.columns.length - 1].minWidth =\n                    this.parent.gridSettings.columnWidth;\n            }\n            this.parent.layoutRefresh();\n        }\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.getChildColumnWidth = function (parentColumn) {\n        for (var _i = 0, parentColumn_1 = parentColumn; _i < parentColumn_1.length; _i++) {\n            var column = parentColumn_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.getChildColumnWidth(column.columns);\n            }\n            else {\n                var colName = column.customAttributes.cell.valueSort.levelName;\n                this.parent.resizeInfo[colName] = Number(column.width.toString().split('px')[0]);\n            }\n        }\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.enableVirtualization && args.column.field === '0.formattedText') {\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) && Number(args.column.width.toString().split('px')[0]) < 250) {\n                args.cancel = true;\n            }\n            // else {\n            //     (this.parent.element.querySelector('.e-frozenscrollbar') as HTMLElement).style.width = args.column.width.toString().split('px')[0] + 'px';\n            // }\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.' + cls.HEADERCONTENT).offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        if (args.cancel) {\n            var column = args.column.field === '0.formattedText' ? '0.formattedText' :\n                args.column.customAttributes.cell.valueSort.levelName;\n            this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n            if (this.parent.enableVirtualization) {\n                this.parent.layoutRefresh();\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.resizedValue = (args.cancel || args.column.field !== '0.formattedText') ? this.parent.resizedValue : Number(args.column.width.toString().split('px')[0]);\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        var selectedElements = this.parent.element.querySelectorAll('.'\n            + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var i = 0; i < selectedElements.length; i++) {\n            var element = selectedElements[i];\n            var colIndex = Number(element.getAttribute('data-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        var rowOuterDiv = createElement('div', {\n            className: cls.PIVOT_ROW_CONTAINER\n        });\n        if (tCell && (this.parent.notEmpty) && this.engine.headerContent) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            var index = this.parent.isTabular ? tCell.getAttribute('data-colindex') : '0';\n            var cell = args.data[Number(index)];\n            var isRowFieldsAvail = cell.valueSort && cell.valueSort.levelName === (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row' &&\n                this.parent.localeObj.getConstant('grandTotal') + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText));\n            tCell.setAttribute('index', cell.rowIndex ? cell.rowIndex.toString() : '0');\n            var pivotValue = this.parent.pivotValues[cell.rowIndex] && this.parent.pivotValues[cell.rowIndex][Number(tCell.getAttribute('data-colindex'))] ? this.parent.pivotValues[cell.rowIndex][Number(tCell.getAttribute('data-colindex'))] : null;\n            var dataColIndex = this.parent.isTabular ? this.parent.engineModule.rowMaxLevel : 0;\n            if (Number(tCell.getAttribute('data-colindex')) <= dataColIndex) {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                    var memberPos = cell.actualText ?\n                        cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                    var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                        (memberPos ? memberPos - 1 : memberPos);\n                    var level = levelPosition ? (levelPosition - 1) : 0;\n                    if (this.parent.dataSourceSettings.subTotalsPosition === 'Bottom' && !isNullOrUndefined(levelName)) {\n                        var cellLevelName = !cell.isSum ? levelName : cell.type === 'value' ?\n                            levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + (this.parent.engineModule.valueAxisFields[cell.actualText].caption ?\n                                this.parent.engineModule.valueAxisFields[cell.actualText].caption :\n                                this.parent.engineModule.valueAxisFields[cell.actualText].name))[0] : '';\n                        if (cell.isSum && (cell.type === 'value' ? this.drilledLevelInfo[cellLevelName] : true)) {\n                            level = level - 1;\n                        }\n                        else if (!cell.isSum) {\n                            if (cellLevelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length === 1) {\n                                this.drilledLevelInfo = {};\n                            }\n                            if (cell.members && cell.members.length > 0) {\n                                this.drilledLevelInfo[cellLevelName] = cell.isDrilled;\n                            }\n                        }\n                    }\n                    if (!this.parent.isTabular) {\n                        do {\n                            if (level > 0) {\n                                rowOuterDiv.appendChild(createElement('span', {\n                                    className: level === 0 ? '' : cls.NEXTSPAN\n                                }));\n                            }\n                            level--;\n                        } while (level > -1);\n                        level = levelPosition ? (levelPosition - 1) : 0;\n                        this.lastSpan = levelPosition ? this.lastSpan : 0;\n                        if (!cell.hasChild && (!isValueCell ? level : 0) > 0) {\n                            rowOuterDiv.appendChild(createElement('span', {\n                                className: cls.LASTSPAN\n                            }));\n                        }\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        if (isValueCell) {\n                            for (var _i = 0, _a = this.parent.dataSourceSettings.values; _i < _a.length; _i++) {\n                                var field = _a[_i];\n                                var name_1 = field.caption ? field.caption : field.name;\n                                if (levelName.indexOf(name_1) > -1) {\n                                    fieldName = field.name;\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            fieldName = cell.level > -1 && this.parent.dataSourceSettings.rows[cell.level] ?\n                                this.parent.dataSourceSettings.rows[cell.level].name : '';\n                        }\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    rowOuterDiv = this.onOlapRowCellBoundEvent(tCell, rowOuterDiv, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        var values = this.parent.dataSourceSettings.values;\n                        localizedText = isNullOrUndefined(cell.valueSort.axis) ? (this.parent.dataSourceSettings.rows.length === 0 && values.length === 1 && this.parent.dataSourceSettings.valueAxis === 'row') ?\n                            this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(values[values.length - 1].type) + ' ' +\n                                this.parent.localeObj.getConstant('of') + ' ' + (!isNullOrUndefined(values[values.length - 1].caption) ? values[values.length - 1].caption : values[values.length - 1].name) :\n                            this.parent.localeObj.getConstant('grandTotal') : cell.formattedText;\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                        localizedText = isRowFieldsAvail ? this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(this.parent.engineModule.fieldList[cell.actualText].aggregateType) + ' '\n                            + this.parent.localeObj.getConstant('of') + ' ' + cell.formattedText : localizedText;\n                    }\n                    else if (cell.type === 'sum' && cell.memberType !== 3) {\n                        localizedText = cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                if (this.parent.isTabular) {\n                    this.setSpanAttributes('rowspan', cell.rowSpan, tCell);\n                    this.setSpanAttributes('colspan', cell.colSpan, tCell);\n                }\n                else {\n                    tCell.classList.add(cls.ROWSHEADER);\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    rowOuterDiv.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                rowOuterDiv.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row' &&\n                        this.parent.pivotValues[Number(tCell.getAttribute('index'))][0] &&\n                        this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            rowOuterDiv.appendChild(createElement('span', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv e-value-sort-icon' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv e-value-sort-icon') + (cell.hasChild ? ' e-value-sort-align' : ''),\n                                styles: rowOuterDiv.style.textAlign === 'right' ? 'float: left' : ''\n                            }));\n                        }\n                    }\n                }\n                tCell.appendChild(rowOuterDiv);\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('data-colindex'))];\n                cell = isNullOrUndefined(cell) ? args.column.customAttributes.cell : cell;\n                cell.isGrandSum = isRowFieldsAvail ? true : cell.isGrandSum;\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                var isGrandSum = (isNullOrUndefined(cell.isGrandSum) && (!isNullOrUndefined(this.parent.olapEngineModule) && this.parent.olapEngineModule.olapValueAxis === 'column') && this.parent.dataType === 'olap' &&\n                    ((this.colGrandPos - this.parent.dataSourceSettings.values.length) < Number(tCell.getAttribute('data-colindex'))));\n                if (cell.isGrandSum || (isGrandSum || this.colGrandPos === Number(tCell.getAttribute('data-colindex'))) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(cell.colIndex)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (pivotValue && pivotValue.cssClass) {\n                    tCell.classList.add(pivotValue.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering) {\n                    tCell.setAttribute('data-colindex', args.column.customAttributes ? args.column.customAttributes.cell.colIndex.toString() : args.column.index.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                this.appendTemplate(tCell, pivotValue);\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    Render.prototype.appendTemplate = function (tCell, pivotValue) {\n        var element = this.parent.getCellTemplate()({ targetCell: tCell, cellInfo: pivotValue }, this.parent, 'cellTemplate', this.parent.element.id +\n            '_cellTemplate', null, null, tCell);\n        if (element && element !== '' && element.length > 0) {\n            if (this.parent.enableHtmlSanitizer) {\n                if (this.parent.isVue || this.parent.isVue3) {\n                    var container = createElement('div');\n                    container.innerHTML = SanitizeHtmlHelper.sanitize(element);\n                    append([container.firstChild], tCell);\n                }\n                else {\n                    this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                }\n            }\n            else {\n                if (this.parent.isVue || this.parent.isVue3) {\n                    append(element, tCell);\n                }\n                else {\n                    this.parent.appendHtml(tCell, element[0].outerHTML);\n                }\n            }\n        }\n    };\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, rowOuterDiv, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var cellActualText = cell.memberType === 3 ?\n                    this.engine.fieldList[cell.actualText.toString()].tag.toString() :\n                    cell.actualText.toString();\n                var memberPosition = tupInfo.uNameCollection.indexOf(cellActualText);\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = tupInfo.typeCollection[fPos] !== '2' ? (this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')] && this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')].isHierarchy && fPos < this.parent.dataSourceSettings.rows.length - 1 && !this.parent.dataSourceSettings.rows[fPos + 1].isNamedSet && this.parent.dataSourceSettings.rows[fPos + 1].name.indexOf('[Measures]') < 0 && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name] && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name].hasAllMember) ? true : Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0 : false;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    rowOuterDiv.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    rowOuterDiv.appendChild(createElement('span', {\n                        className: cls.LASTSPAN\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var actualLevelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n            var levelPosition = cell.level === -1 ? this.measurePos :\n                actualLevelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1;\n            var levelName = cell.memberType === 3 ? (levelPosition + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            var isSubTotalCell = false;\n            if (cell.isSum && cell.memberType === 3) {\n                var currPos_1 = this.lvlCollection[cell.parentUniqueName].position;\n                for (var i = currPos_1 + 1; i < this.position; i++) {\n                    delete this.lvlCollection[this.lvlPosCollection[i]];\n                    delete this.lvlPosCollection[i];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n                isSubTotalCell = true;\n                this.measurePos = this.lvlCollection[cell.parentUniqueName].position;\n            }\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_2 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_2 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_2 + 1) ? (currPos_2 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_3 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_3 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_3 + 1) ? (currPos_3 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            currPos = isSubTotalCell ? currPos - 1 : currPos;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    rowOuterDiv.appendChild(createElement('span', {\n                        className: cls.LASTSPAN\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    rowOuterDiv.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (this.parent.dataSourceSettings.grandTotalsPosition === 'Top' && (!isNullOrUndefined(this.parent.olapEngineModule) && this.parent.olapEngineModule.olapValueAxis === 'row') && this.parent.dataType === 'olap' &&\n                (cell.valueSort.levelName.toString()).indexOf(this.parent.localeObj.getConstant('grandTotal') + this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) === 0) {\n                rowOuterDiv.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN\n                }));\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                rowOuterDiv.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        rowOuterDiv.setAttribute('fieldname', cell.hierarchy);\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return rowOuterDiv;\n    };\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var isValueCell = false;\n                for (var _i = 0, _a = this.parent.dataSourceSettings.values; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (field.name === cell.actualText) {\n                        isValueCell = true;\n                        tCell.setAttribute('fieldname', field.name);\n                    }\n                }\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('data-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!isValueCell && !(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (isValueCell && cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns\n                        && this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = cell.level > -1 && this.parent.dataSourceSettings.columns[cell.level] ?\n                            this.parent.dataSourceSettings.columns[cell.level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                var isColumnFieldsAvail = (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column' && cell.valueSort &&\n                    cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText)));\n                if (cell.type || isColumnFieldsAvail) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else if (cell.type) {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                    var localizedText = cell.type === 'grand sum' ? (isNullOrUndefined(cell.valueSort.axis) || this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText) : cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    localizedText = isColumnFieldsAvail && engine.fieldList ? this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(engine.fieldList[cell.actualText].aggregateType)\n                        + ' ' + this.parent.localeObj.getConstant('of') + ' ' + cell.formattedText : localizedText;\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    this.updateWrapper(tCell, div);\n                }\n                else {\n                    this.updateWrapper(tCell);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex, args.cell.column);\n                if (this.parent.cellTemplate) {\n                    this.appendTemplate(tCell, cell);\n                }\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))\n                            || cell.valueSort.levelName === ('Grand Total' + (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(cls.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        else {\n            if (this.parent.isTabular) {\n                var colSpan = this.parent.engineModule.rowMaxLevel + 1;\n                if (args.cell && args.cell.column && args.cell.column.index === 0) {\n                    args.node.setAttribute('colspan', colSpan.toString());\n                    args.node.classList.add(cls.FREEZE_LEFT_BORDER);\n                }\n                else {\n                    args.node.style.display = 'none';\n                }\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.updateWrapper = function (tCell, div) {\n        if (tCell.querySelectorAll('.e-headercelldiv').length > 0 || tCell.querySelectorAll('.e-stackedheadercelldiv').length > 0) {\n            var outerDiv = createElement('div', {\n                className: cls.PIVOT_CELL_CONTAINER\n            });\n            var innerDiv = createElement('div', {\n                className: (div ? 'e-stackedheadertext' : 'e-headertext') + ' ' + cls.CELLVALUE,\n                innerHTML: tCell.querySelectorAll('.e-headercelldiv').length > 0 ? tCell.querySelector('.e-headercelldiv').innerHTML : tCell.querySelector('.e-stackedheadercelldiv').innerHTML\n            });\n            if (div) {\n                outerDiv.append(div);\n            }\n            outerDiv.append(innerDiv);\n            tCell.children[0].innerHTML = '';\n            tCell.children[0].append(outerDiv);\n        }\n        return tCell;\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            // tCell.setAttribute('colspan', cell.colSpan.toString());\n            // tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('data-colindex'))],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (((this.parent.dataType === 'pivot' && this.parent.dataSourceSettings.dataSource && this.parent.engineModule.data.length > 0) || (this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url !== '') ||\n            (this.parent.dataSourceSettings.mode === 'Server' && this.parent.dataSourceSettings.url !== '' && this.engine.pivotValues.length > 0)) && this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated || (this.gridSettings.layout === 'Tabular')) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyData = function () {\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    /** @hidden */\n    Render.prototype.calculateColWidth = function (colCount) {\n        if (!isNullOrUndefined(this.parent.resizedValue)) {\n            this.parent.resizedValue = (this.parent.showGroupingBar && this.parent.resizedValue < 250) ? 250 : this.parent.resizedValue;\n        }\n        this.resColWidth = !isNullOrUndefined(this.parent.resizedValue) ? this.parent.resizedValue : this.resColWidth;\n        var offsetWidth = this.calculateGridWidth();\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * offsetWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.parent.isTabular ?\n            (this.parent.engineModule.rowMaxLevel + 1) * this.resColWidth : this.resColWidth);\n        colCount = this.parent.isTabular ? colCount - (this.parent.engineModule.rowMaxLevel + 1) : colCount - 1;\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        if (!this.isOverflows) {\n            var gridHeight = this.calculateGridHeight();\n            var parentHeight = gridHeight === 'auto' ? this.parent.getHeightAsNumber() : gridHeight;\n            var headersLength = (this.engine && this.engine.headerContent) ? Object.keys(this.engine.headerContent).length : 1;\n            var height = parentHeight - (this.gridSettings.rowHeight * headersLength);\n            if (this.engine && this.engine.valueContent && ((this.gridSettings.rowHeight * this.engine.valueContent.length) > height)) {\n                parWidth = parWidth - getScrollBarWidth();\n            }\n        }\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : colWidth;\n    };\n    /** @hidden */\n    Render.prototype.resizeColWidth = function (colCount) {\n        if (!isNullOrUndefined(this.parent.resizedValue)) {\n            this.parent.resizedValue = (this.parent.showGroupingBar && this.parent.resizedValue < 250) ? 250 : this.parent.resizedValue;\n        }\n        this.resColWidth = !isNullOrUndefined(this.parent.resizedValue) ? this.parent.resizedValue : this.resColWidth;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth);\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : colWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (eleWidth === 0) {\n            eleWidth = this.parent.element.parentElement.getBoundingClientRect().width ?\n                this.parent.element.parentElement.getBoundingClientRect().width : this.parent.element.parentElement.offsetWidth;\n        }\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n            else if (this.parent.width.toString().indexOf('px') > -1) {\n                parWidth = this.parent.width.toString().split('px')[0];\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return (!this.gridSettings.allowAutoResizing && parWidth > this.parent.totColWidth) ? this.parent.totColWidth : parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var contentElement = this.parent.element.querySelector('.' + cls.GRID_CLASS + ' .' + cls.CONTENT_CLASS);\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (contentElement) {\n            if (isNaN(parHeight)) {\n                parHeight = parHeight > this.parent.minHeight ? parHeight : this.parent.minHeight;\n            }\n            else {\n                parHeight = (contentElement.offsetWidth < contentElement.querySelector('.' + cls.TABLE).offsetWidth) ?\n                    parHeight - getScrollBarWidth() : parHeight;\n            }\n            if ((this.parent.showToolbar && this.parent.currentView !== 'Chart') || (!this.parent.showToolbar && this.parent.displayOption.view !== 'Chart')) {\n                if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                    var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                    var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS) ?\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).offsetHeight : 0);\n                    var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                    var pagerHeight = this.parent.element.querySelector('.' + cls.GRID_PAGER) ? this.parent.element.querySelector('.' + cls.GRID_PAGER).offsetHeight : 0;\n                    gridHeight = parHeight - (gBarHeight + toolBarHeight + pagerHeight) - 1;\n                    gridHeight = gridHeight < 40 ? 40 : gridHeight;\n                    if (elementCreated) {\n                        var tableHeight = contentElement.querySelector('.' + cls.TABLE).offsetHeight;\n                        var contentHeight = contentElement.querySelector('.' + cls.TABLE).offsetHeight;\n                        var tableWidth = contentElement.querySelector('.' + cls.TABLE).offsetWidth;\n                        var contentWidth = contentElement.offsetWidth;\n                        var horizontalOverflow = contentWidth <= tableWidth;\n                        // if (horizontalOverflow && ((contentWidth + 2) < tableWidth) && !this.parent.enableVirtualization) {\n                        //     contentElement.style.overflowX = 'scroll';\n                        // } else {\n                        //     contentElement.style.overflowX = 'hidden';\n                        //     horizontalOverflow = false;\n                        // }\n                        //let verticalOverflow: boolean = contentHeight < tableHeight;\n                        var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                        if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                            !commonOverflow) {\n                            this.parent.grid.height = 'auto';\n                        }\n                        else {\n                            this.parent.grid.height = gridHeight;\n                            this.parent.grid.dataBind();\n                        }\n                        // this.parent.grid.widthService.refreshFrozenScrollbar();\n                    }\n                    else {\n                        if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                            gridHeight = 'auto';\n                        }\n                    }\n                }\n                else {\n                    gridHeight = this.gridSettings.height;\n                }\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    /**\n     * It used to frame stacked headers.\n     *\n     * @returns {ColumnModel[]} - Returns grid columns.\n     * @hidden\n     */\n    Render.prototype.frameStackedHeaders = function () {\n        var pivotColumns = this.parent.pivotColumns;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        var gridColumns = this.parent.grid['columnModel'];\n        var autoFitApplied = false;\n        var refreshColumn = this.parent.toolbarModule && this.parent.toolbarModule.isReportChange ? true : this.parent.actionObj ? ((this.parent.actionObj.actionName === 'Sort value' && engine.valueAxis === 1) ||\n            (this.parent.actionObj.actionName === 'Sort field' && this.parent.actionObj.fieldInfo.axis === 'columns') ||\n            (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.actionObj.actionName === 'Sort field' && this.parent.pivotFieldListModule.actionObj.fieldInfo.axis === 'columns')) : false;\n        this.pivotColumns = [];\n        if ((((this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url !== '') ? true :\n            (this.parent.dataSourceSettings.values.length > 0 && this.parent.dataSourceSettings.dataSource\n                && this.parent.engineModule.data.length > 0)) || (this.parent.dataSourceSettings.mode === 'Server' &&\n            this.parent.dataSourceSettings.url !== '' && this.engine.pivotValues.length > 0)) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues && this.engine.pivotValues[0] ?\n                this.engine.pivotValues[0].length : 0);\n            var measureFlag = this.parent.dataType === 'olap' && !isNullOrUndefined(this.engine.colMeasurePos)\n                && this.engine.colDepth - 1 === this.parent.olapEngineModule.colMeasurePos;\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                var colCount = colField ? Object.keys(colField).length : 0;\n                if (colField) {\n                    var colLength = this.parent.isTabular ? (this.parent.engineModule.rowMaxLevel + 1) : (colField[0] ? 0 : 1);\n                    for (var cCnt = 0, cLen = Object.keys(colField).length + colLength; cCnt < cLen; cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || (colField[cCnt].memberType === 3 && !measureFlag) ||\n                                headerCnt === 0) ? colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' && isNullOrUndefined(colSpan) ? 1 : colSpan;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            (isNullOrUndefined(colField[cCnt].valueSort.axis) ? this.parent.localeObj.getConstant('grandTotal') :\n                                colField[cCnt].formattedText) : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        formattedText = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(formattedText) : formattedText;\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            autoFitApplied = pivotColumns.length - 1 !== colCount ? false : (!refreshColumn && !this.parent.isEmptyGrid\n                                && pivotColumns[actualCnt] && pivotColumns[actualCnt].autoFit);\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': this.cloneDataWithoutIndex(colField[cCnt]) },\n                                width: autoFitApplied ? gridColumns[actualCnt].width : colField[cCnt]\n                                    ? colField[cCnt].valueSort ? this.setSavedWidth(colField[cCnt]\n                                        .valueSort.levelName, colWidth) : this.resColWidth : this.resColWidth,\n                                minWidth: autoFitApplied && actualCnt === colCount\n                                    ? gridColumns[gridColumns.length - 1].minWidth : 30,\n                                allowReordering: this.parent.gridSettings.allowReordering,\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true,\n                                textAlign: this.parent.enableRtl ? 'Left' : 'Right',\n                                headerTextAlign: this.parent.enableRtl ? 'Right' : 'Left'\n                            };\n                            if (cCnt === colCount) {\n                                columnModel[actualCnt].width = (columnModel[actualCnt].width - 3);\n                                this.lastColumn = columnModel[actualCnt];\n                            }\n                        }\n                        else if (headerSplit[cCnt]) {\n                            // colSpan = (colField[cCnt as number] && colField[cCnt as number].type === 'grand sum' &&\n                            //     colField[cCnt as number].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!this.pivotColumns[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(this.pivotColumns[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        field: colField[cCnt] ? colField[cCnt].valueSort\n                                            .levelName : '',\n                                        customAttributes: { 'cell': this.cloneDataWithoutIndex(colField[cCnt]) },\n                                        width: (autoFitApplied && actualCnt === 0 && !refreshColumn && !this.parent.isEmptyGrid\n                                            && pivotColumns[0].autoFit) ? gridColumns[0].width : colField[cCnt] ?\n                                            this.setSavedWidth(colField[cCnt].valueSort\n                                                .levelName, colWidth) : this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: this.parent.gridSettings.allowReordering,\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true,\n                                        headerTextAlign: this.parent.enableRtl ? 'Right' : 'Left'\n                                    };\n                                    innerModel = [this.pivotColumns[splitPos[innerPos]]];\n                                }\n                                this.isAutoFitEnabled = this.isAutoFitEnabled ? true : autoFitApplied;\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                this.pivotColumns = columnModel.length > 0 ? columnModel : this.pivotColumns;\n            } while (headerCnt > 0);\n            if (this.parent.isTabular) {\n                for (var n = 0; n < this.parent.engineModule.rowMaxLevel + 1; n++) {\n                    if (this.parent.showGroupingBar && !this.parent.isAdaptive) {\n                        var groupRowElement = this.parent.element.querySelector('.' + cls.GROUP_ROW);\n                        var buttonDivs = groupRowElement.querySelectorAll('.e-pvt-btn-div');\n                        var rowHeaderWidth = 0;\n                        if (this.parent.engineModule.rowMaxLevel !== buttonDivs.length - 1 && n === this.parent.engineModule.rowMaxLevel) {\n                            rowHeaderWidth = this.getTotalColumnWidth(buttonDivs, n);\n                        }\n                        else {\n                            if (groupRowElement.querySelectorAll('.e-pvt-btn-div').length === 1) {\n                                rowHeaderWidth = 250;\n                            }\n                            else {\n                                if ((this.parent.element.getBoundingClientRect().width * 0.8) <= this.getTotalColumnWidth(buttonDivs, 0)) {\n                                    rowHeaderWidth = this.gridSettings.columnWidth;\n                                }\n                                else {\n                                    var buttonWidth = groupRowElement.querySelectorAll('.e-pvt-btn-div')[n].getBoundingClientRect().width\n                                        < this.parent.gridSettings.columnWidth ? this.parent.gridSettings.columnWidth :\n                                        groupRowElement.querySelectorAll('.e-pvt-btn-div')[n].getBoundingClientRect().width;\n                                    rowHeaderWidth = buttonWidth + 6;\n                                }\n                            }\n                        }\n                        this.pivotColumns[n] = {\n                            field: (n + '.formattedText'),\n                            width: rowHeaderWidth > this.gridSettings.columnWidth ? rowHeaderWidth : this.resColWidth,\n                            minWidth: 30,\n                            headerText: '',\n                            allowReordering: false,\n                            allowResizing: this.parent.isTabular ? false : this.parent.gridSettings.allowResizing,\n                            visible: true,\n                            clipMode: this.parent.gridSettings.clipMode\n                        };\n                    }\n                    else {\n                        for (var n_1 = 0; n_1 < this.parent.engineModule.rowMaxLevel + 1; n_1++) {\n                            this.updatePivotColumn(this.pivotColumns, n_1, autoFitApplied, refreshColumn, gridColumns);\n                        }\n                    }\n                }\n            }\n            else {\n                this.updatePivotColumn(this.pivotColumns, 0, autoFitApplied, refreshColumn, gridColumns);\n            }\n        }\n        else {\n            this.pivotColumns = this.frameEmptyColumns();\n        }\n        if (this.parent.toolbarModule && this.parent.showToolbar) {\n            this.parent.toolbarModule.isReportChange = false;\n        }\n        this.parent.triggerColumnRenderEvent(this.pivotColumns);\n        autoFitApplied = this.parent.pivotColumns.length > 0 && this.parent.pivotColumns[this.parent.pivotColumns.length - 1].autoFit;\n        return this.pivotColumns;\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        if (column === '0.formattedText' && !isNullOrUndefined(this.parent.resizedValue)) {\n            width = this.parent.resizedValue;\n        }\n        else {\n            if (this.parent.isTabular && this.parent.element.querySelector('.' + cls.ROW_CLASS).querySelector('.' + cls.ROWCELL) &&\n                this.parent.showGroupingBar && column === '0.formattedText' && this.parent.dataSourceSettings.values.length === 0) {\n                var rowHeaderWidth = 0;\n                var buttonDivs = this.parent.element.querySelector('.' + cls.GROUP_ROW)\n                    .querySelectorAll('.e-pvt-btn-div');\n                for (var i = 0; i < buttonDivs.length; i++) {\n                    rowHeaderWidth += buttonDivs[i].getBoundingClientRect().width + 6;\n                }\n                width = rowHeaderWidth;\n            }\n            width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        }\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth - 3 });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name] &&\n                    !isNullOrUndefined(this.parent.olapEngineModule.fieldList[field.name].formatString)) {\n                    var fString = this.parent.olapEngineModule.formatFields[field.name] ?\n                        this.parent.olapEngineModule.formatFields[field.name].format :\n                        this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    fString = (fString === 'Standard') ? 'Number' : fString;\n                    format = (fString.indexOf('#') > -1 || fString.match(/\\d/) !== null) ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if ((['PercentageOfDifferenceFrom', 'PercentageOfRowTotal', 'PercentageOfColumnTotal', 'PercentageOfGrandTotal', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal']).indexOf(field.type) > -1) {\n                    format = 'P2';\n                }\n                else if (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar', 'Index'].indexOf(field.type) > -1) {\n                    format = undefined;\n                }\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    Render.prototype.getValidHeader = function (args, axis) {\n        var values = this.parent.dataSourceSettings.values;\n        var cellValue;\n        if (axis === 'row') {\n            var cellInfo = args;\n            if (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) {\n                if (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row' && (this.parent.localeObj.getConstant('grandTotal') +\n                    this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + cellInfo.value)\n                    === cellInfo.data[0].valueSort.levelName) {\n                    return this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(this.parent.engineModule.fieldList[cellInfo.value.toString()].aggregateType)\n                        + ' ' + this.parent.localeObj.getConstant('of') + ' ' + cellInfo.value.toString();\n                }\n                else if (values.length === 1 && this.parent.dataSourceSettings.rows.length === 0) {\n                    return this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(values[values.length - 1].type)\n                        + ' ' + this.parent.localeObj.getConstant('of') + ' ' + (!isNullOrUndefined(values[values.length - 1].caption) ? values[values.length - 1].caption : values[values.length - 1].name);\n                }\n            }\n            cellValue = cellInfo.value;\n        }\n        else if (axis === 'column') {\n            var cellInfo = args;\n            if (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) {\n                if (!isNullOrUndefined(args\n                    .gridCell.column.customAttributes) && this.parent.dataSourceSettings.columns.length === 0 &&\n                    this.parent.dataSourceSettings.valueAxis === 'column' && (this.parent.localeObj.getConstant('grandTotal') +\n                    this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + cellInfo.gridCell.column\n                    .customAttributes.cell.formattedText) === cellInfo.gridCell.column\n                    .customAttributes.cell.valueSort.levelName) {\n                    return this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(this.parent.engineModule\n                        .fieldList[cellInfo.gridCell.column.customAttributes.cell.actualText]\n                        .aggregateType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + cellInfo.gridCell\n                        .column.customAttributes.cell.formattedText;\n                }\n            }\n            cellValue = cellInfo.cell.value;\n        }\n        return cellValue;\n    };\n    Render.prototype.excelColumnEvent = function (args) {\n        if (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column') {\n            args.cell.value = this.getValidHeader(args, 'column');\n        }\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        args = this.exportHeaderEvent(args, 'XLSX');\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        if (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column') {\n            args.cell.value = this.getValidHeader(args, 'column');\n        }\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    Render.prototype.excelRowEvent = function (args) {\n        var pivotValue;\n        if (args.column.field === '0.formattedText') {\n            var cell = args.data[0];\n            var isValueCell = cell.type && cell.type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[cell.rowIndex];\n            }\n            else {\n                var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                var memberPos = cell.actualText ?\n                    cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                    (memberPos ? memberPos - 1 : memberPos);\n                level = levelPosition ? (levelPosition - 1) : 0;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            pivotValue = (args.data)[args.column.customAttributes.cell ?\n                args.column.customAttributes.cell.colIndex : this.colPos];\n            if (isNullOrUndefined(pivotValue.value) || isNullOrUndefined(pivotValue.formattedText) || pivotValue.formattedText === '') {\n                args.value = this.parent.exportType === 'Excel' ? null : '';\n            }\n            else {\n                var aggMatrix = this.parent.dataType === 'pivot' && this.parent.engineModule ? this.parent.engineModule.aggregatedValueMatrix : undefined;\n                if (aggMatrix && aggMatrix[pivotValue.rowIndex] && aggMatrix[pivotValue.rowIndex][pivotValue.colIndex]) {\n                    args.value = aggMatrix[pivotValue.rowIndex][pivotValue.colIndex];\n                }\n                else {\n                    args.value = !isNullOrUndefined(pivotValue.value) ? (pivotValue.formattedText === '#DIV/0!' ? pivotValue.formattedText : pivotValue.value) : pivotValue.formattedText;\n                }\n            }\n        }\n        args = this.exportContentEvent(args);\n        if (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row') {\n            args.value = args.column.field === '0.formattedText' ? this.getValidHeader(args, 'row')\n                : args.value;\n        }\n        this.parent.trigger(events.excelQueryCellInfo, args);\n        if (pivotValue) {\n            if (args.style && this.formatList[pivotValue.actualText]) {\n                args.style.type = 'number';\n                args.style.numberFormat = args.style.numberFormat ? args.style.numberFormat : this.formatList[pivotValue.actualText];\n            }\n            else if (this.formatList[pivotValue.actualText]) {\n                args.style = { numberFormat: this.formatList[pivotValue.actualText] };\n            }\n            args.column.format = this.formatList[pivotValue.actualText];\n        }\n    };\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var cell = args.data[0];\n            var isValueCell = cell.type && cell.type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[cell.rowIndex];\n            }\n            else {\n                var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                var memberPos = cell.actualText ?\n                    cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                    (memberPos ? memberPos - 1 : memberPos);\n                level = levelPosition ? (levelPosition - 1) : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n            if (this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row') {\n                args.value = this.getValidHeader(args, 'row');\n            }\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    Render.prototype.exportHeaderEvent = function (args, exportType) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            rowSpan = cell.rowSpan > 0 ? cell.rowSpan : 1;\n            if (exportType === 'XLSX') {\n                if (cell.rowSpan > 0) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!isNullOrUndefined(cell.type) && cell.level !== 0) {\n                    rowSpan = 1;\n                    args.cell.rowSpan = 1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > 0) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /**\n     *\n     * @param {IGridValues} actualData - It contains the data source.\n     * @returns {IGridValues} - It frames the data source without index and indexObject properties.\n     * @hidden */\n    Render.prototype.frameGridDataSource = function (actualData) {\n        var framedDataSource = [];\n        for (var i = 0; i < actualData.length; i++) {\n            var keyPos = 0;\n            framedDataSource[i] = {};\n            var keys = Object.keys(actualData[i]);\n            for (var j = 0; actualData[i] != null && j < keys.length; j++) {\n                while (keyPos < keys.length) {\n                    framedDataSource[i][Number(keys[keyPos])] =\n                        this.cloneDataWithoutIndex(actualData[i][Number(keys[keyPos])]);\n                    keyPos++;\n                }\n            }\n        }\n        return framedDataSource;\n    };\n    /** @hidden */\n    Render.prototype.cloneDataWithoutIndex = function (data) {\n        if (!isNullOrUndefined(data)) {\n            var keys = Object.keys(data);\n            var keyPos = 0;\n            var clonedData = {};\n            while (keyPos < keys.length) {\n                if (keys[keyPos] !== 'indexObject' && keys[keyPos] !== 'index') {\n                    clonedData[keys[keyPos]] = data[keys[keyPos]];\n                }\n                keyPos++;\n            }\n            return clonedData;\n        }\n        return data;\n    };\n    Render.prototype.exportContentEvent = function (args) {\n        var cell = args.data[Number(args.column.field.split('.formattedText')[0])];\n        args.value = cell.type === 'grand sum' ? (isNullOrUndefined(cell.valueSort.axis) ?\n            this.parent.localeObj.getConstant('grandTotal') : cell.formattedText) : args.value;\n        return args;\n    };\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.setSpanAttributes = function (attrName, spanValue, element) {\n        element.setAttribute(attrName, spanValue ? spanValue.toString() : '1');\n        element.classList.add(cls.ROWSHEADER, cls.FREEZE_LEFT_BORDER, cls.TABULAR_LAYOUT_HEADER);\n        if (spanValue === 0) {\n            element.classList.add(cls.ICON_DISABLE);\n        }\n    };\n    Render.prototype.updatePivotColumn = function (pivotColumns, n, autoFitApplied, refreshColumn, gridColumns) {\n        pivotColumns[n] = {\n            field: (n + '.formattedText'),\n            width: (autoFitApplied && !refreshColumn && !this.parent.isEmptyGrid && pivotColumns[n].autoFit)\n                ? gridColumns[n].width : this.resColWidth,\n            minWidth: 30,\n            headerText: '',\n            allowReordering: false,\n            allowResizing: this.parent.isTabular ? false : this.parent.gridSettings.allowResizing,\n            visible: true,\n            clipMode: this.parent.gridSettings.clipMode\n        };\n    };\n    Render.prototype.getTotalColumnWidth = function (buttonDivs, n) {\n        var totalColumnWidth = 0;\n        for (var i = n; i < buttonDivs.length; i++) {\n            var buttonWidth = buttonDivs[i].getBoundingClientRect().width < this.parent.gridSettings.columnWidth ?\n                this.parent.gridSettings.columnWidth : buttonDivs[i].getBoundingClientRect().width;\n            totalColumnWidth += buttonWidth + 6;\n        }\n        return totalColumnWidth;\n    };\n    return Render;\n}());\nexport { Render };\n","import { KeyboardEvents, closest, addClass, removeClass, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     *\n     * @param {PivotCommon} parent - It contains the parent data\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            shiftE: 'shift+E',\n            delete: 'delete',\n            enter: 'enter',\n            escape: 'escape',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            altJ: 'alt+J'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'shiftE':\n                this.processEdit(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'escape':\n                this.processClose(e);\n                break;\n            case 'upArrow':\n            case 'downArrow':\n                this.processFilterNodeSelection(e);\n                break;\n            case 'altJ':\n                this.processComponentFocus(e);\n        }\n    };\n    CommonKeyboardInteraction.prototype.processComponentFocus = function (e) {\n        if (this.parent.element) {\n            this.parent.element.focus();\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.getButtonElement = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        for (var i = 0, len = allPivotButtons.length; i < len; i++) {\n            if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                return allPivotButtons[i];\n            }\n        }\n        return target;\n    };\n    CommonKeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (target.querySelector('.' + cls.AXISFIELD_ICON_CLASS) && closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            }\n            else if (target.querySelector('.' + cls.CALC_EDIT)) {\n                target.querySelector('.' + cls.CALC_EDIT).click();\n            }\n            else if (target.querySelector('.' + cls.SORT_CLASS) &&\n                !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n                target.querySelector('.' + cls.SORT_CLASS).click();\n                this.getButtonElement(target).focus();\n            }\n            else if (target.querySelector('.' + cls.FILTER_COMMON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.SORT_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            this.getButtonElement(target).focus();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processEdit = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.CALC_EDIT)) {\n            target.querySelector('.' + cls.CALC_EDIT).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.FILTER_COMMON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            if (this.parent && this.parent.control && this.parent.moduleName === 'pivotview' &&\n                this.parent.control.grid && this.parent.control.showGroupingBar &&\n                this.parent.control.groupingBarModule && closest(target, '.' + cls.GROUP_ROW_CLASS) &&\n                this.parent.filterDialog && this.parent.filterDialog.dialogPopUp &&\n                !this.parent.filterDialog.dialogPopUp.isDestroyed && this.parent.filterDialog.dialogPopUp.element) {\n                var dialogElement_1 = this.parent.filterDialog.dialogPopUp.element;\n                var isExcelFilter_1 = this.parent.filterDialog.allowExcelLikeFilter;\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(function () {\n                    if (dialogElement_1 && dialogElement_1.classList.contains('e-popup-open')) {\n                        if (isExcelFilter_1 && dialogElement_1.querySelector('.e-dlg-closeicon-btn')) {\n                            dialogElement_1.querySelector('.e-dlg-closeicon-btn').focus();\n                        }\n                        else if (dialogElement_1.querySelector('input')) {\n                            dialogElement_1.querySelector('input').focus();\n                        }\n                    }\n                });\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilterNodeSelection = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.SELECT_ALL_CLASS) && e.keyCode === 40) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree && memberEditorTree.querySelector('li')) {\n                var firstLi = memberEditorTree.querySelector('li');\n                if (memberEditorTree.querySelector('li#_active')) {\n                    removeClass([memberEditorTree.querySelector('li#_active')], ['e-node-focus']);\n                    memberEditorTree.querySelector('li#_active').removeAttribute('id');\n                }\n                firstLi.setAttribute('id', '_active');\n                addClass([firstLi], ['e-node-focus']);\n                firstLi.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS) && e.keyCode === 38) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree.querySelector('li#_active.e-node-focus') && memberEditorTree.querySelector('li') &&\n                memberEditorTree.querySelector('li').classList.contains('e-prev-active-node') &&\n                memberEditorTree.querySelector('li') === memberEditorTree.querySelector('li#_active.e-node-focus')) {\n                removeClass(memberEditorTree.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n                var allMemberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.SELECT_ALL_CLASS);\n                if (allMemberEditorTree && allMemberEditorTree.querySelector('li')) {\n                    var firstLi = allMemberEditorTree.querySelector('li');\n                    firstLi.setAttribute('id', '_active');\n                    addClass([firstLi], ['e-node-focus']);\n                    firstLi.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && target.id === this.parent.parentID + '_inputbox') {\n            if (e.action === 'upArrow') {\n                target.parentElement.querySelector('.e-spin-up').click();\n            }\n            else if (e.action === 'downArrow') {\n                target.parentElement.querySelector('.e-spin-down').click();\n            }\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.REMOVE_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            var dialogInstance = getInstance(closest(target, '.e-popup.e-popup-open'), Dialog);\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     *\n     * @returns {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     *\n     * @param {PivotCommon} parent - It represent the parent.\n     * @hidden\n     */\n    function EventBase(parent) {\n        /** @hidden */\n        this.searchListItem = [];\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     *\n     * @function updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @returns {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.getAttribute('data-uid');\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.getAttribute('data-uid');\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            var addMembersOrder = this.parent.engineModule && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].membersOrder ?\n                this.parent.engineModule.fieldList[fieldName].membersOrder.slice() : [];\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending', membersOrder: sortObj ? sortObj.membersOrder : addMembersOrder };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending', membersOrder: sortObj ? sortObj.membersOrder : addMembersOrder };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            if (isDescending) {\n                removeClass([target], cls.SORT_DESCEND_CLASS);\n            }\n            else {\n                addClass([target], cls.SORT_DESCEND_CLASS);\n            }\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     *\n     * @function updateFiltering\n     * @param {Event} args - Contains clicked element information to update dataSource.\n     * @returns {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.getAttribute('data-uid');\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                var fieldInfo = this.parent.engineModule.fieldList[fieldName];\n                var members = PivotUtil.getClonedData(fieldInfo.dateMember);\n                this.parent.isDateField = PivotUtil.isDateField(fieldName, this.parent.engineModule);\n                var membersInfo = fieldInfo && fieldInfo.membersOrder ?\n                    fieldInfo.membersOrder.slice() : [];\n                var outOfRange = void 0;\n                if (members[0].actualText === 'Out of Range') {\n                    outOfRange = members[0];\n                    members.splice(0, 1);\n                }\n                else if (members[members.length - 1].actualText === 'Out of Range') {\n                    outOfRange = members[members.length - 1];\n                    members.splice(members.length - 1, 1);\n                }\n                var sortDetails = {\n                    fieldName: fieldName,\n                    sortOrder: fieldInfo.sort,\n                    members: membersInfo && membersInfo.length > 0 ? membersInfo : Object.keys(members),\n                    IsOrderChanged: false\n                };\n                var isHeaderSortByDefault = false;\n                var sortType = fieldInfo && fieldInfo.isAlphanumeric ? true : undefined;\n                if (membersInfo && membersInfo.length > 0) {\n                    members = PivotUtil.applyCustomSort(sortDetails, members, sortType);\n                }\n                else {\n                    var groupField = this.parent.dataSourceSettings.groupSettings.filter(function (field) {\n                        return field.name === fieldName && field.type.toLocaleLowerCase() === 'number';\n                    });\n                    var isNumberGroupSorting = !isNullOrUndefined(groupField) && groupField.length > 0 ? true : false;\n                    members = PivotUtil.applyHeadersSort(members, sortDetails.sortOrder, sortType, isNumberGroupSorting);\n                    isHeaderSortByDefault = true;\n                }\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                if (outOfRange) {\n                    if (sortDetails.sortOrder === 'Ascending') {\n                        if (members[members.length - 1].actualText === 'Grand Total') {\n                            members.splice(members.length - 1, 0, outOfRange);\n                        }\n                        else {\n                            members.splice(members.length, 0, outOfRange);\n                        }\n                    }\n                    else {\n                        if (members[0].actualText === 'Grand Total') {\n                            members.splice(1, 0, outOfRange);\n                        }\n                        else {\n                            members.splice(0, 0, outOfRange);\n                        }\n                    }\n                }\n                if (isHeaderSortByDefault) {\n                    var copyOrder = [];\n                    for (var m = 0, n = 0; m < members.length; m++) {\n                        if (members[m].actualText !== 'Grand Total') {\n                            copyOrder[n++] = members[m].actualText;\n                        }\n                    }\n                    sortDetails.members = copyOrder;\n                }\n                this.parent.control.trigger(events.onHeadersSort, sortDetails);\n                if (sortDetails.IsOrderChanged) {\n                    members = PivotUtil.applyCustomSort(sortDetails, members, sortType, true);\n                }\n                treeData =\n                    this.getTreeData(isInclude, members, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget = this.parent.control.filterTargetID;\n        if (isNullOrUndefined(popupTarget)) {\n            popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n                this.parent.element : document.getElementById(this.parent.parentID + '_Container');\n        }\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     *\n     * @function isValidFilterItemsAvail\n     * @param {string} fieldName - Gets filter members for the given field name.\n     * @param {IFilter} filterObj - filterObj.\n     * @returns {boolean} - boolean.\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            if (filterObj.type === 'Include' && filterObj.items.length === 0) {\n                isItemAvail = true;\n            }\n            else {\n                var engineModule = this.parent.engineModule;\n                var field = engineModule.fieldList[fieldName];\n                var members = this.parent.dataType === 'olap' ? field.members :\n                    PivotUtil.getFormattedMembers(field.members, fieldName, engineModule);\n                for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (members[item]) {\n                        isItemAvail = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     *\n     * @function sortOlapFilterData\n     * @param {any} treeData - Gets filter members for the given field name.\n     * @param {string} order - It contains the value of order.\n     * @returns {any} - It returns the sort Olap Filter Data.\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            var isHeaderSortByDefault = false;\n            var members = [];\n            for (var i = 0; i < treeData.length; i++) {\n                members.push(treeData[i].caption);\n            }\n            var fieldName = treeData[0].caption !== 'Grand Total' || treeData[0].caption === undefined ?\n                treeData[0].htmlAttributes['data-fieldName'] :\n                treeData[1].htmlAttributes['data-fieldName'];\n            var engineModule = this.parent.engineModule;\n            var fieldInfo = engineModule.fieldList[fieldName];\n            var membersInfo = fieldInfo && fieldInfo.membersOrder ? fieldInfo.membersOrder.slice() : [];\n            var sortDetails = {\n                fieldName: fieldName,\n                sortOrder: order,\n                members: membersInfo && membersInfo.length > 0 ? membersInfo : members,\n                IsOrderChanged: false\n            };\n            if (membersInfo && membersInfo.length > 0) {\n                this.applyFilterCustomSort(treeData, sortDetails);\n            }\n            else {\n                treeData = order === 'Ascending' ?\n                    (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                        ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                        ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n                isHeaderSortByDefault = true;\n            }\n            if (isHeaderSortByDefault) {\n                var copyOrder = [];\n                for (var m = 0, n = 0; m < treeData.length; m++) {\n                    if (treeData[m].caption !== 'Grand Total') {\n                        copyOrder[n++] = treeData[m].caption;\n                    }\n                }\n                sortDetails.members = copyOrder;\n            }\n            this.parent.control.trigger(events.onHeadersSort, sortDetails);\n            if (sortDetails.IsOrderChanged) {\n                this.applyFilterCustomSort(treeData, sortDetails, true);\n            }\n        }\n        return treeData;\n    };\n    EventBase.prototype.applyFilterCustomSort = function (headers, sortDetails, hasMembersOrder) {\n        var order = [];\n        var updatedMembers = [];\n        var grandTotal;\n        if (sortDetails.IsOrderChanged) {\n            order = sortDetails.members;\n        }\n        else {\n            order = (sortDetails.sortOrder === 'Ascending' || sortDetails.sortOrder === 'None' || sortDetails.sortOrder === undefined) ? [].concat(sortDetails.members) : [].concat(sortDetails.members).reverse();\n        }\n        if (headers[0].caption === 'Grand Total') {\n            grandTotal = headers[0];\n            headers.shift();\n        }\n        for (var i = 0, j = 0; i < headers.length; i++) {\n            var sortText = headers[i].caption;\n            if (order[j] === sortText) {\n                headers.splice(j++, 0, headers[i]);\n                headers.splice(++i, 1);\n                if (j < order.length) {\n                    i = -1;\n                }\n                else {\n                    if (!hasMembersOrder) {\n                        updatedMembers.splice(--j, 0, sortText);\n                    }\n                    break;\n                }\n            }\n            if (i >= 0 && !hasMembersOrder) {\n                updatedMembers[i] = headers[i].caption;\n            }\n        }\n        if (!hasMembersOrder) {\n            for (var i = updatedMembers.length; i < headers.length; i++) {\n                updatedMembers[i] = headers[i].caption;\n            }\n            if (updatedMembers[updatedMembers.length - 1] === 'Grand Total') {\n                updatedMembers.pop();\n            }\n            sortDetails.members = updatedMembers;\n        }\n        if (grandTotal) {\n            headers.splice(0, 0, grandTotal);\n        }\n        return headers;\n    };\n    /**\n     * It used to get the parentIds\n     *\n     * @param {TreeView} treeObj - Specifies the treeview instance.\n     * @param {string} id - Specifies the current node id.\n     * @param {string[]} parent - Specifies the collection of parent element.\n     * @returns {string[]} - Returns parentIds.\n     * @hidden\n     */\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    /**\n     * It used to get the childIds\n     *\n     * @param {TreeView} treeObj - Specifies the treeview instance.\n     * @param {string} id - Specifies the current node id.\n     * @param {string[]} children - Specifies the collection of clid elements.\n     * @returns {string[]} - Return childIds.\n     * @hidden\n     */\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     *\n     * @param {MaskChangeEventArgs} args -  It cotains the args data.\n     * @param {TreeView} treeObj -  It cotains the treeObj data.\n     * @param {boolean} isFieldCollection -  It cotains the isFieldCollection data.\n     * @param {boolean} isHierarchy -  It cotains the isHierarchy data.\n     * @returns {void}\n     * @hidden\n     */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n            this.searchListItem = searchList;\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName as string] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        var modifiedFieldName = fieldName.replace(/[^a-zA-Z0-9 ]/g, '_');\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = member.actualText.toString();\n            memberName = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(memberName) : memberName;\n            var actualText = this.parent.enableHtmlSanitizer ?\n                SanitizeHtmlHelper.sanitize(member.actualText) : member.actualText;\n            var nodeAttr = { 'data-fieldName': fieldName, 'data-memberId': actualText.toString() };\n            var obj = {\n                id: modifiedFieldName + '_' + memberCount,\n                htmlAttributes: nodeAttr,\n                actualText: actualText,\n                name: this.parent.isDateField ? member.formattedText :\n                    engineModule.getFormattedValue(actualText, fieldName).formattedText,\n                isSelected: isInclude ? false : true\n            };\n            if (filterObj[this.parent.isDateField ? member.formattedText : memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = this.parent.isDateField ? member.formattedText : memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[actualText] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    /**\n     * @param {IOlapField[]} members - members.\n     * @param {string} fieldName - fieldName.\n     * @param {string} node - node.\n     * @param {boolean} state - state.\n     * @returns {void}\n     * @hidden\n     */\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} fieldName - fieldName.\n     * @param {string} item - fieldName.\n     * @param {Object} filterObj - filter Object.\n     * @returns {Object} -  An object mapping keys to string.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node] ? memberObject[node].parent : undefined;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n *\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     *\n     * @param {PivotCommon} parent - It represent the parent data.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     *\n     * @param {DragAndDropEventArgs} args - Contains both pivot button and field list drag and drop information.\n     * @param {string} fieldName - Defines dropped field name to update dataSource.\n     * @returns {boolean} true if the node is successfully dropped, otherwise false.\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap' || this.parent.dataType === 'pivot') {\n            var actualFieldName = (this.parent.dataType === 'olap' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 && this.parent.dataType === 'olap' &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' && this.parent.dataType === 'olap' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' && this.parent.dataType === 'olap' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap' || this.parent.dataType === 'pivot') {\n                var actualFieldName = (this.parent.dataType === 'olap' && this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 && this.parent.dataType === 'olap' &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (this.parent.dataType === 'olap' && droppedClass === 'values' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1)) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        nodeDropped = this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     *\n     * @param {PivotCommon} parent - Instance.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     *\n     * @function updateDataSource\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} droppedPosition - Defines dropped position to the axis based on field position.\n     * @returns {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        var draggedClass;\n        var draggedPosition = -1;\n        var nodeDropped = true;\n        var row = this.parent.dataSourceSettings.rows;\n        var column = this.parent.dataSourceSettings.columns;\n        var value = this.parent.dataSourceSettings.values;\n        var filter = this.parent.dataSourceSettings.filters;\n        var field = [row, column, value, filter];\n        for (var len = 0, lnt = field.length; len < lnt; len++) {\n            if (field[len]) {\n                for (var i = 0, n = field[len].length; i < n; i++) {\n                    if (field[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        field[len][i].name.toLowerCase() === '[measures]' && field[len][i].name.toLowerCase() === fieldName)) {\n                        draggedClass = len === 0 ? 'rows' : len === 1 ? 'columns' : len === 2 ? 'values' : 'filters';\n                        draggedPosition = i;\n                    }\n                    if (!draggedClass) {\n                        draggedClass = 'fieldList';\n                    }\n                }\n            }\n        }\n        var eventdrop = {\n            fieldName: fieldName, dropField: PivotUtil.getFieldInfo(fieldName, this.control).fieldItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            dropAxis: droppedClass, dropPosition: droppedPosition, draggedAxis: draggedClass, cancel: false\n        };\n        var control = this.control.getModuleName() === 'pivotfieldlist' && this.control.isPopupView ?\n            this.control.pivotGridModule : this.control;\n        control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                droppedClass = observedArgs.dropAxis;\n                droppedPosition = observedArgs.dropPosition;\n                fieldName = observedArgs.dropField ? observedArgs.dropField.name : observedArgs.fieldName;\n                dataSourceItem = observedArgs.dropField;\n                if (_this.control && _this.btnElement && _this.btnElement.getAttribute('isvalue') === 'true') {\n                    switch (droppedClass) {\n                        case '':\n                            _this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            break;\n                        case 'rows':\n                            droppedPosition = droppedPosition === _this.parent.dataSourceSettings.rows.length ? -1 : droppedPosition;\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'row', valueIndex: droppedPosition } }, true);\n                            break;\n                        case 'columns':\n                            droppedPosition = droppedPosition === _this.parent.dataSourceSettings.columns.length ? -1 : droppedPosition;\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'column', valueIndex: droppedPosition } }, true);\n                            break;\n                    }\n                }\n                else {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    if (_this.parent.dataType === 'pivot' && _this.control.showValuesButton && _this.parent.dataSourceSettings.values.length > 1) {\n                        var dropAxisFields = (_this.parent.dataSourceSettings.valueAxis === 'row' &&\n                            droppedClass === 'rows') ? _this.parent.dataSourceSettings.rows : (_this.parent.dataSourceSettings.valueAxis === 'column' && droppedClass === 'columns') ?\n                            _this.parent.dataSourceSettings.columns : undefined;\n                        if (draggedPosition < _this.parent.dataSourceSettings.valueIndex && ((_this.parent.dataSourceSettings.valueAxis === 'row' &&\n                            draggedClass === 'rows') || (_this.parent.dataSourceSettings.valueAxis === 'column' && draggedClass === 'columns'))) {\n                            _this.control.setProperties({\n                                dataSourceSettings: { valueIndex: _this.parent.dataSourceSettings.valueIndex - 1 }\n                            }, true);\n                        }\n                        if (!isNullOrUndefined(dropAxisFields)) {\n                            if (droppedPosition === -1 && _this.parent.dataSourceSettings.valueIndex === -1) {\n                                _this.control.setProperties({\n                                    dataSourceSettings: { valueIndex: dropAxisFields.length }\n                                }, true);\n                            }\n                            else if (droppedPosition > -1 && droppedPosition <= _this.parent.dataSourceSettings.valueIndex) {\n                                _this.control.setProperties({\n                                    dataSourceSettings: { valueIndex: _this.parent.dataSourceSettings.valueIndex + 1 }\n                                }, true);\n                            }\n                            else if (_this.parent.dataSourceSettings.valueIndex > -1 &&\n                                droppedPosition > _this.parent.dataSourceSettings.valueIndex) {\n                                droppedPosition = droppedPosition - 1;\n                            }\n                        }\n                    }\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.parent.dataType === 'olap') {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (_this.parent.dataSourceSettings.values.length === 0) {\n                        _this.removeFieldFromReport('[measures]');\n                    }\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.control) {\n                    var eventArgs = {\n                        fieldName: fieldName, droppedField: dataSourceItem,\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this.parent.dataSourceSettings),\n                        droppedAxis: droppedClass, droppedPosition: droppedPosition\n                    };\n                    control.trigger(events.onFieldDropped, eventArgs, function (droppedArgs) {\n                        dataSourceItem = droppedArgs.droppedField;\n                        if (dataSourceItem) {\n                            droppedPosition = droppedArgs.droppedPosition;\n                            droppedClass = droppedArgs.droppedAxis;\n                            switch (droppedClass) {\n                                case 'filters':\n                                    if (droppedPosition !== -1) {\n                                        _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem);\n                                    }\n                                    else {\n                                        _this.parent.dataSourceSettings.filters.push(dataSourceItem);\n                                    }\n                                    break;\n                                case 'rows':\n                                    if (droppedPosition !== -1) {\n                                        _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem);\n                                    }\n                                    else {\n                                        _this.parent.dataSourceSettings.rows.push(dataSourceItem);\n                                    }\n                                    break;\n                                case 'columns':\n                                    if (droppedPosition !== -1) {\n                                        _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem);\n                                    }\n                                    else {\n                                        _this.parent.dataSourceSettings.columns.push(dataSourceItem);\n                                    }\n                                    break;\n                                case 'values':\n                                    if (droppedPosition !== -1) {\n                                        _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem);\n                                    }\n                                    else {\n                                        _this.parent.dataSourceSettings.values.push(dataSourceItem);\n                                    }\n                                    if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail && !(_this.parent.dataSourceSettings.values.length > 1)) {\n                                        var measureField = {\n                                            name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                        };\n                                        var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                            _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                        fieldAxis.push(measureField);\n                                    }\n                                    break;\n                            }\n                            var fieldCount = droppedClass === 'columns' ? control.dataSourceSettings.columns.length :\n                                droppedClass === 'rows' ? control.dataSourceSettings.rows.length : 0;\n                            if (fieldCount !== 0 && control.dataSourceSettings.valueIndex === fieldCount) {\n                                _this.control.setProperties({ dataSourceSettings: { valueIndex: -1 } }, true);\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                nodeDropped = false;\n            }\n        });\n        return nodeDropped;\n    };\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     *\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @function removeFieldFromReport\n     * @returns {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties :\n                            fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     *\n     * @param {string} fieldName - Defines dropped field name to add dataSource.\n     * @param {IFieldOptions} fieldItem - Defines dropped field.\n     * @function getNewField\n     * @returns {IFieldOptions} - It return new field.\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName, fieldItem) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                isNamedSet: fieldItem ? fieldItem.isNamedSet : field.isNamedSets,\n                isCalculatedField: fieldItem ? fieldItem.isCalculatedField : field.isCalculatedField,\n                type: (fieldItem ? (fieldItem.type === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : fieldItem.type) :\n                    (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType)),\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                expandAll: fieldItem ? fieldItem.expandAll : field.expandAll\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                type: (fieldItem ? ((fieldItem.type === undefined || fieldItem.type === null) ?\n                    field.type === 'number' ? 'Sum' : 'Count' : fieldItem.type) :\n                    ((field.aggregateType === undefined || field.aggregateType === null) ?\n                        field.type === 'number' ? 'Sum' :\n                            'Count' : field.aggregateType)),\n                showNoDataItems: fieldItem ? fieldItem.showNoDataItems : field.showNoDataItems,\n                baseField: fieldItem ? fieldItem.baseField : field.baseField,\n                baseItem: fieldItem ? fieldItem.baseItem : field.baseItem,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                expandAll: fieldItem ? fieldItem.expandAll : field.expandAll\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     *\n     * @param {PivotCommon} parent - parent.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     *\n     * @function createErrorDialog\n     * @param {string} title - title.\n     * @param {string} description - description.\n     * @returns {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            cssClass: this.parent.cssClass,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    /** @hidden */\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n            this.errorPopUp = null;\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute, closest, EventHandler, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     *\n     * @param {PivotCommon} parent - parent\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     *\n     * @function createFilterDialog\n     * @param {any} treeData -treeData.\n     * @param {string} fieldName -fieldName.\n     * @param {string} fieldCaption -fieldCaption.\n     * @param {HTMLElement} target -target.\n     * @returns {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var _this = this;\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : '') + (this.parent.isDataOverflow ? ' ' + cls.PIVOT_FILTER_MEMBER_LIMIT : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption }\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            // content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            content: '',\n            isModal: true,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: '320px',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE) + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: this.parent.renderMode === 'Popup' ? false : true,\n            target: target,\n            cssClass: this.parent.cssClass,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        var filterArgs = {\n            cancel: false,\n            fieldName: fieldName,\n            fieldMembers: this.parent.dataSourceSettings.allowMemberFilter ? treeData : [],\n            filterSetting: this.filterObject\n        };\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        control.trigger(events.memberEditorOpen, filterArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                treeData = observedArgs.fieldMembers;\n                if (_this.allowExcelLikeFilter) {\n                    _this.createTabMenu(treeData, fieldCaption, fieldName);\n                    addClass([_this.dialogPopUp.element], 'e-excel-filter');\n                    _this.updateCheckedState();\n                }\n                else {\n                    _this.dialogPopUp.content = _this.createTreeView(treeData, fieldCaption, fieldName);\n                    _this.updateCheckedState();\n                }\n                setStyleAttribute(_this.dialogPopUp.element, { 'visibility': 'visible' });\n                if (_this.allowExcelLikeFilter) {\n                    _this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n                }\n                _this.memberTreeView.nodeChecked =\n                    _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n                _this.allMemberSelect.nodeChecked =\n                    _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n            }\n            else {\n                _this.dialogPopUp.close();\n                _this.dialogPopUp = undefined;\n            }\n        });\n    };\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-container-class', attrs: { 'type': 'button' }\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', {\n            attrs: { 'type': 'text', className: cls.EDITOR_SEARCH__INPUT_CLASS }\n        });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        this.createSortOptions(fieldName, searchWrapper, treeData);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { id: this.parent.parentID + '_SelectAllContainer', className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE\n        });\n        promptDiv.innerText = this.parent.localeObj.getConstant('noMatches');\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            searchWrapper.appendChild(levelWrapper);\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '&#8220' + filterCaption + '&#8220',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState();\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName, 'data-memberId': 'all' };\n        var data = [{ id: 'all', name: this.parent.localeObj.getConstant('all'), isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            cssClass: this.parent.cssClass\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        if (!isNullOrUndefined(this.parent.currentTreeItems)) {\n            for (var i = 0; i < this.parent.currentTreeItems.length; i++) {\n                if (this.parent.currentTreeItems[i].id.indexOf('\\n') ||\n                    this.parent.currentTreeItems[i].id.indexOf('\\n') === 0) {\n                    this.parent.currentTreeItems[i].id = this.parent.currentTreeItems[i].id.replace('\\n', ' ');\n                }\n            }\n        }\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            expandOn: 'None',\n            cssClass: this.parent.cssClass\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        if (this.parent.isDataOverflow && (this.parent.control.maxNodeLimitInMemberEditor < this.parent.currentTreeItems.length)) {\n            editorTreeWrapper.appendChild(labelWrapper);\n        }\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createSortOptions = function (fieldName, target, treeData) {\n        if (this.parent.dataType === 'pivot' && treeData && treeData.length > 0) {\n            var sortOrder = this.parent.engineModule.fieldList[fieldName].sort;\n            var sortWrapper = createElement('div', {\n                className: cls.FILTER_SORT_CLASS + ' e-btn-group' + (this.parent.enableRtl ? ' ' + cls.RTL : '') + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                id: this.parent.element.id + '_Member_Sort'\n            });\n            this.parent.element.appendChild(sortWrapper);\n            var sortAscendElement = createElement('button', {\n                className: (sortOrder === 'Ascending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Ascend', attrs: { 'type': 'button', 'aria-label': 'button' }\n            });\n            var sortDescendElement = createElement('button', {\n                className: (sortOrder === 'Descending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Descend', attrs: { 'type': 'button', 'aria-label': 'button' }\n            });\n            var sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_ASCEND_ICON_CLASS, enableRtl: this.parent.enableRtl, cssClass: this.parent.cssClass, enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            sortBtnElement.appendTo(sortAscendElement);\n            sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_DESCEND_ICON_CLASS, enableRtl: this.parent.enableRtl, cssClass: this.parent.cssClass, enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            sortBtnElement.appendTo(sortDescendElement);\n            sortWrapper.appendChild(sortAscendElement);\n            sortWrapper.appendChild(sortDescendElement);\n            target.appendChild(sortWrapper);\n            this.unWireEvent(sortAscendElement);\n            this.unWireEvent(sortDescendElement);\n            this.wireEvent(sortAscendElement, fieldName);\n            this.wireEvent(sortDescendElement, fieldName);\n        }\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop e-caret-hide' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ?\n                        engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState();\n        }, 500);\n    };\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        var target = args.event.target;\n        if (target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n        else if (args.event.keyCode === 38 && !isAllMember) {\n            removeClass(this.memberTreeView.element.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n            addClass(checkedNode, 'e-prev-active-node');\n        }\n    };\n    FilterDialog.prototype.applySorting = function (fieldName, args) {\n        var target = closest(args.target, '.' + cls.MEMBER_SORT_CLASS);\n        if (target) {\n            var sortElements = [].slice.call(closest(target, '.' + cls.FILTER_SORT_CLASS).querySelectorAll('.' + cls.MEMBER_SORT_CLASS));\n            if (target.querySelector('.' + cls.SORT_ASCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Ascending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[1]], cls.SORT_SELECTED_CLASS);\n            }\n            else if (target.querySelector('.' + cls.SORT_DESCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Descending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[0]], cls.SORT_SELECTED_CLASS);\n            }\n            else {\n                this.updateFilterMembers('None', fieldName);\n                removeClass(sortElements, cls.SORT_SELECTED_CLASS);\n            }\n        }\n    };\n    FilterDialog.prototype.updateFilterMembers = function (order, fieldName) {\n        var fieldInfo = this.parent.engineModule.fieldList[fieldName];\n        var members = order === 'None' ?\n            PivotUtil.getClonedData(fieldInfo.dateMember) : this.parent.currentTreeItems.slice();\n        var sortType = fieldInfo.isAlphanumeric ? true : undefined;\n        var isHeaderSortByDefault = false;\n        var membersInfo = fieldInfo && fieldInfo.membersOrder ?\n            fieldInfo.membersOrder.slice() : [];\n        var sortDetails = {\n            fieldName: fieldName,\n            sortOrder: order,\n            members: membersInfo && membersInfo.length > 0 ? membersInfo : Object.keys(members),\n            IsOrderChanged: false\n        };\n        if (membersInfo && membersInfo.length > 0) {\n            members = PivotUtil.applyCustomSort(sortDetails, members, sortType);\n        }\n        else {\n            var groupField = this.parent.dataSourceSettings.groupSettings.filter(function (field) {\n                return field.name === fieldName && field.type.toLocaleLowerCase() === 'number';\n            });\n            var isNumberGroupSorting = !isNullOrUndefined(groupField) && groupField.length > 0 ? true : false;\n            members =\n                PivotUtil.applyHeadersSort(members, sortDetails.sortOrder, sortType, isNumberGroupSorting);\n            isHeaderSortByDefault = true;\n        }\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        if (isHeaderSortByDefault) {\n            var copyOrder = [];\n            for (var m = 0, n = 0; m < members.length; m++) {\n                if (members[m].actualText !== 'Grand Total') {\n                    copyOrder[n++] = members[m].actualText;\n                }\n            }\n            sortDetails.members = copyOrder;\n        }\n        control.trigger(events.onHeadersSort, sortDetails);\n        if (sortDetails.IsOrderChanged) {\n            members = PivotUtil.applyCustomSort(sortDetails, members, sortType, true);\n        }\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        var treeData = [];\n        var modifiedFieldName = fieldName.replace(/[^a-zA-Z0-9 ]/g, '_');\n        var engineModule = this.parent.engineModule;\n        for (var i = 0, lnt = members.length; i < lnt; i++) {\n            if (order === 'None') {\n                var memberName = members[i].actualText.toString();\n                var nodeAttr = { 'data-fieldName': fieldName, 'data-memberId': memberName };\n                var obj = {\n                    id: modifiedFieldName + '_' + (i + 1),\n                    htmlAttributes: nodeAttr,\n                    actualText: members[i].actualText,\n                    name: this.parent.isDateField ? members[i].formattedText :\n                        engineModule.getFormattedValue(memberName, fieldName).formattedText,\n                    isSelected: this.parent.currentTreeItemsPos[members[i].actualText].isSelected\n                };\n                this.parent.currentTreeItems.push(obj);\n                if (this.editorSearch.value !== '') {\n                    if (obj.name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(obj);\n                        treeData.push(obj);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(obj);\n                    treeData.push(obj);\n                }\n            }\n            else {\n                this.parent.currentTreeItems.push(members[i]);\n                if (this.editorSearch.value !== '') {\n                    if (members[i].name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(members[i]);\n                        treeData.push(members[i]);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(members[i]);\n                    treeData.push(members[i]);\n                }\n            }\n            this.parent.currentTreeItemsPos[members[i].actualText].index = i;\n        }\n        var dataCount = this.memberTreeView.fields.dataSource.length;\n        this.memberTreeView.fields = { dataSource: treeData.slice(0, dataCount), id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        this.memberTreeView.dataBind();\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount, isSelected: obj.isSelected };\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            id: this.parent.parentID + '_FilterTabContainer',\n            className: cls.PIVOT_FILTER_TAB_CONTAINER,\n            attrs: {\n                'tabindex': '-1'\n            }\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject :\n                        undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            cssClass: this.parent.cssClass\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ?\n                    measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id &&\n                            field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter' + (this.parent.isDataOverflow ? ' ' + cls.PIVOT_FILTER_MEMBER_LIMIT : ''),\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS\n        });\n        textContentdiv.innerText = this.parent.localeObj.getConstant(type + 'TextContent');\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        betweenTextContentdiv.innerText = this.parent.localeObj.getConstant('And');\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-container' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE)\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-container' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : '')\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-container' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_container' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_container' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_container' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                inputObj1 = getInstance(inputDiv1, NumericTextBox);\n                                inputObj2 = getInstance(inputDiv2, NumericTextBox);\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                inputObj1 = getInstance(inputDiv1, MaskedTextBox);\n                                inputObj2 = getInstance(inputDiv2, MaskedTextBox);\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n                cssClass: this.parent.cssClass\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n                cssClass: this.parent.cssClass\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n                cssClass: this.parent.cssClass\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n                cssClass: this.parent.cssClass\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n                cssClass: this.parent.cssClass\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n                cssClass: this.parent.cssClass\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var inputObj1 = getInstance(inputDiv1, type === 'date' ? DateTimePicker : type === 'value' ? NumericTextBox : MaskedTextBox);\n        var inputObj2 = getInstance(inputDiv2, type === 'date' ? DateTimePicker : type === 'value' ? NumericTextBox : MaskedTextBox);\n        var value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n        var value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function () {\n        var filterDialog = this.dialogPopUp.element;\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                    var checkBoxNodes = this.allMemberSelect.element.querySelector('li');\n                    checkBoxNodes.setAttribute('aria-checked', 'false');\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length - nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, PivotUtil.cloneFilterSettings(this.parent.dataSourceSettings.filterSettings));\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    FilterDialog.prototype.wireEvent = function (element, fieldName) {\n        EventHandler.add(element, 'click', this.applySorting.bind(this, fieldName), this);\n    };\n    FilterDialog.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'click', this.applySorting);\n    };\n    /**\n     * To close filter dialog.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.editorSearch && !this.editorSearch.isDestroyed) {\n            this.editorSearch.destroy();\n            this.editorSearch = null;\n        }\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n                this.tabObj = null;\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n            this.dropMenu = null;\n        }\n        if (this.memberTreeView && !this.memberTreeView.isDestroyed) {\n            this.memberTreeView.destroy();\n            this.memberTreeView = null;\n        }\n        if (this.allMemberSelect && !this.allMemberSelect.isDestroyed) {\n            this.allMemberSelect.destroy();\n            this.allMemberSelect = null;\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            this.dialogPopUp = null;\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    /** @hidden */\n    FilterDialog.prototype.setFocus = function () {\n        if (this.parent.control.pivotButtonModule.parentElement) {\n            var pivotButtons = [].slice.call(this.parent.control.pivotButtonModule.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.parent.control.pivotButtonModule.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n *\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class.\n     *\n     * @param  {CommonArgs} control - It contains the value of control.\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.enableHtmlSanitizer = control.enableHtmlSanitizer;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.cssClass = control.cssClass;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - It returns string\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType,\n                cssClass: this.parent.cssClass\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n            this.parent.pivotCommon.cssClass = this.parent.cssClass;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initialLoad, this.initiateCommonModule, this);\n        this.parent.on(events.uiUpdate, this.initiateCommonModule, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialLoad, this.initiateCommonModule);\n        this.parent.off(events.uiUpdate, this.initiateCommonModule);\n    };\n    /**\n     * To destroy the groupingbar\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n            this.parent.pivotCommon = null;\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n * * `expandAll`: Allows you to either expand or collapse all of the headers in the pivot table for a specific field.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showEditIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"dataType\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"groupName\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n * * `expandAll`: Allows you to expand or collapse all of the pivot table's headers for a specific field.\n */\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Allows the style information to customize the pivot table cell appearance.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    __decorate([\n        Property([])\n    ], Sort.prototype, \"membersOrder\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Allows to specify the custom group information of specific field to create custom groups.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Allows options to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Allows you to set the credential information to access the specified SSAS cube.\n * > It is applicable only for OLAP data source.\n */\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"userName\", void 0);\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"password\", void 0);\n    return Authentication;\n}(ChildProperty));\nexport { Authentication };\n/**\n * Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.\n * * `catalog`: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. **Note: It is applicable only for OLAP data source.**\n * * `cube`: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. **Note: It is applicable only for OLAP data source.**\n * * `providerType`: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.\n * * `url`: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. **Note: It is applicable only for OLAP data source.**\n * * `localeIdentifier`: Allows you to set the specific culture code as number type to render pivot table with desired localization.\n * By default, the pivot table displays with culture code **1033**, which indicates \"en-US\" locale. **Note: It is applicable only for OLAP data source.**\n * * `dataSource`: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\n * You can fetch JSON data from remote server by using DataManager. **Note: It is applicable only for relational data source.**\n * * `rows`: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.\n * * `columns`: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.\n * * `values`: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.\n * * `filters`: Allows to filter the values in other axis based on the collection of filter fields in pivot table.\n * * `excludeFields`: Allows you to restrict the specific field(s) from displaying it in the field list UI.\n * You may also be unable to render the pivot table with this field(s) by doing so. **Note: It is applicable only for relational data source.**\n * * `expandAll`: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\n * By default, all the headers are collapsed in the pivot table. **Note: It is applicable only for Relational data.**\n * * `valueAxis`: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.\n * * `filterSettings`: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n * * `sortSettings`: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n * By default, the data source containing fields are display with Ascending order alone. To use this option, it requires the `enableSorting` property to be **true**.\n * * `enableSorting`: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.\n * * `formatSettings`: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n * * `drilledMembers`: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n * * `valueSortSettings`: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n * * `calculatedFieldSettings`: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n * * `allowMemberFilter`: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.\n * * `allowLabelFilter`: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.\n * * `allowValueFilter`: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.\n * * `showSubTotals`: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.\n * * `showRowSubTotals`: Allows to show or hide sub-totals in row axis of the pivot table.\n * * `showColumnSubTotals`: Allows to show or hide sub-totals in column axis of the pivot table.\n * * `showGrandTotals`: Allows to show or hide grand totals in both rows and columns axis of the pivot table.\n * * `showRowGrandTotals`: Allows to show or hide grand totals in row axis of the pivot table.\n * * `showColumnGrandTotals`: Allows to show or hide grand totals in column axis of the pivot table.\n * * `showHeaderWhenEmpty`: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\n * For example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom >> Undefined” in the header section.\n * * `alwaysShowValueHeader`: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.\n * * `conditionalFormatSettings`: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n * * `emptyCellsTextContent`: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.\n * * `groupSettings`: Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n * * `showAggregationOnValueField`: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\n * For example, if the value field \"Sold Amount\" is aggregated with Sum, it will be displayed with caption \"Sum of Sold Amount\" in its pivot button.\n * * `authentication`: Allows you to set the credential information to access the specified SSAS cube. **Note: It is applicable only for OLAP data source**.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Local')\n    ], DataSourceSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"roles\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"fieldMapping\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Property(-1)\n    ], DataSourceSettings.prototype, \"valueIndex\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property('JSON')\n    ], DataSourceSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataSourceSettings.prototype, \"subTotalsPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], DataSourceSettings.prototype, \"grandTotalsPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, Authentication)\n    ], DataSourceSettings.prototype, \"authentication\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowAutoResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Compact')\n    ], GridSettings.prototype, \"layout\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ wrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor.\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            shiftEnter: 'shift+enter',\n            ctrlEnter: 'ctrl+enter',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape',\n            ctrlShiftF: 'ctrl+shift+f'\n        };\n        this.parent = parent;\n        this.event = undefined;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'shiftTab':\n                this.processShiftTab(e);\n                break;\n            case 'enter':\n            case 'shiftEnter':\n            case 'ctrlEnter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlShiftF':\n                this.toggleFieldList(e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i + 1] ? allPivotButtons[i + 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getPrevButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i - 1] ? allPivotButtons[i - 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.allpivotButtons = function (target) {\n        var buttons = [];\n        if (target && this.parent.showGroupingBar) {\n            var columnFilterValueGroup = closest(target, '.' + cls.GRID_GROUPING_BAR_CLASS);\n            var rowGroup = closest(target, '.' + cls.GROUP_PIVOT_ROW);\n            var chartGroup = closest(target, '.' + cls.CHART_GROUPING_BAR_CLASS);\n            var tableAxis = target.classList.contains(cls.ROWSHEADER);\n            var chartAxis = void 0;\n            var rowAxis = void 0;\n            var columnFilterValueAxis = void 0;\n            if (columnFilterValueGroup !== null) {\n                rowAxis = columnFilterValueGroup.classList.contains(cls.GRID_GROUPING_BAR_CLASS);\n            }\n            else if (rowGroup !== null) {\n                columnFilterValueAxis = rowGroup.classList.contains(cls.GROUP_PIVOT_ROW);\n            }\n            else if (chartGroup !== null) {\n                chartAxis = chartGroup.classList.contains(cls.CHART_GROUPING_BAR_CLASS);\n            }\n            if (rowAxis || columnFilterValueAxis || tableAxis) {\n                var groupingbarButton = [].slice.call(this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var headerButton = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                buttons = groupingbarButton.concat(headerButton);\n            }\n            else if (chartAxis) {\n                buttons = [].slice.call(this.parent.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            }\n        }\n        return buttons;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n                var nextButton = this.getNextButton(target);\n                if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    if (this.parent.element.querySelector('.e-focused')) {\n                        this.parent.element.querySelector('.e-focused').setAttribute('tabindex', '-1');\n                        removeClass(this.parent.element.querySelectorAll('.e-focus'), 'e-focus');\n                        removeClass(this.parent.element.querySelectorAll('.e-focused'), 'e-focused');\n                        gridFocus.setFocusedElement(this.parent.element.querySelector('.e-headercell'));\n                        this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '0');\n                    }\n                    else {\n                        gridFocus.currentInfo.skipAction = true;\n                    }\n                    addClass([nextButton], 'e-btn-focused');\n                    nextButton.focus();\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList &&\n            target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList &&\n            target && closest(target, '.' + cls.PIVOT_VIEW_CLASS) && !closest(target, '.e-popup.e-popup-open')) {\n            if (this.parent.grid) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) && this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processShiftTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    target = this.parent.element.querySelector('.e-btn-focused') ? this.parent.element.querySelector('.e-btn-focused') :\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS);\n                    var allPivotButtons = this.allpivotButtons(target);\n                    if (allPivotButtons.length > 0 && allPivotButtons[allPivotButtons.length - 1]) {\n                        gridFocus.currentInfo.skipAction = true;\n                        allPivotButtons[allPivotButtons.length - 1].focus();\n                        removeClass(allPivotButtons, 'e-btn-focused');\n                        addClass([allPivotButtons[allPivotButtons.length - 1]], 'e-btn-focused');\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                var prevButton = this.getPrevButton(target);\n                if (prevButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    gridFocus.currentInfo.skipAction = true;\n                    prevButton.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && this.parent.grid && (target.classList.contains('e-movablefirst') ||\n            (target.classList.contains('e-rowsheader') && closest(target, 'tr').getAttribute('data-uid') ===\n                this.parent.grid.element.querySelector('.e-frozencontent tr').getAttribute('data-uid')))) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (target.classList.contains('e-movablefirst')) {\n                target = (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) ?\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) :\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS));\n                var element = gridFocus.getFocusedElement();\n                removeClass([element], ['e-focused', 'e-focus']);\n            }\n            var allPivotButtons_1 = this.allpivotButtons(target);\n            if (allPivotButtons_1.length > 0) {\n                gridFocus.currentInfo.skipAction = true;\n                setTimeout(function () {\n                    allPivotButtons_1[allPivotButtons_1.length - 1].focus();\n                });\n                removeClass(allPivotButtons_1, 'e-btn-focused');\n                addClass([allPivotButtons_1[allPivotButtons_1.length - 1]], 'e-btn-focused');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) &&\n            this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (e.keyCode === 13 && !e.shiftKey && !e.ctrlKey) {\n                if (target.querySelector('.' + cls.ICON)) {\n                    this.event = e;\n                    target.querySelector('.' + cls.ICON).click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                else if (target.classList.contains('e-valuescontent')) {\n                    target.dispatchEvent(new MouseEvent('dblclick', {\n                        'view': window,\n                        'bubbles': true,\n                        'cancelable': true\n                    }));\n                    if (target.querySelector('.e-numerictextbox')) {\n                        target.click();\n                    }\n                }\n                else if (target.classList.contains('e-numerictextbox')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    removeClass([element], ['e-focused', 'e-focus']);\n                }\n            }\n            else if (e.keyCode === 13 && e.shiftKey && !e.ctrlKey) {\n                if (this.parent.enableValueSorting) {\n                    this.event = e;\n                    target.click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n            else if (e.keyCode === 13 && !e.shiftKey && e.ctrlKey) {\n                if (this.parent.hyperlinkSettings && target.querySelector('a')) {\n                    target.querySelector('a').click();\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        removeClass(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR), [cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n        this.parent.renderModule.selected();\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        var target = e.target;\n        if (this.parent.grid && this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row' &&\n            !target.classList.contains('e-numerictextbox')) {\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('data-colindex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null\n                        : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[data-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('data-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[data-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[data-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e);\n                }\n            }\n        }\n        else if (target && (e.keyCode === 37 || e.keyCode === 38) &&\n            this.parent && this.parent.showGroupingBar && this.parent.groupingBarModule && !target.classList.contains('e-numerictextbox')) {\n            if (this.parent.grid && this.parent.element.querySelector('.e-frozenheader') && this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus').length > 0) {\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus'), 'e-focus');\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focused'), 'e-focused');\n                this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '-1');\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.setFocusedElement(target);\n                addClass([target], ['e-focused', 'e-focus']);\n                target.setAttribute('tabindex', '0');\n                target.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target.classList.contains('e-numerictextbox') && (e.action === 'rightArrow' || e.action === 'leftArrow')) {\n            target.click();\n        }\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[data-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    KeyboardInteraction.prototype.toggleFieldList = function (e) {\n        if (this.parent && !this.parent.isDestroyed && this.parent.showFieldList &&\n            this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed &&\n            this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (!this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN)) {\n                this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                e.preventDefault();\n                return;\n            }\n            else if (this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN) &&\n                this.parent.pivotFieldListModule.dialogRenderer && this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog &&\n                !this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.hide();\n            }\n        }\n    };\n    /**\n     *\n     * To destroy the keyboard module.\n     *\n     * @returns  {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement, remove, select } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {PivotView | PivotFieldList} parent - parent\n     * */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n        else if (this.fieldElement.getAttribute('isvalue') === 'true') {\n            for (var _c = 0, items_4 = items; _c < items_4.length; _c++) {\n                var item = items_4[_c];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue') ||\n                    item.textContent === this.parent.localeObj.getConstant('addToFilter')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n            if (select('#' + this.parent.element.id + '_PivotContextMenu', document)) {\n                remove(select('#' + this.parent.element.id + '_PivotContextMenu', document));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, Browser, closest, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../../common/base/constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.isFireFox = Browser.userAgent.toLowerCase().indexOf('firefox') > -1;\n        this.parent = parent;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     *\n     * @returns {string} - string.\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (this.parent.displayOption.view !== 'Chart') {\n            var mCont = this.parent.element.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV);\n            var gridContent = this.parent.element.querySelector('.' + cls.GRID_CONTENT);\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mScrollBar = gridContent.querySelector('.' + cls.VIRTUALTABLE_DIV);\n            EventHandler.clearEvents(mCont);\n            if (this.isFireFox) {\n                EventHandler.clearEvents(mHdr);\n            }\n            if (this.engineModule) {\n                var ele = this.parent.isAdaptive ? mCont : gridContent.querySelector('.' + cls.VIRTUALTABLE_DIV);\n                EventHandler.add(ele, 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont), this);\n                EventHandler.add(mCont.parentElement, 'scroll wheel touchmove pointermove keyup keydown', this.onVerticalScroll(mCont.parentElement, mCont), this);\n                if (this.isFireFox) {\n                    EventHandler.add(ele, 'mouseup touchend scroll', this.common(mHdr, mCont, mCont), this);\n                    if (!this.parent.isAdaptive) {\n                        EventHandler.add(mCont.parentElement, 'mouseup touchend scroll', this.common(mHdr, mCont.parentElement, mCont), this);\n                    }\n                }\n                else {\n                    EventHandler.add(ele, 'mouseup touchend', this.common(mHdr, mCont, mCont), this);\n                    if (!this.parent.isAdaptive) {\n                        EventHandler.add(mCont.parentElement, 'mouseup touchend', this.common(mHdr, mCont.parentElement, mCont), this);\n                    }\n                }\n                EventHandler.add(mScrollBar, 'scroll', this.onCustomScrollbarScroll(mCont, mHdr), this);\n                EventHandler.add(mCont, 'scroll', this.onCustomScrollbarScroll(mScrollBar, mHdr), this);\n                EventHandler.add(mHdr, 'scroll', this.onCustomScrollbarScroll(mScrollBar, mCont), this);\n                // EventHandler.add(mCont.parentElement, 'wheel', this.onWheelScroll(mCont), this);\n                // EventHandler.add(mCont.parentElement, 'touchstart pointerdown', this.setPageXY(), this);\n                // EventHandler.add(mCont.parentElement, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont), this);\n                EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n                EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont), this);\n                EventHandler.add(mCont, 'touchstart pointerdown', this.setPageXY(), this);\n                EventHandler.add(mCont, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont), this);\n            }\n            this.parent.grid.on('check-scroll-reset', function (args) {\n                args.cancel = true;\n            });\n            this.parent.grid.on('prevent-frozen-scroll-refresh', function (args) {\n                args.cancel = true;\n            });\n            this.parent.grid.isPreventScrollEvent = true;\n        }\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onCustomScrollbarScroll = function (mCont, mHdr) {\n        var _this = this;\n        var content = mCont;\n        var header = mHdr;\n        return function (e) {\n            var eContent = _this.parent.element.querySelector('.' + cls.CONTENT_CLASS);\n            if (eContent.querySelector('tbody') === null) {\n                return;\n            }\n            var target = e.target;\n            var left = target.scrollLeft;\n            if (_this.previousValues.left === left || (_this.isFireFox && target.classList.contains(cls.MOVABLEHEADER_DIV))) {\n                return;\n            }\n            content.scrollLeft = left;\n            header.scrollLeft = left;\n            // this.previousValues.left = left;\n            if (_this.parent.isDestroyed) {\n                return;\n            }\n        };\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = _this.parent.element.querySelector('.' + cls.GRID_CLASS + ' .' + cls.CONTENT_CLASS).scrollTop +\n                (_this.pageXY.y - pageXY.y);\n            var ele = _this.parent.isAdaptive ? mCont : element.parentElement.parentElement.querySelector('.' + cls.VIRTUALTABLE_DIV);\n            var left = ele.scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.frozenPreviousValues.left === left || left < 0) {\n                return;\n            }\n            mHdr.scrollLeft = left;\n            ele.scrollLeft = left;\n            _this.pageXY.x = pageXY.x;\n            _this.frozenPreviousValues.left = left;\n            if (_this.frozenPreviousValues.top === top || top < 0) {\n                return;\n            }\n            _this.pageXY.y = pageXY.y;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (top, left, e, ele, mHdr, mCont) {\n        var _this = this;\n        var virtualTable = this.parent.element.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV);\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var enableOptimizedRendering = this.parent.virtualScrollSettings && this.parent.virtualScrollSettings.allowSinglePage && this.parent.dataType === 'pivot';\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var vScrollPos = mCont.parentElement.scrollHeight - (top + mCont.parentElement.offsetHeight);\n                var rowValues = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize = (this.parent.pageSettings.rowPageSize * rowValues * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize);\n                section += enableOptimizedRendering && vScrollPos <= 0 ? 1 : 0;\n                if (((this.parent.scrollPosObject.vertical === section || engine.pageSettings.rowPageSize >= engine.rowCount) ||\n                    (virtualTable && (virtualTable.scrollHeight < (virtualTable.parentElement.clientHeight * 3)))) &&\n                    !enableOptimizedRendering) {\n                    return;\n                }\n                this.parent.actionObj.actionName = events.verticalScroll;\n                if (enableOptimizedRendering && this.parent.grid && this.parent.grid.element.querySelector('.e-spinner-inner')) {\n                    addClass([this.parent.grid.element.querySelector('.e-spinner-inner')], [cls.PIVOT_HIDE_LOADER]);\n                }\n                this.parent.actionBeginMethod();\n                if (!enableOptimizedRendering) {\n                    this.parent.showWaitingPopup();\n                }\n                this.parent.scrollPosObject.vertical = section;\n                this.parent.pageSettings.currentRowPage = engine.pageSettings.currentRowPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                this.parent.trigger(events.enginePopulating, args, function () {\n                    if (_this.parent.dataType === 'pivot') {\n                        if (_this.parent.dataSourceSettings.mode === 'Server') {\n                            _this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                        }\n                        else {\n                            _this.parent.engineModule.generateGridData(_this.parent.dataSourceSettings, true, false, _this.parent.engineModule.headerCollection);\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                        }\n                    }\n                    else {\n                        _this.parent.olapEngineModule.scrollPage();\n                        rowStartPos_1 = _this.parent.olapEngineModule.pageRowStartPos;\n                    }\n                    _this.enginePopulatedEventMethod(engine);\n                });\n                var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowPageSize * rowValues));\n                var pos = exactSize * exactPage -\n                    (engine.rowFirstLvl * rowValues * this.parent.gridSettings.rowHeight);\n                this.parent.scrollPosObject.verticalSection = pos;\n            }\n            else {\n                var hScrollPos = ele.scrollWidth - (ele.scrollLeft + ele.offsetWidth);\n                var colValues = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize = (this.parent.pageSettings.columnPageSize *\n                    colValues * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(Math.abs(left) / exactSize);\n                var enableOptimizedRendering_1 = this.parent.virtualScrollSettings && this.parent.virtualScrollSettings.allowSinglePage && this.parent.dataType === 'pivot';\n                section += enableOptimizedRendering_1 && hScrollPos <= 0 ? 1 : 0;\n                if ((this.parent.scrollPosObject.horizontal === section || (virtualTable && (virtualTable.scrollWidth <\n                    (virtualTable.parentElement.clientWidth * 3)))) && !enableOptimizedRendering_1) {\n                    return;\n                }\n                this.parent.actionObj.actionName = events.horizontalScroll;\n                if (enableOptimizedRendering_1 && this.parent.grid && this.parent.grid.element.querySelector('.e-spinner-inner')) {\n                    addClass([this.parent.grid.element.querySelector('.e-spinner-inner')], [cls.PIVOT_HIDE_LOADER]);\n                    if (mHdr) {\n                        removeClass([mHdr, mCont], ['e-virtual-pivot-content']);\n                    }\n                }\n                this.parent.actionBeginMethod();\n                if (!enableOptimizedRendering_1) {\n                    this.parent.showWaitingPopup();\n                }\n                var pivot_1 = this.parent;\n                pivot_1.scrollPosObject.horizontal = section;\n                this.parent.pageSettings.currentColumnPage = engine.pageSettings.currentColumnPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                this.parent.trigger(events.enginePopulating, args, function () {\n                    if (pivot_1.dataType === 'pivot') {\n                        if (_this.parent.dataSourceSettings.mode === 'Server') {\n                            _this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings, true, false, pivot_1.engineModule.headerCollection);\n                            colStartPos_1 = pivot_1.engineModule.colStartPos;\n                        }\n                    }\n                    else {\n                        pivot_1.olapEngineModule.scrollPage();\n                        colStartPos_1 = pivot_1.olapEngineModule.pageColStartPos;\n                    }\n                    _this.enginePopulatedEventMethod(engine);\n                });\n                var exactPage = Math.ceil(colStartPos_1 / (pivot_1.pageSettings.columnPageSize * colValues));\n                var pos = exactSize * exactPage - (engine.colFirstLvl *\n                    colValues * pivot_1.gridSettings.columnWidth);\n                pivot_1.scrollPosObject.horizontalSection = pos;\n            }\n            this.parent.actionObj.actionName = this.parent.getActionCompleteName();\n            if (this.parent.actionObj.actionName) {\n                this.parent.actionCompleteMethod();\n            }\n        }\n    };\n    VirtualScroll.prototype.enginePopulatedEventMethod = function (engine, control) {\n        var _this = this;\n        var pivot = control ? control : this.parent;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotValues: engine.pivotValues\n        };\n        pivot.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.parent.pivotValues = observedArgs.pivotValues;\n        });\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            var ele = _this.parent.isAdaptive ? mCont :\n                closest(mCont, '.' + cls.GRID_CONTENT).querySelector('.' + cls.VIRTUALTABLE_DIV);\n            var enableOptimizedRendering = _this.parent.virtualScrollSettings && _this.parent.virtualScrollSettings.allowSinglePage && _this.parent.dataType === 'pivot';\n            if (enableOptimizedRendering) {\n                if (_this.direction === 'vertical') {\n                    if (_this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)) {\n                        addClass([fCont], ['e-virtual-pivot-content']);\n                        removeClass([_this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)], [cls.PIVOT_HIDE_LOADER]);\n                    }\n                }\n                else {\n                    if (_this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)) {\n                        addClass([mHdr, mCont], ['e-virtual-pivot-content']);\n                        removeClass([_this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)], [cls.PIVOT_HIDE_LOADER]);\n                    }\n                }\n            }\n            _this.update(_this.parent.element.querySelector('.' + cls.GRID_CLASS + ' .' + cls.CONTENT_CLASS).scrollTop * _this.parent.verticalScrollScale, ele.scrollLeft * _this.parent.horizontalScrollScale, e, ele, mHdr, mCont);\n        };\n    };\n    /**\n     * It performs while scrolling horizontal scroll bar\n     *\n     * @param {HTMLElement} mHdr - It contains the header details.\n     * @param {HTMLElement} mCont - It contains the content details.\n     * @returns {Function} - It returns the table details as Function.\n     * @hidden\n     */\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont) {\n        var _this = this;\n        var timeOutObj;\n        var ele = this.parent.isAdaptive ? mCont : closest(mCont, '.' + cls.GRID_CONTENT).querySelector('.' + cls.VIRTUALTABLE_DIV);\n        var eleScrollLeft = Math.abs(ele.scrollLeft);\n        var left = eleScrollLeft * this.parent.horizontalScrollScale;\n        var horiOffset = left - this.parent.scrollPosObject.horizontalSection - eleScrollLeft;\n        horiOffset = this.parent.enableRtl ? horiOffset : -horiOffset;\n        if (ele.style.display !== 'none') {\n            this.alignFreezedCells(horiOffset, false);\n        }\n        return function (e) {\n            eleScrollLeft = Math.abs(ele.scrollLeft);\n            left = eleScrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? eleScrollLeft : left;\n                    _this.update(mCont.parentElement.scrollTop * _this.parent.verticalScrollScale, left, e, ele, mHdr, mCont);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'horizondal';\n            horiOffset = left - _this.parent.scrollPosObject.horizontalSection - eleScrollLeft;\n            horiOffset = _this.parent.enableRtl ? horiOffset : -horiOffset;\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',').length > 1 ?\n                mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() : '0px)';\n            if (eleScrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.alignFreezedCells(horiOffset, false);\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + (mHdr.offsetWidth -\n                mHdr.querySelector('.e-headercell.e-leftfreeze').offsetWidth)) -\n                (_this.parent.scrollPosObject.horizontalSection + (mCont.querySelector('.' + cls.TABLE).offsetWidth -\n                    mCont.querySelector('.' + cls.TABLE).querySelector('.e-leftfreeze.e-rowsheader').offsetWidth)));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                var enableOptimizedRendering = _this.parent.virtualScrollSettings && _this.parent.virtualScrollSettings.allowSinglePage && _this.parent.dataType === 'pivot';\n                if (enableOptimizedRendering && _this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)) {\n                    addClass([mHdr, mCont], ['e-virtual-pivot-content']);\n                    removeClass([_this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)], [cls.PIVOT_HIDE_LOADER]);\n                }\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - closest(mCont, '.' + cls.GRID_CONTENT).querySelector('.' + cls.VIRTUALTABLE_DIV).scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.alignFreezedCells(horiOffset, false);\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            var hScrollPos = (ele.scrollWidth - (eleScrollLeft + (ele.offsetWidth -\n                _this.parent.element.querySelector('.' + cls.GRID_CLASS)\n                    .querySelector('.' + cls.HEADERCELL + '.' + cls.FREEZED_CELL).offsetWidth)));\n            if (hScrollPos <= 0) {\n                var virtualDiv = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n                virtualDiv.style.display = 'none';\n                var mCntScrollPos = (mCont.scrollWidth - (mCont.scrollLeft + mCont.offsetWidth));\n                virtualDiv.style.display = '';\n                var mCntVScrollPos = (mCont.scrollWidth - (mCont.scrollLeft + mCont.offsetWidth));\n                _this.parent.scrollPosObject.horizontalSection -= mCntScrollPos > hScrollPos ? mCntScrollPos : -mCntVScrollPos;\n                horiOffset = (eleScrollLeft > _this.parent.scrollerBrowserLimit) ?\n                    Number(mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].split('px')[0].trim()) :\n                    -(((eleScrollLeft * _this.parent.horizontalScrollScale) -\n                        _this.parent.scrollPosObject.horizontalSection - eleScrollLeft));\n                setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.alignFreezedCells(horiOffset, false);\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = ele.scrollLeft;\n            mCont.scrollLeft = ele.scrollLeft;\n        };\n    };\n    /**\n     * It performs while scrolling horizontal scroll bar\n     *\n     * @param {number} horiOffset - It contains the horizondal offset translation value of freezed cells.\n     * @param {boolean} isParentCells - It helps to identify the frozen cells of the parent element.\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.alignFreezedCells = function (horiOffset, isParentCells) {\n        for (var i = 0, j = this.parent.element.querySelectorAll('.' + cls.FREEZED_CELL); i < j.length; i++) {\n            if (this.parent.isTabular && this.parent.dataSourceSettings.rows.length > 1) {\n                var rowsHeaderElement = this.parent.element.querySelector('.' + cls.FREEZED_CELL);\n                if (isParentCells) {\n                    if (this.parent.enableRtl) {\n                        j[i].style.right = -horiOffset + 'px';\n                    }\n                    else {\n                        this.setFrozenColumnPosition(horiOffset, rowsHeaderElement, i, j);\n                    }\n                }\n                else {\n                    if (this.parent.enableRtl) {\n                        j[i].style.right = (Number(horiOffset)) + 'px';\n                    }\n                    else {\n                        this.setFrozenColumnPosition(horiOffset, rowsHeaderElement, i, j);\n                    }\n                }\n            }\n            else {\n                if (isParentCells) {\n                    if (this.parent.enableRtl) {\n                        j[i].style.right = -horiOffset + 'px';\n                    }\n                    else {\n                        j[i].style.left = horiOffset + 'px';\n                    }\n                }\n                else {\n                    if (this.parent.enableRtl) {\n                        j[i].style.right = (Number(horiOffset)) + 'px';\n                    }\n                    else {\n                        j[i].style.left = (Number(-horiOffset)) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (mCont, fCont) {\n        var _this = this;\n        var timeOutObj;\n        var virtualTableElement = mCont.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV) ?\n            mCont.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV) : mCont;\n        return function (e) {\n            if (_this.parent.isAdaptive || (virtualTableElement.scrollHeight > (virtualTableElement.parentElement.clientHeight * 3))) {\n                var top_1 = mCont.scrollTop * _this.parent.verticalScrollScale;\n                if (e.type === 'wheel' || e.type === 'touchmove' || e.type === 'scroll'\n                    || _this.eventType === 'wheel' || _this.eventType === 'touchmove' || e.type === 'keyup' || e.type === 'keydown') {\n                    var ele_1 = _this.parent.isAdaptive ? mCont : closest(mCont, '.' + cls.GRID_CONTENT).querySelector('.' + cls.VIRTUALTABLE_DIV);\n                    clearTimeout(timeOutObj);\n                    timeOutObj = setTimeout(function () {\n                        var scrollLeft = 0;\n                        if (_this.parent.isAdaptive) {\n                            var contentTable = ele_1.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV);\n                            scrollLeft = (ele_1.scrollLeft === contentTable.scrollLeft) ? ele_1.scrollLeft :\n                                contentTable.scrollLeft;\n                        }\n                        else {\n                            scrollLeft = ele_1.scrollLeft;\n                        }\n                        _this.update(mCont.scrollTop * _this.parent.verticalScrollScale, scrollLeft * _this.parent.horizontalScrollScale, e, ele_1, null, mCont);\n                    }, 300);\n                }\n                if (_this.previousValues.top === top_1) {\n                    return;\n                }\n                if (_this.parent.scrollPosObject.horizontalSection < 0) {\n                    _this.parent.scrollPosObject.horizontalSection = 0;\n                }\n                _this.parent.scrollDirection = _this.direction = 'vertical';\n                var vertiOffset = -((top_1 - _this.parent.scrollPosObject.verticalSection - mCont.scrollTop));\n                var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n                if (vertiOffset > _this.parent.virtualDiv.clientHeight) {\n                    vertiOffset = _this.parent.virtualDiv.clientHeight;\n                }\n                if (mCont.scrollTop < _this.parent.scrollerBrowserLimit) {\n                    setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                        transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                    });\n                    setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                        transform: horiOffset + ',' + vertiOffset + 'px)'\n                    });\n                }\n                var excessMove = _this.parent.scrollPosObject.verticalSection > top_1 ?\n                    -(_this.parent.scrollPosObject.verticalSection - top_1) : ((top_1 + mCont.clientHeight) -\n                    (_this.parent.scrollPosObject.verticalSection + mCont.querySelector('.' + cls.TABLE).offsetHeight));\n                var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                    _this.parent.scrollerBrowserLimit;\n                if (_this.parent.scrollPosObject.verticalSection > top_1 ? true : (excessMove > 1 && notLastPage)) {\n                    //  showSpinner(this.parent.element);\n                    var enableOptimizedRendering = _this.parent.virtualScrollSettings && _this.parent.virtualScrollSettings.allowSinglePage && _this.parent.dataType === 'pivot';\n                    if (enableOptimizedRendering && _this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)) {\n                        addClass([fCont], ['e-virtual-pivot-content']);\n                        removeClass([_this.parent.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)], [cls.PIVOT_HIDE_LOADER]);\n                    }\n                    if (top_1 > mCont.clientHeight) {\n                        if (_this.parent.scrollPosObject.top < 1) {\n                            _this.parent.scrollPosObject.top = mCont.clientHeight;\n                        }\n                        _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                        excessMove = _this.parent.scrollPosObject.verticalSection > top_1 ?\n                            (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                    }\n                    else {\n                        excessMove = -_this.parent.scrollPosObject.verticalSection;\n                    }\n                    var movableTable = _this.parent.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('.' + cls.TABLE);\n                    vertiOffset = -((top_1 - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.scrollTop));\n                    var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                        - movableTable.clientHeight);\n                    if (vHeight > _this.parent.scrollerBrowserLimit) {\n                        _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                        vHeight = _this.parent.scrollerBrowserLimit;\n                    }\n                    if (vertiOffset > vHeight && vertiOffset > top_1) {\n                        vertiOffset = top_1;\n                        excessMove = 0;\n                    }\n                    if (vertiOffset > _this.parent.virtualDiv.clientHeight) {\n                        vertiOffset = _this.parent.virtualDiv.clientHeight;\n                    }\n                    setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                        transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                    });\n                    setStyleAttribute(mCont.querySelector('.' + cls.TABLE), {\n                        transform: horiOffset + ',' + vertiOffset + 'px)'\n                    });\n                    _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n                }\n                _this.previousValues.top = top_1;\n                _this.frozenPreviousValues.top = top_1;\n                _this.eventType = '';\n            }\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    VirtualScroll.prototype.setFrozenColumnPosition = function (horiOffset, rowsHeaderElement, i, j) {\n        if (rowsHeaderElement) {\n            var colIndex = Number(rowsHeaderElement.getAttribute('data-colIndex'));\n            if (colIndex > 0 && colIndex <= (this.parent.engineModule.rowMaxLevel + 1)) {\n                j[i].style.left = (colIndex * this.parent.gridSettings.columnWidth) + 'px';\n            }\n        }\n        else {\n            j[i].style.left = horiOffset + 'px';\n        }\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { SanitizeHtmlHelper, getInstance } from '@syncfusion/ej2-base';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar, ExcelExport, PdfExport } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     *\n     * @param {PivotView} parent - parent.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.isUpdated = false;\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    /**\n     * show Drill Through Dialog\n     *\n     * @param {DrillThroughEventArgs} eventArgs - eventArgs.\n     * @returns {void}\n     * @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        var gridData = eventArgs.rawData;\n        var clonedData = [];\n        var gridIndexObjects = {};\n        for (var i = 0; i < eventArgs.rawData.length; i++) {\n            clonedData.push(PivotUtil.frameHeaderWithKeys(eventArgs.rawData[i]));\n        }\n        // let actualText: string = eventArgs.currentCell.actualText.toString();\n        try {\n            if (this.parent.currentView === 'Table' && this.parent.editSettings.allowInlineEditing &&\n                this.parent.editSettings.allowEditing && eventArgs.rawData.length === 1) {\n                this.parent.actionObj.actionName = events.editRecord;\n                if (this.parent.actionBeginMethod()) {\n                    return;\n                }\n                this.editCell(eventArgs, gridData);\n            }\n            else {\n                this.removeDrillThroughDialog();\n                var drillThroughDialog = createElement('div', {\n                    id: this.parent.element.id + '_drillthrough',\n                    className: cls.DRILLTHROUGH_DIALOG\n                });\n                this.parent.element.appendChild(drillThroughDialog);\n                this.dialogPopUp = new Dialog({\n                    animationSettings: { effect: 'Fade' },\n                    allowDragging: false,\n                    header: this.parent.localeObj.getConstant('details'),\n                    content: this.createDrillThroughGrid(eventArgs, gridData),\n                    cssClass: this.parent.cssClass,\n                    beforeOpen: function () {\n                        _this.drillThroughGrid.setProperties({\n                            dataSource: _this.parent.editSettings.allowEditing ?\n                                _this.dataWithPrimarykey(eventArgs, gridData, gridIndexObjects) : gridData,\n                            height: !_this.parent.editSettings.allowEditing ? 300 : 220\n                        }, false);\n                    },\n                    beforeClose: function () {\n                        if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                            if (_this.parent.dataSourceSettings.type === 'CSV') {\n                                _this.updateData(_this.drillThroughGrid.dataSource);\n                            }\n                            var gridIndexObjectsValue = Object.keys(gridIndexObjects);\n                            var previousPosition = [];\n                            for (var _i = 0, gridIndexObjectsValue_1 = gridIndexObjectsValue; _i < gridIndexObjectsValue_1.length; _i++) {\n                                var value = gridIndexObjectsValue_1[_i];\n                                previousPosition.push(gridIndexObjects[value]);\n                            }\n                            var count = Object.keys(gridIndexObjects).length;\n                            var addItems = [];\n                            var prevItems = [];\n                            var index = 0;\n                            for (var _a = 0, _b = _this.drillThroughGrid.dataSource; _a < _b.length; _a++) {\n                                var item = _b[_a];\n                                if (item['__index'] === '0' || item['__index'] === '') {\n                                    for (var _c = 0, _d = _this.engine.fields; _c < _d.length; _c++) {\n                                        var field = _d[_c];\n                                        if (isNullOrUndefined(item[field])) {\n                                            delete item[field];\n                                        }\n                                    }\n                                    delete item['__index'];\n                                    addItems.push(item);\n                                }\n                                else if (count > 0) {\n                                    delete gridIndexObjects[item['__index'].toString()];\n                                    prevItems.push(item);\n                                    count--;\n                                }\n                                if (_this.parent.dataSourceSettings.mode === 'Server') {\n                                    if (item['__index']) {\n                                        delete item['__index'];\n                                    }\n                                    if (gridData[index]['__index']) {\n                                        delete gridData[index]['__index'];\n                                    }\n                                }\n                                index++;\n                            }\n                            count = 0;\n                            if (_this.parent.dataSourceSettings.mode === 'Server') {\n                                var gridIndex = [];\n                                var keys = Object.keys(gridIndexObjects);\n                                for (var len = 0; len < keys.length; len++) {\n                                    delete _this.parent.drillThroughValue.indexObject[gridIndexObjects[keys[len]]];\n                                    gridIndex.push({ Key: keys[len], Value: gridIndexObjects[keys[len]] });\n                                }\n                                _this.parent.getEngine('updateRawData', null, null, null, null, null, null, null, {\n                                    'addedData': addItems, 'removedData': gridIndex, 'updatedData': prevItems,\n                                    indexObject: _this.parent.drillThroughValue.indexObject\n                                });\n                            }\n                            else {\n                                var items = [];\n                                var data = _this.parent.allowDataCompression\n                                    ? _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                                for (var _e = 0, _f = data; _e < _f.length; _e++) {\n                                    var item = _f[_e];\n                                    delete item['__index'];\n                                    if (gridIndexObjects[count.toString()] === undefined) {\n                                        items.push(item);\n                                    }\n                                    count++;\n                                }\n                                items = items.concat(addItems);\n                                var eventArgs_1 = {\n                                    currentData: _this.drillThroughGrid.dataSource,\n                                    previousData: clonedData,\n                                    previousPosition: previousPosition,\n                                    cancel: false\n                                };\n                                _this.parent.trigger(events.editCompleted, eventArgs_1);\n                                if (!eventArgs_1.cancel) {\n                                    _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                                    _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                                    _this.parent.pivotValues = _this.engine.pivotValues;\n                                }\n                            }\n                            _this.parent.actionObj.actionName = events.recordUpdated;\n                            var actionInfo = {\n                                editInfo: {\n                                    type: _this.drillThroughGrid.editSettings.mode, action: 'Update', currentData: _this.drillThroughGrid.dataSource,\n                                    previousData: clonedData, previousPosition: previousPosition\n                                }\n                            };\n                            _this.parent.actionObj.actionInfo = actionInfo;\n                        }\n                        _this.isUpdated = false;\n                        gridIndexObjects = {};\n                    },\n                    isModal: true,\n                    visible: true,\n                    showCloseIcon: true,\n                    locale: this.parent.locale,\n                    enableRtl: this.parent.enableRtl,\n                    enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                    width: this.parent.isAdaptive ? '100%' : '60%',\n                    position: { X: 'center', Y: 'center' },\n                    closeOnEscape: !this.parent.editSettings.allowEditing,\n                    target: document.body,\n                    close: this.removeDrillThroughDialog.bind(this)\n                });\n                this.dialogPopUp.isStringTemplate = true;\n                this.dialogPopUp.appendTo(drillThroughDialog);\n                // this.dialogPopUp.element.querySelector('.e-dlg-header').innerText = this.parent.localeObj.getConstant('details');\n                setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n                var drillKeyConfigs = {\n                    escape: 'escape'\n                };\n                if (this.parent.editSettings.allowEditing) {\n                    this.drillthroughKeyboardModule = new KeyboardEvents(this.dialogPopUp.element, {\n                        keyAction: this.drillthroughKeyActionHandler.bind(this),\n                        keyConfigs: drillKeyConfigs,\n                        eventName: 'keydown'\n                    });\n                }\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    DrillThroughDialog.prototype.editCell = function (eventArgs, gridData) {\n        var _this = this;\n        var gridResize = this.parent.gridSettings.allowResizing;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        var indexObject = Number(Object.keys(eventArgs.currentCell.indexObject));\n        eventArgs.currentTarget.firstElementChild.style.display = 'none';\n        var cellValue = Number(eventArgs.rawData[0][actualText]);\n        var previousData = PivotUtil.frameHeaderWithKeys(eventArgs.rawData[eventArgs.rawData.length - 1]);\n        var currentData = eventArgs.rawData[eventArgs.rawData.length - 1];\n        // if (eventArgs.currentCell.actualText in previousData) {\n        //     currentData[eventArgs.currentCell.actualText] = eventArgs.currentCell.actualValue;\n        // }\n        var actionInfo = {\n            editInfo: { type: 'Inline editing', action: 'update', data: gridData }\n        };\n        this.parent.actionObj.actionInfo = actionInfo;\n        var numericTextBox = new NumericTextBox({\n            value: cellValue,\n            enableRtl: this.parent.enableRtl,\n            enabled: true,\n            format: '####.##',\n            locale: this.parent.locale,\n            cssClass: this.parent.cssClass,\n            change: function () {\n                var textBoxValue = isNullOrUndefined(numericTextBox.value) ? 0 : numericTextBox.value;\n                var indexValue = eventArgs.currentCell.indexObject[indexObject];\n                eventArgs.rawData[0][actualText] = textBoxValue;\n                _this.parent.engineModule.data[indexValue] = eventArgs.rawData[0];\n            },\n            blur: function () {\n                var eventArgs = {\n                    currentData: [currentData],\n                    previousData: [previousData],\n                    previousPosition: [currentData.index],\n                    cancel: false\n                };\n                _this.parent.trigger(events.editCompleted, eventArgs);\n                if (!eventArgs.cancel) {\n                    if (_this.parent.dataSourceSettings.mode === 'Server') {\n                        var dataIndex = {};\n                        dataIndex[indexObject] = indexObject;\n                        var prevItems = [currentData];\n                        _this.parent.getEngine('updateRawData', null, null, null, null, null, null, null, {\n                            'addedData': [], 'removedData': [], 'updatedData': prevItems,\n                            indexObject: dataIndex\n                        });\n                    }\n                    _this.parent.setProperties({ dataSourceSettings: { dataSource: _this.parent.engineModule.data } }, true);\n                    _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                    _this.parent.pivotValues = _this.engine.pivotValues;\n                    _this.parent.gridSettings.allowResizing = gridResize;\n                }\n            }\n        });\n        var textBoxElement = createElement('input', {\n            id: this.parent.element.id + '_inputbox'\n        });\n        eventArgs.currentTarget.appendChild(textBoxElement);\n        numericTextBox.appendTo(textBoxElement);\n        eventArgs.currentCell.value = numericTextBox.value;\n        numericTextBox.focusIn();\n        this.parent.gridSettings.allowResizing = false;\n    };\n    DrillThroughDialog.prototype.updateData = function (dataSource) {\n        var dataPos = 0;\n        var data = this.parent.allowDataCompression ?\n            this.parent.engineModule.actualData : this.parent.engineModule.data;\n        while (dataPos < dataSource.length) {\n            var fields = Object.keys(dataSource[dataPos]);\n            var keyPos = 0;\n            var framedSet = [];\n            while (keyPos < fields.length) {\n                if (!isNullOrUndefined(this.parent.engineModule.fieldKeys[fields[keyPos]])) {\n                    framedSet[this.parent.engineModule.fieldKeys[fields[keyPos]]] =\n                        ((dataSource)[dataPos])[fields[keyPos]];\n                }\n                keyPos++;\n            }\n            data[Number(dataSource[dataPos]['__index'])] = framedSet;\n            dataPos++;\n        }\n        if (this.parent.allowDataCompression) {\n            this.parent.engineModule.actualData = data;\n        }\n        else {\n            this.parent.engineModule.data = data;\n        }\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.parent.actionObj.actionName = events.drillThroughClosed;\n            if (this.parent.actionObj.actionName) {\n                this.parent.actionCompleteMethod();\n            }\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs, gridData) {\n        var _this = this;\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> : <span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> : <span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> : <span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            cssClass: this.parent.cssClass,\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            enableHover: false,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: !this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing,\n            pageSettings: { pageSize: 20 },\n            rowHeight: this.parent.gridSettings.rowHeight,\n            height: '100%'\n        });\n        if (this.parent.dataType === 'olap') {\n            this.formatData(gridData);\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.drillThroughGrid.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (this.drillThroughGrid.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            try {\n                this.drillThroughGrid.editSettings = this.parent.editSettings;\n                this.drillThroughGrid.actionBegin = function (args) {\n                    var actionName = (args.requestType === 'save') ? events.saveEditedRecords :\n                        (args.requestType === 'add') ? events.addNewRecord : (args.requestType === 'delete') ?\n                            events.removeRecord : '';\n                    _this.parent.actionObj.actionName = actionName;\n                    if (_this.parent.actionObj.actionName) {\n                        if (_this.parent.actionBeginMethod()) {\n                            return;\n                        }\n                    }\n                };\n                if (this.parent.editSettings.allowCommandColumns) {\n                    this.drillThroughGrid.editSettings.mode = 'Normal';\n                    this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                    Grid.Inject(CommandColumn);\n                    this.drillThroughGrid.columns.push({\n                        headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                        commands: [\n                            { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '') } },\n                            { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '') } },\n                            { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '') } },\n                            { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '') } }\n                        ]\n                    });\n                }\n                else {\n                    this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n                }\n                this.drillThroughGrid.columns.push({\n                    field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false,\n                    defaultValue: '0', validationRules: { required: true }\n                });\n            }\n            catch (execption) {\n                this.parent.actionFailureMethod(execption);\n            }\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                _this.parent.actionObj.actionName = _this.parent.getActionCompleteName();\n                var actionInfo = {\n                    editInfo: { type: _this.drillThroughGrid.editSettings.mode, action: args.requestType, data: gridData }\n                };\n                _this.parent.actionObj.actionInfo = actionInfo;\n                if (_this.parent.actionObj.actionName) {\n                    _this.parent.actionCompleteMethod();\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /**\n     * frame Grid Columns\n     *\n     * @param {IDataSet[]} rawData - rawData.\n     * @returns {ColumnModel[]} - frame Grid Columns\n     * @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function (rawData) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var keys = this.parent.dataType === 'olap' ? rawData[0] ? Object.keys(rawData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        var formatList = {};\n        if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n            for (var i = 0; i < this.parent.dataSourceSettings.formatSettings.length; i++) {\n                formatList[this.parent.dataSourceSettings.formatSettings[i].name] =\n                    this.parent.dataSourceSettings.formatSettings[i].format;\n            }\n        }\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    format: !isNullOrUndefined(formatList[key]) ? formatList[key] : null,\n                    type: !isNullOrUndefined(formatList[key]) ? null : 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    var isDateField = ((this.engine.fieldList[key].type === 'date' || this.engine.fieldList[key].type === 'datetime')\n                        && (this.isDateFieldExist(key) || (rawData[0] && rawData[0][key] && rawData[0][key].toString().indexOf(' ') === -1))) ? true : false;\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date' && isDateField) {\n                        editType = 'datepickeredit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'datetime' && isDateField) {\n                        editType = 'datetimepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    var caption = this.parent.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(this.engine.fieldList[key].caption)\n                        : this.engine.fieldList[key].caption;\n                    columns.push({\n                        field: key,\n                        headerText: caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        format: !isNullOrUndefined(formatList[key]) ? formatList[key] : undefined,\n                        type: !isNullOrUndefined(formatList[key]) ? null : 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.isDateFieldExist = function (key) {\n        for (var len = 0; len < this.parent.dataSourceSettings.formatSettings.length; len++) {\n            if (this.parent.dataSourceSettings.formatSettings[len].name === key &&\n                this.parent.dataSourceSettings.formatSettings[len].type.indexOf('date') > -1) {\n                return true;\n            }\n        }\n        for (var len = 0; len < this.parent.dataSourceSettings.fieldMapping.length; len++) {\n            if (this.parent.dataSourceSettings.fieldMapping[len].name === key &&\n                this.parent.dataSourceSettings.fieldMapping[len].dataType &&\n                this.parent.dataSourceSettings.fieldMapping[len].dataType.indexOf('date') > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    DrillThroughDialog.prototype.formatData = function (gridData) {\n        var index = 0;\n        while (index < gridData.length) {\n            var data = gridData[index];\n            var keys = Object.keys(gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs, gridData, gridIndexObjects) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            item['__index'] = indexString[count];\n            gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    DrillThroughDialog.prototype.drillthroughKeyActionHandler = function (e) {\n        switch (e.action) {\n            case 'escape':\n                this.processClose(e);\n                break;\n        }\n    };\n    DrillThroughDialog.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            var dialogInstance = getInstance(closest(target, '.e-popup.e-popup-open'), Dialog);\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the drillthrough keyboard module.\n     *\n     * @returns  {void}\n     * @hidden\n     */\n    DrillThroughDialog.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.drillthroughKeyboardModule && !this.drillthroughKeyboardModule.isDestroyed) {\n            this.drillthroughKeyboardModule.destroy();\n            this.drillthroughKeyboardModule = null;\n        }\n        else {\n            return;\n        }\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { closest, EventHandler, isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     *\n     * @returns {string} - string.\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillThrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-stackedheadertext') || target.classList.contains('e-headertext')) {\n            ele = closest(target.parentElement, 'th');\n        }\n        else if (target.classList.contains('e-cellvalue')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        if (ele) {\n            if (this.parent.pivotValues.length > 0 && this.parent.dataSourceSettings.values.length > 0 &&\n                (this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && ele.classList.contains('e-valuescontent')) {\n                var colIndex = Number(ele.getAttribute('data-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (!isNullOrUndefined(this.parent.pivotValues[rowIndex]) &&\n                    !isNullOrUndefined(this.parent.pivotValues[rowIndex][colIndex])) {\n                    this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        this.parent.drillThroughElement = element;\n        this.parent.drillThroughValue = pivotValue;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (!isNullOrUndefined(pivotValue.rowHeaders) && !isNullOrUndefined(pivotValue.columnHeaders)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n                aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n                try {\n                    this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    if (this.parent.olapEngineModule.errorInfo) {\n                        this.parent.actionFailureMethod(this.parent.olapEngineModule.errorInfo);\n                    }\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.olapEngineModule.errorInfo ?\n                        this.parent.olapEngineModule.errorInfo : engine.gridJSON);\n                    this.parent.olapEngineModule.errorInfo = undefined;\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                if (this.parent.dataSourceSettings.mode === 'Server') {\n                    this.parent.getEngine('fetchRawData', null, null, null, null, null, null, { rowIndex: rowIndex, columnIndex: colIndex });\n                }\n                else {\n                    if (this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (this.parent.dataSourceSettings.mode !== 'Server') {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ?\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos]\n                        .field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] :\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos]\n                        .field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    /** @hidden */\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        valuetText = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(valuetText) : valuetText;\n        var rowHeaders = this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.getRowText(Number(element.getAttribute('index')), 0) :\n            pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: rowHeaders,\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    /**\n     * To destroy the drillthrough module.\n     *\n     * @returns  {void}\n     * @hidden\n     */\n    DrillThrough.prototype.destroy = function () {\n        this.unWireEvents();\n        if (this.drillThroughDialog) {\n            this.drillThroughDialog.destroy();\n            this.drillThroughDialog = null;\n        }\n        else {\n            return;\n        }\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries, Selection, StripLine, DataLabel, StackingLineSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationChart, PieSeries, FunnelSeries, PyramidSeries } from '@syncfusion/ej2-charts';\nimport { SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries } from '@syncfusion/ej2-charts';\nimport { MultiColoredAreaSeries, SplineSeries, StepLineSeries, AccumulationLegend, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries } from '@syncfusion/ej2-charts';\nimport { RadarSeries } from '@syncfusion/ej2-charts';\nimport { ScrollBar, Zoom, PolarSeries } from '@syncfusion/ej2-charts';\nimport { ParetoSeries, Export, Crosshair, MultiLevelLabel } from '@syncfusion/ej2-charts';\nimport { BubbleSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDataLabel, getSeriesColor } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, select } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\nimport { hideSpinner } from '@syncfusion/ej2-popups';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar PivotChart = /** @class */ (function () {\n    /**\n     * Constructor for pivot chart module.\n     *\n     *  @param {PivotView} parent - Instance of pivot table.\n     */\n    function PivotChart(parent) {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.selectedLegend = 0;\n        this.chartSeriesInfo = {};\n        this.measurePos = -1;\n        this.measuresNames = {};\n        this.accumulationType = ['Pie', 'Pyramid', 'Doughnut', 'Funnel'];\n        this.isChartInitial = true;\n        this.parent = parent;\n    }\n    /**\n     * Get component name.\n     *\n     * @returns {string} - string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotChart';\n    };\n    /**\n     * Initialize the pivot chart rendering\n     *\n     * @param {PivotView} parent - Specifies the pivot table component instance.\n     * @param {ChartSettingsModel} chartSettings - Specifies the chart settings.\n     * @returns {void}\n     * @private\n     */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.dataSourceSettings.url !== '' && !parent.olapEngineModule.isEmptyData &&\n                parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : this.parent.dataSourceSettings.mode === 'Server' ? (!isNullOrUndefined(parent.dataSourceSettings.url) &&\n                parent.dataSourceSettings.url !== '' && parent.dataSourceSettings.values.length > 0 && !parent.engineModule.isEmptyData) :\n                (parent.dataSourceSettings.values.length > 0 && parent.dataSourceSettings.dataSource &&\n                    (parent.dataSourceSettings.dataSource.length > 0 ||\n                        (parent.dataSourceSettings.dataSource instanceof DataManager)) && !parent.engineModule.isEmptyData);\n        if (isDataAvail) {\n            if (!this.parent.chart && (this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart'))) {\n                remove(select('#' + this.parent.element.id + '_chart', this.parent.element));\n            }\n            if (this.chartSettings.enableMultipleAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0 && this.chartSettings.chartSeries.type !== 'Pareto') {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n                if ((this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                    this.measuresNames[field.caption ? field.caption : field.name] = field.name;\n                }\n            }\n        }\n        else if (this.parent.chart) {\n            if (this.parent.element.querySelector('.e-chart')) {\n                this.parent.chart.series = [];\n                this.parent.chart.rows = [];\n                this.parent.chart.primaryXAxis.title = '';\n                this.parent.chart.primaryYAxis.title = '';\n                this.parent.chart.primaryXAxis.multiLevelLabels = [];\n                this.parent.chart.primaryYAxis.multiLevelLabels = [];\n                if (this.parent.chart.axes.length > 0) {\n                    this.parent.chart.axes[0].title = '';\n                }\n                this.parent.chart.primaryXAxis.zoomFactor = isNullOrUndefined(this.parent.chartSettings.primaryXAxis.zoomFactor)\n                    ? 1 : this.parent.chartSettings.primaryXAxis.zoomFactor;\n            }\n            else if (this.parent.element.querySelector('.e-accumulationchart')) {\n                this.parent.chart.series[0].dataSource = [{}];\n                this.parent.chart.series[0].dataLabel = {};\n            }\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            this.parent.appendChartElement();\n            if (this.parent.enableVirtualization && this.isChartInitial) {\n                this.isChartInitial = false;\n                this.parent.onContentReady();\n            }\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        this.accEmptyPoint = false;\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = (chartSettings.enableMultipleAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0 && this.chartSettings.chartSeries.type !== 'Pareto') ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        var drillDimension = '';\n        this.chartSeriesInfo = {};\n        this.selectedLegend = 0;\n        var isDrill = false;\n        var measureNames = {};\n        var isValidHeader = false;\n        var delimiter = this.parent.dataSourceSettings.valueSortSettings.headerDelimiter;\n        for (var _b = 0, _c = this.dataSourceSettings.values; _b < _c.length; _b++) {\n            var field = _c[_b];\n            var fieldName = field.name;\n            measureNames[fieldName] = field.caption ? field.caption : fieldName;\n            measureNames[field.caption ? field.caption : fieldName] = fieldName;\n        }\n        if (this.parent.dataType === 'olap') {\n            var fieldPosition = [];\n            levelPos = this.groupHierarchyWithLevels(pivotValues, fieldPosition);\n            lastHierarchy = fieldPosition[fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (fieldPosition.length - 1) && fieldPosition.length > 1) ?\n                fieldPosition[fieldPosition.length - 2] : lastHierarchy;\n            drillDimension = lastDimension;\n        }\n        for (var _d = 0, rKeys_1 = rKeys; _d < rKeys_1.length; _d++) {\n            var rKey = rKeys_1[_d];\n            var rowIndex = Number(rKey);\n            if (!isNullOrUndefined(pivotValues[rowIndex])) {\n                var header = pivotValues[rowIndex][0];\n                var valueSort = header && header.valueSort && !isNullOrUndefined(header.valueSort.levelName) ?\n                    header.valueSort.levelName.toString().split(delimiter) : undefined;\n                isValidHeader = false;\n                if (valueSort && valueSort[0] !== 'Grand Total') {\n                    if ((chartSettings.enableMultipleAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0 && this.chartSettings.chartSeries.type !== 'Pareto') ||\n                        valueSort.indexOf(measureNames[this.currentMeasure]) > -1) {\n                        isValidHeader = true;\n                    }\n                    if (!isValidHeader) {\n                        for (var _e = 0, valueSort_1 = valueSort; _e < valueSort_1.length; _e++) {\n                            var levelName = valueSort_1[_e];\n                            if (measureNames[levelName]) {\n                                isValidHeader = true;\n                                break;\n                            }\n                        }\n                        isValidHeader = isValidHeader ? false : true;\n                    }\n                }\n                if (header && header.axis === 'row' && (this.dataSourceSettings.rows.length === 0 ? true :\n                    (header.type !== 'grand sum' && isValidHeader))) {\n                    var firstRowCell = pivotValues[rowIndex][0];\n                    if (firstRowCell.isSum) {\n                        continue;\n                    }\n                    var tupInfo = this.parent.dataType === 'olap' ?\n                        this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                    var fieldPos = -1;\n                    var currrentLevel = firstRowCell.level;\n                    if (this.parent.dataType === 'olap') {\n                        isDrill = firstRowCell.hierarchy === '[Measures]' ? isDrill : this.isAttributeDrill(firstRowCell.hierarchy, tupInfo.drillInfo);\n                        drillDimension = drillDimension === lastDimension ? lastDimension : (firstRowCell.hierarchy === '[Measures]' || firstRowCell.isNamedSet || (this.engineModule.fieldList[firstRowCell.hierarchy] && !this.engineModule.fieldList[firstRowCell.hierarchy].hasAllMember)) ? lastDimension : drillDimension;\n                        fieldPos = tupInfo.drillInfo.length - 1;\n                        if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                            tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                            firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                            integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                            levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                            integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                                (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                    (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                    (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ?\n                                        (levelPos[firstRowCell.hierarchy].start) :\n                                        levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                            levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                            currrentLevel = integratedLevel;\n                            indexCount += (prevCell && drillDimension === prevCell.hierarchy && !(prevCell.isDrilled && prevCell.hasChild))\n                                ? 1 : 0;\n                            drillDimension = isDrill ? firstRowCell.hierarchy : lastDimension;\n                            prevLevel = integratedLevel;\n                            prevCell = firstRowCell;\n                        }\n                    }\n                    else if (firstRowCell.type !== 'value') {\n                        if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                            indexCount++;\n                        }\n                        prevLevel = currrentLevel;\n                    }\n                    this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                    var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                        (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                    var values = this.engineModule.fieldList[this.currentMeasure];\n                    var text = this.parent.dataSourceSettings.rows.length === 0 ? this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(values.aggregateType) + ' ' +\n                        this.parent.localeObj.getConstant('of') + ' ' + (!isNullOrUndefined(values.caption) ? values.caption : values.name) : firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                    var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                        ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                    var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort.levelName.toString();\n                    var cellInfo = {\n                        name: name_1,\n                        text: caption,\n                        hasChild: firstRowCell.hasChild,\n                        isDrilled: firstRowCell.isDrilled,\n                        levelName: levelName,\n                        level: currrentLevel,\n                        fieldName: firstRowCell.valueSort.axis ? firstRowCell.valueSort.axis.toString() : '',\n                        rowIndex: rowIndex,\n                        colIndex: 0,\n                        cell: firstRowCell\n                    };\n                    if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                        if (this.headerColl[indexCount]) {\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                        else {\n                            this.headerColl[indexCount] = {};\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                    }\n                    var rows = pivotValues[rowIndex];\n                    var cKeys = Object.keys(rows);\n                    var prevMemberCell = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                    }\n                    else {\n                        memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                        if (firstRowCell.type !== 'value') {\n                            memberCell = firstRowCell;\n                        }\n                        else {\n                            var valueSort_2 = firstRowCell && firstRowCell.valueSort && firstRowCell.valueSort.levelName &&\n                                firstRowCell.valueSort.levelName.toString().split(delimiter);\n                            var levelName_1 = void 0;\n                            if (valueSort_2 && valueSort_2.length > 0) {\n                                valueSort_2.splice(valueSort_2.length - 1, 1);\n                                levelName_1 = valueSort_2.join(delimiter);\n                            }\n                            if ((this.parent.dataSourceSettings.valueIndex <= 0 || this.engineModule.valueAxis &&\n                                this.dataSourceSettings.rows.length === this.engineModule.measureIndex) ||\n                                isNullOrUndefined(memberCell.valueSort) || (levelName_1 === memberCell.valueSort.levelName)) {\n                                memberCell = memberCell;\n                            }\n                            else {\n                                var prevIndex = rowIndex;\n                                while (prevIndex > -1) {\n                                    if (pivotValues[prevIndex] && pivotValues[prevIndex][0] &&\n                                        pivotValues[prevIndex][0].valueSort &&\n                                        pivotValues[prevIndex][0].valueSort.levelName === levelName_1) {\n                                        memberCell = pivotValues[prevIndex][0];\n                                        prevIndex = 0;\n                                    }\n                                    prevIndex--;\n                                }\n                            }\n                        }\n                    }\n                    for (var _f = 0, cKeys_1 = cKeys; _f < cKeys_1.length; _f++) {\n                        var cKey = cKeys_1[_f];\n                        var cellIndex = Number(cKey);\n                        var cell = pivotValues[rowIndex][cellIndex];\n                        var measureAllow = isNullOrUndefined(cell.rowHeaders) ? this.dataSourceSettings.rows.length === 0 : true;\n                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                            tupInfo.measureName : cell.actualText;\n                        if (!(this.parent.dataType === 'olap' && cell.isGrandSum) && !totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                            actualText !== '' && ((chartSettings.enableMultipleAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0 && this.chartSettings.chartSeries.type !== 'Pareto') ? true : actualText === this.currentMeasure)) {\n                            if (isNullOrUndefined(firstRowCell.members)) {\n                                firstRowCell.members = [];\n                            }\n                            if (this.parent.dataType === 'olap' ? ((lastHierarchy === firstRowCell.hierarchy || isDrill) ?\n                                ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                    (fieldPos === this.measurePos ? (prevMemberCell.isDrilled && prevMemberCell.hasChild) : true) :\n                                    (firstRowCell.isDrilled && firstRowCell.hasChild)) : true)\n                                : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                    (!isNullOrUndefined(prevMemberCell.members) && prevMemberCell.hasChild &&\n                                        prevMemberCell.isDrilled) : firstRowCell.hasChild && firstRowCell.isDrilled) ||\n                                    !measureAllow)) {\n                                break;\n                            }\n                            if (this.parent.dataType === 'olap' && cell.isSum === true && this.parent.dataSourceSettings.valueAxis === 'row') {\n                                continue;\n                            }\n                            var colHeaders = '';\n                            if (this.parent.dataType === 'olap') {\n                                colHeaders = cell.columnHeaders.toString().split(/~~|::/).join(' - ');\n                            }\n                            else {\n                                var values_1 = cell.columnHeaders.toString().split(delimiter);\n                                colHeaders = PivotUtil.formatChartHeaders(values_1, this, true);\n                            }\n                            var rowHeaders = '';\n                            if (this.parent.dataType === 'olap') {\n                                rowHeaders = cell.rowHeaders.toString().split(/~~|::/).join(' - ');\n                            }\n                            else {\n                                var values_2 = cell.rowHeaders.toString().split(delimiter);\n                                rowHeaders = PivotUtil.formatChartHeaders(values_2, this, false);\n                            }\n                            var columnSeries = colHeaders + ' | ' + actualText;\n                            this.chartSeriesInfo[colHeaders] = { uniqueName: colHeaders, caption: cell.hierarchyName && cell.hierarchyName.toString().split(delimiter).join(' - '), colorIndex: [] };\n                            this.chartSeriesInfo[this.chartSeriesInfo[colHeaders].caption] =\n                                this.chartSeriesInfo[colHeaders];\n                            var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                                !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                                Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) :\n                                (!isNullOrUndefined(cell.value) ? Number(cell.value) : cell.value) : (!isNullOrUndefined(cell.value)\n                                ? Number(cell.value) : cell.value));\n                            yValue = yValue === Infinity ? null : yValue;\n                            if (yValue === 0) {\n                                this.accEmptyPoint = true;\n                            }\n                            if (this.columnGroupObject[columnSeries]) {\n                                this.columnGroupObject[columnSeries].push({\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue,\n                                    rIndex: rowIndex,\n                                    cIndex: cellIndex\n                                });\n                            }\n                            else {\n                                this.columnGroupObject[columnSeries] = [{\n                                        x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                        y: yValue,\n                                        rIndex: rowIndex,\n                                        cIndex: cellIndex\n                                    }];\n                            }\n                        }\n                        prevMemberCell = memberCell;\n                    }\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var prevColorIndex = 0;\n        var chartSeriesInfo = {};\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getChartSettings()).chartSettings;\n        var seriesColors = this.persistSettings.palettes && this.persistSettings.palettes.length > 0\n            ? this.persistSettings.palettes : getSeriesColor(this.chartSettings.theme);\n        var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n        var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n            this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n        var chartType = this.chartSettings.chartSeries ? this.chartSettings.chartSeries.type : undefined;\n        var fieldWithCaption = {};\n        for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n            fieldWithCaption[this.parent.dataSourceSettings.values[i].name] =\n                !isNullOrUndefined(this.parent.dataSourceSettings.values[i].caption) ?\n                    this.parent.dataSourceSettings.values[i].caption : undefined;\n        }\n        if (this.accumulationType.indexOf(chartType) > -1 && columnKeys.length > 0) {\n            this.currentColumn = (columnKeys.indexOf(columnHeader + ' | ' + this.currentMeasure) > -1 && columnHeader !== undefined) ? columnHeader + ' | ' + this.currentMeasure : columnKeys[0];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n            if ((isNullOrUndefined(currentSeries.palettes) || currentSeries.palettes.length === 0) &&\n                !isNullOrUndefined(this.persistSettings.palettes) && this.persistSettings.palettes.length > 0) {\n                currentSeries.palettes = this.persistSettings.palettes;\n            }\n            currentSeries.dataSource = this.columnGroupObject[this.currentColumn];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.dataLabel) {\n                currentSeries.dataLabel = this.persistSettings.chartSeries.dataLabel;\n                currentSeries.dataLabel.name = 'x';\n            }\n            else {\n                currentSeries.dataLabel = { visible: true, position: 'Outside', name: 'x' };\n                this.parent.setProperties({ chartSettings: { chartSeries: { dataLabel: { visible: true, position: 'Outside' } } } }, true);\n            }\n            if (this.accEmptyPoint && currentSeries.emptyPointSettings) {\n                currentSeries.emptyPointSettings.mode = 'Zero';\n            }\n            else if (this.accEmptyPoint) {\n                currentSeries.emptyPointSettings = { mode: 'Zero' };\n            }\n            currentSeries.name = this.currentColumn;\n            if (chartType === 'Doughnut') {\n                currentSeries.type = 'Pie';\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '40%';\n            }\n            else if (chartType === 'Pie') {\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '0';\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        else {\n            for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n                var key = columnKeys_1[_i];\n                var currentSeries = {};\n                currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n                if (!isNullOrUndefined(currentSeries.palettes) &&\n                    currentSeries.palettes.length > 0 && (isNullOrUndefined(this.persistSettings.palettes) ||\n                    this.persistSettings.palettes.length === 0)) {\n                    this.chartSettings.palettes = currentSeries.palettes;\n                }\n                for (var i = 0; i < this.columnGroupObject[key].length; i++) {\n                    var values = this.engineModule.fieldList[this.currentMeasure];\n                    this.columnGroupObject[key][i].x = (this.parent.dataSourceSettings.rows.length === 0 && !this.chartSettings.showMultiLevelLabels) ? this.parent.localeObj.getConstant('total') + ' ' + this.parent.localeObj.getConstant(values.aggregateType) + ' ' +\n                        this.parent.localeObj.getConstant('of') + ' ' + (!isNullOrUndefined(values.caption) ? values.caption : values.name) : this.columnGroupObject[key][i].x === '' ? this.parent.localeObj.getConstant('blank') : this.columnGroupObject[key][i].x;\n                }\n                currentSeries.dataSource = this.columnGroupObject[key];\n                currentSeries.xName = 'x';\n                currentSeries.yName = 'y';\n                currentSeries.visible = true;\n                var multiAxisKey = void 0;\n                var fieldName = void 0;\n                var currentSeriesName = void 0;\n                for (var i = 0, j = key.split(' | '); i < j.length; i++) {\n                    if (this.measuresNames && this.measuresNames[j[i]]) {\n                        fieldName = j[i];\n                        currentSeriesName = key.split((' | ' + fieldName))[0];\n                    }\n                }\n                if (this.chartSettings.enableMultipleAxis) {\n                    var fieldCaptionName = fieldName;\n                    fieldCaptionName = !isNullOrUndefined(fieldWithCaption[fieldCaptionName]) ?\n                        fieldWithCaption[fieldCaptionName] : fieldCaptionName;\n                    multiAxisKey = currentSeriesName + ' | ' + fieldCaptionName;\n                }\n                currentSeries.name = this.chartSettings.enableMultipleAxis ? multiAxisKey : currentSeriesName;\n                if (this.chartSettings.showPointColorByMembers && this.chartSettings.enableMultipleAxis) {\n                    currentSeries.name = currentSeriesName;\n                    var seriesName = this.chartSeriesInfo[currentSeries.name].caption;\n                    currentSeries.name = seriesName !== undefined && seriesName !== null ? seriesName : currentSeries.name;\n                    if (!chartSeriesInfo[currentSeries.name]) {\n                        prevColorIndex = seriesColors[prevColorIndex] ? prevColorIndex : 0;\n                        chartSeriesInfo[currentSeries.name] = { name: currentSeries.name, color: seriesColors[prevColorIndex] };\n                        currentSeries.fill = seriesColors[prevColorIndex++];\n                        this.chartSeriesInfo[currentSeries.name].colorIndex.push(this.selectedLegend++);\n                    }\n                    else {\n                        currentSeries.fill = chartSeriesInfo[currentSeries.name].color;\n                        this.chartSeriesInfo[currentSeries.name].colorIndex.push(this.selectedLegend++);\n                        currentSeries.name = undefined;\n                    }\n                }\n                if (['Radar', 'Polar'].indexOf(chartType) < 0) {\n                    var measure = fieldName;\n                    currentSeries.tooltipMappingName = this.measuresNames[measure];\n                    currentSeries.yAxisName = (this.chartSettings.enableMultipleAxis && this.chartSettings.multipleAxisMode === 'Combined') ?\n                        this.measureList.join('_') : this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n                }\n                if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = this.persistSettings.chartSeries.emptyPointSettings;\n                }\n                if (!currentSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = { mode: 'Zero' };\n                }\n                this.chartSeries = this.chartSeries.concat(currentSeries);\n            }\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.frameChartSeries = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            if ((this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) > -1 && ['fill', 'dashArray', 'width', 'segmentAxis',\n                'drawType', 'isClosed', 'segments', 'stackingGroup', 'marker', 'errorBar', 'trendlines', 'minRadius',\n                'splineType', 'maxRadius', 'cardinalSplineTension', 'columnWidth', 'columnSpacing', 'cornerRadius'].indexOf(keys[keyPos]) > -1) ||\n                (this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 && ['endAngle', 'explode', 'explodeAll', 'explodeIndex',\n                    'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'neckHeight', 'neckWidth', 'pyramidMode', 'startAngle',\n                    'dataLabel', 'innerRadius'].indexOf(keys[keyPos]) > -1)) {\n                keyPos++;\n                continue;\n            }\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        this.parent.showWaitingPopup();\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ?\n                (this.parent.element.insertBefore((!this.element ?\n                    (createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }))\n                    : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!this.chartElement && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultipleAxis && this.chartSettings.chartSeries.type !== 'Pareto') {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).innerHTML = '';\n            this.chartElement = this.parent.element.querySelector('.' + cls.PIVOTCHART).appendChild(createElement('div', {\n                className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner'\n            }));\n        }\n        if (this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER)) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER).innerHTML = '';\n        }\n        if (this.parent.showGroupingBar) {\n            this.element.style.minWidth = '400px !important';\n        }\n        else {\n            this.element.style.minWidth = '310px !important';\n        }\n        var width = this.parent.width.toString();\n        if (this.parent.showToolbar && this.parent.grid) {\n            width = this.parent.getGridWidthAsNumber().toString();\n        }\n        var height = this.getChartHeight();\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultipleAxis &&\n            this.accumulationType.indexOf(type) < 0 && this.chartSettings.chartSeries.type !== 'Pareto') {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height =\n                (height === 'auto' ? this.getChartAutoHeight() : height) + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            if (this.parent.chartSettings.chartSeries.type !== 'Polar' && this.parent.chartSettings.chartSeries.type !== 'Radar') {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n        }\n        if (this.parent.chart && ((this.parent.chart.getModuleName() === 'accumulationchart' &&\n            this.accumulationType.indexOf(type) < 0) || (this.parent.chart.getModuleName() === 'chart' &&\n            this.accumulationType.indexOf(type) > -1 && this.chartSettings.chartSeries.type !== 'Pareto'))) {\n            this.parent.chart.destroy();\n            if (select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                select('#' + this.parent.element.id + '_chart', this.parent.element).innerHTML = '';\n                select('#' + this.parent.element.id + '_chart', this.parent.element).appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner'\n                }));\n            }\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart')) ||\n            (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange)) {\n            if (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange && this.parent.chart) {\n                if (!this.parent.chart.isDestroyed) {\n                    this.parent.chart.destroy();\n                }\n                this.parent.chart = undefined;\n                select('#' + this.parent.element.id + '_chart', this.parent.element).innerHTML = '';\n                select('#' + this.parent.element.id + '_chart', this.parent.element).appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner'\n                }));\n                this.parent.toolbarModule.isMultiAxisChange = false;\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, StackingLineSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair, Selection, StripLine, DataLabel);\n            AccumulationChart.Inject(PieSeries, FunnelSeries, PyramidSeries, AccumulationDataLabel, AccumulationLegend, AccumulationTooltip, Export);\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart = new AccumulationChart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    width: width,\n                    height: height.toString(),\n                    title: this.chartSettings.title,\n                    enableSmartLabels: this.chartSettings.enableSmartLabels,\n                    center: this.chartSettings.pieCenter,\n                    enableBorderOnMouseMove: this.chartSettings.enableBorderOnMouseMove,\n                    highlightMode: this.chartSettings.highlightMode,\n                    highlightPattern: this.chartSettings.highlightPattern,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    theme: this.chartSettings.theme,\n                    selectionMode: this.chartSettings.accumulationSelectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.parent.allowPdfExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    locale: this.parent.locale,\n                    enableRtl: this.parent.enableRtl,\n                    beforePrint: this.beforePrint.bind(this),\n                    animationComplete: this.animationComplete.bind(this),\n                    legendRender: this.legendRender.bind(this),\n                    textRender: this.textRender.bind(this),\n                    pointRender: this.pointRender.bind(this),\n                    seriesRender: this.seriesRender.bind(this),\n                    chartMouseMove: this.chartMouseMove.bind(this),\n                    chartMouseClick: this.chartMouseClick.bind(this),\n                    pointMove: this.pointMove.bind(this),\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartMouseLeave.bind(this),\n                    chartMouseDown: this.chartMouseDown.bind(this),\n                    chartMouseUp: this.chartMouseUp.bind(this),\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this)\n                });\n            }\n            else {\n                this.parent.chart = new Chart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    zoomSettings: currentZoomSettings,\n                    axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                    rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' || type === 'Pareto' &&\n                            this.chartSettings.enableMultipleAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                    columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultipleAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                    primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                    primaryXAxis: currentXAxis,\n                    width: width,\n                    height: (this.parent.chartSettings.chartSeries.type !== 'Polar' &&\n                        this.parent.chartSettings.chartSeries.type !== 'Radar' && this.parent.chartSettings.enableScrollOnMultiAxis &&\n                        this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.chartSeries.type !== 'Pareto' && this.parent.dataSourceSettings.values.length > 0) ?\n                        Number(height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(height)) ?\n                            height.toString() : (Number(height) - 5).toString() :\n                            (!isNaN(Number(height)) || this.parent.dataSourceSettings.values.length > 1) ?\n                                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                                height.toString() : height.toString(),\n                    title: this.chartSettings.title,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    chartArea: !isNullOrUndefined(this.persistSettings.chartArea) ? this.persistSettings.chartArea :\n                        this.chartSettings.chartArea,\n                    palettes: this.chartSettings.palettes,\n                    theme: this.chartSettings.theme,\n                    crosshair: this.chartSettings.crosshair,\n                    selectionMode: this.chartSettings.selectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.parent.allowPdfExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    isTransposed: this.chartSettings.isTransposed,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    enableCanvas: this.chartSettings.enableCanvas,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    description: this.chartSettings.description,\n                    tabIndex: this.chartSettings.tabIndex,\n                    locale: this.parent.locale,\n                    enableRtl: this.parent.enableRtl,\n                    enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                    beforePrint: this.beforePrint.bind(this),\n                    animationComplete: this.animationComplete.bind(this),\n                    legendRender: this.legendRender.bind(this),\n                    textRender: this.textRender.bind(this),\n                    pointRender: this.pointRender.bind(this),\n                    seriesRender: this.seriesRender.bind(this),\n                    chartMouseMove: this.chartMouseMove.bind(this),\n                    chartMouseClick: this.chartMouseClick.bind(this),\n                    pointMove: this.pointMove.bind(this),\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartMouseLeave.bind(this),\n                    chartMouseDown: this.chartMouseDown.bind(this),\n                    chartMouseUp: this.chartMouseUp.bind(this),\n                    dragComplete: this.dragComplete.bind(this),\n                    zoomComplete: this.zoomComplete.bind(this),\n                    scrollStart: this.scrollStart.bind(this),\n                    scrollEnd: this.scrollEnd.bind(this),\n                    scrollChanged: this.scrollChanged.bind(this),\n                    tooltipRender: this.tooltipRender.bind(this),\n                    legendClick: this.legendClick.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this),\n                    axisLabelRender: this.axisLabelRender.bind(this),\n                    multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n                    axisMultiLabelRender: this.multiLevelLabelRender.bind(this)\n                });\n            }\n            this.parent.chart.isStringTemplate = true;\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            this.parent.chart.title = this.parent.chartSettings.title;\n            this.parent.chart.subTitle = this.parent.chartSettings.subTitle;\n            this.parent.chart.background = this.parent.chartSettings.background;\n            this.parent.chart.theme = this.parent.chartSettings.theme;\n            this.parent.chart.legendSettings = currentLegendSettings;\n            this.parent.chart.selectionMode = this.parent.chartSettings.selectionMode;\n            this.parent.chart.enableExport = this.parent.allowPdfExport;\n            this.parent.chart.isMultiSelect = this.parent.chartSettings.isMultiSelect;\n            this.parent.chart.enableAnimation = this.parent.chartSettings.enableAnimation;\n            this.parent.chart.useGroupingSeparator = this.parent.chartSettings.useGroupingSeparator;\n            this.parent.chart.highlightPattern = this.parent.chartSettings.highlightPattern;\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart.enableBorderOnMouseMove = this.parent.chartSettings.enableBorderOnMouseMove;\n                this.parent.chart.highlightMode = this.parent.chartSettings.highlightMode;\n                this.parent.chart.enableSmartLabels = this.parent.chartSettings.enableSmartLabels;\n            }\n            else {\n                this.parent.chart.palettes = this.parent.chartSettings.palettes;\n                this.parent.chart.isTransposed = this.parent.chartSettings.isTransposed;\n                this.parent.chart.enableSideBySidePlacement = this.parent.chartSettings.enableSideBySidePlacement;\n                this.parent.chart.tabIndex = this.parent.chartSettings.tabIndex;\n                this.parent.chart.description = this.parent.chartSettings.description;\n                this.parent.chart.enableCanvas = this.parent.chartSettings.enableCanvas;\n            }\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else if ((this.accumulationType.indexOf(type) < 0) && this.parent.chart.getModuleName() === 'chart') {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultipleAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else if (type === 'Pareto' && this.chartSettings.enableMultipleAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n            if ((this.accumulationType.indexOf(type) > -1) && this.parent.chart.getModuleName() === 'accumulationchart' && (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0)) {\n                this.parent.hideWaitingPopup();\n                if (this.parent.pivotFieldListModule) {\n                    hideSpinner(this.parent.pivotFieldListModule.fieldListSpinnerElement);\n                }\n            }\n        }\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultipleAxis) {\n            this.parent.chart.appendTo(select('#' + this.parent.element.id + '_chartInner', this.parent.element));\n        }\n        else {\n            this.parent.chart.appendTo(select('#' + this.parent.element.id + '_chart', this.parent.element));\n        }\n    };\n    PivotChart.prototype.legendClick = function (args) {\n        if (this.chartSettings.showPointColorByMembers && this.chartSettings.enableMultipleAxis) {\n            var colorIndex = this.chartSeriesInfo[args.legendText].colorIndex;\n            for (var i = 1; i < colorIndex.length; i++) {\n                args.chart.series[colorIndex[i]].visible = !args.chart.series[colorIndex[i]].visible;\n            }\n        }\n        this.parent.trigger(events.chartLegendClick, args);\n    };\n    PivotChart.prototype.pointClick = function (args) {\n        var dataSource = args.series.dataSource ? args.series.dataSource :\n            this.parent.chart.series[args.seriesIndex].dataSource;\n        if (((['Pie', 'Funnel', 'Doughnut', 'Pyramid', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) ||\n            !this.parent.chartSettings.showMultiLevelLabels) && (this.parent.dataType === 'olap' ? true :\n            this.parent.dataSourceSettings.rows.length > 1)) {\n            this.pivotIndex = {\n                rIndex: dataSource ? dataSource[args.pointIndex].rIndex : undefined,\n                cIndex: dataSource ? dataSource[args.pointIndex].cIndex : undefined\n            };\n            this.creatMenu();\n            var pos = this.parent.element.getBoundingClientRect();\n            var y = (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 0) +\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 0) +\n                (window.scrollY || document.documentElement.scrollTop) + pos.top;\n            this.accumulationMenu.open(y + args.y, args.x + pos.left + (window.scrollX || document.documentElement.scrollLeft));\n        }\n        else if ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && this.parent.drillThroughModule) {\n            var rIndex = dataSource[args.pointIndex].rIndex;\n            var cIndex = dataSource[args.pointIndex].cIndex;\n            this.parent.drillThroughModule.executeDrillThrough(this.parent.pivotValues[rIndex][cIndex], rIndex, cIndex);\n        }\n        this.parent.trigger(events.chartPointClick, args);\n    };\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var yAxisTitles = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100' ||\n            this.persistSettings.chartSeries.type === 'StackingLine100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultipleAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                yAxisTitles.push(measureAggregatedName);\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                    this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title :\n                    (this.chartSettings.multipleAxisMode === 'Combined') ? yAxisTitles.join(' - ') : measureAggregatedName;\n                currentYAxis.zoomFactor = isNullOrUndefined(this.chartSettings.primaryYAxis.zoomFactor) ? 1\n                    : this.chartSettings.primaryYAxis.zoomFactor;\n                currentYAxis.edgeLabelPlacement = this.chartSettings.primaryYAxis.edgeLabelPlacement ?\n                    this.chartSettings.primaryYAxis.edgeLabelPlacement : this.persistSettings.primaryYAxis.edgeLabelPlacement;\n                if (this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                    this.chartSettings.chartSeries.type === 'StackingBar100') {\n                    currentYAxis.plotOffsetRight = currentYAxis.plotOffsetRight ? currentYAxis.plotOffsetRight : 30;\n                }\n                else {\n                    currentYAxis.plotOffsetTop = currentYAxis.plotOffsetTop ? currentYAxis.plotOffsetTop : 30;\n                }\n                if (!resFormat) {\n                    currentYAxis.name = (this.chartSettings.multipleAxisMode === 'Combined') ? this.measureList.join('_') :\n                        this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                if (this.chartSettings.multipleAxisMode === 'Combined') {\n                    axes = [axes[axes.length - 1]];\n                }\n                if (this.chartSettings.multipleAxisMode === 'Stacked') {\n                    currentYAxis.rowIndex = valCnt;\n                    currentYAxis.columnIndex = valCnt;\n                    rows.push({ height: divider });\n                    columns.push({ width: divider });\n                }\n                else {\n                    currentYAxis.rowIndex = 0;\n                    currentYAxis.columnIndex = 0;\n                    rows = [{ height: '100%' }];\n                    columns = [{ width: '100%' }];\n                }\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var lengthofFormat = void 0;\n            if (formatSetting) {\n                lengthofFormat = formatSetting.format.length;\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (((formatSetting.format.toLowerCase().match(/n[0-10]|p[0-10]|c[0-10]/) === null) || lengthofFormat > 3) ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.zoomFactor = isNullOrUndefined(this.chartSettings.primaryYAxis.zoomFactor) ? 1\n                : this.chartSettings.primaryYAxis.zoomFactor;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            currentYAxis.edgeLabelPlacement = this.chartSettings.primaryYAxis.edgeLabelPlacement ?\n                this.chartSettings.primaryYAxis.edgeLabelPlacement : this.persistSettings.primaryYAxis.edgeLabelPlacement;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    /** @hidden */\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = void 0;\n            if (!isNullOrUndefined(rows)) {\n                cKeys = Object.keys(rows);\n                for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                    var cellIndex = cKeys_2[_a];\n                    var cell = rows[Number(cellIndex)];\n                    if (!isNullOrUndefined(cell)) {\n                        if (cell.axis !== 'column') {\n                            return colIndexColl;\n                        }\n                        else if ((cell.type === 'sum' || (this.dataSourceSettings && this.dataSourceSettings.columns &&\n                            this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum')) && cell.rowSpan !== -1) {\n                            colIndexColl[cell.colIndex] = cell.colIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues, fieldPosition) {\n        var _a, _b;\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[fieldPosition[pos]] = {\n                    start: (lastEnd + 1),\n                    end: (lastEnd + Object.keys(group[fieldPosition[pos]]).length)\n                };\n                lastEnd = levelPos[fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    PivotChart.prototype.getZoomFactor = function () {\n        this.calculatedWidth = this.getCalulatedWidth();\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    /** @hidden */\n    PivotChart.prototype.getCalulatedWidth = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        return this.calculatedWidth;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.persistSettings.tooltip ? this.persistSettings.tooltip :\n            this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (tooltip.enable && tooltip.template) {\n            this.templateFn = this.parent.templateParser(tooltip.template);\n        }\n        if (this.parent.tooltipTemplate) {\n            tooltip.template = tooltip.template ? tooltip.template : this.parent.tooltipTemplate;\n        }\n        tooltip.header = tooltip.header ? tooltip.header : '';\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        if (this.chartSettings.legendSettings) {\n            var keyPos = 0;\n            var keys = Object.keys(this.chartSettings.legendSettings);\n            while (keyPos < keys.length) {\n                legendSettings[keys[keyPos]] = this.chartSettings.legendSettings[keys[keyPos]];\n                keyPos++;\n            }\n        }\n        legendSettings.visible = legendSettings.visible !== false;\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) {\n                return args.caption || args.name;\n            }).join(' / ');\n        currentXAxis.zoomFactor = isNullOrUndefined(this.parent.chartSettings.primaryXAxis.zoomFactor) ? this.getZoomFactor()\n            : this.parent.chartSettings.primaryXAxis.zoomFactor;\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels && this.chartSettings.chartSeries.type !== 'Pareto') {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        else {\n            currentXAxis.multiLevelLabels = [];\n            currentXAxis.border = { width: 1, type: 'Rectangle' };\n            currentXAxis.majorTickLines = { width: 0, height: 5 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true :\n            zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = (this.chartSettings.enableMultipleAxis && this.chartSettings.multipleAxisMode === 'Combined' &&\n            this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0 && this.chartSettings.chartSeries.type !== 'Radar' &&\n            this.chartSettings.chartSeries.type !== 'Polar') ? args.series.tooltipMappingName :\n            args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n                ((this.chartSettings.enableMultipleAxis && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0 &&\n                    this.chartSettings.chartSeries.type !== 'Pareto') ? args.series.name ? args.series.name.split(' | ')[1] :\n                    args.data.seriesName ? args.data.seriesName.split(' | ')[1] : this.currentMeasure : this.measuresNames[this.currentMeasure] ?\n                    this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        var dataSource = args.series.dataSource ? args.series.dataSource\n            : this.parent.chart.series[args.data.seriesIndex].dataSource;\n        var rowIndex = dataSource ? dataSource[args.data.pointIndex].rIndex : undefined;\n        var colIndex = dataSource ? dataSource[args.data.pointIndex].cIndex : undefined;\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure]\n            ? this.measuresNames[measure] : measure];\n        var aggregateType = this.parent.dataType === 'olap' ? '' : this.parent.localeObj.getConstant(measureField.aggregateType);\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : aggregateType + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ') + measureField.caption;\n        var formattedText = this.engineModule.pivotValues[rowIndex][colIndex].formattedText;\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var valueFormat = this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText);\n        var formattedValue = (formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            valueFormat.toString() : valueFormat.formattedText :\n            formattedText;\n        var text = this.parent.pivotValues[rowIndex][colIndex].columnHeaders;\n        var columnText = '';\n        if (isNullOrUndefined(text)) {\n            columnText = undefined;\n        }\n        else if (this.parent.dataType === 'olap') {\n            columnText = this.chartSeriesInfo[text.toString().split(/~~|::/).join(' - ')].uniqueName;\n        }\n        else {\n            var values = text.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter);\n            text = PivotUtil.formatChartHeaders(values, this, true);\n            columnText = this.chartSeriesInfo[text.toString()].uniqueName;\n        }\n        var rowText = args.point.x;\n        if (this.parent.tooltipTemplate && this.parent.getTooltipTemplate() !== undefined || this.chartSettings.tooltip.template) {\n            var rowFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'row') : '';\n            var columnFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'Column') : '';\n            var templateVariable = {\n                rowHeaders: rowText,\n                columnHeaders: columnText,\n                aggregateType: aggregateType,\n                value: formattedValue,\n                valueField: measureField.caption,\n                rowFields: rowFields,\n                columnFields: columnFields\n            };\n            var template = void 0;\n            if (this.parent.chartSettings && this.parent.chartSettings.tooltip &&\n                this.parent.chartSettings.tooltip.enable && this.parent.chartSettings.tooltip.template) {\n                template = this.tooltipTemplateFn()(templateVariable, this, 'tooltipTemplate', this.element.id + '1tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                template = this.parent.getTooltipTemplate()(templateVariable, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            args.template = template;\n        }\n        else {\n            args.text = measureAggregatedName + ': ' + formattedValue +\n                (this.dataSourceSettings.columns.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + columnText)) +\n                (this.dataSourceSettings.rows.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + rowText)) +\n                ((args.data && args.data.seriesName === 'Pareto') ?\n                    \" <br/>\" + this.parent.localeObj.getConstant('pareto') + \": \" + args.data.pointY + \"%\" : '');\n            this.parent.trigger(events.chartTooltipRender, args);\n        }\n    };\n    PivotChart.prototype.tooltipTemplateFn = function () {\n        return this.templateFn;\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        var width = this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString();\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(select('#' + this.parent.element.id + multilabelAxisName, this.parent.element))) {\n                this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        var height = this.getChartHeight();\n        this.parent.chart.height = height;\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultipleAxis) {\n            if (['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar', 'Pareto'].indexOf(this.parent.chartSettings.chartSeries.type) >= 0) {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'visible';\n            }\n            else {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height = height + 'px';\n        }\n        this.updateView();\n        if (this.parent.displayOption.primary === 'Chart' || this.parent.displayOption.view === 'Chart') {\n            this.parent.notify(events.contentReady, {});\n        }\n        this.parent.trigger(events.chartLoaded, args);\n        if ((this.parent.dataSourceSettings.mode === 'Server' && this.parent.isServerWaitingPopup) || this.parent.dataSourceSettings.mode === 'Local') {\n            this.parent.hideWaitingPopup();\n        }\n    };\n    /** @hidden */\n    PivotChart.prototype.updateView = function () {\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            var groupingTable = this.parent.element.querySelector('.e-pivot-grouping-bar');\n            var groupingChartTable = this.parent.element.querySelector('.e-chart-grouping-bar');\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                    if (groupingTable) {\n                        groupingTable.style.display = '';\n                        if (groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) &&\n                            this.parent.groupingBarModule.gridPanel != null && !this.parent.groupingBarModule.gridPanel.isDestroyed) {\n                            this.parent.groupingBarModule.gridPanel.refreshOverflow();\n                        }\n                    }\n                    if (groupingChartTable) {\n                        groupingChartTable.style.display = 'none';\n                    }\n                }\n                if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                }\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                    if (groupingTable) {\n                        groupingTable.style.display = 'none';\n                    }\n                    if (groupingChartTable) {\n                        groupingChartTable.style.display = '';\n                        if (groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) &&\n                            this.parent.groupingBarModule.chartPanel != null && !this.parent.groupingBarModule.chartPanel.isDestroyed) {\n                            this.parent.groupingBarModule.chartPanel.refreshOverflow();\n                        }\n                    }\n                }\n                if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = '';\n                }\n            }\n        }\n    };\n    PivotChart.prototype.creatMenu = function () {\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n        }\n        var items = ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing)\n            && this.parent.drillThroughModule) ? ['expand', 'collapse', 'drillThrough', 'exit'] :\n            ['expand', 'collapse', 'exit'];\n        var option = [];\n        for (var i = 0; i < items.length; i++) {\n            option.push({\n                id: this.parent.element.id + '_DrillMenuChart_' + items[i],\n                text: this.parent.localeObj.getConstant(items[i]),\n                items: []\n            });\n        }\n        var getString = this.getMenuItems();\n        var expand = [];\n        var collapse = [];\n        for (var i = 0; i < getString.length; i++) {\n            if (getString[i].type === 'expand') {\n                expand.push({ id: this.element.id + 'drillExpand_' + getString[i].key, text: getString[i].value });\n            }\n            else {\n                collapse.push({ id: this.element.id + 'drillCollapse_' + getString[i].key, text: getString[i].value });\n            }\n        }\n        if (expand.length > 0) {\n            option[0].items = expand;\n        }\n        if (collapse.length > 0) {\n            option[1].items = collapse;\n        }\n        var menuOptions = {\n            cssClass: this.parent.element.id + '_accumulationChart' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            items: option,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.drillMenuOpen.bind(this),\n            select: this.drillMenuSelect.bind(this),\n            locale: this.parent.locale\n        };\n        this.accumulationMenu = new ContextMenu(menuOptions);\n        var contextMenu;\n        if (select('#' + this.parent.element.id + '_accumulationChart', this.parent.element)) {\n            contextMenu = select('#' + this.parent.element.id + '_accumulationChart', this.parent.element);\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + '_accumulationChart'\n            });\n            this.parent.element.appendChild(contextMenu);\n        }\n        this.accumulationMenu.isStringTemplate = true;\n        this.accumulationMenu.appendTo(contextMenu);\n    };\n    PivotChart.prototype.drillMenuOpen = function (args) {\n        if (args.items[0] && args.items[0].text === this.parent.localeObj.getConstant('expand') &&\n            args.items[0].items && args.items[0].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('expand')], false);\n        }\n        if (args.items[1] && args.items[1].text === this.parent.localeObj.getConstant('collapse') &&\n            args.items[1].items && args.items[1].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('collapse')], false);\n        }\n    };\n    PivotChart.prototype.getMenuItems = function () {\n        var rowIndex = this.pivotIndex.rIndex;\n        var menuItem = [];\n        var pivotValues = this.engineModule.pivotValues;\n        var levelCol = [];\n        var pivotValue = pivotValues[rowIndex][this.pivotIndex.cIndex];\n        // let hierarchy: string = pivotValues[rowIndex][0].hierarchy;\n        var level = (!pivotValues[rowIndex][0].isNamedSet && pivotValues[rowIndex][0].hasChild) ?\n            pivotValues[rowIndex][0].level : undefined;\n        var levels = this.parent.dataType === 'olap' ? pivotValue.rowHeaders.toString().split(/~~|::/)\n            : pivotValue.rowHeaders.toString().split(this.engineModule.valueSortSettings.headerDelimiter);\n        while (pivotValues[rowIndex][0]) {\n            pivotValue = pivotValues[rowIndex][0];\n            if ((levels.length !== 0) && (levels.indexOf(pivotValue.formattedText.toString()) === (levels.length - 1))) {\n                if (pivotValue.hasChild && !pivotValue.isNamedSet && levelCol.indexOf(pivotValue.level) < 0 &&\n                    (level ? level >= pivotValue.level : (level === 0 ? (pivotValue.level === 0) : true))) {\n                    if (!(pivotValue.isDrilled && pivotValue.hasChild)) {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'expand',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    else {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'collapse',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    levelCol.push(pivotValue.level);\n                    level = level ? (level - 1) : (pivotValue.level - 1);\n                }\n                var index = levels.indexOf(pivotValue.formattedText.toString());\n                levels.splice(index, 1);\n            }\n            if (pivotValue.level === 0 && pivotValue.hasChild && !pivotValue.isNamedSet) {\n                level = undefined;\n                levelCol = [];\n            }\n            rowIndex--;\n        }\n        return menuItem;\n    };\n    PivotChart.prototype.drillMenuSelect = function (args) {\n        var pivotValues = (this.parent.dataType === 'olap' ?\n            this.parent.olapEngineModule.pivotValues : this.parent.engineModule.pivotValues);\n        var option = (args.element.id).split('_DrillMenuChart_')[1];\n        if (args.element.id.indexOf(this.element.id + 'drill') === 0) {\n            var type = args.element.id.split(this.element.id + 'drill')[1].indexOf('Expand') >= 0 ? 'drillExpand' : 'drillCollapse';\n            var rowIndex = Number(args.element.id.split(this.element.id + type + '_')[1]);\n            var pivotValue = pivotValues[rowIndex][0];\n            var name_2 = this.parent.dataType === 'olap' ? pivotValue.formattedText :\n                (pivotValue.actualText ? pivotValue.actualText.toString() : pivotValue.formattedText.toString());\n            var text = pivotValue.formattedText ? pivotValue.formattedText.toString() : name_2;\n            var caption = (pivotValue.hasChild && !pivotValue.isNamedSet) ?\n                ((pivotValue.isDrilled ? ' - ' : ' + ') + text) : text;\n            var tupInfo = this.parent.dataType === 'olap' ?\n                this.engineModule.tupRowInfo[pivotValue.ordinal] : undefined;\n            var levelName = tupInfo ? tupInfo.uNameCollection : pivotValue.valueSort.levelName.toString();\n            var customAttributes = {\n                fieldName: pivotValue.valueSort.axis,\n                level: pivotValue.level,\n                hasChild: pivotValue.hasChild,\n                levelName: levelName,\n                name: name_2,\n                text: caption,\n                rowIndex: rowIndex,\n                colIndex: 0,\n                isDrilled: pivotValue.isDrilled,\n                cell: pivotValue\n            };\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, customAttributes);\n            }\n            else {\n                this.onDrill({ customAttributes: customAttributes });\n            }\n        }\n        else if (option === 'drillThrough') {\n            this.parent.drillThroughModule.executeDrillThrough(pivotValues[this.pivotIndex.rIndex][this.pivotIndex.cIndex], this.pivotIndex.rIndex, this.pivotIndex.rIndex);\n        }\n        else if (option === 'exit') {\n            this.accumulationMenu.close();\n        }\n    };\n    /**\n     *\n     * @returns {string} - string.\n     * @hidden\n     */\n    PivotChart.prototype.getChartHeight = function () {\n        var height;\n        var offSetHeight;\n        if (isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            height = 'auto';\n        }\n        else {\n            var offSetVal = this.parent.showToolbar ? 6 : 5;\n            height = (this.parent.getHeightAsNumber() - offSetVal).toString();\n            offSetHeight = this.parent.getHeightAsNumber() - offSetVal;\n        }\n        if (!isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            var isNone = false;\n            if (this.parent.element.querySelector('.e-chart-grouping-bar') !== null && this.parent.element.querySelector('.e-chart-grouping-bar').style.display.toLowerCase() === 'none') {\n                isNone = true;\n                this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'block';\n            }\n            if (this.parent.showToolbar && this.parent.showGroupingBar) {\n                height = (offSetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                    (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                        this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 62)).toString();\n            }\n            else if (this.parent.showToolbar) {\n                height = (offSetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42)).toString();\n            }\n            else if (this.parent.showGroupingBar) {\n                height = (offSetHeight - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 62)).toString();\n            }\n            else if ((this.parent.chart && parseInt(this.parent.chart.height, 10) < 200) || offSetHeight < 200) {\n                height = '200';\n            }\n            if (isNone) {\n                this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n            }\n        }\n        else {\n            height = 'auto';\n        }\n        return height;\n    };\n    PivotChart.prototype.getChartAutoHeight = function () {\n        var height = this.parent.element.offsetHeight < this.parent.minHeight ? this.parent.minHeight :\n            this.parent.element.offsetHeight;\n        if (this.parent.showToolbar && this.parent.showGroupingBar) {\n            height = height - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 62);\n        }\n        else if (this.parent.showToolbar) {\n            height = height - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42);\n        }\n        else if (this.parent.showGroupingBar) {\n            height = height - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 62);\n        }\n        return height;\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels && this.chartSettings.chartSeries.type !== 'Pareto') {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        if (args.axis.name !== 'primaryXAxis') {\n            var formatField = this.engineModule.formatFields[(this.chartSettings.enableMultipleAxis &&\n                this.chartSettings.multipleAxisMode === 'Combined') ? this.currentMeasure : args.axis.name];\n            var valueFormat = this.engineModule.getFormattedValue(args.value, (this.chartSettings.enableMultipleAxis &&\n                this.chartSettings.multipleAxisMode === 'Combined') ? this.currentMeasure : args.axis.name, args.text);\n            var formattedValue = ((formatField && formatField.format &&\n                this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ? valueFormat.toString() :\n                valueFormat.formattedText : args.value.toString());\n            args.text = formattedValue;\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        var eventArgs = {\n            axis: args.axis,\n            text: args.text,\n            cell: !isNullOrUndefined(args.customAttributes) ? args.customAttributes.cell : undefined,\n            cancel: false\n        };\n        this.parent.trigger(events.multiLevelLabelClick, eventArgs);\n        if (!eventArgs.cancel && args.customAttributes && args.customAttributes.hasChild &&\n            !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /**\n     * It helped to drills the row or columns.\n     *\n     * @param {IMultiLevelLabelClickEventArgs} args - It contains the drillInfo.\n     * @returns {void}\n     * @hidden\n     */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({\n                dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] }\n            }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        var drillArgs = {\n            drillInfo: drilledItem,\n            pivotview: pivot.parent\n        };\n        pivot.parent.trigger(events.drill, drillArgs);\n        var enginePopulatingEventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        this.parent.trigger(events.enginePopulating, enginePopulatingEventArgs);\n        this.parent.setProperties({ dataSourceSettings: enginePopulatingEventArgs.dataSourceSettings }, true);\n        if (pivot.parent.enableVirtualization || pivot.parent.enablePaging) {\n            if (pivot.parent.dataSourceSettings.mode === 'Server') {\n                pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n            }\n            else {\n                pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                pivot.engineModule.onDrill(drilledItem);\n            }\n        }\n        else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n            pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings, true);\n        }\n        pivot.parent.allowServerDataBinding = false;\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        pivot.parent.allowServerDataBinding = true;\n        var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            pivotValues: this.parent.pivotValues\n        };\n        this.parent.trigger(events.enginePopulated, eventArgs);\n        pivot.engineModule.pivotValues = eventArgs.pivotValues;\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.isAttributeDrill = function (hierarchy, drillInfo) {\n        var isDrill = false;\n        for (var i = 0; i < this.dataSourceSettings.drilledMembers.length; i++) {\n            if (this.dataSourceSettings.drilledMembers[i].name === hierarchy) {\n                for (var j = 0; j < this.dataSourceSettings.drilledMembers[i].items.length; j++) {\n                    var drillItems = this.dataSourceSettings.drilledMembers[i].items[j]\n                        .split(this.dataSourceSettings.drilledMembers[i].delimiter);\n                    var levelName = '';\n                    for (var k = 0; k < drillItems.length; k++) {\n                        if (drillInfo[k] && drillInfo[k].uName) {\n                            levelName = levelName + (levelName === '' ? '' : this.dataSourceSettings.drilledMembers[i].delimiter) +\n                                (drillInfo[k].uName.indexOf('[Measures]') > -1 ? '[Measures]' : drillInfo[k].uName);\n                        }\n                    }\n                    if (levelName === this.dataSourceSettings.drilledMembers[i].items[j]) {\n                        isDrill = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.beforePrint = function (args) {\n        this.parent.trigger(events.beforePrint, args);\n    };\n    PivotChart.prototype.animationComplete = function (args) {\n        this.parent.trigger(events.animationComplete, args);\n    };\n    PivotChart.prototype.legendRender = function (args) {\n        this.parent.trigger(events.legendRender, args);\n    };\n    PivotChart.prototype.textRender = function (args) {\n        this.parent.trigger(events.textRender, args);\n    };\n    PivotChart.prototype.pointRender = function (args) {\n        this.parent.trigger(events.pointRender, args);\n    };\n    PivotChart.prototype.seriesRender = function (args) {\n        this.parent.trigger(events.seriesRender, args);\n    };\n    PivotChart.prototype.chartMouseMove = function (args) {\n        this.parent.trigger(events.chartMouseMove, args);\n    };\n    PivotChart.prototype.chartMouseClick = function (args) {\n        this.parent.trigger(events.chartMouseClick, args);\n    };\n    PivotChart.prototype.pointMove = function (args) {\n        this.parent.trigger(events.pointMove, args);\n    };\n    PivotChart.prototype.chartMouseLeave = function (args) {\n        this.parent.trigger(events.chartMouseLeave, args);\n    };\n    PivotChart.prototype.chartMouseDown = function (args) {\n        this.parent.trigger(events.chartMouseDown, args);\n    };\n    PivotChart.prototype.chartMouseUp = function (args) {\n        this.parent.trigger(events.chartMouseUp, args);\n    };\n    PivotChart.prototype.dragComplete = function (args) {\n        this.parent.trigger(events.dragComplete, args);\n    };\n    PivotChart.prototype.zoomComplete = function (args) {\n        this.parent.trigger(events.zoomComplete, args);\n    };\n    PivotChart.prototype.scrollStart = function (args) {\n        this.parent.trigger(events.scrollStart, args);\n    };\n    PivotChart.prototype.scrollEnd = function (args) {\n        this.parent.trigger(events.scrollEnd, args);\n    };\n    PivotChart.prototype.scrollChanged = function (args) {\n        this.parent.trigger(events.scrollChanged, args);\n    };\n    PivotChart.prototype.multiLevelLabelRender = function (args) {\n        this.parent.trigger(events.multiLevelLabelRender, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) {\n            args.chart.primaryXAxis.zoomFactor = isNullOrUndefined(this.parent.chartSettings.primaryXAxis.zoomFactor)\n                ? this.getZoomFactor() : this.parent.chartSettings.primaryXAxis.zoomFactor;\n            if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n                args.chart.primaryXAxis.zoomFactor = isNullOrUndefined(this.parent.chartSettings.primaryXAxis.zoomFactor)\n                    ? 1 : this.parent.chartSettings.primaryXAxis.zoomFactor;\n            }\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /** @hidden */\n    PivotChart.prototype.getResizedChartHeight = function () {\n        var height = ['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar', 'Pareto'].indexOf(this.parent.chartSettings.chartSeries.type) < 0 &&\n            this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultipleAxis &&\n            this.parent.dataSourceSettings.values.length > 0 ? Number(this.parent.chart.height) >\n            (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(this.getChartHeight())) ?\n            this.getChartHeight().toString() : (Number(this.getChartHeight()) - 5).toString() :\n            (!isNaN(Number(this.getChartHeight())) || this.parent.dataSourceSettings.values.length > 1) ?\n                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() : this.getChartHeight().toString()\n            : this.getChartHeight().toString();\n        return height;\n    };\n    /**\n     * To destroy the chart module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent && this.parent.isDestroyed) {\n            return;\n        }\n        if (this.engineModule && !this.parent.destroyEngine) {\n            this.engineModule.fieldList = {};\n            this.engineModule = {};\n        }\n        if (this.chartSeries) {\n            this.chartSeries = null;\n        }\n        if (this.columnGroupObject) {\n            this.columnGroupObject = null;\n        }\n        if (this.chartSeriesInfo) {\n            this.chartSeriesInfo = {};\n            this.selectedLegend = null;\n        }\n        if (this.chartSettings) {\n            this.chartSettings = null;\n        }\n        if (this.dataSourceSettings) {\n            this.dataSourceSettings = null;\n        }\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n            this.accumulationMenu = null;\n        }\n        if (this.parent && this.parent.chart && !this.parent.chart.isDestroyed) {\n            this.parent.chart.destroy();\n            this.parent.chart = null;\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","/**\n * Specifies Chart Themes\n */\n/** @private */\nexport var axisLabelFont = {\n    size: '12px',\n    fontWeight: 'Normal',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var axisTitleFont = {\n    size: '14px',\n    fontWeight: 'Normal',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var chartTitleFont = {\n    size: '15px',\n    fontWeight: '500',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var chartSubTitleFont = {\n    size: '11px',\n    fontWeight: '500',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var crosshairLabelFont = {\n    size: '13px',\n    fontWeight: 'Normal',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var tooltipLabelFont = {\n    size: '13px',\n    fontWeight: 'Normal',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var legendLabelFont = {\n    size: '13px',\n    fontWeight: 'Normal',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var stripLineLabelFont = {\n    size: '12px',\n    fontWeight: 'Regular',\n    color: '#353535',\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n/** @private */\nexport var stockEventFont = {\n    size: '13px',\n    fontWeight: 'Normal',\n    color: null,\n    fontStyle: 'Normal',\n    fontFamily: 'Segoe UI'\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { titleSettings } from '@syncfusion/ej2-charts';\nimport { axisLabelFont, axisTitleFont, crosshairLabelFont, legendLabelFont, stripLineLabelFont, tooltipLabelFont } from '../../common/base/themes';\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Allows to customize the appearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Allow options to customize the border of the chart such as color and border size in the pivot chart.\n * For example, to display the chart border color as red, set the properties `color` to either **\"red\"**\n * or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Allows to configure the position of the marker such as top and left in the chart.\n */\nvar Offset = /** @class */ (function (_super) {\n    __extends(Offset, _super);\n    function Offset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"y\", void 0);\n    return Offset;\n}(ChildProperty));\nexport { Offset };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n *\n * @public\n */\nvar Indexes = /** @class */ (function (_super) {\n    __extends(Indexes, _super);\n    function Indexes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"point\", void 0);\n    return Indexes;\n}(ChildProperty));\nexport { Indexes };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar ChartArea = /** @class */ (function (_super) {\n    __extends(ChartArea, _super);\n    function ChartArea() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Border)\n    ], ChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], ChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartArea.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartArea.prototype, \"backgroundImage\", void 0);\n    return ChartArea;\n}(ChildProperty));\nexport { ChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar CrosshairSettings = /** @class */ (function (_super) {\n    __extends(CrosshairSettings, _super);\n    function CrosshairSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], CrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], CrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], CrosshairSettings.prototype, \"lineType\", void 0);\n    return CrosshairSettings;\n}(ChildProperty));\nexport { CrosshairSettings };\n/**\n * Allows to configure the data label with different settings such as name, fill color, opacity, rotation angle, border, margins, etc in the chart.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartConnectorStyle = /** @class */ (function (_super) {\n    __extends(PivotChartConnectorStyle, _super);\n    function PivotChartConnectorStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Line')\n    ], PivotChartConnectorStyle.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartConnectorStyle.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartConnectorStyle.prototype, \"dashArray\", void 0);\n    return PivotChartConnectorStyle;\n}(ChildProperty));\nexport { PivotChartConnectorStyle };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartDataLabel = /** @class */ (function (_super) {\n    __extends(PivotChartDataLabel, _super);\n    function PivotChartDataLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartDataLabel.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], PivotChartDataLabel.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], PivotChartDataLabel.prototype, \"font\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartDataLabel.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartDataLabel.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartDataLabel.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotChartDataLabel.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"ry\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartDataLabel.prototype, \"template\", void 0);\n    __decorate([\n        Complex({}, PivotChartConnectorStyle)\n    ], PivotChartDataLabel.prototype, \"connectorStyle\", void 0);\n    return PivotChartDataLabel;\n}(ChildProperty));\nexport { PivotChartDataLabel };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Allows to configure the error bar cap settings such as cap width, length, color, opacity.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\n/**\n * Allows options for customize the error bar chart with different settings such as type, direction, mode, color, width, etc.\n *\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Allows to configure the trendlines of the chart such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar EmptyPointSettings = /** @class */ (function (_super) {\n    __extends(EmptyPointSettings, _super);\n    function EmptyPointSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], EmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], EmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Zero')\n    ], EmptyPointSettings.prototype, \"mode\", void 0);\n    return EmptyPointSettings;\n}(ChildProperty));\nexport { EmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar CornerRadius = /** @class */ (function (_super) {\n    __extends(CornerRadius, _super);\n    function CornerRadius() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomRight\", void 0);\n    return CornerRadius;\n}(ChildProperty));\nexport { CornerRadius };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar CrosshairTooltip = /** @class */ (function (_super) {\n    __extends(CrosshairTooltip, _super);\n    function CrosshairTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(crosshairLabelFont, Font)\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\n    return CrosshairTooltip;\n}(ChildProperty));\nexport { CrosshairTooltip };\n/**\n * Allows to configure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar StripLineSettings = /** @class */ (function (_super) {\n    __extends(StripLineSettings, _super);\n    function StripLineSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], StripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], StripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], StripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], StripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], StripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(stripLineLabelFont, Font)\n    ], StripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], StripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], StripLineSettings.prototype, \"opacity\", void 0);\n    return StripLineSettings;\n}(ChildProperty));\nexport { StripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and label type in the chart.\n */\nvar LabelBorder = /** @class */ (function (_super) {\n    __extends(LabelBorder, _super);\n    function LabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], LabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], LabelBorder.prototype, \"type\", void 0);\n    return LabelBorder;\n}(ChildProperty));\nexport { LabelBorder };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar MajorGridLines = /** @class */ (function (_super) {\n    __extends(MajorGridLines, _super);\n    function MajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorGridLines.prototype, \"color\", void 0);\n    return MajorGridLines;\n}(ChildProperty));\nexport { MajorGridLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar MinorGridLines = /** @class */ (function (_super) {\n    __extends(MinorGridLines, _super);\n    function MinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorGridLines.prototype, \"color\", void 0);\n    return MinorGridLines;\n}(ChildProperty));\nexport { MinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar AxisLine = /** @class */ (function (_super) {\n    __extends(AxisLine, _super);\n    function AxisLine() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], AxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], AxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], AxisLine.prototype, \"color\", void 0);\n    return AxisLine;\n}(ChildProperty));\nexport { AxisLine };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar MajorTickLines = /** @class */ (function (_super) {\n    __extends(MajorTickLines, _super);\n    function MajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorTickLines.prototype, \"color\", void 0);\n    return MajorTickLines;\n}(ChildProperty));\nexport { MajorTickLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar MinorTickLines = /** @class */ (function (_super) {\n    __extends(MinorTickLines, _super);\n    function MinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorTickLines.prototype, \"color\", void 0);\n    return MinorTickLines;\n}(ChildProperty));\nexport { MinorTickLines };\n/**\n * Allows to configure the position of the legend such as top and left in the chart.\n */\nvar ChartLocation = /** @class */ (function (_super) {\n    __extends(ChartLocation, _super);\n    function ChartLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"y\", void 0);\n    return ChartLocation;\n}(ChildProperty));\nexport { ChartLocation };\n/**\n * Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\n/**\n * Allows options for customize the error bar chart series with different settings such as type, direction, mode, color, width, etc.\n */\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\n/**\n * Allows to configure the trendlines of the chart series such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Zero')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n * Allows to customize the appearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\n/**\n * Allows to configure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and label type in the chart.\n */\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\n/**\n * Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n */\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n */\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n * Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explodeAll\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"explodeIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property('30%')\n    ], PivotSeries.prototype, \"explodeOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"gapRatio\", void 0);\n    __decorate([\n        Property('Value')\n    ], PivotSeries.prototype, \"groupMode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"groupTo\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckHeight\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckWidth\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotSeries.prototype, \"pyramidMode\", void 0);\n    __decorate([\n        Property([])\n    ], PivotSeries.prototype, \"palettes\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"startAngle\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Complex(null, PivotChartDataLabel)\n    ], PivotSeries.prototype, \"dataLabel\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Allow options to customize the axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"zoomFactor\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('Shift')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Allow options to customize the center of the pivot pie series chart.\n */\nvar PivotPieChartCenter = /** @class */ (function (_super) {\n    __extends(PivotPieChartCenter, _super);\n    function PivotPieChartCenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"x\", void 0);\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"y\", void 0);\n    return PivotPieChartCenter;\n}(ChildProperty));\nexport { PivotPieChartCenter };\n/**\n * Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n * Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\n * The following options are available to customize the pivot chart.\n * * `background`: Allows you to change the background color of the chart series in the pivot chart.\n * For example, to display the chart series with background color as red, set the property `background` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"**.\n * * `border`: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n * * `chartArea`: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n * * `chartSeries`: Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n * * `crosshair`: Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n * * `description`: Allows you to add a description of the pivot chart.\n * * `enableAnimation`: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.\n * * `enableCanvas`: Allows you to render the pivot chart in canvas mode.\n * * `enableExport`: Allows the pivot chart to be exported to either **PDF** or **PNG** or **JPEG** or **SVG** filter formats.\n * * `enableMultipleAxis`: Allows you to draw the pivot chart with multiple value fields as separate chart area.\n * * `enableSideBySidePlacement`: Allows you to draw points of the column type pivot chart series as side by side.\n * * `isMultiSelect`: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property `selectionMode` to be **Point** or **Series** or **Cluster**.\n * * `isTransposed`: Allows you to render the pivot chart in a transposed manner or not.\n * * `legendSettings`: Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n * * `margin`: Allow options to customize the left, right, top and bottom margins of the pivot chart.\n * * `palettes`: Allows you to draw the chart series points with custom color in the pivot chart.\n * * `primaryXAxis`: Allow options to customize the horizontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `primaryYAxis`: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\n * title, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `selectedDataIndexes`: Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * * `selectionMode`: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\n * For example, to highlight a specific point in a specific series of the pivot chart, set the property `selectionMode` to **Point**.\n * * `showMultiLevelLabels`: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.\n * * `subTitle`: Allows you to add the subtitle to the pivot chart.\n * * `subTitleStyle`: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tabIndex`: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.\n * * `theme`: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.\n * * `title`: Allows you to add title to the pivot chart.\n * * `titleStyle`: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tooltip`: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n * * `useGroupingSeparator`: Allows the group separator to be shown to the values in the pivot chart.\n * * `value`: Allows you to draw a pivot chart with a specific value field during initial loading.\n * * `zoomSettings`: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"columnHeader\", void 0);\n    __decorate([\n        Property('-')\n    ], ChartSettings.prototype, \"columnDelimiter\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultipleAxis\", void 0);\n    __decorate([\n        Property('Stacked')\n    ], ChartSettings.prototype, \"multipleAxisMode\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableScrollOnMultiAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"showMemberSeries\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"showPointColorByMembers\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, titleSettings)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, titleSettings)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex(null, PivotPieChartCenter)\n    ], ChartSettings.prototype, \"pieCenter\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"accumulationSelectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableCanvas\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"multiLevelLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n *\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            roles: dataSourceSettings.roles\n        };\n        olapEngine.mdxQuery = query.replace(/&amp;/g, '&').replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/%280/g, '\"').replace(/&apos;/g, '\\'');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) :\n                this.engine.generateEngine.bind(this.engine)), drillInfo ? {\n                action: drillInfo.action, drillInfo: drillInfo\n            } : {\n                dataSourceSettings: dataSourceSettings, action: 'loadTableElements'\n            });\n        }\n    };\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier>' + (args.roles ? '<Roles>' + args.roles + '</Roles>' : '') + '</PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n        if (this.engine.errorInfo) {\n            throw this.engine.errorInfo;\n        }\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') + ' ' +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnPageSize) < this.pageSettings.currentColumnPage || this.pageSettings.currentColumnPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnPageSize) < this.pageSettings.currentColumnPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnPageSize) : this.pageSettings.currentColumnPage) : this.pageSettings.currentColumnPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowPageSize) < this.pageSettings.currentRowPage || this.pageSettings.currentRowPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowPageSize) < this.pageSettings.currentRowPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowPageSize) : this.pageSettings.rowPageSize) : this.pageSettings.currentRowPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowPageSize)) + ',' + this.pageSettings.rowPageSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnPageSize)) + ',' + this.pageSettings.columnPageSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.currentRowPage - 1) * this.pageSettings.rowPageSize;\n        var calColPage = (this.pageSettings.currentColumnPage - 1) * this.pageSettings.columnPageSize;\n        var calRowSize = (this.engine.isExporting && this.engine.exportSpeciedPages && this.engine.exportSpeciedPages.rowSize) ?\n            this.engine.exportSpeciedPages.rowSize : (this.pageSettings.rowPageSize * 3);\n        var calColumnSize = (this.engine.isExporting && this.engine.exportSpeciedPages &&\n            this.engine.exportSpeciedPages.columnSize) ? this.engine.exportSpeciedPages.columnSize : (this.pageSettings.columnPageSize * 3);\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            var drillQuery = this.getAttributeDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = query + (this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') +\n                (this.drilledMembers.length > 0 ? '})' : '') + (!this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + ')';\n        }\n        return query;\n    };\n    MDXQuery.getAttributeDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var drilledMembers = [];\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        var measurePos = axis === this.valueAxis ? this.getMeasurePos(axis) : 0;\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var result = this.getDrillLevel(dimensions, drillInfo_1);\n                    var fieldPosition = this.getDimensionPos(axis, field.name);\n                    var index = dimensions.length - (measurePos > fieldPosition ? 1 : 0);\n                    var isExist = this.isPaging ? this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter, drillInfo_1, axis) : false;\n                    while (result.level > 0 && result.isDrill && (fieldPosition + 1) !== measurePos && !isExist) {\n                        var levelQuery = [];\n                        var i = 0;\n                        while (i < dimensions.length) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]') {\n                                if (measureQuery !== '') {\n                                    levelQuery.push(drillInfo_1[i] ? '({{' + drillInfo_1[i] + '}})' : '(' + measureQuery + ')');\n                                }\n                            }\n                            else if (drillInfo_1[i] && (drillInfo_1[i].indexOf(dimensions[i].name) !== -1 ||\n                                (dimensions[i].isNamedSet && this.fieldList[dimensions[i].name] && drillInfo_1[i].indexOf(this.fieldList[dimensions[i].name].pid.split('Sets_')[1]) !== -1))) {\n                                levelQuery.push(this.getHierarchyQuery(drillInfo_1[i], false, false, false, result.level, true));\n                            }\n                            else if (!drillInfo_1[i] && dimensions[i]) {\n                                levelQuery.push(this.getHierarchyQuery(dimensions[i].name, ((this.isPaging && result.level === 2) || (!this.isPaging && index > i) ? true : false), dimensions[i].isNamedSet, dimensions[i].isCalculatedField, result.level, false));\n                            }\n                            else {\n                                levelQuery = [];\n                                break;\n                            }\n                            i++;\n                        }\n                        if (levelQuery.length > 0) {\n                            drillQuery.push('(' + levelQuery.join('*') + ')');\n                        }\n                        result.level--;\n                        index--;\n                    }\n                    if (drillQuery.length > 0) {\n                        query = query + (query !== '' ? '-' : '') + drillQuery.join(this.isPaging ? '+' : '-');\n                    }\n                }\n            }\n        }\n        return query;\n    };\n    MDXQuery.getDimensionPos = function (axis, field) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name === field) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getMeasurePos = function (axis) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name.indexOf('[Measures]') === 0) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getDrillLevel = function (dimensions, drillInfo) {\n        var level = dimensions.length;\n        var isDrill = false;\n        var i = 0;\n        while (i < dimensions.length) {\n            if (drillInfo[i] && drillInfo[i].indexOf(dimensions[i].name) !== -1) {\n                level -= 1;\n                if (dimensions[i + 1] && !(dimensions[i + 1].isNamedSet || dimensions[i + 1].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i + 1].name] && !this.fieldList[dimensions[i + 1].name].hasAllMember))) {\n                    isDrill = true;\n                }\n            }\n            else if (dimensions[i].isNamedSet || dimensions[i].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i].name] && !this.fieldList[dimensions[i].name].hasAllMember)) {\n                level -= 1;\n            }\n            i++;\n        }\n        return { level: this.isPaging ? 2 : level, isDrill: isDrill };\n    };\n    MDXQuery.getHierarchyQuery = function (name, isChildren, isNamedSet, isCalculatedField, level, isDrill) {\n        name = isCalculatedField ? this.fieldList[name].tag : name;\n        return ((this.fieldList[name] && !this.fieldList[name].hasAllMember && !isNamedSet && !isCalculatedField) ? '((' + name + ').levels(0).AllMembers)' : (isNamedSet || isCalculatedField) ? ('({' + name + '})') : this.isPaging ? ('({' + name) + (isChildren ? '.CHILDREN})' : (!isDrill && level === 1) ? '.[All]})' : '})') : ('({DrilldownLevel({' + name + (isChildren ? '.CHILDREN' : '') + '},,,INCLUDE_CALC_MEMBERS' + ')})'));\n    };\n    MDXQuery.isAttributeMemberExist = function (hierarchy, item, delimiter, drillInfo, axis) {\n        item.splice(drillInfo.length - 1, 1);\n        var isAvailable = false;\n        if (item.join(delimiter) !== '' && !(this.isPaging && item.length === 1 && item.join(delimiter) === '[Measures]') && this.engine.fieldList[hierarchy] && this.engine.fieldList[hierarchy].hasAllMember) {\n            var hierarchyPosition = this.getDimensionPos(axis, hierarchy);\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (hierarchy !== this.drilledMembers[i].name) {\n                    var isHierarchy = this.engine.fieldList[this.drilledMembers[i].name] ?\n                        this.engine.fieldList[this.drilledMembers[i].name].isHierarchy : false;\n                    if (isHierarchy) {\n                        var fieldPosition = this.getDimensionPos(axis, this.drilledMembers[i].name);\n                        for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                            var result = this.getDrillLevel(axis === 'rows' ? this.rows : this.columns, this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter ? this.drilledMembers[i].delimiter : '~~'));\n                            if ((this.isPaging ? (fieldPosition < hierarchyPosition && result.isDrill) : true) &&\n                                (this.drilledMembers[i].items[j].indexOf(item.join(delimiter)) === 0 ||\n                                    item.join(delimiter).indexOf(this.drilledMembers[i].items[j]) === 0)) {\n                                isAvailable = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isAvailable;\n    };\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_2 = drilledMembers; _i < drilledMembers_2.length; _i++) {\n            var field = drilledMembers_2[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (!isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var rawQuery = [];\n                    var i = 0;\n                    var drillInfo_2 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var isExist = this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), (field.delimiter ? field.delimiter : '~~'), drillInfo_2, axis);\n                    while (i < dimensions.length && !isExist) {\n                        if (drillInfo_2[i] && drillInfo_2[i].indexOf(dimensions[i].name) !== -1) {\n                            if (drillInfo_2[drillInfo_2.length - 1].indexOf(dimensions[i].name) !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '.CHILDREN})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_2[i] + '.CHILDREN)');\n                                    rawQuery.push('(' + drillInfo_2[i] + ')');\n                                }\n                            }\n                            else {\n                                if (drillInfo_2[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + measureQuery + ')');\n                                        rawQuery.push('(' + measureQuery + ')');\n                                    }\n                                }\n                                else if (drillInfo_2[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('({' + drillInfo_2[i] + '})');\n                                        rawQuery.push('({' + drillInfo_2[i] + '})');\n                                    }\n                                }\n                                else {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + drillInfo_2[i] + ')');\n                                        rawQuery.push('(' + drillInfo_2[i] + ')');\n                                    }\n                                }\n                            }\n                        }\n                        else if (!drillInfo_2[i] && dimensions[i]) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else {\n                                var dimensionQuery = this.getDimensionQuery(dimensions[i], axis);\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + dimensionQuery + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + dimensionQuery + ')');\n                                    rawQuery.push('(' + dimensionQuery + ')');\n                                }\n                            }\n                        }\n                        else {\n                            drillQuery = [];\n                            break;\n                        }\n                        i++;\n                    }\n                    if (drillQuery.length > 0 && drillQuery.length < drillInfo_2.length) {\n                        drillQuery = [];\n                        rawQuery = [];\n                    }\n                    // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                    query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                    if (rawQuery.length > 0) {\n                        rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                    }\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name] && this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet || dimension.isCalculatedField ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    var filter = filters[field.name];\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (!isFound && this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (!isFound && this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                            isFound = true;\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) + ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\"' + value1 + '\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\"' + value1 + '\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\"' + value1 + '\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\"' + value1 + '\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\"' + value1 + '\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\"' + value1 + '\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\"' + value1 + '\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\"' + value1 + '\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\"' + value1 + '\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\"' + value1 + '\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\"' + value1 + '\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\"' + value1 + '\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\"' + value1 + '\"AND ' + fieldName + '.CurrentMember.member_caption <=\"' + value2 + '\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\"' + value1 + '\"OR ' + fieldName + '.CurrentMember.member_caption <=\"' + value2 + '\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\"' + value1 + '\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\"' + formatString.trim() + '\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.isExporting = false;\n        this.aggregatedValueMatrix = [];\n        this.mappingFields = {};\n        this.formatRegex = /^(?:[ncpae])(?:([0-9]|1[0-9]|20))?$/i;\n        this.clonedValTuple = [];\n        this.clonedColumnTuple = [];\n        this.clonedRowTuple = [];\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        /** @hidden */\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n        this.isColDrill = false;\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties, onHeadersSort) {\n        this.isEmptyData = false;\n        this.getHeaderSortInfo = onHeadersSort;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        this.locale = this.globalize.culture ? this.globalize.culture : 'en-US';\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.measureIndex = !isNullOrUndefined(dataSourceSettings.valueIndex) ? dataSourceSettings.valueIndex : -1;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ?\n                customProperties.pageSettings : this.pageSettings) : undefined;\n            this.isPaging = this.pageSettings && (customProperties.enablePaging || customProperties.enableVirtualization) ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && Object.keys(this.savedFieldList).length > 0 && this.savedFieldListData)) {\n                this.getCubes(dataSourceSettings);\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            var measuresInfo = this.getMeasureInfo();\n            this.olapVirtualization = this.isPaging && dataSourceSettings.showSubTotals && (measuresInfo.measureIndex === (measuresInfo.measureAxis === 'column' ? dataSourceSettings.columns.length - 1 : dataSourceSettings.rows.length - 1)) && !isNullOrUndefined(this.pageSettings) && dataSourceSettings.showGrandTotals;\n            this.isPaging = this.isPaging ? !this.olapVirtualization : this.isPaging;\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function () {\n        if (this.olapVirtualization) {\n            var virtualScrollingData = this.getVirtualScrollingData(this.clonedColumnTuple, this.clonedRowTuple);\n            if (virtualScrollingData.isCalculated) {\n                this.pivotValues = [];\n                this.clearEngineProperties();\n                this.performEngine(virtualScrollingData.columnTuple, virtualScrollingData.rowTuple, virtualScrollingData.valueTuple);\n            }\n            this.pivotValues = this.pivotValues.slice();\n        }\n        else {\n            MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n        }\n    };\n    OlapEngine.prototype.getVirtualScrollingData = function (colTuples, rowTuples) {\n        var valTuples = this.clonedValTuple.slice();\n        var isCalculated = false;\n        var calColPage = (this.pageSettings.currentColumnPage - 1) * this.pageSettings.columnPageSize;\n        var calRowPage = (this.pageSettings.currentRowPage - 1) * this.pageSettings.rowPageSize;\n        var calColSize = this.pageSettings.columnPageSize * 3;\n        var calRowSize = this.pageSettings.rowPageSize * 3;\n        calColPage = (this.columnCount < (calColPage + calColSize)) ?\n            (this.columnCount > calColSize ? (this.columnCount - calColSize) : 0) : calColPage;\n        calRowPage = (this.rowCount < (calRowPage + calRowSize)) ?\n            (this.rowCount > calRowSize ? (this.rowCount - calRowSize) : 0) : calRowPage;\n        if ((calColPage !== this.pageColStartPos || calRowPage !== this.pageRowStartPos) ||\n            !(colTuples.length <= calColSize && rowTuples.length <= calRowSize)) {\n            isCalculated = true;\n            var measureInfo = this.getMeasureInfo();\n            var isColGrandTolExists = !isNullOrUndefined(colTuples[0]) &&\n                (Number(colTuples[0].querySelectorAll('Member')[0].querySelector('LNum').textContent) === 0);\n            var isRowGrandTolExists = !isNullOrUndefined(rowTuples[0]) &&\n                (Number(rowTuples[0].querySelectorAll('Member')[0].querySelector('LNum').textContent) === 0);\n            var isAddColGrandTotals = isColGrandTolExists ? (calColPage + calColSize >= colTuples.length - 1) : false;\n            var isAddRowGrandTotals = isRowGrandTolExists ? (calRowPage + calRowSize >= rowTuples.length - 1) : false;\n            var colDepth = isColGrandTolExists ?\n                this.getAxisdepth(colTuples) : measureInfo.measureAxis === 'column' ? measureInfo.valueInfo.length : 1;\n            var rowDepth = isRowGrandTolExists ?\n                this.getAxisdepth(rowTuples) : measureInfo.measureAxis === 'row' ? measureInfo.valueInfo.length : 1;\n            var colTuplesOffset = (isColGrandTolExists ? colDepth : 0) + calColPage;\n            var rowTuplesOffset = (isRowGrandTolExists ? rowDepth : 0) + calRowPage;\n            var virtualColTuples = colTuples.slice(colTuplesOffset, colTuplesOffset + calColSize);\n            var virtualRowTuples = rowTuples.slice(rowTuplesOffset, rowTuplesOffset + calRowSize);\n            var colLastLevel = virtualColTuples[0] ?\n                Number(virtualColTuples[0].querySelectorAll('Member')[0].querySelector('LNum').textContent) : 0;\n            var rowLastLevel = virtualRowTuples[0] ?\n                Number(virtualRowTuples[0].querySelectorAll('Member')[0].querySelector('LNum').textContent) : 0;\n            var colData = this.getVirtualTotals(colTuples.slice(0, colTuplesOffset), colLastLevel, isAddColGrandTotals, 'column', colDepth);\n            var rowData = this.getVirtualTotals(rowTuples.slice(0, rowTuplesOffset), rowLastLevel, isAddRowGrandTotals, 'row', rowDepth);\n            colTuplesOffset = virtualColTuples.length + colData.totalsCollection.length > calColSize ?\n                Math.max(virtualColTuples.length + colData.totalsCollection.length - calColSize) : 0;\n            rowTuplesOffset = virtualRowTuples.length + rowData.totalsCollection.length > calRowSize ?\n                Math.max(virtualRowTuples.length + rowData.totalsCollection.length - calRowSize) : 0;\n            virtualColTuples = colData.totalsCollection.concat(virtualColTuples.slice(colTuplesOffset, virtualColTuples.length));\n            virtualRowTuples = rowData.totalsCollection.concat(virtualRowTuples.slice(rowTuplesOffset, virtualRowTuples.length));\n            var virtualValuesTupples = this.getVirtualValues(valTuples, calColPage + colTuplesOffset, calRowPage + rowTuplesOffset, calColSize, calRowSize, colData.indexCollection, rowData.indexCollection, colTuples.length, rowTuples.length, colDepth, rowDepth, isRowGrandTolExists);\n            colTuples = virtualColTuples.slice();\n            rowTuples = virtualRowTuples.slice();\n            valTuples = virtualValuesTupples.slice();\n        }\n        this.pageColStartPos = calColPage;\n        this.pageRowStartPos = calRowPage;\n        return {\n            columnTuple: colTuples,\n            rowTuple: rowTuples,\n            valueTuple: valTuples,\n            isCalculated: isCalculated\n        };\n    };\n    OlapEngine.prototype.getAxisdepth = function (tuplesCollection) {\n        var depth = 0;\n        for (var i = 0; i < tuplesCollection.length; i++) {\n            var level = Number(tuplesCollection[i].querySelectorAll('Member')[0].querySelector('LNum').textContent);\n            if (level === 0) {\n                depth++;\n            }\n            else {\n                break;\n            }\n        }\n        return depth;\n    };\n    OlapEngine.prototype.getVirtualTotals = function (tuplesCollection, lastLevel, isAddGrandTotals, axis, axisDepth) {\n        var totalsCollection = [];\n        var indexCollection = [];\n        if (lastLevel !== 1) {\n            for (var i = tuplesCollection.length - 1; i > 0; i--) {\n                var currLevel = Number(tuplesCollection[i].querySelectorAll('Member')[0].querySelector('LNum').textContent);\n                if (currLevel === 0) {\n                    break;\n                }\n                else if (lastLevel > currLevel) {\n                    lastLevel = currLevel;\n                    var nextLevel = Number(tuplesCollection[i - 1].querySelectorAll('Member')[0].querySelector('LNum').textContent);\n                    if (nextLevel === currLevel) {\n                        for (var offset = 0; offset < axisDepth; offset++) {\n                            totalsCollection[totalsCollection.length] = tuplesCollection[i - offset];\n                            indexCollection[indexCollection.length] = i - offset;\n                        }\n                        i = axisDepth > 1 ? i - (axisDepth - 1) : i;\n                    }\n                    else {\n                        totalsCollection[totalsCollection.length] = tuplesCollection[i];\n                        indexCollection[indexCollection.length] = i;\n                    }\n                }\n                else if (currLevel === 1) {\n                    break;\n                }\n            }\n        }\n        if (isAddGrandTotals) {\n            for (var i = axisDepth; i > 0; i--) {\n                totalsCollection = totalsCollection.concat([tuplesCollection[i - 1]]);\n                indexCollection = indexCollection.concat([i - 1]);\n            }\n        }\n        return {\n            totalsCollection: totalsCollection.reverse(),\n            indexCollection: indexCollection.reverse()\n        };\n    };\n    OlapEngine.prototype.getVirtualValues = function (valueTuples, calColumnPage, calRowPage, calColunmnSize, calRowSize, colTotalsIndex, rowTotalsIndex, colTuplesLen, rowTuplesLen, columnDepth, rowDepth, isRowGrandTolExists) {\n        var framedVirtValTuples = [];\n        var virtValTuples = valueTuples;\n        if (rowTuplesLen > calRowSize) {\n            var rowValuesOffset = ((isRowGrandTolExists ? rowDepth : 0) + calRowPage) * colTuplesLen;\n            virtValTuples = valueTuples.slice(rowValuesOffset, rowValuesOffset + (calRowSize * colTuplesLen));\n            var virtRowTotalValues = [];\n            for (var i = 0; i < rowTotalsIndex.length; i++) {\n                virtRowTotalValues = virtRowTotalValues.concat(valueTuples.slice(rowTotalsIndex[i] * colTuplesLen, (rowTotalsIndex[i] * colTuplesLen) + colTuplesLen));\n            }\n            virtValTuples = virtRowTotalValues.concat(virtValTuples);\n        }\n        for (var i = 0, j = virtValTuples.length / colTuplesLen; i < j; i++) {\n            var rows = virtValTuples.slice(i * colTuplesLen, (i * colTuplesLen) + colTuplesLen);\n            var virtRows = rows.slice(calColumnPage + columnDepth, calColumnPage + columnDepth + calColunmnSize);\n            var virtTotals = [];\n            for (var x = 0; x < colTotalsIndex.length; x++) {\n                virtTotals[virtTotals.length] = rows[colTotalsIndex[x]];\n            }\n            framedVirtValTuples = framedVirtValTuples.concat(virtTotals.concat(virtRows));\n        }\n        return framedVirtValTuples;\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.clearEngineProperties();\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.olapVirtualization && !isNullOrUndefined(this.pageSettings)) {\n            if (columnTuples.length * rowTuples.length !== valCollection.length) {\n                var valueCollection = [];\n                for (var colPos = 0; colPos < valCollection.length; colPos++) {\n                    if (!isNullOrUndefined(valCollection[colPos])) {\n                        valueCollection[Number(valCollection[colPos].getAttribute('CellOrdinal'))] = valCollection[colPos];\n                    }\n                }\n                valCollection = valueCollection;\n            }\n            this.clonedValTuple = valCollection;\n            var drillInfo = this.getDrillInfo('columns');\n            var columnData = this.getActualTuples(columnTuples, drillInfo);\n            drillInfo = this.getDrillInfo('rows');\n            var rowData = this.getActualTuples(rowTuples, drillInfo, columnData.indexColls, columnTuples.length);\n            this.clonedColumnTuple = columnData.tupColls;\n            this.clonedRowTuple = rowData.tupColls;\n            this.columnCount = this.clonedColumnTuple.length;\n            this.rowCount = this.clonedRowTuple.length;\n            columnData = rowData = undefined;\n            var virtualScrollingData = this.getVirtualScrollingData(this.clonedColumnTuple, this.clonedRowTuple);\n            this.performEngine(virtualScrollingData.columnTuple, virtualScrollingData.rowTuple, virtualScrollingData.valueTuple);\n        }\n        else {\n            this.performEngine(columnTuples, rowTuples, valCollection);\n        }\n    };\n    OlapEngine.prototype.getDrillInfo = function (axis) {\n        var drilledMembers = {};\n        var fieldColls = [];\n        if (axis === 'columns') {\n            fieldColls = this.dataSourceSettings.columns.map(function (field) { return field.name; });\n        }\n        else if (axis === 'rows') {\n            fieldColls = this.dataSourceSettings.rows.map(function (field) { return field.name; });\n        }\n        if (fieldColls.length > 0) {\n            for (var i = 0, j = this.drilledMembers.length; i < j; i++) {\n                var drilledMember = this.drilledMembers[i];\n                var index = fieldColls.indexOf(drilledMember.name);\n                if (index > -1) {\n                    if (!drilledMembers[index]) {\n                        drilledMembers[index] = [];\n                    }\n                    drilledMembers[index] = drilledMembers[index].concat(drilledMember.items);\n                }\n            }\n        }\n        return drilledMembers;\n    };\n    OlapEngine.prototype.getActualTuples = function (tuplesColl, drillInfo, indexCollection, deapth) {\n        var tupColls = [];\n        var indexColls = [];\n        var valueCollection = [];\n        if (tuplesColl.length > 0) {\n            var _loop_1 = function (i, j) {\n                var tuples = tuplesColl[i];\n                var isAddElement = true;\n                var isGrandSum = false;\n                var isSum = false;\n                var memTypeColl = tuples.getElementsByTagName('MEMBER_TYPE');\n                var uNameColl = tuples.getElementsByTagName('UName');\n                for (var k = 0, l = memTypeColl.length; k < l; k++) {\n                    var memType = Number(memTypeColl[k].textContent);\n                    var uName = uNameColl[k].textContent;\n                    if (isSum && memType < 2) {\n                        isAddElement = false;\n                    }\n                    else if (memType === 2) {\n                        isGrandSum = true;\n                    }\n                    else if (isGrandSum && memType < 2) {\n                        isAddElement = false;\n                    }\n                    if (drillInfo[k] && drillInfo[k].indexOf(uName) > -1) {\n                        isSum = true;\n                    }\n                    if (!isAddElement) {\n                        break;\n                    }\n                }\n                if (isAddElement) {\n                    tupColls[tupColls.length] = tuples;\n                    if (indexCollection) {\n                        var rowColls_1 = this_1.clonedValTuple.slice(i * deapth, (i * deapth) + deapth);\n                        valueCollection = valueCollection.concat(indexCollection.map(function (index) { return rowColls_1[index]; }));\n                    }\n                    else {\n                        indexColls[indexColls.length] = i;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, j = tuplesColl.length; i < j; i++) {\n                _loop_1(i, j);\n            }\n        }\n        else if (indexCollection) {\n            var rowColls_2 = this.clonedValTuple.slice(0, deapth);\n            valueCollection = valueCollection.concat(indexCollection.map(function (index) { return rowColls_2[index]; }));\n        }\n        if (valueCollection.length > 0) {\n            this.clonedValTuple = valueCollection;\n        }\n        return {\n            tupColls: tupColls,\n            indexColls: indexColls\n        };\n    };\n    OlapEngine.prototype.clearEngineProperties = function () {\n        this.pivotValues = [];\n        this.valueContent = [];\n        this.headerContent = [];\n        this.colDepth = 0;\n        this.tupColumnInfo = [];\n        this.tupRowInfo = [];\n        this.colMeasures = {};\n        this.colMeasurePos = undefined;\n        this.rowMeasurePos = undefined;\n        this.rowStartPos = -1;\n    };\n    OlapEngine.prototype.performEngine = function (columnTuples, rowTuples, valCollection) {\n        this.totalCollection = [];\n        var measureInfo = this.getMeasureInfo();\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length, columnTuples.length * rowTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length, columnTuples.length * rowTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (this.customArgs.action === 'down') {\n            this.updateTupCollection(this.customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        var framedValCollection = {};\n        for (var colPos = 0; colPos < valCollection.length; colPos++) {\n            if (!isNullOrUndefined(valCollection[colPos])) {\n                framedValCollection[this.olapVirtualization ? colPos : Number(valCollection[colPos].getAttribute('CellOrdinal'))] = valCollection[colPos];\n            }\n        }\n        var valueSortData;\n        this.valueSortSettings.columnIndex = undefined;\n        if (this.enableValueSorting && this.valueSortSettings && !this.isPaging && !this.olapVirtualization) {\n            valueSortData = this.getValueSortInfo(columnTuples, rowTuples, measureInfo);\n        }\n        if (this.customArgs.action === 'down' ? this.customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging && !this.olapVirtualization) {\n                this.performColumnSorting(framedValCollection, valueSortData);\n            }\n        }\n        if (this.customArgs.action === 'down' ? this.customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging && !this.olapVirtualization) {\n                this.performRowSorting(framedValCollection, valueSortData);\n            }\n        }\n        this.frameValues(framedValCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && !this.olapVirtualization && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getValueSortInfo = function (columnTuples, rowTuples, measureInfo) {\n        var memberIndex;\n        if (this.valueSortSettings.headerText) {\n            var headersCollection = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var granSumPos = headersCollection.indexOf('Grand Total');\n            if (granSumPos > -1) {\n                var measure = headersCollection.join('').split(headersCollection[granSumPos]).join('');\n                headersCollection = [];\n                headersCollection[measureInfo.measureIndex] = measure;\n            }\n            var measureAxis = '';\n            var measureIndex = measureInfo.measureIndex;\n            for (var i = 0; i < this.dataSourceSettings.values.length; i++) {\n                measureIndex = headersCollection.indexOf(this.dataSourceSettings.values[i].caption);\n                if (this.dataSourceSettings.values[i].caption === headersCollection[measureIndex]) {\n                    headersCollection[measureIndex] = this.fieldList[this.dataSourceSettings.values[i].name].name;\n                    measureAxis = headersCollection[measureIndex];\n                    break;\n                }\n            }\n            if (measureIndex !== -1) {\n                if (measureIndex < measureInfo.measureIndex) {\n                    headersCollection = this.reArrangeHeaders(headersCollection, measureInfo.measureIndex, measureAxis);\n                }\n                var membersColls = this.olapValueAxis === 'column' ? columnTuples : rowTuples;\n                if (membersColls.length > 0) {\n                    var level = membersColls[0].getElementsByTagName('Member').length - (granSumPos > -1 ? measureIndex : 0);\n                    var member = this.getParentElement(membersColls, headersCollection, level, measureInfo.measureIndex, measureAxis, granSumPos > -1)[0];\n                    memberIndex = membersColls.indexOf(member);\n                }\n            }\n        }\n        return {\n            memberIndex: memberIndex,\n            columnLength: columnTuples.length,\n            rowLength: rowTuples.length,\n            isValueSorting: memberIndex > -1\n        };\n    };\n    OlapEngine.prototype.getParentElement = function (membersColls, headersCollection, level, measureIndex, measureAxis, isGrandTotal) {\n        var selectedMember = [];\n        var parentLevel = 0;\n        var isParentAvail = false;\n        var isChildAvail = false;\n        var index = membersColls[0].getElementsByTagName('Member').length - level;\n        for (var i = 0; i < membersColls.length; i++) {\n            if (isNullOrUndefined(membersColls[i].getElementsByTagName('Member')[index])) {\n                selectedMember = [];\n                break;\n            }\n            var memberUName = membersColls[i].getElementsByTagName('UName')[index].textContent;\n            var memberCaption = membersColls[i].getElementsByTagName('Caption')[index].textContent;\n            var memberLevel = Number(membersColls[i].getElementsByTagName('LNum')[index].textContent);\n            var isParent = memberUName === headersCollection[index] ||\n                memberCaption === headersCollection[index] ||\n                (isNullOrUndefined(headersCollection[index]) && memberLevel === 0);\n            if (isParent) {\n                selectedMember[selectedMember.length] = membersColls[i];\n                isParentAvail = true;\n                parentLevel = memberLevel;\n                if (isGrandTotal) {\n                    break;\n                }\n            }\n            else if (isParentAvail && parentLevel < memberLevel) {\n                var childMember = [];\n                for (var j = i; j < membersColls.length; j++) {\n                    var childUName = membersColls[j].getElementsByTagName('UName')[index].textContent;\n                    var childCaption = membersColls[j].getElementsByTagName('Caption')[index].textContent;\n                    var childLevel = Number(membersColls[j].getElementsByTagName('LNum')[index].textContent);\n                    var isChild = childUName === headersCollection[index + 1] || childCaption === headersCollection[index + 1] ||\n                        (isNullOrUndefined(headersCollection[index + 1]) && childLevel === 0);\n                    if ((parentLevel + 1 === childLevel) && isChild) {\n                        childMember[childMember.length] = membersColls[j];\n                        isChildAvail = true;\n                    }\n                    else if (parentLevel + 1 < childLevel) {\n                        if (isChildAvail) {\n                            childMember[childMember.length] = membersColls[j];\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else if (parentLevel + 1 > childLevel) {\n                        break;\n                    }\n                }\n                if (isChildAvail) {\n                    var childHeaderCollection = headersCollection.slice(0, index).concat(headersCollection.slice(index + 1, headersCollection.length));\n                    var childMeasureIndex = childHeaderCollection.indexOf(measureAxis);\n                    if (childMeasureIndex < measureIndex) {\n                        childHeaderCollection = this.reArrangeHeaders(childHeaderCollection, measureIndex, measureAxis);\n                    }\n                    selectedMember = this.getParentElement(childMember, childHeaderCollection, childMember[0].getElementsByTagName('Member').length, measureIndex, measureAxis);\n                }\n                break;\n            }\n            else if (isParentAvail && !isParent) {\n                break;\n            }\n        }\n        if (isGrandTotal) {\n            return selectedMember;\n        }\n        else if (index < (headersCollection.length - 1) && selectedMember.length > 0 && !isChildAvail) {\n            selectedMember = this.getParentElement(selectedMember, headersCollection, level - 1, measureIndex, measureAxis);\n        }\n        return selectedMember;\n    };\n    OlapEngine.prototype.reArrangeHeaders = function (headersCollection, measureIndex, measureAxis) {\n        var actualIndex = headersCollection.indexOf(measureAxis);\n        var headerColl1 = headersCollection.slice(0, actualIndex);\n        var headerColl2 = headersCollection.slice(actualIndex + 1, headersCollection.length);\n        headerColl1[measureIndex] = headersCollection[actualIndex];\n        return headerColl1.concat(headerColl2);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showSubTotalsAtTop = this.showColumnSubTotals && this.dataSourceSettings.subTotalsPosition === 'Top';\n        this.showSubTotalsAtBottom = this.showRowSubTotals && this.dataSourceSettings.subTotalsPosition === 'Bottom';\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        var _this = this;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var isGrandTotalAdd = true;\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                actualText: 'Grand Total',\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        var lastMesPos = 0;\n        var isGrandTotalTop = false;\n        var subTotals = [];\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            // let drillInfo: IDrillInfo[] = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            // let drillEndPos: number = this.tupRowInfo[tupPos].drillEndPos;\n            // let levelColl: number[] = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var attrDrill = this.checkAttributeDrill(this.tupRowInfo[tupPos].drillInfo, 'rows');\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (attrDrill || allStartPos > drillStartPos) : true) : true;\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) ||\n                                this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ?\n                    (attrDrill || allStartPos > withoutAllEndPos) : true;\n                isGrandTotalTop = this.dataSourceSettings.grandTotalsPosition === 'Top' && this.olapRowValueIndex === 0 &&\n                    this.olapValueAxis === 'row'\n                    && this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals &&\n                    (this.olapValueAxis === 'row' ? this.dataSourceSettings.rows.length > 1 : true);\n                if (isGrandTotalTop && gTotals.length === 1) {\n                    gTotals = this.frameGrandTotalValues(tuples, gTotals, typeColl, measurePos);\n                }\n                if (members.length === allCount + (measure ? 1 : 0) && measure && !isGrandTotalTop) {\n                    var levelName = 'Grand Total' + this.valueSortSettings.headerDelimiter +\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption ?\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                        members[measurePos].querySelector('Caption').textContent;\n                    var formattedText = (typeColl[measurePos] === '3' &&\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                        members[measurePos].querySelector('Caption').textContent;\n                    gTotals = this.frameGrandTotalAxisSet(gTotals, this.getUniqueName(members[measurePos].querySelector('UName').textContent), formattedText, position, tupPos, Number(typeColl[measurePos]), members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                        members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined, members[measurePos].querySelector('LName').textContent, members[measurePos].getAttribute('Hierarchy'), {\n                        levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy')\n                    });\n                    gTotals[gTotals.length - 1].valueSort[levelName] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    if (this.dataSourceSettings.grandTotalsPosition === 'Top' && isGrandTotalAdd && this.dataSourceSettings.showGrandTotals &&\n                        (this.olapValueAxis === 'row' ? this.dataSourceSettings.rows.length > 1 : true)) {\n                        this.insertRowGrandTotal(gTotals, valueContent, pivotValues, tuples, position);\n                        position = this.pivotValues.length;\n                        isGrandTotalAdd = false;\n                    }\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? (prevParent.isDrilled &&\n                                !this.fieldList[prevParent.hierarchy].isHierarchy) : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            var uniqueName = this.getUniqueName(member.querySelector('UName').textContent);\n                            var depth = this.getDepth(this.tupRowInfo[tupPos], uniqueName, Number(typeColl[memPos]));\n                            var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos], memPos, true);\n                            if (this.showSubTotalsAtBottom && position > this.rowStartPos) {\n                                lastPos = position = this.insertRowSubTotal(pivotValues, valueContent, subTotals, position, lvl, levelName);\n                            }\n                            if (!(this.isPaging && pivotValues[lastMesPos][0] &&\n                                this.fieldList[pivotValues[lastMesPos][0].hierarchy] &&\n                                this.fieldList[pivotValues[lastMesPos][0].hierarchy].isHierarchy &&\n                                pivotValues[lastMesPos][0].hasChild &&\n                                !pivotValues[lastMesPos][0].isDrilled &&\n                                !this.rows[memPos].isNamedSet && (this.rows[memPos].name.indexOf('[Measures]') === 0 ||\n                                (this.fieldList[member.getAttribute('Hierarchy')] &&\n                                    (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy ||\n                                        this.fieldList[member.getAttribute('Hierarchy')].hasAllMember))) &&\n                                pivotValues[lastMesPos][0].depth < depth)) {\n                                pivotValues[position] = [{\n                                        axis: 'row',\n                                        actualText: uniqueName,\n                                        colIndex: 0,\n                                        formattedText: (typeColl[memPos] === '3' && this.dataFields[uniqueName] &&\n                                            this.dataFields[uniqueName].caption) ? this.dataFields[uniqueName].caption :\n                                            member.querySelector('Caption').textContent,\n                                        hasChild: (this.fieldList[member.getAttribute('Hierarchy')] &&\n                                            this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.rows.length - 1 &&\n                                            !this.rows[memPos + 1].isNamedSet && this.rows[memPos + 1].name.indexOf('[Measures]') < 0 &&\n                                            this.fieldList[this.rows[memPos + 1].name] &&\n                                            this.fieldList[this.rows[memPos + 1].name].hasAllMember) ? true :\n                                            Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                        level: lvl,\n                                        depth: depth,\n                                        rowIndex: position,\n                                        index: [],\n                                        ordinal: tupPos,\n                                        type: 'header',\n                                        colSpan: 1,\n                                        rowSpan: 1,\n                                        memberType: Number(typeColl[memPos]),\n                                        isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] &&\n                                            this.fieldList[member.getAttribute('Hierarchy')].isHierarchy &&\n                                            !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupRowInfo[tupPos].drillInfo, 'rows')) ? true : this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                            member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                        levelUniqueName: member.querySelector('LName').textContent,\n                                        hierarchy: member.getAttribute('Hierarchy'),\n                                        isNamedSet: isNamedSet,\n                                        valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                    }];\n                                if (this.olapVirtualization && pivotValues[position][0].type === 'header') {\n                                    delete pivotValues[position][0].type;\n                                }\n                                prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                                if (!prevParent) {\n                                    rowMembers.push(member.querySelector('Caption').textContent);\n                                }\n                                levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos], memPos, false);\n                                pivotValues[position][0].valueSort.levelName = levelName;\n                                pivotValues[position][0].valueSort[levelName] = 1;\n                                valueContent[position - this.rowStartPos] = {};\n                                valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                                if (measure && measurePos > memPos) {\n                                    prevUNArray[measurePos] = '';\n                                }\n                                for (var pos = memPos + 1; pos < members.length; pos++) {\n                                    prevUNArray[pos] = '';\n                                }\n                                prevUNArray[memPos] = member.querySelector('UName').textContent;\n                                lastMesPos = Number(typeColl[memPos]) !== 3 ? position : lastMesPos;\n                                position++;\n                                lastMemPos = memPos;\n                            }\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled &&\n                                allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled &&\n                            this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] ===\n                                    undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (this.showSubTotalsAtBottom && subTotals.length > 0) {\n            subTotals.reverse();\n            subTotals.forEach(function (axis) {\n                pivotValues[position] = [axis];\n                valueContent[position - _this.rowStartPos] = {};\n                valueContent[position - _this.rowStartPos][0] = pivotValues[position][0];\n                position++;\n            });\n        }\n        if (!(this.dataSourceSettings.grandTotalsPosition === 'Top') || (this.olapValueAxis === 'row' &&\n            this.dataSourceSettings.rows.length === 1 && this.dataSourceSettings.grandTotalsPosition === 'Top') ||\n            this.dataSourceSettings.rows.length === 0) {\n            this.insertRowGrandTotal(gTotals, valueContent, pivotValues, tuples, position);\n        }\n    };\n    OlapEngine.prototype.insertRowSubTotal = function (pivotValues, valueContent, subTotals, position, lvl, levelName) {\n        var prevRowParent = PivotUtil.frameHeaderWithKeys(pivotValues[position - 1][0]);\n        if (prevRowParent.level < lvl && prevRowParent.type !== 'grand sum' && (prevRowParent.isDrilled ||\n            prevRowParent.memberType === 3)) {\n            if (prevRowParent.memberType === 3) {\n                var valueCells = [];\n                var index = 1;\n                while (pivotValues[position - index][0].memberType === 3) {\n                    valueCells[valueCells.length] = pivotValues[position - index][0];\n                    index++;\n                }\n                if (pivotValues[position - index][0].isDrilled && valueCells.length !== 0) {\n                    for (var i = 0, axislength = valueCells.length; i < axislength; i++) {\n                        valueCells[i].formattedText =\n                            pivotValues[position - index][0].formattedText + ' ' + valueCells[i].formattedText;\n                        valueCells[i].isSum = true;\n                        valueCells[i].type = 'sum';\n                        valueCells[i].parentUniqueName = pivotValues[position - index][0].levelUniqueName;\n                        subTotals[subTotals.length] = valueCells[i];\n                    }\n                    index--;\n                    position -= index;\n                }\n            }\n            else {\n                prevRowParent.hasChild = false;\n                prevRowParent.isDrilled = false;\n                prevRowParent.isSum = true;\n                prevRowParent.type = 'sum';\n                prevRowParent.formattedText = prevRowParent.formattedText + ' Total';\n                subTotals[Object.keys(subTotals).length] = prevRowParent;\n            }\n        }\n        if (subTotals.length > 0) {\n            var j = subTotals.length - 1;\n            var subTotalLevel = subTotals[j].valueSort.levelName.split('.').length;\n            var nextLevels = levelName.split('.').length;\n            while (subTotalLevel >= nextLevels) {\n                pivotValues[position] = [subTotals[j]];\n                valueContent[position - this.rowStartPos] = {};\n                valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                position++;\n                subTotals.splice(subTotals.length - 1, 1);\n                if (Object.keys(subTotals).length > 0) {\n                    j--;\n                    subTotalLevel = subTotals[j].valueSort.levelName.split('.').length;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    OlapEngine.prototype.insertRowGrandTotal = function (gTotals, valueContent, pivotValues, tuples, position) {\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            var grandTotalFlag = this.dataSourceSettings.rows.length === 0 ||\n                (this.dataSourceSettings.rows.length === 1 && this.dataSourceSettings.rows[0].name === '[Measures]');\n            if ((this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) || grandTotalFlag) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n        return gTotals;\n    };\n    OlapEngine.prototype.frameGrandTotalAxisSet = function (gTotals, actualText, formattedText, rowIndex, ordinal, memberType, parentUniqueName, levelUniqueName, hierarchy, valueSort) {\n        gTotals.push({\n            axis: 'row',\n            actualText: actualText,\n            colIndex: 0,\n            formattedText: formattedText,\n            hasChild: false,\n            level: -1,\n            rowIndex: rowIndex,\n            index: [],\n            ordinal: ordinal,\n            colSpan: 1,\n            rowSpan: 1,\n            memberType: memberType,\n            isDrilled: false,\n            parentUniqueName: parentUniqueName,\n            levelUniqueName: levelUniqueName,\n            hierarchy: hierarchy,\n            valueSort: valueSort\n        });\n        return gTotals;\n    };\n    OlapEngine.prototype.getDepth = function (tupInfo, uniqueName, memberType) {\n        var memberPosition = tupInfo.uNameCollection.indexOf(uniqueName);\n        var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n            (memberType === 3 ? '' : uniqueName);\n        var fieldSep = cropUName.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        if (memberType === 3 && this.rowMeasurePos === fieldSep.length) {\n            fieldSep.push(uniqueName);\n        }\n        var nxtIndextCount = -1;\n        for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n            var fieldMembers = fieldSep[fPos];\n            var membersCount = fieldMembers.split('~~').length;\n            nxtIndextCount += membersCount;\n        }\n        return nxtIndextCount;\n    };\n    OlapEngine.prototype.checkAttributeDrill = function (drillInfo, axis) {\n        var isDrill = false;\n        for (var i = 0; i < drillInfo.length; i++) {\n            isDrill = this.isAttributeDrill(drillInfo[i].hierarchy, drillInfo, axis);\n            if (isDrill) {\n                break;\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.indexOf('[Measures]') === 0 ? '3' : '1';\n            }\n            var memberType = memberUName.indexOf('[Measures]') === 0 ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                if (!this.isPaging) {\n                    allCount++;\n                }\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = {\n                        UName: (_a = {}, _a[memberlevel] = memberUName, _a),\n                        Caption: (_b = {}, _b[memberlevel] = memberCaption, _b)\n                    };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                var uNames = '';\n                var uNamesKeys = Object.keys(this.headerGrouping[memPos].UName);\n                for (var i = 0; i < uNamesKeys.length; i++) {\n                    var j = uNamesKeys[i];\n                    if (i === 0) {\n                        uNames = this.headerGrouping[memPos].UName[Number(j)];\n                    }\n                    else {\n                        uNames = uNames + '~~' + this.headerGrouping[memPos].UName[Number(j)];\n                    }\n                }\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = '';\n                var captionsKeys = Object.keys(this.headerGrouping[memPos].Caption);\n                for (var i = 0; i < captionsKeys.length; i++) {\n                    var j = captionsKeys[i];\n                    if (i === 0) {\n                        captions = this.headerGrouping[memPos].Caption[Number(j)];\n                    }\n                    else {\n                        captions = captions + '~~' + this.headerGrouping[memPos].Caption[Number(j)];\n                    }\n                }\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/~~|::\\[/).map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple, memPos, isAddTotals) {\n        var captionColection = tuple.captionCollection;\n        var isMeasureAdd = true;\n        if (!isAddTotals && tuple.typeCollection[memPos] !== '3') {\n            for (var i = 0; i < this.measurePosition; i++) {\n                if (tuple.drillInfo[memPos].hierarchy === this.dataSourceSettings.rows[i].name) {\n                    isMeasureAdd = false;\n                    break;\n                }\n            }\n        }\n        if (tuple.measure && isMeasureAdd) {\n            var uName = this.getUniqueName(tuple.measure.querySelector('UName').textContent);\n            var measureName = this.dataFields[uName] && this.dataFields[uName].caption ?\n                this.dataFields[uName].caption : tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join(this.valueSortSettings.headerDelimiter);\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~::]+/g);\n            captionColection = captionCollectionArray.join(this.valueSortSettings.headerDelimiter);\n        }\n        return captionColection;\n    };\n    /**\n     * It performs the set named sets position.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] =\n                this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    OlapEngine.prototype.frameGrandTotalValues = function (tuples, gTotals, typeColl, measurePos) {\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var availAllMember = false;\n        var withoutAllEndPos = -1;\n        var isGrandtoalDataAdd = false;\n        var prevTupInfo;\n        var isGrandTotalTop = false;\n        while (tupPos < tuples.length && !isGrandtoalDataAdd) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            // let memPos: number = 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl_1 = this.tupRowInfo[tupPos].typeCollection;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            // memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var attrDrill = this.checkAttributeDrill(this.tupRowInfo[tupPos].drillInfo, 'rows');\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (attrDrill || allStartPos > drillStartPos) : true) : true;\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) ||\n                                this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                if (members.length === allCount + (measure ? 1 : 0) && measure && !isGrandTotalTop) {\n                    var levelName = 'Grand Total' + this.valueSortSettings.headerDelimiter +\n                        members[measurePos].querySelector('Caption').textContent;\n                    var formattedText = (typeColl_1[measurePos] === '3' &&\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                        this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                        members[measurePos].querySelector('Caption').textContent;\n                    gTotals = this.frameGrandTotalAxisSet(gTotals, this.getUniqueName(members[measurePos].querySelector('UName').textContent), formattedText, this.pivotValues.length, tupPos, Number(typeColl_1[measurePos]), members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                        members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined, members[measurePos].querySelector('LName').textContent, members[measurePos].getAttribute('Hierarchy'), {\n                        levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy')\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total' + this.valueSortSettings.headerDelimiter +\n                        members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            isGrandtoalDataAdd = this.dataSourceSettings.values.length + 1 === gTotals.length ? true : false;\n            tupPos++;\n        }\n        return gTotals;\n    };\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        var _this = this;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (this.olapVirtualization) {\n            maxLevel = maxLevel.slice(0, maxLevel.length - 1).map(function (level) { return level === 0 ? 1 : level; }).concat(maxLevel.slice(maxLevel.length - 1));\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        tupPos = 0;\n        var position = 1;\n        var lastSavedInfo = {};\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        var _loop_2 = function () {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this_2.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this_2.tupColumnInfo[tupPos].allStartPos;\n            var measure = this_2.tupColumnInfo[tupPos].measure;\n            var typeColl = this_2.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this_2.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this_2.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this_2.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this_2.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this_2.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this_2.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            var depth = 0;\n            maxLevel.map(function (item, pos) {\n                depth = depth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) :\n                    (item === 0 ? ((_this.isPaging && typeColl[pos] === '2') ? 0 : 1) : item));\n            });\n            this_2.colDepth = this_2.colDepth > depth ? this_2.colDepth : depth;\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            var isGrandTotalTop = false;\n            if (this_2.dataSourceSettings.grandTotalsPosition === 'Top' && this_2.dataSourceSettings.showGrandTotals &&\n                this_2.dataSourceSettings.showColumnGrandTotals) {\n                var count = 0;\n                for (var i = 0; i < members.length; i++) {\n                    if ((members[i].querySelector('Caption').textContent).indexOf('All') === 0) {\n                        count++;\n                    }\n                }\n                isGrandTotalTop = count === (this_2.olapValueAxis === 'column' ? this_2.dataSourceSettings.columns.length - 1 :\n                    this_2.dataSourceSettings.columns.length);\n            }\n            if (isStartCol || isGrandTotalTop) {\n                if (allCount === 0 || isGrandTotalTop) {\n                    var levelComp = [-1, -1, -1];\n                    if (this_2.tupColumnInfo[tupPos - 1] && this_2.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this_2.levelCompare(levelColl, this_2.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this_2.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this_2.tupColumnInfo[tupPos].drillStartPos < 0 || this_2.showSubTotalsAtTop) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_2.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this_2.setParentCollection(members);\n                        this_2.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this_2.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_2.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        if (!this_2.isColDrill) {\n                            position++;\n                        }\n                        else {\n                            this_2.isColDrill = false;\n                        }\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_2.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this_2.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            if (!isGrandTotalTop) {\n                                this_2.totalCollection[this_2.totalCollection.length] =\n                                    ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            }\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this_2.tupColumnInfo[tupPos];\n                }\n            }\n            var attrDrill = this_2.checkAttributeDrill(this_2.tupColumnInfo[tupPos].drillInfo, 'columns');\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && (attrDrill || withoutAllEndPos < allStartPos)) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    var endAllow = drillEndPos !== drillStartPos ?\n                        (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this_2.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this_2.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            if (!isGrandTotalTop) {\n                                this_2.totalCollection[this_2.totalCollection.length] =\n                                    ({\n                                        allCount: allCount, ordinal: tupPos, members: members,\n                                        allStartPos: allStartPos, drillInfo: drillInfo\n                                    });\n                            }\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        };\n        var this_2 = this;\n        while (tupPos < tuples.length) {\n            _loop_2();\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        var attrDrill = this.checkAttributeDrill(this.tupColumnInfo[coll.ordinal].drillInfo, 'columns');\n                        if (this.tupColumnInfo[coll.ordinal].showTotals || attrDrill) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/~~|::\\[/).map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ?\n                    this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ? maxLevel[memberPos] : (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled &&\n                    this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false : this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        var attrDrill = this.checkAttributeDrill(this.tupColumnInfo[tupPos].drillInfo, 'columns');\n        if (this.tupColumnInfo[tupPos].showTotals || attrDrill) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            var isGrandTotal = members[0].querySelector('LNum').textContent === '0';\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                var memberLevel = member.querySelector('LNum').textContent;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    var uName = this.getUniqueName(member.querySelector('UName').textContent);\n                    if (memberType !== '2') {\n                        colMembers[uName] = (memberType === '3' && this.dataFields[uName] && this.dataFields[uName].caption) ? this.dataFields[uName].caption : member.querySelector('Caption').textContent;\n                    }\n                    else if (memberType === '2' && memberLevel === '0' && isGrandTotal) {\n                        colMembers[uName] = 'Grand Total';\n                        isGrandTotal = false;\n                    }\n                    var levelNameKeys = Object.keys(colMembers);\n                    var levelName = memPos >= this.measurePosition && Number(member.getElementsByTagName('LNum')[0].textContent) === 0 && levelNameKeys.length === 1 ? 'Grand Total' + this.valueSortSettings.headerDelimiter : '';\n                    for (var i = 0; i < levelNameKeys.length; i++) {\n                        var j = levelNameKeys[i];\n                        if (i === 0) {\n                            levelName = levelName + colMembers[j];\n                        }\n                        else {\n                            levelName = levelName + this.valueSortSettings.headerDelimiter + colMembers[j];\n                        }\n                    }\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    var depth = this.getDepth(this.tupColumnInfo[tupPos], uName, Number(memberType));\n                    if (!(this.isPaging && this.pivotValues[spanMemPos - 1] && this.pivotValues[spanMemPos - 1][position] &&\n                        this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy] &&\n                        this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy].isHierarchy &&\n                        this.pivotValues[spanMemPos - 1][position].hasChild &&\n                        !this.pivotValues[spanMemPos - 1][position].isDrilled &&\n                        !this.columns[memPos].isNamedSet && this.fieldList[member.getAttribute('Hierarchy')] &&\n                        (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy ||\n                            this.fieldList[member.getAttribute('Hierarchy')].hasAllMember) &&\n                        this.pivotValues[spanMemPos - 1][position].depth < depth)) {\n                        this.pivotValues[spanMemPos][position] = {\n                            axis: 'column',\n                            actualText: uName,\n                            colIndex: position,\n                            formattedText: (memberType === '3' && this.dataFields[uName] &&\n                                this.dataFields[uName].caption) ? this.dataFields[uName].caption :\n                                member.querySelector('Caption').textContent,\n                            hasChild: (this.fieldList[member.getAttribute('Hierarchy')] &&\n                                this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.columns.length - 1 &&\n                                !this.columns[memPos + 1].isNamedSet && this.columns[memPos + 1].name.indexOf('[Measures]') < 0 &&\n                                this.fieldList[this.columns[memPos + 1].name] &&\n                                this.fieldList[this.columns[memPos + 1].name].hasAllMember) ?\n                                true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                            level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                            rowIndex: spanMemPos,\n                            ordinal: tupPos,\n                            memberType: Number(memberType),\n                            depth: depth,\n                            isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] &&\n                                this.fieldList[member.getAttribute('Hierarchy')].isHierarchy &&\n                                !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupColumnInfo[tupPos].drillInfo, 'columns')) ? true : (isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled),\n                            parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                            levelUniqueName: member.querySelector('LName').textContent,\n                            hierarchy: member.getAttribute('Hierarchy'),\n                            isNamedSet: isNamedSet,\n                            valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                        };\n                        if (!this.headerContent[spanMemPos]) {\n                            this.headerContent[spanMemPos] = {};\n                        }\n                        this.headerContent[spanMemPos][position] =\n                            this.pivotValues[spanMemPos][position];\n                        spanMemPos++;\n                    }\n                    else {\n                        this.isColDrill = true;\n                        break;\n                    }\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 &&\n                        this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                if (this.pivotValues[memberDepth - 1]) {\n                    this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.isAttributeDrill = function (hierarchy, drillInfo, axis) {\n        var isDrill = false;\n        var isAdjacent = this.isAdjacentToMeasure(hierarchy, axis);\n        if (!isAdjacent) {\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (this.drilledMembers[i].name === hierarchy) {\n                    for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                        var delimiter = this.drilledMembers[i].delimiter;\n                        var drillItems = this.drilledMembers[i].items[j].split(delimiter);\n                        var levelName = '';\n                        for (var k = 0; k < drillItems.length; k++) {\n                            if (drillInfo[k] && drillInfo[k].uName) {\n                                levelName = levelName + (levelName === '' ? '' : this.drilledMembers[i].delimiter) +\n                                    drillInfo[k].uName;\n                            }\n                        }\n                        if (levelName === this.drilledMembers[i].items[j]) {\n                            isDrill = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.isAdjacentToMeasure = function (hierarchy, axis) {\n        var isAdjacent = false;\n        var fields = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < fields.length; i++) {\n            if (fields[i].name === hierarchy && fields[i + 1] && (fields[i + 1].name === '[Measures]' ||\n                fields[i + 1].isNamedSet || (this.fieldList[fields[i + 1].name] &&\n                !this.fieldList[fields[i + 1].name].hasAllMember))) {\n                isAdjacent = true;\n                break;\n            }\n        }\n        return isAdjacent;\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.performRowSorting = function (valCollection, valueSortData) {\n        var _a;\n        if ((this.enableSort || this.enableValueSorting) && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            var isDrilled = void 0;\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                if (this.showSubTotalsAtBottom && currentCell.isSum && currentCell.memberType !== 3) {\n                    continue;\n                }\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? (currentTuple.measurePosition === 0 && currentCell.memberType === 3 ?\n                    currentTuple.measureName : currentTuple.uNameCollection) : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/~~|::\\[/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]], valCollection, valueSortData);\n                }\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = (tupInfo.measurePosition === 0 && axisSets[aPos].memberType === 3) ?\n                                tupInfo.measureName : tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName], valCollection, valueSortData);\n                                    var isLastMeasure = uName.lastIndexOf('::[') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::[').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        isDrilled = this.showSubTotalsAtBottom && groupSets[groupSets.length - 1].isDrilled;\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                if (this.showSubTotalsAtBottom && groupSets[groupSets.length - 1].memberType === 3 &&\n                                    groupSets[groupSets.length - 1].level > -1 && isDrilled) {\n                                    var valueColl = [];\n                                    var sliceIndex = 0;\n                                    for (var i = groupSets.length - 1; i >= 0; i--) {\n                                        if (groupSets[i].memberType === 3) {\n                                            valueColl[valueColl.length] = groupSets[i];\n                                        }\n                                        else {\n                                            valueColl = valueColl.reverse();\n                                            sliceIndex = i + 1;\n                                            break;\n                                        }\n                                    }\n                                    groupSets = groupSets.slice(0, sliceIndex).concat(sortLvlGrouping[levels[lPos + 1]][uName]).concat(valueColl);\n                                }\n                                else {\n                                    var currentCell = groupSets[groupSets.length - 1];\n                                    var subTotal = void 0;\n                                    if (this.showSubTotalsAtBottom && currentCell.isDrilled) {\n                                        subTotal = PivotUtil.frameHeaderWithKeys(currentCell);\n                                        subTotal.hasChild = false;\n                                        subTotal.isDrilled = false;\n                                        subTotal.isSum = true;\n                                        subTotal.formattedText = subTotal.formattedText + ' Total';\n                                    }\n                                    groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                                    if (subTotal) {\n                                        groupSets[groupSets.length] = subTotal;\n                                    }\n                                }\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName], valCollection, valueSortData);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            var valuePos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping, valCollection, valueSortData);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                if (this.dataSourceSettings.grandTotalsPosition === 'Top' && (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) &&\n                    ((this.olapValueAxis === 'column' && this.colDepth + 1 === rPos) || (this.olapValueAxis === 'row' && this.colDepth + this.dataSourceSettings.values.length + 1 === rPos))) {\n                    newPos = 0;\n                    gSumFlag = false;\n                }\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                var currPos = (this.dataSourceSettings.grandTotalsPosition === 'Top' && (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) && this.colDepth === rPos) ? cell.length : gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[valuePos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                valuePos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.performColumnSorting = function (valCollection, valueSortData) {\n        if (this.enableSort || this.enableValueSorting) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var keys = void 0;\n                    var arrange = {};\n                    var arrangeHeaders = [];\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    var fieldName = header[k].hierarchy;\n                    var levelName = header[k].levelUniqueName;\n                    for (k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType !== 2 && header[k].hierarchy\n                                !== '[Measures]' && header[k].level !== -1) {\n                                if (isNullOrUndefined(arrange[header[k].formattedText]) ||\n                                    isNullOrUndefined(this.pivotValues[j - 1])) {\n                                    if (!arrange[header[k].formattedText]) {\n                                        arrange[header[k].formattedText] = [];\n                                    }\n                                    if (!header[k + 1] || (header[k].formattedText !== header[k + 1].formattedText)) {\n                                        arrangeHeaders[arrangeHeaders.length] = header[k];\n                                    }\n                                    arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                }\n                                else if (arrange[header[k].formattedText] && this.pivotValues[j - 1]) {\n                                    var prevRowCell = this.pivotValues[j - 1][header[k].colIndex];\n                                    var prevColValue = Number(Object.keys(arrange[header[k].formattedText])[0]);\n                                    var prevColIndex = ((arrange[header[k].formattedText])[prevColValue]).colIndex;\n                                    var prevColRowCell = this.pivotValues[j - 1][prevColIndex];\n                                    if (prevRowCell.formattedText !== prevColRowCell.formattedText) {\n                                        keys = this.sortColumnHeaders(arrange, arrangeHeaders, this.sortObject[header[k - 1].levelUniqueName] ||\n                                            this.sortObject[header[k].hierarchy], valCollection, valueSortData, fieldName, levelName);\n                                        temporary[index] = isNullOrUndefined(temporary[index]) ? [] :\n                                            temporary[index];\n                                        for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                                            var length_1 = Object.keys(arrange[keys[keyPos]]).length;\n                                            for (var cellPos = 0; cellPos < length_1; cellPos++) {\n                                                value = temporary[index].length === 0 ? 1 : 0;\n                                                temporary[index][temporary[index].length + value] = arrange[keys[keyPos]][Number(Object.keys(arrange[keys[keyPos]])[cellPos])];\n                                            }\n                                        }\n                                        arrange = {};\n                                        arrangeHeaders = [];\n                                        arrange[header[k].formattedText] = [];\n                                        arrangeHeaders[arrangeHeaders.length] = header[k];\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                    else {\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                }\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value]\n                                    = header[k];\n                                keys = this.sortColumnHeaders(arrange, arrangeHeaders, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy], valCollection, valueSortData, fieldName, levelName);\n                                temporary[index] = isNullOrUndefined(temporary[index]) ? [] :\n                                    temporary[index];\n                                for (var l = 0; l < keys.length; l++) {\n                                    var length_2 = Object.keys(arrange[keys[l]]).length;\n                                    for (var q = 0; q < length_2; q++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[keys[l]][Number(Object.keys(arrange[keys[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy !== '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value]\n                                    = header[k];\n                            }\n                            if (header[k].level !== -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy !== '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length === 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value]\n                                            = arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value]\n                                        = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                arrangeHeaders = [];\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        keys = this.sortColumnHeaders(arrange, arrangeHeaders, order, valCollection, valueSortData, fieldName, levelName);\n                        temporary[index] = isNullOrUndefined(temporary[index]) ? [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] = arrange[keys[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    !== pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] =\n                                        pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::[').length <= this.getMeasurePosition(uniqueName, currentTuple.measurePosition);\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.getMeasurePosition = function (uniqueName, measurePosition) {\n        var position = measurePosition;\n        var collection = uniqueName.split('::[');\n        for (var i = 0; i < collection.length; i++) {\n            if (collection[i] && collection[i].indexOf('Measures') > -1) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers, valCollection, valueSortData) {\n        if (this.enableValueSorting && this.olapValueAxis === 'column' && valueSortData.isValueSorting && !isNullOrUndefined(this.valueSortSettings)) {\n            var aggreColl = [];\n            for (var i = 0; i < headers.length; i++) {\n                var header = headers[i];\n                var valueElement = valCollection[(header.ordinal * valueSortData.columnLength) + valueSortData.memberIndex];\n                var valueArray = valueElement ? valueElement.getElementsByTagName('Value') : undefined;\n                var value = valueElement && valueArray.length > 0 ? Number(valueArray[0].textContent) : 0;\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n            headers = PivotUtil.getSortedValue(aggreColl, this.valueSortSettings.sortOrder);\n        }\n        else if (this.enableSort && headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var sortMembers = [];\n            for (var i = 0; i < headers.length; i++) {\n                sortMembers[i] = headers[i].actualText;\n            }\n            var isHeaderSortByDefault = false;\n            var fieldName = headers[0].actualText !== 'Grand Total' ? headers[0].hierarchy : headers[1].hierarchy;\n            var membersInfo = this.fieldList[fieldName] && this.fieldList[fieldName].membersOrder ?\n                this.fieldList[fieldName].membersOrder.slice() : [];\n            var sortDetails = {\n                fieldName: fieldName,\n                levelName: headers[0].levelUniqueName,\n                sortOrder: (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]),\n                members: membersInfo && membersInfo.length > 0 ? membersInfo : sortMembers,\n                IsOrderChanged: false\n            };\n            if (membersInfo && membersInfo.length > 0) {\n                PivotUtil.applyCustomSort(sortDetails, headers, 'string', false, true);\n            }\n            else {\n                if (sortDetails.sortOrder === 'Ascending' || sortDetails.sortOrder === undefined) {\n                    headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                        ((b.formattedText > a.formattedText) ? -1 : 0); });\n                }\n                else if (sortDetails.sortOrder === 'Descending') {\n                    headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                        ((b.formattedText < a.formattedText) ? -1 : 0); });\n                }\n                isHeaderSortByDefault = true;\n            }\n            if (isHeaderSortByDefault && this.getHeaderSortInfo) {\n                var copyOrder = [];\n                for (var m = 0, n = 0; m < headers.length; m++) {\n                    if (headers[m].actualText !== 'Grand Total') {\n                        copyOrder[n++] = headers[m].formattedText;\n                    }\n                }\n                sortDetails.members = copyOrder;\n            }\n            if (this.getHeaderSortInfo) {\n                this.getHeaderSortInfo(sortDetails);\n            }\n            if (sortDetails.IsOrderChanged) {\n                PivotUtil.applyCustomSort(sortDetails, headers, 'string', true, true);\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (arrange, headers, order, valCollection, valueSortData, header, levelName) {\n        var keys = Object.keys(arrange);\n        if (this.enableValueSorting && this.olapValueAxis === 'row' && valueSortData.isValueSorting && !isNullOrUndefined(this.valueSortSettings)) {\n            var aggreColl = [];\n            for (var i = 0; i < keys.length; i++) {\n                var childCollection = arrange[keys[i]];\n                var header_1 = this.showSubTotalsAtTop ? childCollection[0] : childCollection[childCollection.length - 1];\n                var valueElement = valCollection[(valueSortData.memberIndex * valueSortData.columnLength) + header_1.ordinal];\n                var valueArray = valueElement ? valueElement.getElementsByTagName('Value') : undefined;\n                var value = valueElement && valueArray.length > 0 ? Number(valueArray[0].textContent) : 0;\n                aggreColl.push({ 'header': header_1, 'value': value });\n            }\n            headers = PivotUtil.getSortedValue(aggreColl, this.valueSortSettings.sortOrder);\n            keys = headers.map(function (header) {\n                return header.formattedText;\n            });\n        }\n        else if (this.enableSort) {\n            var isHeaderSortByDefault = false;\n            var membersInfo = this.fieldList[header] && this.fieldList[header].membersOrder ?\n                this.fieldList[header].membersOrder.slice() : [];\n            var sortDetails = {\n                fieldName: header,\n                levelName: levelName,\n                sortOrder: order,\n                members: membersInfo && membersInfo.length > 0 ? membersInfo : keys,\n                IsOrderChanged: false\n            };\n            if (membersInfo && membersInfo.length > 0) {\n                this.applyCustomSort(keys, sortDetails);\n            }\n            else {\n                if (sortDetails.sortOrder === 'Ascending' || sortDetails.sortOrder === undefined) {\n                    keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n                }\n                else if (sortDetails.sortOrder === 'Descending') {\n                    keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n                }\n                isHeaderSortByDefault = true;\n            }\n            if (isHeaderSortByDefault && this.getHeaderSortInfo) {\n                var copyOrder = [];\n                for (var m = 0, n = 0; m < keys.length; m++) {\n                    if (keys[m] !== 'Grand Total') {\n                        copyOrder[n++] = keys[m];\n                    }\n                }\n                sortDetails.members = copyOrder;\n            }\n            if (this.getHeaderSortInfo) {\n                this.getHeaderSortInfo(sortDetails);\n            }\n            if (sortDetails.IsOrderChanged) {\n                this.applyCustomSort(keys, sortDetails, true);\n            }\n        }\n        return keys;\n    };\n    OlapEngine.prototype.applyCustomSort = function (headers, sortDetails, hasMembersOrder) {\n        var order = [];\n        var updatedMembers = [];\n        var grandTotal;\n        if (sortDetails.IsOrderChanged) {\n            order = sortDetails.members;\n        }\n        else {\n            order = (sortDetails.sortOrder === 'Ascending' || sortDetails.sortOrder === 'None' || sortDetails.sortOrder === undefined) ? [].concat(sortDetails.members) : [].concat(sortDetails.members).reverse();\n        }\n        if (headers[0] === 'Grand Total') {\n            grandTotal = headers[0];\n            headers.shift();\n        }\n        for (var i = 0, j = 0; i < headers.length; i++) {\n            var sortText = headers[i];\n            if (order[j] === sortText) {\n                headers.splice(j++, 0, sortText);\n                headers.splice(++i, 1);\n                if (j < order.length) {\n                    i = -1;\n                }\n                else {\n                    if (!hasMembersOrder) {\n                        updatedMembers.splice(--j, 0, sortText);\n                    }\n                    break;\n                }\n            }\n            if (i >= 0 && !hasMembersOrder) {\n                updatedMembers[i] = headers[i];\n            }\n        }\n        if (!hasMembersOrder) {\n            for (var i = updatedMembers.length; i < headers.length; i++) {\n                updatedMembers[i] = headers[i];\n            }\n            if (updatedMembers[updatedMembers.length - 1] === 'Grand Total') {\n                updatedMembers.pop();\n            }\n            sortDetails.members = updatedMembers;\n        }\n        if (grandTotal) {\n            headers.splice(0, 0, grandTotal);\n        }\n        return headers;\n    };\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (this.getMeasurePosition(uniqueNameColl, tuple.measurePosition) >= (uniqueNameColl.split('::[').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        var measurePosition = this.tupColumnInfo[0] ? this.tupColumnInfo[0].measurePosition : this.measureIndex;\n        for (var i = rowPos; i > -1; i--) {\n            if (this.pivotValues[i][1].memberType === 3) {\n                measurePosition = i;\n                break;\n            }\n        }\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ?\n                    this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                var attrDrill = this.checkAttributeDrill(tupColInfo.drillInfo, 'columns');\n                if (this.showSubTotalsAtTop && currCell.isDrilled && nextColCell &&\n                    (nextColCell.actualText !== currCell.actualText) && currCell.level > -1) {\n                    currCell.ordinal = this.getOrdinal(currCell, this.pivotValues[rowPos + 1]);\n                }\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        if (!attrDrill) {\n                            currCell.type = 'sum';\n                        }\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos as number].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        if (rowPos < this.measureIndex) {\n                            var levelName = 'Grand Total';\n                            currCell.valueSort.levelName = levelName;\n                            currCell.valueSort[levelName.toString()] = 1;\n                        }\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ?\n                            (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 &&\n                            nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] &&\n                                this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true)) ? 1 :\n                                (spanCollection[rowPos + 1][colPos] + 1);\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] &&\n                                this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true) &&\n                                nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] &&\n                        this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true) && currCell.level === -1 &&\n                        nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ?\n                            (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !(nextRowCell.isDrilled &&\n                            ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ?\n                                nextRowCell.hasChild : true))) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ?\n                            spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ?\n                        spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.getOrdinal = function (currCell, nextRow) {\n        var newOrdinal = 0;\n        for (var cellIndex = currCell.colIndex; cellIndex > 0; cellIndex--) {\n            if (nextRow[cellIndex].level === -1) {\n                newOrdinal = nextRow[cellIndex].ordinal;\n                break;\n            }\n        }\n        return newOrdinal;\n    };\n    OlapEngine.prototype.frameValues = function (valCollection, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                if (this.pivotValues[this.colDepth - 1][colPos]) {\n                    var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                    var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                    var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                        ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                            this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                            columns[0].actualText);\n                    if (columns[0].type === 'header') {\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: this.getUniqueName(measure),\n                            formattedText: '',\n                            value: 0,\n                            colIndex: colPos,\n                            rowIndex: rowPos\n                        };\n                    }\n                    else {\n                        var formattedText = void 0;\n                        var value = '0';\n                        var measureName = this.getUniqueName(measure);\n                        var showTotals = true;\n                        var attrDrill = (this.fieldList[columns[0].hierarchy] &&\n                            this.fieldList[columns[0].hierarchy].isHierarchy) ? columns[0].isDrilled : true;\n                        if (this.tupRowInfo[rowOrdinal]) {\n                            showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                        }\n                        else {\n                            var grandTotalFlag = this.dataSourceSettings.rows.length === 0 ||\n                                (this.dataSourceSettings.rows.length === 1 && this.dataSourceSettings.rows[0].name === '[Measures]');\n                            showTotals = (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) ||\n                                grandTotalFlag;\n                        }\n                        var valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                        formattedText = this.showSubTotalsAtBottom && columns[0].isDrilled ? '' : (!showTotals && attrDrill) ? '' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                                valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                        value = (!showTotals && attrDrill) ? '0' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                                valElement.querySelector('Value').textContent : null);\n                        formattedText = this.showSubTotalsAtBottom && columns[0].isDrilled ? '' : showTotals && !isNullOrUndefined(value) ?\n                            this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) : formattedText;\n                        var isSum = (this.tupColumnInfo[colOrdinal] ?\n                            (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                                this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                            (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                                this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                        var isGrand = (this.tupRowInfo[rowOrdinal] ?\n                            (this.tupRowInfo[rowOrdinal].measurePosition === 0 ?\n                                this.tupRowInfo[rowOrdinal].allStartPos === 1 :\n                                this.tupRowInfo[rowOrdinal].allStartPos === 0) : false) ||\n                            (this.tupColumnInfo[colOrdinal] ?\n                                (this.tupColumnInfo[colOrdinal].measurePosition === 0 ?\n                                    this.tupColumnInfo[colOrdinal].allStartPos === 1 :\n                                    this.tupColumnInfo[colOrdinal].allStartPos === 0) : false);\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: measureName,\n                            formattedText: formattedText,\n                            colOrdinal: colOrdinal,\n                            rowOrdinal: rowOrdinal,\n                            columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                            rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                            value: !isNullOrUndefined(value) ? Number(value) : null,\n                            colIndex: colPos,\n                            rowIndex: rowPos,\n                            isSum: isSum,\n                            isGrandSum: isGrand\n                        };\n                    }\n                    this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n                }\n            }\n        }\n    };\n    /**\n     * It performs to returns the formatted value.\n     *\n     * @param {number} value - It Defines the value of formatting data.\n     * @param {string} fieldName - It contains the value of the field name.\n     * @param {string} formattedText - It contains the value of the formatted text.\n     * @returns {string} - It returns formatted Value as string.\n     * @hidden\n     */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        this.olapValueAxis = undefined;\n        this.olapRowValueIndex = undefined;\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 0) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                var fieldCount = 0;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        fieldCount = this.dataSourceSettings.rows.length;\n                        this.olapRowValueIndex = mIndex;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            fieldCount = this.dataSourceSettings.columns.length;\n                            break;\n                        }\n                    }\n                }\n                this.olapValueAxis = mAxis;\n                this.measurePosition = mIndex;\n                this.measureIndex = mIndex === fieldCount - 1 ? -1 : mIndex;\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen, valuesCount) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var clonedValTuple = [];\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var vOrdinalIndexPos = 0;\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = valuesCount; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    var vTupleOrdinal = void 0;\n                    if (vTuples[vOrdinalIndexPos]) {\n                        vTupleOrdinal = this.olapVirtualization ?\n                            j : Number(vTuples[vOrdinalIndexPos].getAttribute('CellOrdinal'));\n                    }\n                    else {\n                        vOrdinalIndexPos++;\n                    }\n                    if (vTupleOrdinal === j) {\n                        vOrdinalIndex[j] = vTupleOrdinal;\n                        clonedValTuple[vTupleOrdinal] = vTuples[vOrdinalIndexPos];\n                        vOrdinalIndexPos++;\n                    }\n                }\n                vTuples = clonedValTuple;\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                if (!isNullOrUndefined(valueIndex[j]) && !isNullOrUndefined(orderedIndex[i])) {\n                                    var ordinalValue = vOrdinalIndex[index] ?\n                                        vOrdinalIndex[index].toString() : index.toString();\n                                    var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                    if (tuple) {\n                                        tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                        orderedVTuples[index] = tuple;\n                                    }\n                                }\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index] ?\n                                    vOrdinalIndex[index].toString() : index.toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                if (tuple) {\n                                    tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                    orderedVTuples[orderedVTuples.length] = tuple;\n                                }\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) ||\n                tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if (memberArray[memPos]) {\n                if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                    var splitLevels = memberArray[memPos].split('~~');\n                    var drillLevel = splitLevels.indexOf(memberName);\n                    var cropLevels = [];\n                    for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                        cropLevels.push(splitLevels[lPos]);\n                    }\n                    joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n                }\n                else {\n                    joinArray[joinArray.length] = memberArray[memPos];\n                }\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::[')[fieldPos];\n                    drillField = drillField[0] === '[' ? drillField : ('[' + drillField);\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                if (field) {\n                    var members = field.split('~~');\n                    set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n                }\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings, isValueSort) {\n        this.dataSourceSettings = dataSourceSettings;\n        if (!isValueSort) {\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.getAxisFields();\n            this.frameSortObject();\n            this.updateFieldlist();\n        }\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i as number].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ?\n                    this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName as string].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldList[fieldName].allowDragAndDrop = true;\n                this.savedFieldList[fieldName].showFilterIcon = true;\n                this.savedFieldList[fieldName].showSortIcon = true;\n                this.savedFieldList[fieldName].showEditIcon = true;\n                this.savedFieldList[fieldName].showRemoveIcon = true;\n                this.savedFieldList[fieldName].showValueTypeIcon = true;\n                this.savedFieldList[fieldName].showSubTotals = true;\n                this.savedFieldListData[i].sort = sortOrder;\n                this.savedFieldListData[i].allowDragAndDrop = true;\n                this.savedFieldListData[i].showFilterIcon = true;\n                this.savedFieldListData[i].showSortIcon = true;\n                this.savedFieldListData[i].showEditIcon = true;\n                this.savedFieldListData[i].showRemoveIcon = true;\n                this.savedFieldListData[i].showValueTypeIcon = true;\n                this.savedFieldListData[i].showSubTotals = true;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] &&\n                this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldList[fieldName].allowDragAndDrop = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldList[fieldName].showFilterIcon = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldList[fieldName].showSortIcon = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldList[fieldName].showEditIcon = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldList[fieldName].showRemoveIcon = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldList[fieldName].showValueTypeIcon = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldList[fieldName].showSubTotals = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showSubTotals : true);\n                this.savedFieldListData[i].isSelected = true;\n                this.savedFieldListData[i].allowDragAndDrop = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldListData[i].showFilterIcon = (this.dataFields[fieldName] ?\n                    this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldListData[i].showSortIcon =\n                    (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldListData[i].showEditIcon =\n                    (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldListData[i].showRemoveIcon =\n                    (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldListData[i].showValueTypeIcon =\n                    (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldListData[i].showSubTotals =\n                    (this.dataFields[fieldName] ? this.dataFields[fieldName].showSubTotals : true);\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] &&\n                    this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if ((!isAvail && fieldName.toLowerCase() !== '[calculated members].[_0]') ||\n                    (fieldName.toLowerCase() === '[calculated members].[_0]' && this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    /**\n     * It used to set format a field.\n     *\n     * @param {IFormatSettings[]} formats - It cotains the formatSettings.\n     * @returns {void}\n     * @hidden\n     */\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getCubes = function (dataSourceSettings) {\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier.toString());\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body>' +\n            '<Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><RequestType>MDSCHEMA_CUBES</RequestType>' +\n            '<Restrictions><RestrictionList><CATALOG_NAME>' + dataSourceSettings.catalog +\n            '</CATALOG_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + dataSourceSettings.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier>' + (dataSourceSettings.roles ? '<Roles>' + dataSourceSettings.roles + '</Roles>' : '') + '</PropertyList></Properties>' +\n            '</Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, this.validateCube.bind(this), { dataSourceSettings: dataSourceSettings, action: 'getCubes' });\n        if (this.errorInfo) {\n            throw this.errorInfo;\n        }\n    };\n    OlapEngine.prototype.validateCube = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var isCubeExist = false;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            var cubeName = field.querySelector('CUBE_NAME').textContent;\n            if (cubeName === customArgs.dataSourceSettings.cube) {\n                isCubeExist = true;\n                break;\n            }\n        }\n        if (!isCubeExist && fields.length > 0) {\n            this.errorInfo = 'Invalid cube name ' + this.dataSourceSettings.cube;\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES',\n            roles: dataSourceSettings.roles\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier>' + (args.roles ? '<Roles>' + args.roles + '</Roles>' : '') + '</PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n        if (this.errorInfo) {\n            throw this.errorInfo;\n        }\n    };\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        this.mappingFields = {};\n        if (this.dataSourceSettings.fieldMapping) {\n            for (var _i = 0, _a = this.dataSourceSettings.fieldMapping; _i < _a.length; _i++) {\n                var field = _a[_i];\n                this.mappingFields[field.name] = field;\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = {\n                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n            };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName as string]) {\n        //     return this.dataFields[fieldName as string].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter && this.fieldList[filter.name]) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    var filterCaption = void 0;\n                    if (!isMembersAvail && filter.items.length === 1) {\n                        this.getMembers(this.dataSourceSettings, filter.name, undefined, undefined, undefined, filter.items[0]);\n                        filterCaption = this.fieldList[filter.name].actualFilter[0];\n                    }\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(filterCaption ? filterCaption : selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this),\n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * It performs to returns the drill through data.\n     *\n     * @param {IAxisSet} pivotValue - It cotains the pivotValues data.\n     * @param {number} maxRows - It cotains the maximum number of row data.\n     * @returns {void}\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var filters;\n        var filteritems = [];\n        var filterQuery = '';\n        for (var i = 0; i < this.filters.length; i++) {\n            filters = this.filterMembers[this.filters[i].name];\n            if (filters) {\n                for (var j = 0; j < filters.length; j++) {\n                    filterQuery = filterQuery + filters[j];\n                    filterQuery = j < filters.length - 1 ? filterQuery + ',' : filterQuery + '';\n                }\n                filteritems[i] = filterQuery;\n                filterQuery = '';\n            }\n        }\n        for (var i = 0; i < filteritems.length; i++) {\n            filterQuery = filterQuery === '' ? '{' + filteritems[i] + '}' : (filterQuery + ',' + '{' + filteritems[i] + '}');\n        }\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from ' +\n            (filterQuery === '' ? '[' + this.dataSourceSettings.cube + ']' : '(SELECT (' + filterQuery + ') ON COLUMNS FROM [' +\n                this.dataSourceSettings.cube + '])');\n        drillQuery = drillQuery.replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n        if (this.errorInfo) {\n            throw this.errorInfo;\n        }\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember, filterItemName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n        if (!isAllFilterData && !filterItemName) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else if (filterItemName) {\n            filterItemName = filterItemName.replace(/&/g, '&amp;');\n            mdxQuery = 'SELECT {' + filterItemName + '} ON 0 FROM [' + dataSourceSettings.cube + '] WHERE {}';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName as string].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, filterItemName ? this.getOlapFilterText.bind(this) : this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n        if (this.errorInfo) {\n            throw this.errorInfo;\n        }\n    };\n    OlapEngine.prototype.getOlapFilterText = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        if (fields.length > 0 && this.fieldList[customArgs.fieldName] && fields[fields.length - 1].getElementsByTagName('Caption')\n            && fields[fields.length - 1].getElementsByTagName('Caption')[0]) {\n            this.fieldList[customArgs.fieldName].actualFilter[0] = fields[fields.length - 1].getElementsByTagName('Caption')[0].textContent;\n        }\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n        if (this.errorInfo) {\n            throw this.errorInfo;\n        }\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n        if (this.errorInfo) {\n            throw this.errorInfo;\n        }\n    };\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), {\n                dataSourceSettings: dataSourceSettings,\n                fieldName: fieldName, action: 'fetchSearchMembers'\n            });\n            if (this.errorInfo) {\n                throw this.errorInfo;\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var nodeAttr = { 'data-fieldName': fieldName, 'data-memberId': memberUqName };\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    this.fieldList[fieldName].members[memberUqName] =\n                        { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    this.fieldList[fieldName].currrentMembers[memberUqName] =\n                        { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] =\n                            { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        this.fieldList[fieldName].currrentMembers[memberUqName] =\n                            { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    var nodeSelect = (customArgs.loadLevelMembers ?\n                        this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ?\n                            (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] =\n                            { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].currrentMembers[memberUqName] =\n                            { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName as string].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isSameDim = dimensionName === hierarchyName && dimensionName.toLowerCase() !== '[measures]' && hierarchyName.toLowerCase() !== '[measures]';\n            hierarchyElements.push({\n                pid: ((this.isMondrian || isSameDim) ? dimensionName + '~#^Dim' : dimensionName),\n                id: hierarchyName,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: hierarchyName,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS',\n            roles: customArgs.dataSourceSettings.roles\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption :\n                        this.mappingFields[field.name] && this.mappingFields[field.name].caption ?\n                            this.mappingFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        allowDragAndDrop: (this.dataFields[field.name] ? this.dataFields[field.name].allowDragAndDrop :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showFilterIcon :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showSortIcon :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].showSortIcon : true),\n                        showEditIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showEditIcon :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showRemoveIcon :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showValueTypeIcon :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].showValueTypeIcon : true),\n                        showSubTotals: (this.dataFields[field.name] ? this.dataFields[field.name].showSubTotals :\n                            this.mappingFields[field.name] ? this.mappingFields[field.name].showSubTotals : true),\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName)\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                    this.updateMembersOrder(field.name);\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_4 = fields; _i < fields_4.length; _i++) {\n            var field = fields_4[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var defaultHierarchy = field.querySelector('DEFAULT_HIERARCHY').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            var isSameDim = dimensionName === defaultHierarchy;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: ((this.isMondrian || isSameDim) ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS',\n            roles: customArgs.dataSourceSettings.roles\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: this.dataFields[id] && this.dataFields[id].caption ? this.dataFields[id].caption : this.mappingFields[id] && this.mappingFields[id].caption ? this.mappingFields[id].caption : field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false,\n                allowDragAndDrop: (this.dataFields[id] ? this.dataFields[id].allowDragAndDrop :\n                    this.mappingFields[id] ? this.mappingFields[id].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[id] ? this.dataFields[id].showFilterIcon :\n                    this.mappingFields[id] ? this.mappingFields[id].showFilterIcon : true),\n                showSortIcon: (this.dataFields[id] ? this.dataFields[id].showSortIcon :\n                    this.mappingFields[id] ? this.mappingFields[id].showSortIcon : true),\n                showEditIcon: (this.dataFields[id] ? this.dataFields[id].showEditIcon :\n                    this.mappingFields[id] ? this.mappingFields[id].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[id] ? this.dataFields[id].showRemoveIcon :\n                    this.mappingFields[id] ? this.mappingFields[id].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[id] ? this.dataFields[id].showValueTypeIcon :\n                    this.mappingFields[id] ? this.mappingFields[id].showValueTypeIcon : true),\n                showSubTotals: (this.dataFields[id] ? this.dataFields[id].showSubTotals :\n                    this.mappingFields[id] ? this.mappingFields[id].showSubTotals : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n            this.updateMembersOrder(id);\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_6 = fields; _a < fields_6.length; _a++) {\n            var field = fields_6[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[&[\\]']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0) {\n                var isSameDim = dimensionName === hierarchyName && dimensionName.toLowerCase() !== '[measures]' && hierarchyName.toLowerCase() !== '[measures]';\n                if (dimensionName.toLowerCase() !== '[measures]' && hierarchyName.toLowerCase() !== '[measures]') {\n                    var parentID = dimensionName + ((this.isMondrian || isSameDim) ? '~#^Dim' : '');\n                    if (hierarchyFolderName !== '') {\n                        var folderName = dimensionName + ((this.isMondrian || isSameDim) ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                        var curParentElement = [];\n                        for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                            var item = dimensionElements_2[_c];\n                            if (item.tag === folderName && item.pid === parentID) {\n                                curParentElement.push(item);\n                            }\n                        }\n                        if (curParentElement.length === 0) {\n                            var fieldObj_1 = {\n                                hasChildren: true,\n                                isSelected: false,\n                                pid: dimensionName + ((this.isMondrian || isSameDim) ? '~#^Dim' : ''),\n                                id: folderName,\n                                name: hierarchyFolderName,\n                                spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                                tag: folderName,\n                                caption: hierarchyFolderName,\n                                // aggregateType: this.getAggregateType(hierarchyFolderName),\n                                type: 'string'\n                            };\n                            dimensionElements.push(fieldObj_1);\n                        }\n                        parentID = folderName;\n                    }\n                    var fieldObj = {\n                        hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                        // hasChildren: true,\n                        isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                        pid: parentID,\n                        id: hierarchyName,\n                        name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                        spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                        hasAllMember: isAllMemberAvail,\n                        allMember: allMember,\n                        tag: hierarchyName,\n                        caption: this.dataFields[hierarchyName] && this.dataFields[hierarchyName].caption ? this.dataFields[hierarchyName].caption : this.mappingFields[hierarchyName] && this.mappingFields[hierarchyName].caption ? this.mappingFields[hierarchyName].caption : field.querySelector('HIERARCHY_CAPTION').textContent,\n                        // aggregateType: this.getAggregateType(hierarchyName),\n                        type: 'string',\n                        filter: [],\n                        dateMember: [],\n                        sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        levels: [],\n                        levelCount: 1,\n                        isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') &&\n                            field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                        isExcelFilter: false,\n                        allowDragAndDrop: (this.dataFields[hierarchyName] ?\n                            this.dataFields[hierarchyName].allowDragAndDrop : this.mappingFields[hierarchyName] ?\n                            this.mappingFields[hierarchyName].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[hierarchyName] ?\n                            this.dataFields[hierarchyName].showFilterIcon : this.mappingFields[hierarchyName] ?\n                            this.mappingFields[hierarchyName].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[hierarchyName] ?\n                            this.dataFields[hierarchyName].showSortIcon : this.mappingFields[hierarchyName] ?\n                            this.mappingFields[hierarchyName].showSortIcon : true),\n                        showEditIcon: (this.dataFields[hierarchyName] ?\n                            this.dataFields[hierarchyName].showEditIcon : this.mappingFields[hierarchyName] ?\n                            this.mappingFields[hierarchyName].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[hierarchyName] ?\n                            this.dataFields[hierarchyName].showRemoveIcon : this.mappingFields[hierarchyName] ?\n                            this.mappingFields[hierarchyName].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[hierarchyName] ?\n                            this.dataFields[hierarchyName].showValueTypeIcon : this.mappingFields[hierarchyName] ?\n                            this.mappingFields[hierarchyName].showValueTypeIcon : true),\n                        showSubTotals: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showSubTotals :\n                            this.mappingFields[hierarchyName] ? this.mappingFields[hierarchyName].showSubTotals : true)\n                    };\n                    dimensionElements.push(fieldObj);\n                    this.fieldList[hierarchyName] = fieldObj;\n                    this.updateMembersOrder(hierarchyName);\n                }\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS',\n            roles: customArgs.dataSourceSettings.roles\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.updateMembersOrder = function (key) {\n        for (var _i = 0, _a = this.sortSettings; _i < _a.length; _i++) {\n            var sortInfo = _a[_i];\n            if (key === sortInfo.name && sortInfo.membersOrder) {\n                this.fieldList[key].membersOrder = sortInfo.membersOrder;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_7 = fields; _i < fields_7.length; _i++) {\n            var field = fields_7[_i];\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES',\n            roles: customArgs.dataSourceSettings.roles\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS',\n                roles: customArgs.dataSourceSettings.roles\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_8 = fields; _a < fields_8.length; _a++) {\n            var field = fields_8[_a];\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: this.dataFields[measureName] && this.dataFields[measureName].caption ?\n                    this.dataFields[measureName].caption : this.mappingFields[measureName] &&\n                    this.mappingFields[measureName].caption ? this.mappingFields[measureName].caption :\n                    field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString,\n                allowDragAndDrop: (this.dataFields[measureName] ? this.dataFields[measureName].allowDragAndDrop :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showFilterIcon :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].showFilterIcon : true),\n                showSortIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showSortIcon :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].showSortIcon : true),\n                showEditIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showEditIcon :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showRemoveIcon :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showValueTypeIcon :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].showValueTypeIcon : true),\n                showSubTotals: (this.dataFields[measureName] ? this.dataFields[measureName].showSubTotals :\n                    this.mappingFields[measureName] ? this.mappingFields[measureName].showSubTotals : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var _this = this;\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            beforeSend: this.beforeSend.bind(this),\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                var body = xmlDoc.querySelector('Body');\n                if (!body.querySelector('OlapInfo')) {\n                    if (!body.querySelector('DiscoverResponse')) {\n                        // For catalog, calc fields\n                        if (body.querySelector('Fault') && body.querySelector('Fault').querySelector('faultstring')) {\n                            _this.errorInfo = body.querySelector('Fault').querySelector('faultstring').innerHTML;\n                        }\n                        else if (body.querySelector('return') && body.querySelector('return').querySelector('Error')) {\n                            _this.errorInfo = body.querySelector('return').querySelector('Error').getAttribute('Description');\n                        }\n                    }\n                }\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                _this.errorInfo = e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.beforeSend = function (args) {\n        if (this.dataSourceSettings.authentication.userName && this.dataSourceSettings.authentication.password) {\n            args.httpRequest.setRequestHeader('Authorization', 'Basic ' + btoa(this.dataSourceSettings.authentication.userName +\n                ':' + this.dataSourceSettings.authentication.password));\n        }\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (this.isMondrian) {\n            sourceInfo = '';\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"><SOAP-ENV:Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            xmlMsg = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier>' + (dataSourceSettings.roles ? '<Roles>' + dataSourceSettings.roles + '</Roles>' : '') + '</PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: !isNullOrUndefined(locale) ? locale.toString() : '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfBitmap, SizeF, PointF, RectangleF, PdfPageTemplateElement, PdfSolidBrush, PdfPen, PdfColor, PdfStringFormat, PdfPageNumberField, PdfCompositeField, PdfPageCountField, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTextAlignment, PdfVerticalAlignment } from '@syncfusion/ej2-pdf-export';\n/**\n * `PDFExportHelper` module is used to add header and footer in PDF document\n *\n * @hidden\n */\nvar PDFExportHelper = /** @class */ (function () {\n    function PDFExportHelper() {\n    }\n    /**\n     * Method to draw a header in a PDF document.\n     *\n     * @param  {PdfExportProperties} pdfExportProperties - It contains the export properties for the table and chart.\n     * @param  {PdfDocument} pdfDocument - It contains the current PDF document\n     * @returns {void}\n     * @hidden\n     */\n    PDFExportHelper.prototype.drawHeader = function (pdfExportProperties, pdfDocument) {\n        var clientSize = pdfDocument.pageSettings.size;\n        var header = pdfExportProperties.header;\n        var position = new PointF(0, (header && header.fromTop) ? header.fromTop : 0);\n        var size = new SizeF((clientSize.width - 80), ((header && header.height) ? header.height * 0.75 : 50));\n        var bounds = new RectangleF(position, size);\n        pdfDocument.template.top = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n    };\n    /**\n     * Method to draw a footer in a PDF document.\n     *\n     * @param  {PdfExportProperties} pdfExportProperties -It contains the export properties for table and chart\n     * @param  {PdfDocument} pdfDocument - It contains the current PDF document\n     * @returns {void}\n     * @hidden\n     */\n    PDFExportHelper.prototype.drawFooter = function (pdfExportProperties, pdfDocument) {\n        var clientSize = pdfDocument.pageSettings.size;\n        var footer = pdfExportProperties.footer;\n        var position = new PointF(0, ((clientSize.width - 80) - ((footer && footer.fromBottom) ?\n            footer.fromBottom * 0.75 : 0)));\n        var size = new SizeF((clientSize.width - 80), ((footer && footer.height) ? footer.height * 0.75 : 50));\n        var bounds = new RectangleF(position, size);\n        pdfDocument.template.bottom = this.drawPageTemplate(new PdfPageTemplateElement(bounds), footer);\n    };\n    PDFExportHelper.prototype.drawPageTemplate = function (template, element) {\n        for (var _i = 0, _a = element.contents; _i < _a.length; _i++) {\n            var content = _a[_i];\n            this.processContentValidation(content);\n            switch (content.type) {\n                case 'Text':\n                    if (content.value === '' || isNullOrUndefined(content.value) || typeof content.value !== 'string') {\n                        throw new Error('please enter the valid input value in text content...');\n                    }\n                    this.drawText(template, content);\n                    break;\n                case 'PageNumber':\n                    this.drawPageNumber(template, content);\n                    break;\n                case 'Image':\n                    if (isNullOrUndefined(content.src) || content.src === '') {\n                        throw new Error('please enter the valid base64 string in image content...');\n                    }\n                    this.drawImage(template, content);\n                    break;\n                case 'Line':\n                    this.drawLine(template, content);\n                    break;\n            }\n        }\n        return template;\n    };\n    PDFExportHelper.prototype.processContentValidation = function (content) {\n        if (isNullOrUndefined(content.type)) {\n            throw new Error('please set valid content type...');\n        }\n        else {\n            if (content.type === 'Line') {\n                if (isNullOrUndefined(content.points)) {\n                    throw new Error('please enter valid points in ' + content.type + ' content...');\n                }\n                else {\n                    if (isNullOrUndefined(content.points.x1) || typeof content.points.x1 !== 'number') {\n                        throw new Error('please enter valid x1 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (isNullOrUndefined(content.points.y1) || typeof content.points.y1 !== 'number') {\n                        throw new Error('please enter valid y1 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (isNullOrUndefined(content.points.x2) || typeof content.points.x2 !== 'number') {\n                        throw new Error('please enter valid x2 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (isNullOrUndefined(content.points.y2) || typeof content.points.y2 !== 'number') {\n                        throw new Error('please enter valid y2 co-ordinate in ' + content.type + ' points...');\n                    }\n                }\n            }\n            else {\n                if (isNullOrUndefined(content.position)) {\n                    throw new Error('please enter valid position in ' + content.type + ' content...');\n                }\n                else {\n                    if (isNullOrUndefined(content.position.x) || typeof content.position.x !== 'number') {\n                        throw new Error('please enter valid x co-ordinate in ' + content.type + ' position...');\n                    }\n                    if (isNullOrUndefined(content.position.y) || typeof content.position.y !== 'number') {\n                        throw new Error('please enter valid y co-ordinate in ' + content.type + ' position...');\n                    }\n                }\n            }\n        }\n    };\n    PDFExportHelper.prototype.drawText = function (pageTemplate, content) {\n        var font = this.getFontFromContent(content);\n        var brush = this.getBrushFromContent(content);\n        var pen = null;\n        if (!isNullOrUndefined(content.style) && !isNullOrUndefined(content.style.textPenColor)) {\n            var penColor = this.hexDecToRgb(content.style.textPenColor);\n            pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n        }\n        if (brush == null && pen == null) {\n            brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var value = content.value.toString();\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var format = new PdfStringFormat();\n        if (!isNullOrUndefined(content.stringFormat)) {\n            format = content.stringFormat;\n        }\n        var result = this.setContentFormat(content, format);\n        if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n            pageTemplate.graphics.drawString(value, font, pen, brush, x, y, result.size.width, result.size.height, result.format);\n        }\n        else {\n            pageTemplate.graphics.drawString(value, font, pen, brush, x, y, format);\n        }\n    };\n    PDFExportHelper.prototype.drawPageNumber = function (documentHeader, content) {\n        var font = this.getFontFromContent(content);\n        var brush = null;\n        if (!isNullOrUndefined(content.style) && !isNullOrUndefined(content.style.textBrushColor)) {\n            var brushColor = this.hexDecToRgb(content.style.textBrushColor);\n            brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n        }\n        else {\n            brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var pageNumber = new PdfPageNumberField(font, brush);\n        pageNumber.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n        var compositeField;\n        var format;\n        if (!isNullOrUndefined(content.format)) {\n            var total = '$total';\n            var current = '$current';\n            if (content.format.indexOf(total) !== -1 && content.format.indexOf(current) !== -1) {\n                var pageCount = new PdfPageCountField(font);\n                pageCount.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n                if (content.format.indexOf(total) > content.format.indexOf(current)) {\n                    format = content.format.replace(current, '0');\n                    format = format.replace(total, '1');\n                }\n                else {\n                    format = content.format.replace(current, '1');\n                    format = format.replace(total, '0');\n                }\n                compositeField = new PdfCompositeField(font, brush, format, pageNumber, pageCount);\n            }\n            else if (content.format.indexOf(current) !== -1 && content.format.indexOf(total) === -1) {\n                format = content.format.replace(current, '0');\n                compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n            }\n            else {\n                var pageCount = new PdfPageCountField(font);\n                format = content.format.replace(total, '0');\n                compositeField = new PdfCompositeField(font, brush, format, pageCount);\n            }\n        }\n        else {\n            format = '{0}';\n            compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n        }\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var result = this.setContentFormat(content, compositeField.stringFormat);\n        if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n            compositeField.stringFormat = result.format;\n            compositeField.bounds = new RectangleF(x, y, result.size.width, result.size.height);\n        }\n        compositeField.draw(documentHeader.graphics, x, y);\n    };\n    PDFExportHelper.prototype.drawImage = function (documentHeader, content) {\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var width = (!isNullOrUndefined(content.size) && !isNullOrUndefined(content.size.width)) ?\n            (content.size.width * 0.75) : undefined;\n        var height = (!isNullOrUndefined(content.size) && !isNullOrUndefined(content.size.height)) ?\n            (content.size.height * 0.75) : undefined;\n        var image = new PdfBitmap(content.src);\n        if (!isNullOrUndefined(width)) {\n            documentHeader.graphics.drawImage(image, x, y, width, height);\n        }\n        else {\n            documentHeader.graphics.drawImage(image, x, y);\n        }\n    };\n    PDFExportHelper.prototype.drawLine = function (documentHeader, content) {\n        var x1 = content.points.x1 * 0.75;\n        var y1 = content.points.y1 * 0.75;\n        var x2 = content.points.x2 * 0.75;\n        var y2 = content.points.y2 * 0.75;\n        var pen = this.getPenFromContent(content);\n        if (!isNullOrUndefined(content.style)) {\n            if (!isNullOrUndefined(content.style.penSize) && typeof content.style.penSize === 'number') {\n                pen.width = content.style.penSize * 0.75;\n            }\n            pen.dashStyle = this.getDashStyle(content.style.dashStyle);\n        }\n        documentHeader.graphics.drawLine(pen, x1, y1, x2, y2);\n    };\n    PDFExportHelper.prototype.getFontFromContent = function (content) {\n        var fontSize = (!isNullOrUndefined(content.font) && !isNullOrUndefined(content.font['fontSize'])) ?\n            (content.font['fontSize'] * 0.75) : (!isNullOrUndefined(content.style) &&\n            !isNullOrUndefined(content.style.fontSize)) ? (content.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(content.font) && !isNullOrUndefined(content.font['pdfFontFamily']))\n            ? content.font['pdfFontFamily'] : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(content.font) && !isNullOrUndefined(content.font.bold)) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(content.font) && !isNullOrUndefined(content.font.italic)) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(content.font) && !isNullOrUndefined(content.font.underline)) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(content.font) && !isNullOrUndefined(content.font.strikeout)) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExportHelper.prototype.getPenFromContent = function (content) {\n        var pen = new PdfPen(new PdfColor(0, 0, 0));\n        if (!isNullOrUndefined(content.style) && content.style !== null && !isNullOrUndefined(content.style.penColor)) {\n            var penColor = this.hexDecToRgb(content.style.penColor);\n            pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n        }\n        return pen;\n    };\n    PDFExportHelper.prototype.getBrushFromContent = function (content) {\n        var brush = null;\n        if (!isNullOrUndefined(content.style) && !isNullOrUndefined(content.style.textBrushColor)) {\n            var brushColor = this.hexDecToRgb(content.style.textBrushColor);\n            brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n        }\n        return brush;\n    };\n    PDFExportHelper.prototype.setContentFormat = function (content, format) {\n        if (!isNullOrUndefined(content.size)) {\n            var width = content.size.width * 0.75;\n            var height = content.size.height * 0.75;\n            format = new PdfStringFormat(PdfTextAlignment.Left, PdfVerticalAlignment.Middle);\n            if (!isNullOrUndefined(content.style) && !isNullOrUndefined(content.style.hAlign)) {\n                switch (content.style.hAlign) {\n                    case 'Right':\n                        format.alignment = PdfTextAlignment.Right;\n                        break;\n                    case 'Center':\n                        format.alignment = PdfTextAlignment.Center;\n                        break;\n                    case 'Justify':\n                        format.alignment = PdfTextAlignment.Justify;\n                        break;\n                }\n            }\n            if (!isNullOrUndefined(content.style) && !isNullOrUndefined(content.style.vAlign)) {\n                switch (content.style.vAlign) {\n                    case 'Bottom':\n                        format.lineAlignment = PdfVerticalAlignment.Bottom;\n                        break;\n                    case 'Top':\n                        format.lineAlignment = PdfVerticalAlignment.Top;\n                        break;\n                }\n            }\n            return { format: format, size: new SizeF(width, height) };\n        }\n        return null;\n    };\n    PDFExportHelper.prototype.getPageNumberStyle = function (pageNumberType) {\n        switch (pageNumberType) {\n            case 'LowerLatin':\n                return 2;\n            case 'LowerRoman':\n                return 3;\n            case 'UpperLatin':\n                return 4;\n            case 'UpperRoman':\n                return 5;\n            default:\n                return 1;\n        }\n    };\n    /**\n     *\n     * @param {PdfBorderStyle} dashType - It contains the PDF dash style\n     * @returns {number} - It returns PDF dash style\n     * @hidden\n     */\n    PDFExportHelper.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /**\n     *\n     * @param {string} hexDec - It contains a hexadecimal code as string\n     * @returns {number} - It returns RGB as number\n     * @hidden\n     */\n    PDFExportHelper.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    return PDFExportHelper;\n}());\nexport { PDFExportHelper };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap, SizeF } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\nimport { PDFExportHelper } from '../../pivotview/actions/pdf-export-helper';\n/**\n * `ChartExport` module is used to handle the Pivot Chart PDF export action.\n *\n * @hidden\n */\nvar ChartExport = /** @class */ (function () {\n    /**\n     * Constructor for chart and accumulation annotation\n     *\n     *  @param {PivotView} parent - Instance of pivot table.\n     */\n    function ChartExport(parent) {\n        this.parent = parent;\n        this.pdfExportHelper = new PDFExportHelper();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - string.\n     * @private\n     */\n    ChartExport.prototype.getModuleName = function () {\n        return 'chartExport';\n    };\n    /**\n     * Method allow to export the pivot chart as PDF and image formats like PNG, JPEG, and SVG.\n     *\n     * @param {PdfExportProperties} pdfExportProperties - Allows to define the export properties for the chart.\n     * @param {boolean} isMultipleExport - Allows to export multiple tables and charts into a single PDF document.\n     * @param {Object} pdfDoc - Allows the export of an external PDF document along with current PDF document.\n     * @param {boolean} isBlob - Allows the PDF document to be saved as blob data.\n     * @returns {Promise<Object>}\n     * @hidden\n     */\n    ChartExport.prototype.pdfChartExport = function (pdfExportProperties, pdfDoc, isMultipleExport, isBlob) {\n        var _this = this;\n        var controls = [this.parent.chart];\n        var chartInfo = this.getChartInfo(controls);\n        var width = chartInfo.width;\n        var height = chartInfo.height;\n        var element = this.parent.chart.svgObject;\n        var isCanvas = this.parent.chart.enableCanvas;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': width.toString(),\n                    'height': height.toString()\n                }\n            });\n        }\n        var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(chartInfo.svg)], { type: 'image/svg+xml' }));\n        var image = new Image();\n        var ctx = element.getContext('2d');\n        image.src = url;\n        return new Promise(function (resolve) {\n            image.onload = (function () {\n                var pdfDocument;\n                if (!isNullOrUndefined(pdfDoc)) {\n                    pdfDocument = pdfDoc;\n                }\n                else {\n                    pdfDocument = new PdfDocument();\n                }\n                ctx.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                _this.exportPdf(element, pdfDocument, isMultipleExport, isBlob, width, height, pdfExportProperties);\n                resolve(pdfDocument);\n            });\n        });\n    };\n    ChartExport.prototype.getChartInfo = function (controls, isVertical) {\n        var width = 0;\n        var height = 0;\n        var isCanvas = this.parent.chart.enableCanvas;\n        var svgObject = new SvgRenderer('').createSvg({\n            id: 'Svg_Export_Element',\n            width: 200, height: 200\n        });\n        var backgroundColor;\n        controls.map(function (control) {\n            var svg = control.svgObject.cloneNode(true);\n            var groupEle = control.renderer.createGroup({\n                style: (isNullOrUndefined(isVertical) || isVertical) ? 'transform: translateY(' + height + 'px)' :\n                    'transform: translateX(' + width + 'px)'\n            });\n            backgroundColor = svg.childNodes[0] ? svg.childNodes[0].getAttribute('fill') : 'transparent';\n            if (backgroundColor === 'transparent') {\n                if (control.theme.indexOf('Dark') > -1 || control.theme === 'HighContrast') {\n                    backgroundColor = 'rgba(0, 0, 0, 1)';\n                }\n                else {\n                    backgroundColor = 'rgba(255, 255, 255, 1)';\n                }\n            }\n            if (!isCanvas) {\n                groupEle.appendChild(svg);\n            }\n            width = control.availableSize.width;\n            height = control.availableSize.height;\n            if (!isCanvas) {\n                svgObject.appendChild(groupEle);\n            }\n        });\n        if (!isCanvas) {\n            svgObject.setAttribute('width', width + '');\n            svgObject.setAttribute('height', height + '');\n            svgObject.setAttribute('style', 'background-color: ' + backgroundColor + ';');\n        }\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgObject\n        };\n    };\n    ChartExport.prototype.exportPdf = function (element, pdfDocument, isMultipleExport, isBlob, width, height, pdfExportProperties) {\n        var documentSection = pdfDocument.sections.add();\n        var documentWidth = pdfDocument.pageSettings.width;\n        var documentHeight = pdfDocument.pageSettings.height;\n        var margin = pdfDocument.pageSettings.margins;\n        var chartWidth = (width + margin.left + margin.right);\n        pdfDocument.pageSettings.size = new SizeF(chartWidth, documentHeight);\n        var fileName = this.exportProperties.fileName ? this.exportProperties.fileName :\n            (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.fileName)) ?\n                pdfExportProperties.fileName : 'default';\n        if (this.exportProperties.width || this.exportProperties.height) {\n            pdfDocument.pageSettings.orientation = ((this.exportProperties.width > this.exportProperties.height) ||\n                (!this.exportProperties.height && (this.exportProperties.width > documentHeight)) || (!this.exportProperties.width &&\n                (documentWidth > this.exportProperties.height))) ? PdfPageOrientation.Landscape : PdfPageOrientation.Portrait;\n            pdfDocument.pageSettings.size = new SizeF(this.exportProperties.width ? this.exportProperties.width\n                : documentWidth, this.exportProperties.height ? this.exportProperties.height : documentHeight);\n        }\n        else {\n            pdfDocument.pageSettings.orientation = (this.exportProperties.orientation === 0 || this.exportProperties.orientation)\n                ? this.exportProperties.orientation : (!isNullOrUndefined(pdfExportProperties) &&\n                !isNullOrUndefined(pdfExportProperties.pageOrientation)) ? (pdfExportProperties.pageOrientation === 'Landscape' ?\n                PdfPageOrientation.Landscape : PdfPageOrientation.Portrait) : PdfPageOrientation.Landscape;\n            if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.pageSize)) {\n                pdfDocument.pageSettings.size = PivotUtil.getPageSize(pdfExportProperties.pageSize);\n            }\n        }\n        if (!isNullOrUndefined(this.exportProperties.pdfMargins)) {\n            var margins = pdfDocument.pageSettings.margins;\n            margins.top = !isNullOrUndefined(this.exportProperties.pdfMargins.top) ? this.exportProperties.pdfMargins.top : margins.top;\n            margins.bottom = !isNullOrUndefined(this.exportProperties.pdfMargins.bottom) ? this.exportProperties.pdfMargins.bottom :\n                margins.bottom;\n            margins.left = !isNullOrUndefined(this.exportProperties.pdfMargins.left) ? this.exportProperties.pdfMargins.left : margins.left;\n            margins.right = !isNullOrUndefined(this.exportProperties.pdfMargins.right) ? this.exportProperties.pdfMargins.right :\n                margins.right;\n        }\n        documentSection.setPageSettings(pdfDocument.pageSettings);\n        documentHeight = pdfDocument.pageSettings.height;\n        var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n        imageString = imageString.slice(imageString.indexOf(',') + 1);\n        var image = new PdfBitmap(imageString);\n        var pdfPage = documentSection.pages.add();\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header)) {\n            this.pdfExportHelper.drawHeader(pdfExportProperties, pdfDocument);\n        }\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.footer)) {\n            this.pdfExportHelper.drawFooter(pdfExportProperties, pdfDocument);\n        }\n        pdfPage.graphics.drawImage(image, 0, 0, (documentHeight < height || this.exportProperties.width\n            || pdfDocument.pageSettings.size) ? pdfPage.getClientSize().width : chartWidth, documentHeight < height\n            ? pdfPage.getClientSize().height : height);\n        var blobPromise;\n        if (isBlob || isMultipleExport) {\n            if (isBlob) {\n                blobPromise = pdfDocument.save();\n            }\n        }\n        else {\n            pdfDocument.save(fileName + '.pdf');\n            pdfDocument.destroy();\n        }\n        var exportCompleteEventArgs = {\n            type: 'PDF',\n            promise: isBlob ? blobPromise : null\n        };\n        this.parent.trigger(events.exportComplete, exportCompleteEventArgs);\n        return new Promise(function () {\n            pdfDocument;\n        });\n    };\n    /**\n     * To destroy the pdf export module.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ChartExport.prototype.destroy = function () {\n        if (this.exportProperties) {\n            this.exportProperties = null;\n        }\n        if (this.pdfExportHelper) {\n            this.pdfExportHelper = null;\n        }\n    };\n    return ChartExport;\n}());\nexport { ChartExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, Fetch } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest, select, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { initializeCSPTemplate } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { getScrollBarWidth } from '@syncfusion/ej2-grids';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { Chart, AccumulationChart } from '@syncfusion/ej2-charts';\nimport { PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { OlapEngine } from '../../base/olap/engine';\nimport { ChartExport } from '../../pivotchart/actions/chart-export';\nimport { Save } from '@syncfusion/ej2-file-utils';\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupingBarSettings.prototype, \"showFieldsPanel\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allows you to configure page information such as page size and current page details for each axis in order to display the pivot table with a specific page when paging.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], PageSettings.prototype, \"columnPageSize\", void 0);\n    __decorate([\n        Property(5)\n    ], PageSettings.prototype, \"rowPageSize\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentColumnPage\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentRowPage\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Allows a set of options for customizing the paging UI with a variety of settings such as UI position, template and visibility to a specific axis info such as page size, paging data.\n * > To use this option, it requires the property `enablePaging` to be true.\n */\nvar PagerSettings = /** @class */ (function (_super) {\n    __extends(PagerSettings, _super);\n    function PagerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bottom')\n    ], PagerSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], PagerSettings.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(true)\n    ], PagerSettings.prototype, \"showRowPager\", void 0);\n    __decorate([\n        Property(true)\n    ], PagerSettings.prototype, \"showColumnPager\", void 0);\n    __decorate([\n        Property(true)\n    ], PagerSettings.prototype, \"showRowPageSize\", void 0);\n    __decorate([\n        Property(true)\n    ], PagerSettings.prototype, \"showColumnPageSize\", void 0);\n    __decorate([\n        Property([10, 50, 100, 200])\n    ], PagerSettings.prototype, \"rowPageSizes\", void 0);\n    __decorate([\n        Property([5, 10, 20, 50, 100])\n    ], PagerSettings.prototype, \"columnPageSizes\", void 0);\n    __decorate([\n        Property(false)\n    ], PagerSettings.prototype, \"enableCompactView\", void 0);\n    __decorate([\n        Property()\n    ], PagerSettings.prototype, \"template\", void 0);\n    return PagerSettings;\n}(ChildProperty));\nexport { PagerSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/**\n * Represents a class that allows defining values for options relating to the virtual scrolling experience in the pivot table.\n */\nvar VirtualScrollSettings = /** @class */ (function (_super) {\n    __extends(VirtualScrollSettings, _super);\n    function VirtualScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], VirtualScrollSettings.prototype, \"allowSinglePage\", void 0);\n    return VirtualScrollSettings;\n}(ChildProperty));\nexport { VirtualScrollSettings };\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param  {PivotViewModel} options - options.\n     * @param  {string|HTMLElement} element - element.\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        /** @hidden */\n        _this_1.allowEngineExport = false;\n        /** @hidden */\n        _this_1.isInitial = true;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.isStaticRefresh = false;\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.request = typeof window !== 'undefined' ? new XMLHttpRequest() : null;\n        /** @hidden */\n        _this_1.isServerWaitingPopup = false;\n        /** @hidden */\n        _this_1.actionObj = {};\n        /** @hidden */\n        _this_1.defaultFieldListOrder = 'None';\n        /** @hidden */\n        _this_1.destroyEngine = false;\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - return.\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showGroupingBar) {\n            modules.push({ args: [this], member: 'groupingBar' });\n        }\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalFormatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberFormatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedField' });\n        }\n        if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldList' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        if (this.allowDrillThrough || (this.editSettings && this.editSettings.allowEditing)) {\n            modules.push({ args: [this], member: 'drillThrough' });\n        }\n        if (this.enablePaging) {\n            modules.push({ args: [this], member: 'pager' });\n        }\n        return modules;\n    };\n    /**\n     *\n     * For internal use only - Initializing internal properties;\n     *\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            (this.toolbar && this.showToolbar) || this.allowGrouping || this.gridSettings.contextMenuItems || this.allowDrillThrough) {\n            this.commonModule = new Common(this);\n        }\n        if (this.allowPdfExport && (this.displayOption.view === 'Both' || this.displayOption.view === 'Chart')) {\n            this.chartExportModule = new ChartExport(this);\n        }\n        this.defaultLocale = {\n            applyToGrandTotal: 'Apply to Grand Total',\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Median: 'Median',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormatting: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show subtotals',\n            doNotShowSubTotals: 'Do not show subtotals',\n            showSubTotalsRowsOnly: 'Show subtotals rows only',\n            showSubTotalsColumnsOnly: 'Show subtotals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter valid report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stackingline: 'Stacked Line',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            stackingline100: '100% Stacked Line',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axis',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormattingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data',\n            stacked: 'Stacked',\n            single: 'Single',\n            combined: 'Combined',\n            multipleAxisMode: 'Multiple Axis Mode',\n            grandTotalPosition: 'Grand totals position',\n            top: 'Top',\n            bottom: 'Bottom',\n            None: 'None',\n            rowPage: 'Row pager',\n            rowPerPage: 'Rows per page',\n            columnPage: 'Column pager',\n            columnPerPage: 'Columns per page',\n            goToFirstPage: 'Go to first page',\n            goToPreviousPage: 'Go to previous page',\n            goToNextPage: 'Go to next page',\n            goToLastPage: 'Go to last page',\n            subTotalPosition: 'Subtotals position',\n            auto: 'Auto',\n            loading: 'Loading...',\n            add: 'Add'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.pivotDeferLayoutUpdate = isNullOrUndefined(this.pivotDeferLayoutUpdate) ? this.allowDeferLayoutUpdate :\n            this.pivotDeferLayoutUpdate;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate' + (this.cssClass ? (' ' + this.cssClass) : ''),\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    locale: this.locale,\n                    enableHtmlSanitizer: this.enableHtmlSanitizer,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: this.cssClass,\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    locale: this.locale,\n                    enableHtmlSanitizer: this.enableHtmlSanitizer,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                if (!this.getFieldByID(this.element.id + '_custom_group', this.gridSettings.contextMenuItems)) {\n                    groupItems.push(this.buildDefaultItems('Group'));\n                }\n                if (!this.getFieldByID(this.element.id + '_custom_ungroup', this.gridSettings.contextMenuItems)) {\n                    groupItems.push(this.buildDefaultItems('Ungroup'));\n                }\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            var contextMenuItems = [];\n            Array.prototype.push.apply(contextMenuItems, aggItems);\n            Array.prototype.push.apply(contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(contextMenuItems, groupItems);\n            Array.prototype.push.apply(contextMenuItems, expItems);\n            Array.prototype.push.apply(contextMenuItems, customItems);\n            this.setProperties({ gridSettings: { contextMenuItems: contextMenuItems } }, true);\n        }\n    };\n    PivotView.prototype.getFieldByID = function (id, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('id', 'equal', id))[0];\n    };\n    /**\n     *\n     * @hidden\n     *\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.isTabular = this.gridSettings.layout === 'Tabular' ? true : false;\n        this.pivotRefresh = Component.prototype.refresh;\n        this.minHeight = isNullOrUndefined(this.minHeight) ? 300 : (this.minHeight < 10 ? 10 : this.minHeight);\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.isStaticRefresh = false;\n        this.setProperties({ pivotValues: [] }, true);\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ? this.gridSettings.pdfHeaderQueryCellInfo : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ? this.gridSettings.excelHeaderQueryCellInfo : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ? this.gridSettings.excelQueryCellInfo : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLegendClick = this.chartSettings.legendClick ? this.chartSettings.legendClick : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.multiLevelLabelClick = this.chartSettings.multiLevelLabelClick ? this.chartSettings.multiLevelLabelClick : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        this.beforePrint = this.chartSettings.beforePrint ? this.chartSettings.beforePrint : undefined;\n        this.animationComplete = this.chartSettings.animationComplete ? this.chartSettings.animationComplete : undefined;\n        this.legendRender = this.chartSettings.legendRender ? this.chartSettings.legendRender : undefined;\n        this.textRender = this.chartSettings.textRender ? this.chartSettings.textRender : undefined;\n        this.pointRender = this.chartSettings.pointRender ? this.chartSettings.pointRender : undefined;\n        this.seriesRender = this.chartSettings.seriesRender ? this.chartSettings.seriesRender : undefined;\n        this.chartMouseMove = this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove : undefined;\n        this.chartMouseClick = this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick : undefined;\n        this.pointMove = this.chartSettings.pointMove ? this.chartSettings.pointMove : undefined;\n        this.chartMouseLeave = this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave : undefined;\n        this.chartMouseDown = this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown : undefined;\n        this.chartMouseUp = this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp : undefined;\n        this.dragComplete = this.chartSettings.dragComplete ? this.chartSettings.dragComplete : undefined;\n        this.zoomComplete = this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete : undefined;\n        this.scrollStart = this.chartSettings.scrollStart ? this.chartSettings.scrollStart : undefined;\n        this.scrollEnd = this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd : undefined;\n        this.scrollChanged = this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged : undefined;\n        this.multiLevelLabelRender = this.chartSettings.multiLevelLabelRender ? this.chartSettings.multiLevelLabelRender : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        if (this.chartSettings && this.chartSettings.showMemberSeries && !this.chartSettings.showPointColorByMembers) {\n            this.setProperties({ chartSettings: { showPointColorByMembers: true } }, true);\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.pivotChartModule = new PivotChart(this);\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     *\n     * @hidden\n     *\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                currentColumnPage: isInit ? 1 : this.pageSettings.currentColumnPage,\n                currentRowPage: isInit ? 1 : this.pageSettings.currentRowPage,\n                columnPageSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowPageSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues)\n            };\n        }\n    };\n    /**\n     * Initialize the control rendering\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataSourceSettings.formatSettings.length > 0) {\n            var formatfield = this.dataSourceSettings.formatSettings;\n            for (var i = 0; i < formatfield.length; i++) {\n                if ((!isNullOrUndefined(formatfield[i].maximumFractionDigits) || !isNullOrUndefined(formatfield[i].minimumFractionDigits)) && formatfield[i].format.match(/^(P|N|C|P[0-9]|C[0-9]|N[0-9])$/g) === null) {\n                    formatfield[i].maximumFractionDigits = undefined;\n                    formatfield[i].minimumIntegerDigits = undefined;\n                }\n            }\n        }\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n                if (this.displayOption.view !== 'Chart') {\n                    this.renderEmptyGrid();\n                }\n                else {\n                    this.refreshData();\n                }\n                this.showWaitingPopup();\n            }\n            else {\n                var request = new Fetch(this.dataSourceSettings.url, 'GET');\n                request.send().then(function (response) { return typeof (response) === 'string' ? response : response.text(); })\n                    .then(this.onReadyStateChange.bind(this));\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.onSuccess = function (excelExportProperties) {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            if (this.currentAction === 'onExcelExport' || this.currentAction === 'onCsvExport') {\n                if (this.request.status === 200) {\n                    var buffer = this.request.response;\n                    var fileName = isNullOrUndefined(excelExportProperties.fileName) ? (this.currentAction === 'onExcelExport' ? 'default.xlsx' : 'default.csv') : excelExportProperties.fileName;\n                    Save.save(fileName, buffer);\n                }\n            }\n            else {\n                this.isServerWaitingPopup = true;\n                try {\n                    var params = {\n                        action: this.currentAction,\n                        response: this.request.responseText\n                    };\n                    this.trigger(events.afterServiceInvoke, params);\n                    var engine = JSON.parse(this.request.responseText);\n                    if (this.currentAction === 'fetchFieldMembers') {\n                        var currentMembers = JSON.parse(engine.members);\n                        var dateMembers = [];\n                        var members = {};\n                        this.engineModule.globalize = !isNullOrUndefined(this.globalize) ? this.globalize : new Internationalization();\n                        this.engineModule.formatFields = this.engineModule.setFormattedFields(this.dataSourceSettings.formatSettings);\n                        var isDateField = PivotUtil.isDateField(engine.memberName, this.engineModule);\n                        var isNumberType = this.engineModule.fieldList[engine.memberName].type === 'number';\n                        var keys = Object.keys(currentMembers);\n                        for (var i = 0, j = keys.length; i < j; i++) {\n                            var values = currentMembers[keys[i]];\n                            var formattedValue = isDateField ?\n                                this.engineModule.getFormattedValue(values.Name, engine.memberName) :\n                                { formattedText: values.Caption };\n                            members[keys[i]] = {\n                                index: values.Index, ordinal: values.Ordinal,\n                                isDrilled: values.IsDrilled, caption: formattedValue.formattedText\n                            };\n                            dateMembers.push({\n                                formattedText: formattedValue.formattedText,\n                                actualText: isDateField ? formattedValue.dateText : isNumberType ?\n                                    (!isNaN(Number(values.Name)) ? Number(values.Name) : values.Name) : values.Name\n                            });\n                        }\n                        this.engineModule.fieldList[engine.memberName].members = members;\n                        this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                        if (this.showGroupingBar) {\n                            this.pivotButtonModule.updateFilterEvents();\n                        }\n                        else {\n                            this.pivotFieldListModule.pivotButtonModule.updateFilterEvents();\n                        }\n                    }\n                    else if (this.currentAction === 'fetchRawData') {\n                        var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()]\n                            ? this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption\n                            : this.drillThroughValue.actualText.toString();\n                        var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n                        var rawData = JSON.parse(engine.rawData);\n                        var parsedObj = JSON.parse(engine.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        this.drillThroughValue.indexObject = indexObject;\n                        this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n                        this.hideWaitingPopup();\n                    }\n                    else {\n                        var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                        if (this.engineModule.fieldList) {\n                            var keys = Object.keys(this.engineModule.fieldList);\n                            for (var i = 0; i < keys.length; i++) {\n                                if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                    fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                    fList[keys[i]].formattedMembers =\n                                        this.engineModule.fieldList[keys[i]].formattedMembers;\n                                    fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                                }\n                            }\n                        }\n                        this.engineModule.fieldList = fList;\n                        this.engineModule.fields = JSON.parse(engine.fields);\n                        this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                        this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                        this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                        this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                        this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                        this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                        this.engineModule.columnPageCount = JSON.parse(engine.pivotCount).ColumnPageCount;\n                        this.engineModule.rowPageCount = JSON.parse(engine.pivotCount).RowPageCount;\n                        var rowPos = void 0;\n                        var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                                rowPos = rCnt;\n                                break;\n                            }\n                        }\n                        this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                        this.engineModule.pageSettings = this.pageSettings;\n                        if (this.dataSourceSettings.groupSettings.length > 0) {\n                            PivotUtil.updateReport(this, JSON.parse(engine.dataSourceSettings));\n                        }\n                        var valueSort = JSON.parse(engine.dataSourceSettings).ValueSortSettings;\n                        this.engineModule.valueSortSettings = {\n                            headerText: valueSort.HeaderText,\n                            headerDelimiter: valueSort.HeaderDelimiter,\n                            sortOrder: valueSort.SortOrder,\n                            columnIndex: valueSort.ColumnIndex\n                        };\n                        this.engineModule.pivotValues = pivotValues;\n                        this.engineModule.isEmptyData = this.dataSourceSettings.values.length === 0 ? true : false;\n                        for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                            var value = _a[_i];\n                            this.engineModule.valueAxisFields[value.name] = value;\n                        }\n                        this.engineModule.globalize = !isNullOrUndefined(this.globalize) ? this.globalize : new Internationalization();\n                        this.engineModule.formatFields = this.engineModule.setFormattedFields(this.dataSourceSettings.formatSettings);\n                    }\n                }\n                catch (error) {\n                    this.engineModule.pivotValues = [];\n                }\n                if (this.currentAction === 'onScroll') {\n                    if (this.scrollDirection === 'vertical') {\n                        var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n                        var exactSize = (this.pageSettings.rowPageSize * rowValues * this.gridSettings.rowHeight);\n                        var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowPageSize * rowValues));\n                        var pos = exactSize * exactPage -\n                            (this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight);\n                        this.scrollPosObject.verticalSection = pos;\n                    }\n                    else if (this.scrollDirection === 'horizondal') {\n                        var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n                        var exactSize = (this.pageSettings.columnPageSize * colValues * this.gridSettings.columnWidth);\n                        var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnPageSize * colValues));\n                        var pos = exactSize * exactPage -\n                            (this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth);\n                        this.scrollPosObject.horizontalSection = pos;\n                    }\n                }\n                if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n                    this.initEngine();\n                    if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                        this.calculatedFieldModule.endDialog();\n                        this.calculatedFieldModule.isRequireUpdate = false;\n                    }\n                    if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule &&\n                        this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) {\n                        this.pivotFieldListModule.calculatedFieldModule.endDialog();\n                        this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs, excelExportProperties) {\n        var _this_1 = this;\n        this.engineModule.isEmptyData = false;\n        if (this.element.querySelector('.e-spin-hide') && !(action === 'onExcelExport' || action === 'onCsvExport')) {\n            this.showWaitingPopup();\n        }\n        this.currentAction = action;\n        this.isServerWaitingPopup = false;\n        var customProperties = {\n            pageSettings: JSON.parse(this.getPageSettings()).pageSettings,\n            enableValueSorting: this.enableValueSorting,\n            enablePaging: this.enablePaging,\n            enableVirtualization: this.enableVirtualization,\n            allowDataCompression: this.allowDataCompression,\n            enableDrillThrough: (this.allowDrillThrough || this.editSettings.allowEditing),\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this)),\n            enableOptimizedRendering: this.enableVirtualization && this.virtualScrollSettings &&\n                this.virtualScrollSettings.allowSinglePage,\n            requestType: 'string',\n            headers: { 'Content-type': 'application/json' }\n        };\n        if (this.request.readyState === XMLHttpRequest.UNSENT || this.request.readyState === XMLHttpRequest.OPENED) {\n            this.request.withCredentials = false;\n        }\n        var params = {\n            request: this.request,\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: {},\n            internalProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid,\n            excelExportProperties: excelExportProperties,\n            exportAllPages: this.exportAllPages,\n            isGroupingUpdated: (this.currentAction === 'onRefresh' && this.dataSourceSettings.groupSettings.length > 0) ? true : (this.groupingModule ? this.groupingModule.isUpdate : false)\n        };\n        this.trigger(events.beforeServiceInvoke, params, function (observedArgs) {\n            _this_1.request = observedArgs.request;\n            params.internalProperties = observedArgs.internalProperties;\n            params.customProperties = observedArgs.customProperties;\n            params.dataSourceSettings = observedArgs.dataSourceSettings;\n            params.calculatedItem = observedArgs.calculatedItem;\n            params.drillItem = observedArgs.drillItem;\n            params.editArgs = observedArgs.editArgs;\n            params.fetchRawDataArgs = observedArgs.fetchRawDataArgs;\n            params.filterItem = observedArgs.filterItem;\n            params.hash = observedArgs.hash;\n            params.memberName = observedArgs.memberName;\n            params.sortItem = observedArgs.sortItem;\n            params.excelExportProperties = observedArgs.excelExportProperties;\n            params.exportAllPages = observedArgs.exportAllPages;\n        });\n        this.request.open('POST', this.dataSourceSettings.url, true);\n        this.request.onreadystatechange = this.onSuccess.bind(this, params.excelExportProperties);\n        if (params.action === 'onExcelExport' || params.action === 'onCsvExport') {\n            this.request.responseType = 'blob';\n        }\n        else {\n            this.request.responseType = '';\n        }\n        var keys = Object.keys(params.internalProperties.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var headerKey = keys[i];\n            var headerValue = String(params.internalProperties.headers[headerKey]);\n            this.request.setRequestHeader(headerKey, headerValue);\n        }\n        if (params.internalProperties.requestType === 'string') {\n            this.request.send(JSON.stringify(params));\n        }\n        else if (params.internalProperties.requestType === 'base64') {\n            this.request.send(btoa(JSON.stringify(params)));\n        }\n    };\n    /**\n     * It returns chart settings.\n     *\n     * @returns {string} - string.\n     * @hidden\n     */\n    PivotView.prototype.getChartSettings = function () {\n        var keyEntity = ['chartSettings'];\n        var chartLoadEvent = this.chartSettings['load'];\n        var chartLoadedEvent = this.chartSettings['loaded'];\n        var chartTextRenderEvent = this.chartSettings['textRender'];\n        var chartPointRenderEvent = this.chartSettings['pointRender'];\n        var chartSeriesRenderEvent = this.chartSettings['seriesRender'];\n        var chartLegendRenderEvent = this.chartSettings['legendRender'];\n        var chartPointClickEvent = this.chartSettings['pointClick'];\n        var chartTooltipRenderEvent = this.chartSettings['tooltipRender'];\n        var chartLegendClickEvent = this.chartSettings['legendClick'];\n        var chartMultiLevelLabelRenderEvent = this.chartSettings['multiLevelLabelRender'];\n        var chartBeforePrintEvent = this.chartSettings['beforePrint'];\n        var chartAnimationCompleteEvent = this.chartSettings['animationComplete'];\n        var chartMouseMoveEvent = this.chartSettings['chartMouseMove'];\n        var chartMouseClickEvent = this.chartSettings['chartMouseClick'];\n        var chartPointMoveEvent = this.chartSettings['pointMove'];\n        var chartMouseLeaveEvent = this.chartSettings['chartMouseLeave'];\n        var chartMouseDownEvent = this.chartSettings['chartMouseDown'];\n        var chartMouseUpEvent = this.chartSettings['chartMouseUp'];\n        var chartDragCompleteEvent = this.chartSettings['dragComplete'];\n        var chartZoomCompleteEvent = this.chartSettings['zoomComplete'];\n        var chartScrollStartEvent = this.chartSettings['scrollStart'];\n        var chartScrollEndEvent = this.chartSettings['scrollEnd'];\n        var chartScrollChangedEvent = this.chartSettings['scrollChanged'];\n        this.chartSettings['load'] = undefined;\n        this.chartSettings['loaded'] = undefined;\n        this.chartSettings['textRender'] = undefined;\n        this.chartSettings['pointRender'] = undefined;\n        this.chartSettings['seriesRender'] = undefined;\n        this.chartSettings['legendRender'] = undefined;\n        this.chartSettings['pointClick'] = undefined;\n        this.chartSettings['tooltipRender'] = undefined;\n        this.chartSettings['legendClick'] = undefined;\n        this.chartSettings['multiLevelLabelRender'] = undefined;\n        this.chartSettings['beforePrint'] = undefined;\n        this.chartSettings['animationComplete'] = undefined;\n        this.chartSettings['chartMouseMove'] = undefined;\n        this.chartSettings['chartMouseClick'] = undefined;\n        this.chartSettings['pointMove'] = undefined;\n        this.chartSettings['chartMouseLeave'] = undefined;\n        this.chartSettings['chartMouseDown'] = undefined;\n        this.chartSettings['chartMouseUp'] = undefined;\n        this.chartSettings['dragComplete'] = undefined;\n        this.chartSettings['zoomComplete'] = undefined;\n        this.chartSettings['scrollStart'] = undefined;\n        this.chartSettings['scrollEnd'] = undefined;\n        this.chartSettings['scrollChanged'] = undefined;\n        var persistData = this.addOnPersist(keyEntity);\n        this.chartSettings['load'] = chartLoadEvent;\n        this.chartSettings['loaded'] = chartLoadedEvent;\n        this.chartSettings['textRender'] = chartTextRenderEvent;\n        this.chartSettings['pointRender'] = chartPointRenderEvent;\n        this.chartSettings['seriesRender'] = chartSeriesRenderEvent;\n        this.chartSettings['legendRender'] = chartLegendRenderEvent;\n        this.chartSettings['pointClick'] = chartPointClickEvent;\n        this.chartSettings['tooltipRender'] = chartTooltipRenderEvent;\n        this.chartSettings['legendClick'] = chartLegendClickEvent;\n        this.chartSettings['multiLevelLabelRender'] = chartMultiLevelLabelRenderEvent;\n        this.chartSettings['beforePrint'] = chartBeforePrintEvent;\n        this.chartSettings['animationComplete'] = chartAnimationCompleteEvent;\n        this.chartSettings['chartMouseMove'] = chartMouseMoveEvent;\n        this.chartSettings['chartMouseClick'] = chartMouseClickEvent;\n        this.chartSettings['pointMove'] = chartPointMoveEvent;\n        this.chartSettings['chartMouseLeave'] = chartMouseLeaveEvent;\n        this.chartSettings['chartMouseDown'] = chartMouseDownEvent;\n        this.chartSettings['chartMouseUp'] = chartMouseUpEvent;\n        this.chartSettings['dragComplete'] = chartDragCompleteEvent;\n        this.chartSettings['zoomComplete'] = chartZoomCompleteEvent;\n        this.chartSettings['scrollStart'] = chartScrollStartEvent;\n        this.chartSettings['scrollEnd'] = chartScrollEndEvent;\n        this.chartSettings['scrollChanged'] = chartScrollChangedEvent;\n        return persistData;\n    };\n    /**\n     * It returns page settings.\n     *\n     * @returns {string} - string.\n     * @hidden\n     */\n    PivotView.prototype.getPageSettings = function () {\n        var keyEntity = ['pageSettings'];\n        var persistData = this.addOnPersist(keyEntity);\n        return persistData;\n    };\n    PivotView.prototype.onReadyStateChange = function (result) {\n        var dataSource = [];\n        if (this.dataSourceSettings.type === 'CSV') {\n            var jsonObject = result.split(/\\r?\\n|\\r/);\n            // (dataSource as string[][]).push(jsonObject[0].split(',').map(function (e) { return e.replace(/ /g, '').replace(/^\\\"(.+)\\\"$/, \"$1\"); }));\n            for (var i = 0; i < jsonObject.length; i++) {\n                if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                    dataSource.push(jsonObject[i].split(','));\n                }\n            }\n        }\n        else {\n            try {\n                dataSource = JSON.parse(result);\n            }\n            catch (error) {\n                dataSource = [];\n            }\n        }\n        if (dataSource && dataSource.length > 0) {\n            this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n        }\n        this.initialLoad();\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        try {\n            this.cellTemplateFn = this.templateParser(this.cellTemplate);\n            this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n            if (this.spinnerTemplate) {\n                createSpinner({ target: this.element, template: this.spinnerTemplate, cssClass: this.cssClass\n                        ? this.cssClass : undefined }, this.createElement);\n            }\n            else {\n                createSpinner({ target: this.element, cssClass: this.cssClass ? this.cssClass : undefined }, this.createElement);\n            }\n            var loadArgs_1 = {\n                dataSourceSettings: this.dataSourceSettings,\n                pivotview: this,\n                fieldsType: {},\n                defaultFieldListOrder: this.defaultFieldListOrder\n            };\n            this.trigger(events.load, loadArgs_1, function (observedArgs) {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n                _this_1.fieldsType = observedArgs.fieldsType;\n                _this_1.defaultFieldListOrder = loadArgs_1.defaultFieldListOrder;\n                _this_1.updateClass();\n                _this_1.notify(events.initSubComponent, {});\n                if (_this_1.dataSourceSettings.mode !== 'Server') {\n                    _this_1.notify(events.initialLoad, {});\n                }\n                if (_this_1.isAdaptive) {\n                    _this_1.contextMenuModule.render();\n                }\n                _this_1.notify(events.initToolbar, {});\n                _this_1.notify(events.initPivotPager, {});\n            });\n        }\n        catch (execption) {\n            this.actionFailureMethod(execption);\n        }\n    };\n    /**\n     * Register the internal events.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     *\n     * @returns {string} - string.\n     */\n    PivotView.prototype.getPersistData = function (isRemoveDatasource) {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption', 'pageSettings'];\n        var columnRender = this.gridSettings['columnRender'];\n        var excelQueryCellInfo = this.gridSettings['excelQueryCellInfo'];\n        var excelHeaderQueryCellInfo = this.gridSettings['excelHeaderQueryCellInfo'];\n        var pdfQueryCellInfo = this.gridSettings['pdfQueryCellInfo'];\n        var pdfHeaderQueryCellInfo = this.gridSettings['pdfHeaderQueryCellInfo'];\n        var chartLoadEvent = this.chartSettings['load'];\n        var chartLoadedEvent = this.chartSettings['loaded'];\n        var chartTextRenderEvent = this.chartSettings['textRender'];\n        var chartPointRenderEvent = this.chartSettings['pointRender'];\n        var chartSeriesRenderEvent = this.chartSettings['seriesRender'];\n        var chartLegendRenderEvent = this.chartSettings['legendRender'];\n        var chartPointClickEvent = this.chartSettings['pointClick'];\n        var chartTooltipRenderEvent = this.chartSettings['tooltipRender'];\n        var chartLegendClickEvent = this.chartSettings['legendClick'];\n        var chartMultiLevelLabelRenderEvent = this.chartSettings['multiLevelLabelRender'];\n        var chartBeforePrintEvent = this.chartSettings['beforePrint'];\n        var chartAnimationCompleteEvent = this.chartSettings['animationComplete'];\n        var chartMouseMoveEvent = this.chartSettings['chartMouseMove'];\n        var chartMouseClickEvent = this.chartSettings['chartMouseClick'];\n        var chartPointMoveEvent = this.chartSettings['pointMove'];\n        var chartMouseLeaveEvent = this.chartSettings['chartMouseLeave'];\n        var chartMouseDownEvent = this.chartSettings['chartMouseDown'];\n        var chartMouseUpEvent = this.chartSettings['chartMouseUp'];\n        var chartDragCompleteEvent = this.chartSettings['dragComplete'];\n        var chartZoomCompleteEvent = this.chartSettings['zoomComplete'];\n        var chartScrollStartEvent = this.chartSettings['scrollStart'];\n        var chartScrollEndEvent = this.chartSettings['scrollEnd'];\n        var chartScrollChangedEvent = this.chartSettings['scrollChanged'];\n        this.gridSettings['columnRender'] = undefined;\n        this.gridSettings['excelQueryCellInfo'] = undefined;\n        this.gridSettings['excelHeaderQueryCellInfo'] = undefined;\n        this.gridSettings['pdfQueryCellInfo'] = undefined;\n        this.gridSettings['pdfHeaderQueryCellInfo'] = undefined;\n        this.chartSettings['tooltipRender'] = undefined;\n        this.chartSettings['legendClick'] = undefined;\n        this.chartSettings['multiLevelLabelRender'] = undefined;\n        this.chartSettings['load'] = undefined;\n        this.chartSettings['loaded'] = undefined;\n        this.chartSettings['textRender'] = undefined;\n        this.chartSettings['pointRender'] = undefined;\n        this.chartSettings['seriesRender'] = undefined;\n        this.chartSettings['legendRender'] = undefined;\n        this.chartSettings['pointClick'] = undefined;\n        this.chartSettings['beforePrint'] = undefined;\n        this.chartSettings['animationComplete'] = undefined;\n        this.chartSettings['chartMouseMove'] = undefined;\n        this.chartSettings['chartMouseClick'] = undefined;\n        this.chartSettings['pointMove'] = undefined;\n        this.chartSettings['chartMouseLeave'] = undefined;\n        this.chartSettings['chartMouseDown'] = undefined;\n        this.chartSettings['chartMouseUp'] = undefined;\n        this.chartSettings['dragComplete'] = undefined;\n        this.chartSettings['zoomComplete'] = undefined;\n        this.chartSettings['scrollStart'] = undefined;\n        this.chartSettings['scrollEnd'] = undefined;\n        this.chartSettings['scrollChanged'] = undefined;\n        var dataSource = [];\n        if (isRemoveDatasource) {\n            dataSource = (this.dataSourceSettings.dataSource && !(this.dataSourceSettings.dataSource instanceof DataManager)) ? this.dataSourceSettings.dataSource.slice() : this.dataSourceSettings.dataSource;\n            this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n        }\n        var persistData = this.addOnPersist(keyEntity);\n        this.gridSettings['columnRender'] = columnRender;\n        this.gridSettings['excelQueryCellInfo'] = excelQueryCellInfo;\n        this.gridSettings['excelHeaderQueryCellInfo'] = excelHeaderQueryCellInfo;\n        this.gridSettings['pdfQueryCellInfo'] = pdfQueryCellInfo;\n        this.gridSettings['pdfHeaderQueryCellInfo'] = pdfHeaderQueryCellInfo;\n        this.chartSettings['load'] = chartLoadEvent;\n        this.chartSettings['loaded'] = chartLoadedEvent;\n        this.chartSettings['textRender'] = chartTextRenderEvent;\n        this.chartSettings['pointRender'] = chartPointRenderEvent;\n        this.chartSettings['seriesRender'] = chartSeriesRenderEvent;\n        this.chartSettings['legendRender'] = chartLegendRenderEvent;\n        this.chartSettings['pointClick'] = chartPointClickEvent;\n        this.chartSettings['tooltipRender'] = chartTooltipRenderEvent;\n        this.chartSettings['legendClick'] = chartLegendClickEvent;\n        this.chartSettings['multiLevelLabelRender'] = chartMultiLevelLabelRenderEvent;\n        this.chartSettings['beforePrint'] = chartBeforePrintEvent;\n        this.chartSettings['animationComplete'] = chartAnimationCompleteEvent;\n        this.chartSettings['chartMouseMove'] = chartMouseMoveEvent;\n        this.chartSettings['chartMouseClick'] = chartMouseClickEvent;\n        this.chartSettings['pointMove'] = chartPointMoveEvent;\n        this.chartSettings['chartMouseLeave'] = chartMouseLeaveEvent;\n        this.chartSettings['chartMouseDown'] = chartMouseDownEvent;\n        this.chartSettings['chartMouseUp'] = chartMouseUpEvent;\n        this.chartSettings['dragComplete'] = chartDragCompleteEvent;\n        this.chartSettings['zoomComplete'] = chartZoomCompleteEvent;\n        this.chartSettings['scrollStart'] = chartScrollStartEvent;\n        this.chartSettings['scrollEnd'] = chartScrollEndEvent;\n        this.chartSettings['scrollChanged'] = chartScrollChangedEvent;\n        if (isRemoveDatasource) {\n            this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n        }\n        return persistData;\n    };\n    /**\n     * Loads pivot Layout\n     *\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData = JSON.parse(persistData);\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        if (pivotData.displayOption.primary === 'Chart') {\n            this.currentView = 'Chart';\n        }\n        else {\n            this.currentView = 'Table';\n        }\n        this.allowServerDataBinding = true;\n        if (this.dataSourceSettings && this.dataSourceSettings.dataSource && this.dataSourceSettings.dataSource instanceof DataManager\n            && pivotData.dataSourceSettings && pivotData.dataSourceSettings.dataSource &&\n            pivotData.dataSourceSettings.dataSource.dataSource && this.dataSourceSettings.dataSource.dataSource &&\n            pivotData.dataSourceSettings.dataSource.dataSource.url === this.dataSourceSettings.dataSource.dataSource.url) {\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            var dataObj = JSON.parse(data);\n            if (this.dataSourceSettings && this.dataSourceSettings.dataSource && this.dataSourceSettings.dataSource instanceof DataManager\n                && dataObj.dataSourceSettings && dataObj.dataSourceSettings.dataSource &&\n                dataObj.dataSourceSettings.dataSource.dataSource && this.dataSourceSettings.dataSource.dataSource &&\n                dataObj.dataSourceSettings.dataSource.dataSource.url === this.dataSourceSettings.dataSource.dataSource.url) {\n                dataObj.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n            }\n            this.setProperties(dataObj, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog.\n     *\n     * @returns {void}\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog.\n     *\n     * @returns {void}\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     *\n     * @returns {string} - string.\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     *\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /**\n     *\n     * Called internally if any of the property value changed.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var isRequireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression': {\n                    if (newProp.dataSourceSettings && ((!isNullOrUndefined(newProp.dataSourceSettings.dataSource) &&\n                        !isNullOrUndefined(this.clonedDataSet) && this.clonedDataSet !== newProp.dataSourceSettings.dataSource &&\n                        !isNullOrUndefined(newProp.dataSourceSettings.groupSettings) &&\n                        newProp.dataSourceSettings.groupSettings.length > 0) ||\n                        (Object.keys(newProp.dataSourceSettings).length === 1 && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource'\n                            && this.dataSourceSettings.groupSettings.length > 0))) {\n                        this.clonedDataSet = newProp.dataSourceSettings.dataSource;\n                        this.engineModule.groupingFields = {};\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    var changedProps = !isNullOrUndefined(newProp.dataSourceSettings) ? Object.keys(newProp.dataSourceSettings)\n                        : [];\n                    if (changedProps.indexOf('dataSource') > -1 && newProp.dataSourceSettings.type !== 'CSV') {\n                        if (!isNullOrUndefined(this.savedDataSourceSettings) && this.dataSourceSettings.dataSource.length > 0) {\n                            PivotUtil.updateDataSourceSettings(this, this.savedDataSourceSettings);\n                            this.savedDataSourceSettings = undefined;\n                        }\n                        if (newProp.dataSourceSettings.dataSource && newProp.dataSourceSettings.dataSource.length === 0) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                            this.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { filters: [] } }, true);\n                        }\n                        if (!this.isStaticRefresh) {\n                            this.pivotValues = [];\n                            if (this.dataType === 'pivot') {\n                                this.engineModule.fieldList = null;\n                                this.engineModule.isEmptyData = true;\n                                this.engineModule.data = [];\n                                this.engineModule.groupingFieldsInfo = {};\n                            }\n                            else if (this.dataType === 'olap') {\n                                this.olapEngineModule.fieldList = {};\n                                this.olapEngineModule.fieldListData = undefined;\n                                this.olapEngineModule.isEmptyData = true;\n                            }\n                        }\n                        this.showWaitingPopup();\n                        this.notify(events.initialLoad, {});\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns,\n                                        values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && ((this.dataType === 'pivot' && 'dataSource' in newProp.dataSourceSettings) ||\n                                    (this.dataType === 'olap' && 'url' in newProp.dataSourceSettings))) {\n                                    if (!this.isStaticRefresh) {\n                                        if (this.dataType === 'pivot') {\n                                            this.engineModule.fieldList = null;\n                                            this.engineModule.isEmptyData = true;\n                                            this.engineModule.data = [];\n                                            this.engineModule.groupingFieldsInfo = {};\n                                        }\n                                        else if (this.dataType === 'olap') {\n                                            this.olapEngineModule.fieldList = {};\n                                            this.olapEngineModule.fieldListData = undefined;\n                                            this.olapEngineModule.isEmptyData = true;\n                                        }\n                                        this.pivotValues = [];\n                                    }\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption': {\n                    if (newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroyEngine = true;\n                                this.pivotFieldListModule.destroy();\n                                if (select('#' + this.element.id + '_PivotFieldList', this.element) !== null) {\n                                    remove(select('#' + this.element.id + '_PivotFieldList', this.element));\n                                }\n                                this.pivotFieldListModule.destroyEngine = false;\n                            }\n                            /**\n                             * Below lines are affected the grouping bar render between table and chart.\n                             * In \"Init subcomponent\" function, grouping bar rendered properly for table and chart view.\n                             * So, The below lines are commanded out.\n                             */\n                            // if (this.showGroupingBar && this.groupingBarModule) {\n                            //     this.groupingBarModule.destroy();\n                            // }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        switch (newProp.displayOption.view) {\n                            case 'Both':\n                                if (!this.pivotChartModule) {\n                                    this.pivotChartModule = new PivotChart(this);\n                                }\n                                if (!this.grid) {\n                                    this.renderEmptyGrid();\n                                }\n                                break;\n                            case 'Chart':\n                                if (this.grid) {\n                                    this.grid.destroy();\n                                    this.grid = undefined;\n                                }\n                                if (!this.pivotChartModule) {\n                                    this.pivotChartModule = new PivotChart(this);\n                                }\n                                break;\n                            case 'Table':\n                                if (!this.grid) {\n                                    this.renderEmptyGrid();\n                                }\n                                if (this.pivotChartModule) {\n                                    this.destroyEngine = true;\n                                    this.pivotChartModule.destroy();\n                                    this.destroyEngine = false;\n                                    this.chart = undefined;\n                                    this.pivotChartModule = undefined;\n                                }\n                                break;\n                        }\n                    }\n                    else if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                    }\n                    if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n                        if (newProp.displayOption.view === 'Chart') {\n                            this.toolbarModule.createChartMenu();\n                            this.toggleButtonState(cls.TOOLBAR_GRID, 'add');\n                            this.toggleButtonState(cls.TOOLBAR_CHART, 'remove');\n                        }\n                        else if (newProp.displayOption.view === 'Table') {\n                            var gridElement = select('#' + this.element.id + '_grid', this.element);\n                            gridElement.style.display = 'block';\n                            this.toggleButtonState(cls.TOOLBAR_CHART, 'add');\n                            this.toggleButtonState(cls.TOOLBAR_GRID, 'remove');\n                        }\n                        else {\n                            this.toolbarModule.createChartMenu();\n                            this.toggleButtonState(cls.TOOLBAR_GRID, 'remove');\n                            this.toggleButtonState(cls.TOOLBAR_CHART, 'remove');\n                        }\n                    }\n                    var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(engine.fieldList) || !isNullOrUndefined(engine.pivotValues)) {\n                        this.notify(events.dataReady, {});\n                    }\n                    break;\n                }\n                case 'gridSettings':\n                    this.isTabular = this.gridSettings.layout === 'Tabular' ? true : false;\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    if (newProp.gridSettings.layout) {\n                        this.initialLoad();\n                    }\n                    break;\n                case 'chartSettings': {\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultipleAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                        if (this.pivotChartModule) {\n                            this.groupingBarModule.appendToElement();\n                        }\n                    }\n                    if (isNullOrUndefined(this.pivotChartModule) && this.displayOption.view !== 'Table') {\n                        this.pivotChartModule = new PivotChart(this);\n                    }\n                    var engineModule = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(this.pivotChartModule) && !isNullOrUndefined(engineModule.pivotValues)) {\n                        this.pivotChartModule.loadChart(this, this.chartSettings);\n                    }\n                    if (!isNullOrUndefined(engineModule.pivotValues) && !isNullOrUndefined(engineModule.fieldList)) {\n                        this.notify(events.uiUpdate, this);\n                    }\n                    break;\n                }\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet) {\n                        var dataSet = this.dataSourceSettings.type === 'CSV' ?\n                            PivotUtil.getClonedCSVData(this.clonedDataSet) :\n                            PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    _super.prototype.refresh.call(this);\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    else if (this.groupingBarModule) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    if (isNullOrUndefined(newProp.showFieldList)) {\n                        this.renderPivotGrid();\n                    }\n                    break;\n                case 'showFieldList':\n                    this.initialLoad();\n                    break;\n                case 'groupingBarSettings':\n                    if (this.showGroupingBar && this.groupingBarModule) {\n                        if (newProp.groupingBarSettings && Object.keys(newProp.groupingBarSettings).indexOf('showFieldsPanel') > -1) {\n                            this.groupingBarModule.RefreshFieldsPanel();\n                            this.layoutRefresh();\n                        }\n                        else {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    break;\n                case 'showValuesButton':\n                    if (this.showGroupingBar && this.groupingBarModule && this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ showValuesButton: newProp.showValuesButton }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'showToolbar':\n                case 'toolbar':\n                    if (this.toolbarModule && this.showToolbar) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar && this.groupingBarModule) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableFieldSearching':\n                    if (this.pivotFieldListModule) {\n                        this.pivotFieldListModule.enableFieldSearching = this.enableFieldSearching;\n                    }\n                    break;\n                case 'pageSettings':\n                    if (!this.enableVirtualization) {\n                        this.engineModule.pageSettings = this.pageSettings;\n                        if (this.engineModule.fieldList) {\n                            this.refreshPageData();\n                        }\n                        else {\n                            this.initialLoad();\n                        }\n                    }\n                    break;\n                case 'pagerSettings':\n                case 'enablePaging':\n                    this.notify(events.initPivotPager, this);\n                    this.initialLoad();\n                    break;\n                case 'cellTemplate':\n                    this.cellTemplateFn = this.templateParser(this.cellTemplate);\n                    isRequireRefresh = true;\n                    break;\n                case 'tooltipTemplate':\n                    this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n                    isRequireRefresh = true;\n                    break;\n                case 'allowCalculatedField':\n                    if (this.pivotFieldListModule) {\n                        this.pivotFieldListModule.allowCalculatedField = this.allowCalculatedField;\n                    }\n                    break;\n                case 'allowDeferLayoutUpdate':\n                    if (this.pivotFieldListModule) {\n                        this.pivotFieldListModule.allowDeferLayoutUpdate = this.allowDeferLayoutUpdate;\n                    }\n                    break;\n                case 'allowGrouping':\n                    this.refresh();\n                    break;\n            }\n        }\n        if (isRequireRefresh && this.grid) {\n            this.grid.refreshColumns();\n        }\n    };\n    PivotView.prototype.toggleButtonState = function (buttonClass, action) {\n        var button = this.element.querySelector('.' + buttonClass);\n        if (button) {\n            var closestDisabledElement = button.closest('.e-toolbar-item');\n            if (closestDisabledElement) {\n                if (action === 'add') {\n                    closestDisabledElement.classList.add(cls.MENU_DISABLE);\n                }\n                else if (action === 'remove') {\n                    closestDisabledElement.classList.remove(cls.MENU_DISABLE);\n                }\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     *\n     * @private\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n                else {\n                    return compile(template);\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     *\n     * @private\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        this.isEmptyGrid = false;\n        this.notEmpty = true;\n        this.clearTemplate();\n        if (this.showGroupingBar) {\n            if (this.pivotChartModule) {\n                this.appendChartElement();\n            }\n            this.groupingBarModule.appendToElement();\n        }\n        if (this.pivotChartModule) {\n            this.pivotChartModule.engineModule = this.engineModule;\n            this.pivotChartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart && document.body.getAttribute('dir') !== 'rtl') {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.enablePaging) {\n            this.notify(events.initPivotPager, this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = this.renderModule ? this.renderModule : new Render(this);\n            this.renderModule.render(true);\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        var isNumberFormattingApplied = this.actionObj.actionName === events.openNumberFormatting ||\n            this.actionObj.actionName === events.numberFormattingMenu;\n        var isConditionalFormattingApplied = this.actionObj.actionName === events.conditionalFormattingMenu ||\n            this.actionObj.actionName === events.openConditionalFormatting;\n        if ((this.showFieldList || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) &&\n            !(isNumberFormattingApplied || isConditionalFormattingApplied)) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber();\n                }\n                if (this.chartSettings.enableScrollOnMultiAxis && this.chartSettings.enableMultipleAxis) {\n                    this.element.querySelector('.' + cls.PIVOTCHART).style.width = formatUnit(this.getGridWidthAsNumber());\n                }\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultipleAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultipleAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', this.element)) {\n                if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1) {\n                    select('#' + this.element.id + '_PivotFieldList', this.element).style.display = 'none';\n                }\n                else {\n                    select('#' + this.element.id + '_PivotFieldList', this.element).style.top = this.element.querySelector('.' + cls.GRID_TOOLBAR).offsetHeight.toString() + 'px';\n                    select('#' + this.element.id + '_PivotFieldList', this.element).style.position = 'relative';\n                }\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * Appends the chart element to the DOM, based on the component's display options and settings.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.appendChartElement = function () {\n        if (!select('#' + this.element.id + '_chart', this.element)) {\n            if (this.displayOption.view === 'Both') {\n                if (this.displayOption.primary === 'Chart') {\n                    (this.element.insertBefore((createElement('div', {\n                        className: cls.PIVOTCHART, id: this.element.id + '_chart'\n                    })), this.element.querySelector('.' + cls.GRID_CLASS)));\n                }\n                else {\n                    (this.element.appendChild(createElement('div', {\n                        className: cls.PIVOTCHART, id: this.element.id + '_chart'\n                    })));\n                }\n            }\n            else {\n                this.element.appendChild(createElement('div', {\n                    className: cls.PIVOTCHART, id: this.element.id + '_chart'\n                }));\n            }\n            var width = this.width.toString();\n            if (this.showToolbar && this.grid) {\n                width = this.getGridWidthAsNumber().toString();\n            }\n            var height = this.pivotChartModule.getChartHeight();\n            var tmpChart = void 0;\n            if (this.chartSettings && this.chartSettings.chartSeries &&\n                this.pivotChartModule['accumulationType'].indexOf(this.chartSettings.chartSeries.type) > -1) {\n                tmpChart = new AccumulationChart({ width: width, height: height });\n            }\n            else {\n                tmpChart = new Chart({ width: width, height: height });\n            }\n            tmpChart.appendTo(select('#' + this.element.id + '_chart', this.element));\n            if (this.showToolbar) {\n                if (this.displayOption.view === 'Both' && this.currentView === 'Chart') {\n                    this.grid.element.style.display = 'none';\n                }\n                if (this.currentView !== 'Chart') {\n                    select('#' + this.element.id + '_chart', this.element).style.display = 'none';\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     *\n     * @function updateDataSource\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function () {\n        var _this_1 = this;\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = !isNullOrUndefined(pivot.lastSortInfo) && Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = !isNullOrUndefined(pivot.lastFilterInfo) && Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = !isNullOrUndefined(pivot.lastAggregationInfo) && Object.keys(pivot.lastAggregationInfo).length > 0 ?\n            true : false;\n        var isCalcChange = !isNullOrUndefined(pivot.lastCalcFieldInfo) && Object.keys(pivot.lastCalcFieldInfo).length > 0 ?\n            true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!((pivot.enableVirtualization || pivot.enablePaging) && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (isSorted && pivot.dataSourceSettings.valueSortSettings.headerText !== '') {\n                pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n            }\n            if (pivot.dataType === 'pivot' && (pivot.enableVirtualization || pivot.enablePaging) && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                if (isSorted) {\n                    if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                pivot.allowServerDataBinding = false;\n                pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                pivot.allowServerDataBinding = true;\n                if (pivot.dataSourceSettings.mode !== 'Server') {\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        enableVirtualization: _this_1.enableVirtualization\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        PivotUtil.renderOlapEngine(pivot, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType,\n                        clonedReport: pivot.clonedReport,\n                        globalize: pivot.globalize,\n                        currenyCode: pivot.currencyCode,\n                        enablePaging: _this_1.enablePaging,\n                        enableVirtualization: _this_1.enableVirtualization,\n                        allowDataCompression: _this_1.allowDataCompression,\n                        enableHtmlSanitizer: _this_1.enableHtmlSanitizer,\n                        enableOptimizedRendering: _this_1.enableVirtualization && _this_1.virtualscrollModule &&\n                            _this_1.virtualScrollSettings.allowSinglePage,\n                        isTabularLayout: _this_1.isTabular\n                    };\n                    if (pivot.dataSourceSettings.mode === 'Server') {\n                        if (isSorted) {\n                            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                        }\n                        else if (isAggChange) {\n                            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                        }\n                        else if (isCalcChange) {\n                            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                        }\n                        else if (isFiltered) {\n                            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                        }\n                        else {\n                            pivot.getEngine('onDrop', null, null, null, null, null, null);\n                        }\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.aggregateCellInfo ?\n                            pivot.getValueCellInfo.bind(pivot) : undefined, pivot.onHeadersSort ? pivot.getHeaderSortInfo.bind(pivot)\n                            : undefined);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                    pivot.lastSortInfo = {};\n                    pivot.lastAggregationInfo = {};\n                    pivot.lastCalcFieldInfo = {};\n                    pivot.lastFilterInfo = {};\n                }\n            }\n        });\n        //});\n    };\n    PivotView.prototype.refreshPageData = function () {\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.actionBeginMethod();\n        this.showWaitingPopup();\n        this.trigger(events.enginePopulating, args);\n        if (this.dataType === 'pivot') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.getEngine('onPageChange', null, null, null, null, null, null);\n            }\n            else {\n                this.engineModule.generateGridData(this.dataSourceSettings, true, false, this.engineModule.headerCollection);\n            }\n            this.setProperties({ pivotValues: this.engineModule.pivotValues }, true);\n            this.enginePopulatedEventMethod('updateDataSource');\n        }\n        this.actionObj.actionName = this.getActionCompleteName();\n        if (this.actionObj.actionName) {\n            this.actionCompleteMethod();\n        }\n    };\n    /**\n     * Export the Pivot table data to an Excel file (.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties for customizing the table, such as custom columns, data source, and theme.\n     * @param  {boolean} isMultipleExport - Specifies whether multiple exports are enabled.\n     * @param  {workbook} workbook - Defines the Workbook if multiple exports are enabled.\n     * @param  {boolean} isBlob - If set to true, the exported file will be returned as blob data.\n     * @returns {void}\n     */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.dataSourceSettings.mode === 'Server') {\n            this.getEngine('onExcelExport', null, null, null, null, null, null, null, null, excelExportProperties);\n        }\n        else {\n            if ((this.enableVirtualization || this.enablePaging || this.allowEngineExport || (this.allowConditionalFormatting\n                && this.dataSourceSettings.conditionalFormatSettings.length > 0))) {\n                this.excelExportModule.exportToExcel('Excel', excelExportProperties, isBlob);\n            }\n            else {\n                this.exportType = 'Excel';\n                this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n            }\n            this.actionObj.actionName = this.getActionCompleteName();\n            var actionInfo = {\n                exportInfo: { type: this.exportType, info: excelExportProperties }\n            };\n            this.actionObj.actionInfo = actionInfo;\n            if (this.actionObj.actionName) {\n                this.actionCompleteMethod();\n            }\n        }\n    };\n    /**\n     * Export the Pivot table data to a CSV file (.csv).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties for customizing the table, such as custom columns, data source, and theme.\n     * @param  {boolean} isMultipleExport - Specifies whether multiple exports are enabled.\n     * @param  {workbook} workbook - Defines the Workbook if multiple exports are enabled.\n     * @param  {boolean} isBlob - If set to true, the export will be returned as blob data.\n     * @returns {void}\n     */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.dataSourceSettings.mode === 'Server') {\n            this.getEngine('onCsvExport', null, null, null, null, null, null, null, null, excelExportProperties);\n        }\n        else {\n            if ((this.enableVirtualization || this.enablePaging || this.allowEngineExport || (this.allowConditionalFormatting\n                && this.dataSourceSettings.conditionalFormatSettings.length > 0))) {\n                this.excelExportModule.exportToExcel('CSV', excelExportProperties, isBlob);\n            }\n            else {\n                this.exportType = 'CSV';\n                this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n            }\n            this.actionObj.actionName = this.getActionCompleteName();\n            var actionInfo = {\n                exportInfo: { type: this.exportType, info: excelExportProperties }\n            };\n            this.actionObj.actionInfo = actionInfo;\n            if (this.actionObj.actionName) {\n                this.actionCompleteMethod();\n            }\n        }\n    };\n    /**\n     *\n     * Export pivot table data to PDF document.\n     *\n     * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Object} pdfDoc - Defined the PDF document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<Object>} - Returns the pivot table data to PDF document\n     */\n    PivotView.prototype.gridPdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var args = {\n            pdfExportProperties: pdfExportProperties, isMultipleExport: isMultipleExport, isBlob: isBlob, pdfDoc: pdfDoc, currentExportView: 'Table',\n            pdfMargins: {}\n        };\n        var pdfDocument = null;\n        this.trigger(events.beforeExport, args);\n        if (this.pdfExportModule) {\n            this.pdfExportModule.exportProperties = args;\n        }\n        if ((this.enableVirtualization || this.enablePaging || this.allowEngineExport || Object.keys(args.pdfMargins).length > 0)\n            || args.height || args.width || (this.allowConditionalFormatting &&\n            this.dataSourceSettings.conditionalFormatSettings.length > 0) && (this.dataSourceSettings.mode !== 'Server' ||\n            ((this.enableVirtualization || this.enablePaging) && this.dataSourceSettings.mode === 'Server' &&\n                (this.allowConditionalFormatting && this.dataSourceSettings.conditionalFormatSettings.length > 0)))) {\n            pdfDocument = this.pdfExportModule.exportToPDF(args.pdfExportProperties, args.isMultipleExport, args.pdfDoc, args.isBlob);\n        }\n        else {\n            pdfDocument = this.grid.pdfExport(args.pdfExportProperties, args.isMultipleExport, args.pdfDoc, args.isBlob);\n        }\n        this.actionObj.actionName = this.getActionCompleteName();\n        var actionInfo = {\n            exportInfo: { type: 'PDF', info: pdfExportProperties }\n        };\n        this.actionObj.actionInfo = actionInfo;\n        if (this.actionObj.actionName) {\n            this.actionCompleteMethod();\n        }\n        return pdfDocument;\n    };\n    /**\n     * Method allow to export the pivot chart as PDF and image formats like PNG, JPEG, and SVG.\n     *\n     * @param {ExportType} type - Defines the export type.\n     * @param {PdfExportProperties} pdfExportProperties - Allows to define the export properties for the chart.\n     * @param {boolean} isMultipleExport - Allows to export multiple tables and charts into a single PDF document.\n     * @param {Object} pdfDoc - Allows the export of an external PDF document along with current PDF document.\n     * @param {boolean} isBlob - Allows the PDF document to be saved as blob data.\n     * @returns {Promise<Object>} - Method returns the pivot chart as PDF and image formats like PNG, JPEG, and SVG.\n     */\n    PivotView.prototype.chartExport = function (type, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var args = {\n            pdfExportProperties: pdfExportProperties, isMultipleExport: isMultipleExport, isBlob: isBlob, pdfDoc: pdfDoc,\n            type: type, currentExportView: 'Chart', pdfMargins: {}\n        };\n        this.trigger(events.beforeExport, args);\n        this.chartExportModule.exportProperties = args;\n        var pdfDocument;\n        var fileName = args.fileName ? args.fileName : (!isNullOrUndefined(pdfExportProperties) &&\n            !isNullOrUndefined(pdfExportProperties.fileName)) ? pdfExportProperties.fileName : 'default';\n        if (type === 'PDF') {\n            pdfDocument = this.chartExportModule.pdfChartExport(args.pdfExportProperties, args.pdfDoc, args.isMultipleExport, args.isBlob);\n        }\n        else {\n            var orientation_1 = (args.orientation === 0 || args.orientation) ? args.orientation :\n                (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.pageOrientation)) ? (pdfExportProperties.pageOrientation === 'Landscape' ?\n                    PdfPageOrientation.Landscape : PdfPageOrientation.Portrait) : PdfPageOrientation.Landscape;\n            pdfDocument = this.chart.exportModule.export(args.type, fileName, orientation_1, null);\n        }\n        this.actionObj.actionName = this.getActionCompleteName();\n        var actionInfo = {\n            exportInfo: { type: type, info: fileName }\n        };\n        this.actionObj.actionInfo = actionInfo;\n        if (this.actionObj.actionName) {\n            this.actionCompleteMethod();\n        }\n        return pdfDocument;\n    };\n    /**\n     * Method allow to export both pivot table and pivot chart in a same PDF document.\n     *\n     * @param {PdfExportProperties} pdfExportProperties - Allows to define the export properties for the table and chart.\n     * @param {boolean} isMultipleExport - Allows to export multiple tables and charts into a single PDF document.\n     * @param {Object} pdfDoc - Allows the export of an external PDF document along with current PDF document.\n     * @param {boolean} isBlob - Allows the PDF document to be saved as blob data.\n     * @param {boolean} exportBothTableAndChart - When the `view` property inside the `displayOption` is set to **Both**, both table and chart data can be exported into a single PDF document.\n     * @returns {Promise<Object>} - Method returns the both pivot table and pivot chart in a same PDF document.\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob, exportBothTableAndChart) {\n        var _this_1 = this;\n        var pdfDocument = null;\n        return new Promise(function (resolve) {\n            if (exportBothTableAndChart && _this_1.displayOption.view === 'Both') {\n                if (_this_1.displayOption.primary === 'Chart') {\n                    var chartAndTableExportDocument = _this_1.chartExport('PDF', pdfExportProperties, true, pdfDoc, false);\n                    chartAndTableExportDocument.then(function (pdfData) {\n                        pdfDocument = _this_1.gridPdfExport(pdfExportProperties, isMultipleExport, pdfData, isBlob);\n                        resolve(pdfDocument);\n                    });\n                }\n                else {\n                    var tableAndChartExportDocument = _this_1.gridPdfExport(pdfExportProperties, true, pdfDoc, false);\n                    tableAndChartExportDocument.then(function (pdfData) {\n                        pdfDocument = _this_1.chartExport('PDF', pdfExportProperties, isMultipleExport, pdfData, isBlob);\n                        resolve(pdfDocument);\n                    });\n                }\n            }\n            else {\n                var tableExportDocumnt = _this_1.gridPdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n                resolve(tableExportDocumnt);\n            }\n        });\n    };\n    /**\n     * Print method for the chart.\n     *\n     * @returns {void}\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            var rowHeaderCell = target.closest('td.e-rowsheader');\n            axis = rowHeaderCell ? 'row' : 'column';\n            fieldName = axis === 'row' ? closest(target, 'td').getAttribute('fieldname') : closest(target, 'th').getAttribute('fieldname');\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var colIndex = axis === 'row' ? Number(closest(target, 'td').getAttribute('data-colindex')) : Number(closest(target, 'th').getAttribute('data-colindex'));\n            var rowIndex = axis === 'row' ? Number(closest(target, 'td').getAttribute('index')) : Number(closest(target, 'th').getAttribute('index'));\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[rowIndex][colIndex];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName],\n                                delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs = {\n                drillInfo: drilledItem_1,\n                pivotview: pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var args = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n                    };\n                    pivot_1.trigger(events.enginePopulating, args);\n                    pivot_1.setProperties({ dataSourceSettings: args.dataSourceSettings }, true);\n                    if (pivot_1.enableVirtualization || pivot_1.enablePaging) {\n                        if (_this_1.dataSourceSettings.mode === 'Server') {\n                            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings, true);\n                    }\n                    pivot_1.allowServerDataBinding = false;\n                    pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                    pivot_1.allowServerDataBinding = true;\n                    var eventArgs = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n                        pivotValues: _this_1.pivotValues\n                    };\n                    _this_1.trigger(events.enginePopulated, eventArgs);\n                    pivot_1.engineModule.pivotValues = eventArgs.pivotValues;\n                    var actionInfo = {\n                        drillInfo: drilledItem_1\n                    };\n                    _this_1.actionObj.actionInfo = actionInfo;\n                    pivot_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell;\n        if (chartDrillInfo) {\n            currentCell = chartDrillInfo.cell;\n        }\n        else {\n            var colIndex = axis === 'row' ? Number(closest(target, 'td').getAttribute('data-colindex'))\n                : Number(closest(target, 'th').getAttribute('data-colindex'));\n            var rowIndex = axis === 'row' ? Number(closest(target, 'td').getAttribute('index')) : Number(closest(target, 'th').getAttribute('index'));\n            currentCell = this.olapEngineModule.pivotValues[rowIndex][colIndex];\n        }\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: pivot,\n            cancel: false\n        };\n        var isAttributeHierarchy = this.olapEngineModule.fieldList[drillInfo.fieldName]\n            && this.olapEngineModule.fieldList[drillInfo.fieldName].isHierarchy;\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        var clonedMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        if (drillInfo && drillInfo.action === 'down') {\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, (this.olapEngineModule.fieldList[currentCell.hierarchy] &&\n                !this.olapEngineModule.fieldList[currentCell.hierarchy].hasAllMember) ? currentCell.valueSort.levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1 : fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillMembers = clonedMembers[i];\n                    var memberItem = drillSet;\n                    if (drillMembers.delimiter) {\n                        memberItem = memberItem.replace(/~~/g, drillMembers.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillMembers.items.length; itemPos++) {\n                        if (drillMembers.items[itemPos].indexOf(memberItem) !== 0) {\n                            items[items.length] = drillMembers.items[itemPos];\n                        }\n                    }\n                    drillMembers.items = items;\n                }\n            }\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _a = 0, clonedMembers_1 = clonedMembers; _a < clonedMembers_1.length; _a++) {\n                var field = clonedMembers_1[_a];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n                if (isAttributeHierarchy) {\n                    var i = 0;\n                    while (i < drillItem[0].items.length) {\n                        if (drillItem[0].items[i] === member) {\n                            drillItem[0].items.splice(i, 1);\n                        }\n                        else {\n                            ++i;\n                        }\n                    }\n                }\n            }\n            else if (!isAttributeHierarchy) {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!clonedMembers) {\n                    clonedMembers = [drilledMember];\n                }\n                else {\n                    clonedMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var args = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n                    };\n                    _this_1.trigger(events.enginePopulating, args);\n                    _this_1.setProperties({ dataSourceSettings: args.dataSourceSettings }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    _this_1.allowServerDataBinding = true;\n                    var eventArgs = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n                        pivotValues: pivot.olapEngineModule.pivotValues\n                    };\n                    _this_1.trigger(events.enginePopulated, eventArgs);\n                    _this_1.olapEngineModule.pivotValues = eventArgs.pivotValues;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var drillSet = drillSets[key];\n                var drillItemCollection = [];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillItem = clonedMembers[i];\n                    var member_1 = drillSet;\n                    if (drillItem.name === drillInfo.fieldName) {\n                        drillItemCollection.push(drillItem);\n                    }\n                    if (drillItem.delimiter) {\n                        member_1 = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    if (!isAttributeHierarchy) {\n                        var items = [];\n                        for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                            if (drillItem.items[itemPos].indexOf(member_1) !== 0) {\n                                items[items.length] = drillItem.items[itemPos];\n                            }\n                        }\n                        drillItem.items = items;\n                    }\n                }\n                if (isAttributeHierarchy) {\n                    if (drillItemCollection.length > 0) {\n                        if (drillItemCollection[0].delimiter) {\n                            member = member.replace(/~~/g, drillItemCollection[0].delimiter);\n                        }\n                        var index = PivotUtil.inArray(member, drillItemCollection[0].items);\n                        if (index === -1) {\n                            drillItemCollection[0].items.push(member);\n                        }\n                    }\n                    else {\n                        var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                        if (!clonedMembers) {\n                            clonedMembers = [drilledMember];\n                        }\n                        else {\n                            clonedMembers.push(drilledMember);\n                        }\n                    }\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, clonedMembers_2 = clonedMembers; _c < clonedMembers_2.length; _c++) {\n                var fields_1 = clonedMembers_2[_c];\n                if (fields_1.items.length > 0) {\n                    drilledMembers_1.push(fields_1);\n                }\n            }\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var args = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this_1.dataSourceSettings)\n                    };\n                    _this_1.trigger(events.enginePopulating, args);\n                    _this_1.setProperties({ dataSourceSettings: args.dataSourceSettings }, true);\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    _this_1.allowServerDataBinding = true;\n                    var eventArgs = {\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(args.dataSourceSettings),\n                        pivotValues: pivot.olapEngineModule.pivotValues\n                    };\n                    _this_1.trigger(events.enginePopulated, eventArgs);\n                    _this_1.olapEngineModule.pivotValues = eventArgs.pivotValues;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.onContentReady = function () {\n        var horiScrollHeight = getScrollBarWidth();\n        this.isPopupClicked = false;\n        var verOffset;\n        var vWidth;\n        if (this.showFieldList && this.pivotFieldListModule && this.dataSourceSettings.mode !== 'Server') {\n            this.pivotFieldListModule.element.style.display = 'block';\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            if ((this.dataSourceSettings.mode === 'Server' && this.isServerWaitingPopup) || this.dataSourceSettings.mode === 'Local') {\n                this.hideWaitingPopup();\n            }\n        }\n        else if (this.pivotValues.length > 0) {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        var mCnt = this.element.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV) ?\n            this.element.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV) : this.element.querySelector('.' + cls.CONTENT_CLASS);\n        var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n        var enableOptimizedRendering = this.virtualScrollSettings && this.virtualScrollSettings.allowSinglePage && this.dataType === 'pivot';\n        if (this.grid) {\n            var gridContentDiv = this.element.querySelector('.' + cls.GRID_CONTENT);\n            var isHorizontalOverFlow = mCnt.parentElement.offsetWidth < mCnt.querySelector('.' + cls.TABLE).offsetWidth;\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine && this.virtualscrollModule) {\n                if (enableOptimizedRendering && this.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)) {\n                    removeClass([mHdr, mCnt], ['e-virtual-pivot-content']);\n                    addClass([this.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)], [cls.PIVOT_HIDE_LOADER]);\n                    if (this.grid && this.grid.element.querySelector('.e-spinner-inner')) {\n                        removeClass([this.grid.element.querySelector('.e-spinner-inner')], [cls.PIVOT_HIDE_LOADER]);\n                    }\n                }\n                if (enableOptimizedRendering) {\n                    var loaderElement = this.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER);\n                    if (!loaderElement) {\n                        loaderElement = createElement('div', {\n                            className: cls.PIVOT_CONTENT_LOADER + ' ' + cls.PIVOT_HIDE_LOADER,\n                            innerHTML: this.localeObj.getConstant('loading')\n                        });\n                        if (this.grid.element && !this.element.querySelector('.' + cls.PIVOT_CONTENT_LOADER)) {\n                            this.grid.element.insertBefore(loaderElement, this.grid.element.firstElementChild);\n                        }\n                    }\n                    if (this.element.querySelector('.' + cls.HEADERCONTENT) && this.element.querySelector('.' + cls.GRID_CONTENT)) {\n                        var height = this.element.querySelector('.' + cls.GRID_CONTENT).offsetHeight + this.element.querySelector('.' + cls.HEADERCONTENT).offsetHeight;\n                        setStyleAttribute(loaderElement, { 'height': height + 'px', 'width': this.element.querySelector('.' + cls.HEADERCONTENT).offsetWidth + 'px', 'padding': Math.floor(height / 2) + 'px' });\n                    }\n                }\n                if (this.element.querySelector('.' + cls.CONTENT_CLASS) &&\n                    !this.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.CONTENT_CLASS).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var virtualScrollTableDiv = gridContentDiv.querySelector('.' + cls.VIRTUALTABLE_DIV);\n                if (gridContentDiv && !virtualScrollTableDiv) {\n                    this.virtualTableDiv = createElement('div', { className: cls.VIRTUALTABLE_DIV });\n                    gridContentDiv.appendChild(this.virtualTableDiv);\n                    virtualScrollTableDiv = gridContentDiv.querySelector('.' + cls.VIRTUALTABLE_DIV);\n                    this.virtualScrollDiv = createElement('div', { className: cls.VIRTUALSCROLL_DIV });\n                    virtualScrollTableDiv.appendChild(this.virtualScrollDiv);\n                    setStyleAttribute(virtualScrollTableDiv, {\n                        minHeight: horiScrollHeight + 'px',\n                        maxHeight: horiScrollHeight + 'px',\n                        overflowX: 'scroll'\n                    });\n                    setStyleAttribute(this.virtualScrollDiv, {\n                        height: '0.1px'\n                    });\n                    var newContentVirtualDiv = createElement('div', {\n                        className: cls.CONTENT_VIRTUALTABLE_DIV\n                    });\n                    (newContentVirtualDiv).append.apply((newContentVirtualDiv), Array.prototype.slice.call(mCnt.childNodes));\n                    mCnt.appendChild(newContentVirtualDiv);\n                    newContentVirtualDiv.scrollLeft = 0;\n                }\n                var movableTable = this.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('.' + cls.TABLE);\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                vWidth = this.gridSettings.columnWidth * engine.columnCount;\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                if (this.isAdaptive) {\n                    mCnt.style.minHeight = '1px';\n                    mCnt.style.minHeight = '1px';\n                }\n                var ele = this.isAdaptive ? mCnt : (gridContentDiv.querySelector('.' + cls.VIRTUALTABLE_DIV) ?\n                    gridContentDiv.querySelector('.' + cls.VIRTUALTABLE_DIV) : mCnt);\n                verOffset = (mCnt.parentElement.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    (enableOptimizedRendering ? mCnt.parentElement.scrollTop :\n                        -(((mCnt.parentElement.scrollTop * this.verticalScrollScale) -\n                            this.scrollPosObject.verticalSection - mCnt.parentElement.scrollTop))) + 'px)';\n                if (Number(verOffset.split('px')[0]) > this.virtualDiv.clientHeight) {\n                    verOffset = this.virtualDiv.clientHeight + 'px)';\n                }\n                var eleScrollLeft = Math.abs(ele.scrollLeft);\n                var horiOffset = (eleScrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + ((this.enableRtl ? 1 : -1) * ((eleScrollLeft * this.horizontalScrollScale)\n                        - this.scrollPosObject.horizontalSection - eleScrollLeft)) + 'px,';\n                setStyleAttribute(mCnt.querySelector('.' + cls.TABLE), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n                if ((!isHorizontalOverFlow && gridContentDiv && virtualScrollTableDiv) || this.isAdaptive) {\n                    virtualScrollTableDiv.style.display = 'none';\n                }\n                else {\n                    virtualScrollTableDiv.style.display = 'block';\n                }\n                var translateValue = Number(-mCnt.querySelector('.' + cls.TABLE).style.transform.split('(')[1].split(',')[0].split('px')[0]);\n                this.virtualscrollModule.alignFreezedCells(translateValue, true);\n                if (isHorizontalOverFlow) {\n                    var newScrollWidth = 0;\n                    if (this.pivotColumns.length < 25) {\n                        newScrollWidth = (vWidth + mCnt.querySelector('.' + cls.TABLE).querySelector('.' + cls.FREEZED_CELL)\n                            .offsetWidth + (gridContentDiv.offsetWidth - gridContentDiv.clientWidth));\n                    }\n                    else {\n                        newScrollWidth = (vWidth + (gridContentDiv.offsetWidth - gridContentDiv.clientWidth));\n                    }\n                    if (this.grid.height !== 'auto') {\n                        this.grid.element.querySelector('.' + cls.VIRTUALSCROLL_DIV).style.width = newScrollWidth + horiScrollHeight + 'px';\n                    }\n                    else {\n                        this.grid.element.querySelector('.' + cls.VIRTUALSCROLL_DIV).style.width = newScrollWidth + 'px';\n                    }\n                }\n                if (this.grid.element.querySelector('.' + cls.CONTENT_VIRTUALTABLE_DIV)) {\n                    if (mCnt.parentElement.scrollHeight === mCnt.scrollHeight) {\n                        mCnt.style.overflowY = '';\n                    }\n                }\n                var colValues = this.dataType === 'pivot' ? (this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1) : 1;\n                var exactSize = (this.pageSettings.columnPageSize * colValues * this.gridSettings.columnWidth);\n                var hScrollPos = (ele.scrollWidth - (Math.abs(eleScrollLeft) + ele.offsetWidth));\n                if (this.virtualscrollModule && exactSize > 0 && hScrollPos <= exactSize && (eleScrollLeft > 0)) {\n                    var mCntScrollPos = (mCnt.scrollWidth - (Math.abs(mCnt.scrollLeft) + mCnt.parentElement.offsetWidth));\n                    var vertiTop = undefined;\n                    if (mCntScrollPos < 1 && this.scrollDirection === 'horizondal') {\n                        if (mCnt.parentElement.scrollTop > 0) {\n                            vertiTop = mCnt.parentElement.scrollTop;\n                        }\n                        this.virtualDiv.style.display = 'none';\n                        mCntScrollPos = (mCnt.scrollWidth - (Math.abs(mCnt.scrollLeft) + mCnt.parentElement.offsetWidth));\n                    }\n                    this.virtualDiv.style.display = '';\n                    if (vertiTop) {\n                        mCnt.parentElement.scrollTop = vertiTop;\n                    }\n                    var mCntVScrollPos = (mCnt.scrollWidth - (Math.abs(mCnt.scrollLeft) + mCnt.parentElement.offsetWidth));\n                    if (mCntScrollPos > 1) {\n                        this.scrollPosObject.horizontalSection -= (hScrollPos <= 0 ? (mCntScrollPos > hScrollPos ? mCntScrollPos\n                            : -mCntVScrollPos) : (mCntVScrollPos === mCntScrollPos ? (mCntScrollPos - hScrollPos) :\n                            (mCntScrollPos < mCntVScrollPos && (hScrollPos === mCntVScrollPos || hScrollPos > mCntScrollPos) ?\n                                -(mCntVScrollPos - mCntScrollPos) : 0)));\n                        if (this.grid.height !== 'auto') {\n                            this.scrollPosObject.horizontalSection -= horiScrollHeight;\n                        }\n                        this.scrollPosObject.horizontalSection = (this.scrollPosObject.horizontalSection >=\n                            -(this.element.querySelector('.' + cls.GRID_CLASS)\n                                .querySelector('.' + cls.HEADERCELL + '.' + cls.FREEZED_CELL).offsetWidth)) ?\n                            this.scrollPosObject.horizontalSection :\n                            -(this.element.querySelector('.' + cls.GRID_CLASS)\n                                .querySelector('.' + cls.HEADERCELL + '.' + cls.FREEZED_CELL).offsetWidth);\n                    }\n                    horiOffset = (eleScrollLeft > this.scrollerBrowserLimit) ?\n                        (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                        'translate(' + ((this.enableRtl ? 1 : -1) * ((eleScrollLeft * this.horizontalScrollScale)\n                            - this.scrollPosObject.horizontalSection - eleScrollLeft)) + 'px,';\n                    setStyleAttribute(mCnt.querySelector('.' + cls.TABLE), {\n                        transform: horiOffset + verOffset\n                    });\n                    setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                        transform: horiOffset + 0 + 'px)'\n                    });\n                    translateValue = Number(-mCnt.querySelector('.' + cls.TABLE).style.transform.split('(')[1].split(',')[0].split('px')[0]);\n                    this.virtualscrollModule.alignFreezedCells(translateValue, true);\n                }\n            }\n            if (this.currentView !== 'Chart') {\n                this.grid.hideScroll();\n            }\n            if (this.showGroupingBar) {\n                if (this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n                if (this.actionObj.fieldInfo && this.actionObj.fieldInfo.fieldName) {\n                    var pivotButton = this.pivotButtonModule.parentElement.querySelector(\"[data-uid=\\\"\" + this.actionObj.fieldInfo.fieldName + \"\\\"]\");\n                    if (!isNullOrUndefined(pivotButton)) {\n                        pivotButton.focus();\n                    }\n                }\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (!this.isEmptyGrid) {\n            this.trigger(events.dataBound);\n        }\n        this.actionObj.actionName = this.getActionCompleteName();\n        if (this.actionObj.actionName) {\n            if (this.actionObj.actionName === events.fieldFiltered && this.pivotCommon && this.pivotCommon.filterDialog) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.pivotCommon.filterDialog.setFocus.bind(this.pivotCommon.filterDialog));\n            }\n            if (this.actionObj.actionName !== events.windowResize) {\n                this.actionCompleteMethod();\n            }\n        }\n        if (this.groupingModule) {\n            this.groupingModule.isUpdate = false;\n        }\n        if (this.engineModule) {\n            this.engineModule.clearProperties();\n        }\n        if (this.virtualscrollModule && this.grid) {\n            this.virtualscrollModule.onHorizondalScroll(mHdr, mCnt);\n        }\n        if (!this.isAdaptive && this.enableVirtualization && mCnt && this.virtualscrollModule && !enableOptimizedRendering) {\n            var movableVirtualScrollBar = mCnt.parentElement.parentElement.querySelector('.e-movablescrolldiv');\n            if (vWidth < (mCnt.parentElement.clientWidth * 3)) {\n                mCnt.style.overflowX = 'visible';\n                movableVirtualScrollBar.style.display = 'none';\n                mHdr.scrollLeft = mCnt.parentElement.scrollLeft;\n                setStyleAttribute(mCnt.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(0px,' + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.' + cls.TABLE), {\n                    transform: 'translate(0px, 0px)'\n                });\n                this.virtualscrollModule.alignFreezedCells(0, true);\n            }\n            else {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_CONTENT).querySelector('.' + cls.CONTENT_CLASS), 'scroll', this.headerScrollUpdate);\n                var contentLeft = this.element.querySelector('.' + cls.GRID_CONTENT).querySelector('.' + cls.CONTENT_CLASS).scrollLeft;\n                mCnt.style.overflowX = 'auto';\n                movableVirtualScrollBar.style.display = 'block';\n                if (contentLeft !== 0) {\n                    movableVirtualScrollBar.scrollLeft = contentLeft;\n                }\n                if ((movableVirtualScrollBar.scrollLeft !== mCnt.scrollLeft) && (mCnt.scrollLeft !== 0)) {\n                    movableVirtualScrollBar.scrollLeft = mCnt.scrollLeft;\n                }\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var _this_1 = this;\n        var colIndex = Number(args.target.getAttribute('data-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.dataSourceSettings.values.length > 0 && this.pivotValues &&\n            this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            var measureName = cell.actualText;\n            if (!isNullOrUndefined(measureName) && this.olapEngineModule.fieldList &&\n                !this.olapEngineModule.fieldList[measureName]) {\n                var tupleInfo = this.olapEngineModule.tupRowInfo;\n                measureName = cell.rowOrdinal > -1 && tupleInfo.length > 0 && tupleInfo[cell.rowOrdinal] &&\n                    !isNullOrUndefined(tupleInfo[cell.rowOrdinal].measureName) ? tupleInfo[cell.rowOrdinal].measureName : measureName;\n            }\n            if (this.olapEngineModule.fieldList && this.olapEngineModule.fieldList[measureName]) {\n                var field = this.olapEngineModule.fieldList[measureName];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[measureName] &&\n                    this.olapEngineModule.dataFields[measureName].caption) ?\n                    this.olapEngineModule.dataFields[measureName].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                if ((aggregateType !== 'DistinctCount') && (field.type !== 'number' || field.type === 'include' ||\n                    field.type === 'exclude')) {\n                    aggregateType = 'Count';\n                }\n                else {\n                    aggregateType = (aggregateType === undefined) ? 'Sum' : field.aggregateType;\n                }\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var columnIndex = (this.isTabular && this.engineModule.rowMaxLevel > 0) ? this.engineModule.rowMaxLevel : 0;\n            var rowHeaders = this.getRowText(rowIndex, columnIndex);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = (cell.formattedText === '' ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields\n                };\n                if (typeof (this.tooltipTemplate) === 'function' && this.isReact) {\n                    var tooltipContent_1 = document.createElement('div');\n                    this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate', null, null, tooltipContent_1);\n                    this.renderReactTemplates(function () {\n                        if (_this_1.enableHtmlSanitizer) {\n                            _this_1.tooltip.content = SanitizeHtmlHelper.sanitize(tooltipContent_1.outerHTML);\n                        }\n                        else {\n                            _this_1.tooltip.content = tooltipContent_1.outerHTML;\n                        }\n                    });\n                }\n                else {\n                    var element = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n                    if (this.enableHtmlSanitizer) {\n                        this.tooltip.content = SanitizeHtmlHelper.sanitize(element);\n                    }\n                    else {\n                        this.tooltip.content = element;\n                    }\n                }\n            }\n            else {\n                var contentTemp_1 = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n                var contentFunc = function () {\n                    return contentTemp_1;\n                };\n                this.tooltip.content = initializeCSPTemplate(contentFunc);\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && this.dataSourceSettings.rows.length > 0 && this.dataSourceSettings.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((this.dataSourceSettings.rows[i].caption) ? this.dataSourceSettings.rows[i].caption : this.dataSourceSettings.rows[i].name);\n            }\n        }\n        else {\n            if (this.dataSourceSettings.columns.length > 0) {\n                var pos = this.dataSourceSettings.values.length === 0 ? 0 :\n                    Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len =\n                    this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = this.dataSourceSettings.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && this.dataSourceSettings.columns.length > 0 &&\n                this.dataSourceSettings.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((this.dataSourceSettings.columns[j].caption) ? this.dataSourceSettings.columns[j].caption : this.dataSourceSettings.columns[j].name);\n            }\n        }\n        return fields;\n    };\n    PivotView.prototype.getLevel = function (cell) {\n        var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n        var memberPos = cell.actualText ?\n            cell.actualText.toString().split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n        var levelPosition = levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n            (memberPos ? memberPos - 1 : memberPos);\n        return levelPosition ? (levelPosition - 1) : 0;\n    };\n    /**\n     * It used to get row text\n     *\n     * @param {number} rowIndex - Specifies row Index.\n     * @param {number} colIndex - Specifies column Index.\n     * @returns {string} - Returns row text.\n     * @hidden\n     */\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var rowText = '';\n        if (cell) {\n            var level = this.getLevel(cell);\n            rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n            if (this.dataSourceSettings.valueAxis === 'row') {\n                rowText = (this.dataSourceSettings.rows.length === 0 && this.dataSourceSettings.values.length > 1) ? this.pivotValues[rowIndex][0].valueSort.levelName.toString().slice((this.localeObj.getConstant('grandTotal')\n                    + this.dataSourceSettings.valueSortSettings.headerDelimiter).length).toString()\n                    : this.dataSourceSettings.values.length === 1 ? !isNullOrUndefined(this.dataSourceSettings.values[0].caption)\n                        ? this.dataSourceSettings.values[0].caption : this.dataSourceSettings.values[0].name\n                        : this.pivotValues[rowIndex][0].valueSort.levelName.toString();\n                rowText = rowText.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n            }\n            else {\n                if (this.isTabular) {\n                    cell = this.pivotValues[rowIndex][colIndex];\n                    rowText = cell.valueSort.levelName.toString();\n                }\n                else {\n                    while (level > 0 || cell.index === undefined) {\n                        rowIndex--;\n                        cell = this.pivotValues[rowIndex][colIndex];\n                        if (cell.index !== undefined) {\n                            if (level > cell.level) {\n                                rowText = rowText + this.dataSourceSettings.valueSortSettings.headerDelimiter + cell.formattedText;\n                                level = level - 1;\n                            }\n                        }\n                    }\n                }\n            }\n            rowText = this.isTabular ? rowText.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ') :\n                rowText.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).reverse().join(' - ');\n        }\n        return rowText;\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' '));\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        var _this_1 = this;\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele_1 = e.target;\n                var axis = (ele_1.parentElement.classList.contains(cls.ROWSHEADER) || ele_1.classList.contains(cls.ROWSHEADER)) ? 'row' : 'column';\n                ele_1 = axis === 'column' ? closest(ele_1, 'th') : closest(ele_1, 'td');\n                if (ele_1) {\n                    var colIndex = Number(ele_1.getAttribute('data-colindex'));\n                    var rowIndex = Number(ele_1.getAttribute('index'));\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: this.pivotValues[rowIndex][colIndex]\n                    };\n                    this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            _this_1.grid.clearSelection();\n                            var parentElement = _this_1.parentAt(ele_1, 'TH');\n                            if (_this_1.lastSelectedElement && _this_1.lastSelectedElement !== parentElement &&\n                                parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                                _this_1.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                                _this_1.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                                _this_1.lastSelectedElement = parentElement;\n                            }\n                            else {\n                                _this_1.lastSelectedElement = parentElement;\n                                if (!(parentElement.classList.contains(cls.HEADERCELL) &&\n                                    parentElement.classList.contains(cls.FREEZED_CELL))) {\n                                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                                }\n                            }\n                            _this_1.renderModule.selected();\n                        }\n                    });\n                }\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function () {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if (closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            return;\n        }\n        var ele = null;\n        var rowHeaderCell = target.closest('td.e-rowsheader');\n        var axis = rowHeaderCell ? 'row' : 'column';\n        ele = axis === 'column' ? closest(target, 'th') : closest(target, 'td');\n        if (axis === 'column' && !ele && this.gridSettings.selectionSettings.mode !== 'Row') {\n            ele = closest(target, 'td');\n        }\n        if (!target.classList.contains(cls.COLLAPSE) && !target.classList.contains(cls.EXPAND) && this.enableValueSorting && !target.classList.contains(cls.RESIZED) && !(target.classList.contains(cls.RHANDLER) && target.classList.contains(cls.RCURSOR)) && !(this.dataType === 'olap' && this.enableVirtualization)) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            this.cellClicked(target, ele, e);\n            try {\n                if (ele && ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains(cls.HEADERCONTENT) &&\n                    this.dataSourceSettings.valueAxis === 'column' && !ele.classList.contains(cls.FREEZED_CELL)) ||\n                    (ele.parentElement.classList.contains('e-row') && this.dataSourceSettings.valueAxis === 'row') &&\n                        (ele.classList.contains('e-rowsheader') || ele.classList.contains('e-stot')))) {\n                    var FieldName = ele.getAttribute('fieldname');\n                    var fieldInfo = PivotUtil.getFieldInfo(FieldName, this);\n                    this.actionObj.actionName = events.sortValue;\n                    this.actionObj.fieldInfo = fieldInfo.fieldItem;\n                    if (this.actionBeginMethod()) {\n                        return;\n                    }\n                    var colIndex = Number(ele.getAttribute('data-colindex'));\n                    var rowIndex = Number(ele.getAttribute('index'));\n                    if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                        var header = this.pivotValues[rowIndex][colIndex];\n                        if (this.dataSourceSettings.valueIndex === -1) {\n                            rowIndex = header.type === 'value' || header.memberType === 3 ? rowIndex : (rowIndex + 1);\n                        }\n                        else {\n                            var level = this.getLevel(header);\n                            rowIndex = (level <= engine.measureIndex && header.members && header.members.length > 0) ?\n                                header.members[0].rowIndex : rowIndex;\n                        }\n                    }\n                    else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                        colIndex = (Number(ele.getAttribute('data-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                        rowIndex = engine.headerContent.length - 1;\n                    }\n                    this.setProperties({\n                        dataSourceSettings: {\n                            valueSortSettings: {\n                                columnIndex: (Number(ele.getAttribute('data-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1),\n                                sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ?\n                                    'Ascending' : 'Descending',\n                                headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                                headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                    this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                            }\n                        }\n                    }, true);\n                    this.showWaitingPopup();\n                    var pivot = this;\n                    engine.enableValueSorting = true;\n                    if (pivot.enableVirtualization || pivot.enablePaging) {\n                        if (pivot.dataSourceSettings.enableSorting) {\n                            for (var _i = 0, _a = Object.keys(pivot.engineModule.fieldList); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                pivot.engineModule.fieldList[key].sort = 'Ascending';\n                            }\n                            pivot.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                        }\n                        if (pivot.dataSourceSettings.mode === 'Server') {\n                            pivot.getEngine('onValueSort', null, null, null, null, null, null);\n                        }\n                        else {\n                            pivot.engineModule.rMembers = pivot.engineModule.headerCollection.rowHeaders;\n                            pivot.engineModule.cMembers = pivot.engineModule.headerCollection.columnHeaders;\n                            pivot.engineModule.applyValueSorting();\n                            pivot.engineModule.updateEngine();\n                        }\n                    }\n                    else if (pivot.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onValueSort', null, null, null, null, null, null);\n                    }\n                    else if (this.dataType === 'olap') {\n                        pivot.olapEngineModule.onSort(pivot.dataSourceSettings, true);\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, true);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: engine.pivotValues }, true);\n                    pivot.allowServerDataBinding = true;\n                    var actionInfo = {\n                        valueSortInfo: engine.valueSortSettings\n                    };\n                    this.actionObj.actionInfo = actionInfo;\n                    pivot.renderPivotGrid();\n                }\n            }\n            catch (execption) {\n                this.actionFailureMethod(execption);\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            var drillFieldName = target.parentElement.getAttribute('fieldname');\n            var fieldInfo = PivotUtil.getFieldInfo(drillFieldName, this);\n            var actionName = target.classList.contains(cls.COLLAPSE) ? this.actionObj.actionName = events.drillUp : target.classList.contains(cls.EXPAND) ? this.actionObj.actionName = events.drillDown : '';\n            this.actionObj.actionName = actionName;\n            this.actionObj.fieldInfo = fieldInfo.fieldItem;\n            if (this.actionBeginMethod()) {\n                return;\n            }\n            try {\n                this.onDrill(target);\n            }\n            catch (execption) {\n                this.actionFailureMethod(execption);\n            }\n        }\n        else {\n            this.cellClicked(target, ele, e);\n            return;\n        }\n    };\n    PivotView.prototype.updateTotColWidth = function () {\n        this.totColWidth = 0;\n        for (var _i = 0, _a = this.pivotColumns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            this.totColWidth = this.totColWidth + column.width;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                var levelName = column.field === '0.formattedText' ? '' : ((column.customAttributes &&\n                    column.customAttributes.cell && column.customAttributes.cell.valueSort) ?\n                    column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width,\n                    autoFit: column.autoFit\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if ((!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) || this.renderModule.isAutoFitEnabled) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else if (this.renderModule.isAutoFitEnabled) {\n                    column.autoFit = this.pivotColumns[this.posCount].autoFit;\n                    this.posCount++;\n                }\n                else {\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    column.autoFit = this.pivotColumns[this.posCount].autoFit;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (!column.autoFit) {\n                        if (column.width !== 'auto') {\n                            column.width = calcWidth;\n                        }\n                        else {\n                            column.minWidth = calcWidth;\n                        }\n                    }\n                    else {\n                        this.renderModule.isAutoFitEnabled = true;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            column.clipMode = this.gridSettings.clipMode;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings,\n            stackedColumns: this.getStackedColumns(gridcolumns, [])\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        this.updateTotColWidth();\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString(), 10);\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (this.isTabular) {\n                if (column.index > this.engineModule.rowMaxLevel) {\n                    if (column.columns) {\n                        this.setCommonColumnsWidth(column.columns, width);\n                    }\n                    else {\n                        this.setColumnWidth(column, width);\n                    }\n                }\n                else {\n                    column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n                }\n            }\n            else {\n                if (column.field !== '0.formattedText') {\n                    if (column.columns) {\n                        this.setCommonColumnsWidth(column.columns, width);\n                    }\n                    else {\n                        this.setColumnWidth(column, width);\n                    }\n                }\n                else {\n                    column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        var displayMode;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                if (this.isAngular && this.element && this.element.style) {\n                    displayMode = window.getComputedStyle(this.element).display;\n                    this.element.style.display = 'block';\n                }\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n                if (this.isAngular && this.element && this.element.style) {\n                    this.element.style.display = displayMode;\n                }\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if ((height < this.minHeight) || (this.height === 'auto')) {\n            height = this.minHeight;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        this.actionObj.actionName = events.windowResize;\n        if (this.actionBeginMethod()) {\n            return;\n        }\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        this.actionObj.actionName = this.getActionCompleteName();\n        if (this.actionObj.actionName) {\n            this.actionCompleteMethod();\n        }\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called.\n     *\n     * @returns {void}\n     */\n    PivotView.prototype.refresh = function () {\n        this.pivotRefresh();\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule && this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.calculateColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                if (this.gridSettings.allowAutoResizing) {\n                    this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                }\n                this.triggerColumnRenderEvent(this.grid.columns);\n                this.grid.refreshColumns();\n                if (this.renderModule.isAutoFitEnabled) {\n                    this.renderModule.addPivotAutoFitClass();\n                }\n                else {\n                    this.renderModule.removePivotAutoFitClass();\n                }\n                var e = this.element.querySelector('.' + cls.GRID_CLASS);\n                e.querySelector('colGroup').innerHTML = this.grid.getHeaderContent().querySelector('colgroup').innerHTML;\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n                if (this.chart && this.pivotChartModule) {\n                    this.chart.height = this.pivotChartModule.getResizedChartHeight();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? this.getGridWidthAsNumber() : this.getWidthAsNumber();\n            }\n            if (this.enablePaging) {\n                this.notify(events.initPivotPager, this);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    (this.displayOption.view === 'Both' && this.grid) ? this.getGridWidthAsNumber().toString() : this.getWidthAsNumber().toString();\n                this.chart.height = this.pivotChartModule.getResizedChartHeight();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.cellClicked = function (target, ele, e) {\n        var _this_1 = this;\n        if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        if (ele && !isNullOrUndefined(this.pivotValues) && this.pivotValues.length > 0) {\n            var colIndex_1 = Number(ele.getAttribute('data-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        if (!observedArgs.cancel) {\n                            _this_1.clearSelection(ele, e);\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === 'Multiple' ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n        else {\n            this.clearSelection(null, e);\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both'\n            || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR)\n                && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode === 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele && ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele && ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_2 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_2], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule['showPopup'](e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('data-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('data-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return parseInt(a, 10) - parseInt(b, 10);\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[data-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : '') + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains(cls.HEADERCELL) ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('data-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('data-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[data-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[data-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.isInitial = true;\n        this.renderModule = this.renderModule ? this.renderModule : new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.' + cls.GRID_CLASS)) {\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            this.grid.showSpinner = function () {\n                // show spinner method called\n            };\n            this.grid.hideSpinner = function () {\n                // hide spinner method called\n            };\n            var element = createElement('div', { id: this.element.id + '_grid' });\n            this.element.appendChild(element);\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo(element);\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.element.querySelector('.e-spin-hide')) {\n            this.showWaitingPopup();\n        }\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource)\n                ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) === '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType,\n                clonedReport: _this_1.clonedReport,\n                globalize: _this_1.globalize,\n                currenyCode: _this_1.currencyCode,\n                enablePaging: _this_1.enablePaging,\n                enableVirtualization: _this_1.enableVirtualization,\n                allowDataCompression: _this_1.allowDataCompression,\n                enableHtmlSanitizer: _this_1.enableHtmlSanitizer,\n                enableOptimizedRendering: _this_1.enableVirtualization && _this_1.virtualScrollSettings &&\n                    _this_1.virtualScrollSettings.allowSinglePage,\n                isTabularLayout: _this_1.isTabular\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : _this_1.dataSourceSettings.type === 'CSV' ? PivotUtil.getClonedCSVData(dataSet)\n                        : PivotUtil.getClonedData(dataSet));\n                    var dataSourceSettings = JSON.parse(_this_1.getPersistData()).dataSourceSettings;\n                    dataSourceSettings.dataSource = [];\n                    _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : dataSourceSettings;\n                }\n                if (_this_1.dataSourceSettings.mode !== 'Server') {\n                    _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.aggregateCellInfo\n                        ? _this_1.getValueCellInfo.bind(_this_1) : undefined, _this_1.onHeadersSort ? _this_1.getHeaderSortInfo.bind(_this_1) : undefined);\n                }\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                PivotUtil.renderOlapEngine(_this_1, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.setProperties(this$_1.engineModule.pivotValues = observedArgs.pivotValues, true);\n                    this$_1.setProperties(this$_1.pivotValues = this$_1.engineModule.pivotValues, true);\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_2 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_2.dataSourceSettings,\n                pivotValues: pivot_2.pivotValues\n            };\n            pivot_2.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                pivot_2.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_2.dataType === 'olap') {\n                    pivot_2.olapEngineModule.pivotValues = observedArgs.pivotValues;\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.olapEngineModule.pivotValues }, true);\n                    pivot_2.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_2.engineModule.pivotValues = observedArgs.pivotValues;\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    pivot_2.allowServerDataBinding = true;\n                }\n                if (pivot_2.pivotCommon) {\n                    pivot_2.pivotCommon.engineModule = pivot_2.dataType === 'olap' ? pivot_2.olapEngineModule : pivot_2.engineModule;\n                    pivot_2.pivotCommon.dataSourceSettings = pivot_2.dataSourceSettings;\n                }\n                pivot_2.renderPivotGrid();\n            });\n        }\n    };\n    PivotView.prototype.generateData = function () {\n        if (!this.isStaticRefresh) {\n            if (this.displayOption.view === 'Chart' || !isNullOrUndefined(this.grid)) {\n                this.showWaitingPopup();\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n            }\n            else {\n                this.renderEmptyGrid();\n                this.showWaitingPopup();\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this;\n        if (!pivot.isStaticRefresh) {\n            if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                        if (!this.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        this.engineModule.data = pivot.remoteData;\n                        this.initEngine();\n                    }\n                    else if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length === 0) {\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(pivot.getData.bind(pivot), 100);\n                    }\n                    else {\n                        pivot.initEngine();\n                    }\n                }\n                else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                    (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0\n                        || (this.engineModule.data && this.engineModule.data.length > 0))) {\n                    if (pivot.dataType === 'pivot') {\n                        this.hideWaitingPopup();\n                        pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (this.dataSourceSettings.mode === 'Server') {\n                        this.getEngine('onRefresh');\n                    }\n                    else {\n                        this.notify(events.dataReady, {});\n                        this.hideWaitingPopup();\n                    }\n                }\n            }\n            else {\n                this.notify(events.dataReady, {});\n                this.hideWaitingPopup();\n            }\n        }\n        else {\n            pivot.isStaticRefresh = false;\n            pivot.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     *\n     * @param {HeadersSortEventArgs} sortingObj - args.\n     * @returns {HeadersSortEventArgs}\n     * @hidden\n     */\n    PivotView.prototype.getHeaderSortInfo = function (sortingObj) {\n        var args = sortingObj;\n        this.trigger(events.onHeadersSort, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     *\n     * @param {Object} args - args.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (this.dataSourceSettings.dataSource.defaultQuery) {\n            this.dataSourceSettings.dataSource.executeQuery(this.dataSourceSettings.dataSource\n                .defaultQuery).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        pivot.engineModule.data = e.result;\n        if (this.isEmptyGrid && !isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length === 0) {\n            this.hideWaitingPopup();\n        }\n        else if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            this.isEmptyGrid = false;\n            pivot.initEngine();\n        }\n        else {\n            this.isEmptyGrid = true;\n            this.hideWaitingPopup();\n            this.renderEmptyGrid();\n            this.engineModule.fieldList = null;\n            this.engineModule.isEmptyData = true;\n            this.pivotValues = [];\n            this.engineModule.data = [];\n            this.notify(events.dataReady, {});\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals))\n                                ? true : !pivotValues[i][j].isGrandSum) {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText ===\n                                        format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) ||\n                                        (pivotValues[i][j].rowHeaders\n                                            .indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = format_1[k].style.backgroundColor.charAt(0) === '#' &&\n                                                this.conditionalFormattingModule.isHex(format_1[k].style.backgroundColor.substr(1))\n                                                ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = format_1[k].style.color.charAt(0) === '#' &&\n                                                this.conditionalFormattingModule.isHex(format_1[k].style.color.substr(1)) ?\n                                                format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                var formatClass = '.format' + this.element.id + k;\n                sheet.insertRule(formatClass + ', ' + formatClass + ' .e-cellvalue' + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText ===\n                                                collection[k].measure))) && (!collection[k].label ||\n                                        ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                var headerDelimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.';\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            var label = this.hyperlinkSettings.headerText;\n                            if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else {\n                                var isApplyHyperLink = false;\n                                for (var k = 0; k < colIndex.length; k++) {\n                                    label = headerDelimiter + this.hyperlinkSettings.headerText;\n                                    if ((headerDelimiter + (pivotValues[colIndex[k]][j]).valueSort\n                                        .levelName).indexOf(label) > -1) {\n                                        pivotValues[colIndex[k]][j].enableHyperlink = true;\n                                        isApplyHyperLink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = isApplyHyperLink;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = this.dataSourceSettings.type === 'CSV' ? PivotUtil.getClonedCSVData(dataSet) : PivotUtil.getClonedData(dataSet);\n            var dataSourceSettings = JSON.parse(this.getPersistData()).dataSourceSettings;\n            dataSourceSettings.dataSource = [];\n            this.clonedReport = this.clonedReport ? this.clonedReport : dataSourceSettings;\n        }\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = this.dataSourceSettings.type === 'CSV' ? PivotUtil.getClonedCSVData(this.clonedDataSet) : PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0\n                        ? dataSource.groupSettings : [] } }, true);\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            var newFieldName_1;\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                var _loop_1 = function (j, len) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                        fieldName = fieldName.split('_')[0];\n                        var isSameField = false;\n                        for (var i_1 = 0; i_1 < axisFields.length; i_1++) {\n                            isSameField = axisFields[i_1].filter(function (x) { return x.name === fieldName; }).length > 0 ?\n                                true : false;\n                            if (isSameField) {\n                                break;\n                            }\n                        }\n                        if (!isSameField) {\n                            newFieldName_1 = fieldName.split('_')[0];\n                            var fieldObj = PivotUtil.getFieldByName(newFieldName_1, clonedAxisFields);\n                            clonedAxisFields = clonedAxisFields.filter(function (x) { return x.name !== newFieldName_1; });\n                            fields.push(newFieldName_1);\n                            if (fieldObj) {\n                                if (!isSameField) {\n                                    axisFields[i].splice(++j, 0, fieldObj);\n                                }\n                                else {\n                                    axisFields[i].splice(j, 1, fieldObj);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                        else if (newFieldName_1 === fieldName) {\n                            axisFields[i].splice(j, 1);\n                        }\n                    }\n                    out_j_1 = j;\n                    out_len_1 = len;\n                };\n                var out_j_1, out_len_1;\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    _loop_1(j, len);\n                    j = out_j_1;\n                    len = out_len_1;\n                }\n            }\n            for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n                var fieldName = fields_2[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function () {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    PivotView.prototype.wireEvents = function () {\n        var enableOptimizedRendering = this.virtualScrollSettings && this.virtualScrollSettings.allowSinglePage && this.dataType === 'pivot';\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n            if (this.virtualscrollModule && this.enableVirtualization && !enableOptimizedRendering) {\n                EventHandler.add(this.element.querySelector('.' + cls.GRID_CONTENT).querySelector('.' + cls.CONTENT_CLASS), 'scroll', this.headerScrollUpdate, this);\n            }\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.headerScrollUpdate = function () {\n        if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).scrollLeft !== this.element.querySelector('.' + cls.GRID_CONTENT).querySelector('.' + cls.CONTENT_CLASS).scrollLeft) {\n            this.virtualscrollModule.direction = 'horizondal';\n        }\n        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).scrollLeft = this.element.querySelector('.' + cls.GRID_CONTENT).querySelector('.' + cls.CONTENT_CLASS).scrollLeft;\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n            if (this.virtualscrollModule && this.enableVirtualization && this.element.querySelector('.' + cls.GRID_CONTENT)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_CONTENT).querySelector('.' + cls.CONTENT_CLASS), 'scroll', this.headerScrollUpdate);\n            }\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /** @hidden */\n    PivotView.prototype.actionBeginMethod = function () {\n        var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings),\n            actionName: this.actionObj.actionName,\n            fieldInfo: this.actionObj.fieldInfo,\n            cancel: false\n        };\n        this.trigger(events.actionBegin, eventArgs);\n        return eventArgs.cancel;\n    };\n    /** @hidden */\n    PivotView.prototype.actionCompleteMethod = function () {\n        var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings),\n            actionName: this.actionObj.actionName,\n            fieldInfo: this.actionObj.fieldInfo,\n            actionInfo: this.actionObj.actionInfo\n        };\n        this.trigger(events.actionComplete, eventArgs);\n        this.actionObj.actionName = '';\n        this.actionObj.actionInfo = undefined;\n        this.actionObj.fieldInfo = undefined;\n    };\n    /** @hidden */\n    PivotView.prototype.actionFailureMethod = function (error) {\n        var eventArgs = {\n            actionName: this.actionObj.actionName,\n            errorInfo: error\n        };\n        this.trigger(events.actionFailure, eventArgs);\n    };\n    /** @hidden */\n    PivotView.prototype.getActionCompleteName = function () {\n        var actionName;\n        switch (this.actionObj.actionName) {\n            case events.openConditionalFormatting:\n                actionName = events.conditionallyFormatted;\n                break;\n            case events.conditionalFormattingMenu:\n                actionName = events.conditionallyFormatted;\n                break;\n            case events.openNumberFormatting:\n                actionName = events.numberFormatted;\n                break;\n            case events.numberFormattingMenu:\n                actionName = events.numberFormatted;\n                break;\n            case events.tableView:\n                actionName = events.tableViewed;\n                break;\n            case events.chartView:\n                actionName = events.chartViewed;\n                break;\n            case events.hideSubTotals:\n                actionName = events.subTotalsHidden;\n                break;\n            case events.subTotalsRow:\n                actionName = events.subTotalsRowShown;\n                break;\n            case events.subTotalsColumn:\n                actionName = events.subTotalsColumnShown;\n                break;\n            case events.showSubTotals:\n                actionName = events.subTotalsShown;\n                break;\n            case events.hideGrandTotals:\n                actionName = events.grandTotalsHidden;\n                break;\n            case events.grandTotalsRow:\n                actionName = events.grandTotalsRowShown;\n                break;\n            case events.grandTotalsColumn:\n                actionName = events.grandTotalsColumnShown;\n                break;\n            case events.showGrandTotals:\n                actionName = events.grandTotalsShown;\n                break;\n            case events.sortValue:\n                actionName = events.valueSorted;\n                break;\n            case events.openCalculatedField:\n                actionName = events.calculatedFieldApplied;\n                break;\n            case events.editCalculatedField:\n                actionName = events.calculatedFieldEdited;\n                break;\n            case events.sortField:\n                actionName = events.fieldSorted;\n                break;\n            case events.filterField:\n                actionName = events.fieldFiltered;\n                break;\n            case events.removeField:\n                actionName = events.fieldRemoved;\n                break;\n            case events.aggregateField:\n                actionName = events.fieldAggregated;\n                break;\n            case events.editRecord:\n                actionName = events.recordEdited;\n                break;\n            case events.reportChange:\n                actionName = events.reportChanged;\n                break;\n            case events.saveEditedRecords:\n                actionName = events.editedRecordsSaved;\n                break;\n            case events.addNewRecord:\n                actionName = events.newRecordAdded;\n                break;\n            case events.removeRecord:\n                actionName = events.recordRemoved;\n                break;\n            case events.pngExport:\n                actionName = events.pngExported;\n                break;\n            case events.jpegExport:\n                actionName = events.jpegExported;\n                break;\n            case events.svgExport:\n                actionName = events.svgExported;\n                break;\n            case events.pdfExport:\n                actionName = events.pdfExported;\n                break;\n            case events.csvExport:\n                actionName = events.csvExported;\n                break;\n            case events.excelExport:\n                actionName = events.excelExported;\n                break;\n            case events.windowResize:\n                actionName = events.windowResized;\n                break;\n            case events.saveCurrentReport:\n                actionName = events.reportSaved;\n                break;\n            case events.addNewReport:\n                actionName = events.newReportAdded;\n                break;\n            case events.saveAsCurrentReport:\n                actionName = events.reportReSaved;\n                break;\n            case events.renameCurrentReport:\n                actionName = events.reportRenamed;\n                break;\n            case events.horizontalScroll:\n                actionName = events.horizontalScrolled;\n                break;\n            case events.verticalScroll:\n                actionName = events.verticalScrolled;\n                break;\n            case events.rowPageNavigation:\n                actionName = events.rowPageNavigated;\n                break;\n            case events.columnPageNavigation:\n                actionName = events.columnPageNavigated;\n                break;\n            default:\n                actionName = this.actionObj.actionName;\n        }\n        return actionName;\n    };\n    /** @hidden */\n    PivotView.prototype.getStackedColumns = function (gridcolumns, stackedColumns) {\n        for (var _i = 0, gridcolumns_4 = gridcolumns; _i < gridcolumns_4.length; _i++) {\n            var column = gridcolumns_4[_i];\n            stackedColumns.push(column);\n            if (column.columns && column.columns.length > 0) {\n                this.getStackedColumns(column.columns, stackedColumns);\n            }\n        }\n        return stackedColumns;\n    };\n    /**\n     * To destroy the PivotView elements.\n     *\n     * @returns {void}\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.engineModule) {\n            this.engineModule.fieldList = {};\n            this.engineModule.rMembers = null;\n            this.engineModule.cMembers = null;\n            this.engineModule.valueMatrix = [];\n            this.engineModule = {};\n        }\n        if (this.olapEngineModule) {\n            this.olapEngineModule.fieldList = {};\n            this.olapEngineModule = {};\n        }\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enablePaging && this.pagerModule) {\n            this.pagerModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip && !this.tooltip.isDestroyed) {\n            this.tooltip.destroy();\n        }\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.destroy();\n        }\n        if (this.chart && !this.chart.isDestroyed) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && select('#' + this.element.id + '_chart', this.element)) {\n                remove(select('#' + this.element.id + '_chart', this.element));\n            }\n        }\n        if (this.grid && !this.grid.isDestroyed) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && select('#' + this.element.id + '_grid', this.element)) {\n                remove(select('#' + this.element.id + '_grid', this.element));\n            }\n        }\n        if (this.commonModule) {\n            this.commonModule.destroy();\n        }\n        if (this.pivotChartModule) {\n            this.pivotChartModule.destroy();\n        }\n        if (this.pivotButtonModule && !this.pivotButtonModule.isDestroyed) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.pivotFieldListModule && !this.pivotFieldListModule.isDestroyed) {\n            this.pivotFieldListModule.destroy();\n            if (this.pivotFieldListModule.isDestroyed && select('#' + this.element.id + '_PivotFieldList', this.element) !== null) {\n                remove(select('#' + this.element.id + '_PivotFieldList', this.element));\n            }\n        }\n        if ((this.allowDrillThrough || (this.editSettings && this.editSettings.allowEditing)) && this.drillThroughModule) {\n            this.drillThroughModule.destroy();\n        }\n        if (this.chartExportModule) {\n            this.chartExportModule.destroy();\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.groupingBarModule) {\n            this.groupingBarModule = null;\n        }\n        if (this.groupingModule) {\n            this.groupingModule = null;\n        }\n        if (this.pivotFieldListModule) {\n            this.pivotFieldListModule = null;\n        }\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule = null;\n        }\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule = null;\n        }\n        if (this.numberFormattingModule) {\n            this.numberFormattingModule = null;\n        }\n        if (this.toolbarModule) {\n            this.toolbarModule = null;\n        }\n        if (this.pagerModule) {\n            this.pagerModule = null;\n        }\n        if (this.virtualscrollModule) {\n            this.virtualscrollModule = null;\n        }\n        if (this.contextMenuModule) {\n            this.contextMenuModule = null;\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule = null;\n        }\n        if (this.tooltip) {\n            this.tooltip = null;\n        }\n        if (this.chart) {\n            this.chart = null;\n        }\n        if (this.grid) {\n            this.grid = null;\n        }\n        if (this.commonModule) {\n            this.commonModule = null;\n        }\n        if (this.pivotChartModule) {\n            this.pivotChartModule = null;\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule = null;\n        }\n        if (this.renderModule) {\n            this.renderModule = null;\n        }\n        if (this.axisFieldModule) {\n            this.axisFieldModule = null;\n        }\n        if (this.pdfExportModule) {\n            this.pdfExportModule = null;\n        }\n        if (this.excelExportModule) {\n            this.excelExportModule = null;\n        }\n        if (this.drillThroughModule) {\n            this.drillThroughModule = null;\n        }\n        if (this.clonedDataSet) {\n            this.clonedDataSet = null;\n        }\n        if (this.clonedReport) {\n            this.clonedReport = null;\n        }\n        if (this.pagerModule) {\n            this.pagerModule = null;\n        }\n        if (this.chartExportModule) {\n            this.chartExportModule = null;\n        }\n        if (this.exportSpecifiedPages) {\n            this.exportSpecifiedPages = undefined;\n        }\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        this.globalize = null;\n        this.localeObj = null;\n        this.currentView = null;\n        this.fieldListSpinnerElement = null;\n        this.lastSortInfo = null;\n        this.lastFilterInfo = null;\n        this.lastAggregationInfo = null;\n        this.lastCalcFieldInfo = null;\n        this.lastCellClicked = null;\n        this.lastColumn = null;\n        this.pivotCommon = null;\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     *\n     * @returns {void}\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getValuesHeader = function (pivotCell, type) {\n        var values = this.dataSourceSettings.values;\n        if (type === 'value' && !isNullOrUndefined(pivotCell.valueSort) && (this.localeObj.getConstant('grandTotal') + this.dataSourceSettings.valueSortSettings.headerDelimiter + pivotCell.formattedText)\n            === pivotCell.valueSort.levelName && ((pivotCell.axis === 'column' && this.dataSourceSettings.columns.length === 0 && this.dataSourceSettings.valueAxis === 'column') || (pivotCell.axis === 'row' &&\n            this.dataSourceSettings.rows.length === 0 && this.dataSourceSettings.valueAxis === 'row'))) {\n            return this.localeObj.getConstant('total') + ' ' + this.localeObj.getConstant(this.engineModule.fieldList[pivotCell.actualText].aggregateType) + ' ' +\n                this.localeObj.getConstant('of') + ' ' + pivotCell.formattedText;\n        }\n        else if (type === 'grandTotal' && values.length === 1 && this.dataSourceSettings.valueAxis === 'row' && pivotCell.formattedText === this.localeObj.getConstant('grandTotal')) {\n            return this.localeObj.getConstant('total') + ' ' + this.localeObj.getConstant(values[values.length - 1].type) + ' ' +\n                this.localeObj.getConstant('of') + ' ' + (!isNullOrUndefined(values[values.length - 1].caption) ? values[values.length - 1].caption\n                : values[values.length - 1].name);\n        }\n        return pivotCell.formattedText;\n    };\n    PivotView.prototype.setColumnWidth = function (column, width) {\n        if (!column.autoFit) {\n            if (column.width !== 'auto') {\n                column.width = (this.renderModule.lastColumn && column.field === this.renderModule.lastColumn.field) ?\n                    (width - 3) : width;\n            }\n            else {\n                column.minWidth = width;\n            }\n        }\n    };\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], PivotView.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, PagerSettings)\n    ], PivotView.prototype, \"pagerSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Complex({}, VirtualScrollSettings)\n    ], PivotView.prototype, \"virtualScrollSettings\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableFieldSearching\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enablePaging\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StackingLine', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'StackingLine100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Property('')\n    ], PivotView.prototype, \"cssClass\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLegendClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"multiLevelLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"exportComplete\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"editCompleted\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeServiceInvoke\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"afterServiceInvoke\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onHeadersSort\", void 0);\n    PivotView = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","/**\n * This is a file to perform common utility for OLAP and Relational datasource\n *\n * @hidden\n */\nvar PivotExportUtil = /** @class */ (function () {\n    function PivotExportUtil() {\n    }\n    PivotExportUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] =\n                            this.getClonedPivotValueObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotExportUtil.getClonedPivotValueObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotExportUtil.isContainCommonElements = function (collection1, collection2) {\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    return PivotExportUtil;\n}());\nexport { PivotExportUtil };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotExportUtil } from '../../base/export-util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.actualrCnt = 0;\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - string.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    ExcelExport.prototype.addHeaderAndFooter = function (excelExportProperties, stringValue, type, rowCount) {\n        var cells = [];\n        if (!isNullOrUndefined(excelExportProperties.rows)) {\n            this.actualrCnt = (type === 'footer') ? this.actualrCnt + rowCount - (excelExportProperties.rows[0].cells.length) : this.actualrCnt;\n            var row = excelExportProperties.rows;\n            for (var i = 0; i < row.length; i++) {\n                var spanCount = 0;\n                cells = [];\n                var currentRow = row[i];\n                for (var j = 0; j < currentRow.cells.length; j++) {\n                    cells.push({\n                        index: spanCount + 1, value: currentRow.cells[j].value,\n                        colSpan: currentRow.cells[j].colSpan, rowSpan: currentRow.cells[j].rowSpan,\n                        style: currentRow.cells[j].style\n                    });\n                    spanCount = spanCount + cells[j].colSpan;\n                }\n                this.actualrCnt++;\n                this.rows.push({ index: this.actualrCnt, cells: cells });\n            }\n            this.actualrCnt = (type === 'header') ? rowCount : this.actualrCnt;\n        }\n        else {\n            if (stringValue !== '') {\n                if (type === 'footer') {\n                    this.actualrCnt++;\n                }\n                cells.push({\n                    index: 1, value: stringValue\n                });\n                this.rows.push({ index: this.actualrCnt + 1, cells: cells });\n                this.actualrCnt = (type === 'header') ? this.actualrCnt + 2 : this.actualrCnt;\n            }\n        }\n    };\n    /**\n     *\n     * Method to perform excel export.\n     *\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type, exportProperties, isBlob) {\n        this.rows = [];\n        this.actualrCnt = 0;\n        var isHeaderSet = !isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.header);\n        var isFooterSet = !isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.footer);\n        var isFileNameSet = !isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.fileName);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotExportUtil.getClonedPivotValues(this.engine.pivotValues);\n        var customFileName = isFileNameSet ? exportProperties.fileName : type === 'CSV' ? 'default.csv' : 'default.xlsx';\n        if (this.parent.exportAllPages && (this.parent.enableVirtualization || this.parent.enablePaging)) {\n            var pageSettings = this.engine.pageSettings;\n            var mdxQuery = void 0;\n            this.engine.isPagingOrVirtualizationEnabled = false;\n            if (this.parent.dataType === 'olap') {\n                this.updateOlapPageSettings(true);\n                mdxQuery = this.parent.olapEngineModule.mdxQuery.slice(0);\n            }\n            else {\n                this.engine.pageSettings = null;\n            }\n            this.engine.generateGridData(this.parent.dataSourceSettings, true, true);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotExportUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n            this.engine.isPagingOrVirtualizationEnabled = true;\n            if (this.parent.dataType === 'olap') {\n                this.updateOlapPageSettings(false);\n                this.parent.olapEngineModule.mdxQuery = mdxQuery;\n            }\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: customFileName, header: '', footer: '', dataCollections: [clonedValues], excelExportProperties: exportProperties\n        };\n        var fileName;\n        var header;\n        var footer;\n        var dataCollections;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            fileName = observedArgs.fileName;\n            header = observedArgs.header;\n            footer = observedArgs.footer;\n            dataCollections = observedArgs.dataCollections;\n        });\n        if (!isHeaderSet && isNullOrUndefined(args.excelExportProperties) && header !== '') {\n            this.addHeaderAndFooter({}, header, 'header', undefined);\n        }\n        else if (!isNullOrUndefined(args.excelExportProperties) && !isNullOrUndefined(args.excelExportProperties.header)) {\n            this.addHeaderAndFooter(args.excelExportProperties.header, '', 'header', args.excelExportProperties.header.headerRows);\n        }\n        /** Fill data and export */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var formatList = this.parent.renderModule.getFormatList();\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    this.actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (pivotCell && pivotCell.axis === 'value' && pivotCell.formattedText === '') {\n                                pivotCell.value = Number(pivotCell.formattedText);\n                            }\n                            var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                pivotCell.actualText;\n                            var styles = (pivotCell.axis === 'row') ? { hAlign: 'Left', bold: true, wrapText: true } : { numberFormat: formatList[field], bold: false, wrapText: true };\n                            var headerStyle = { bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0 };\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var aggMatrix = this.engine.aggregatedValueMatrix;\n                                var cellValue = pivotCell.axis === 'value' ? ((aggMatrix[rCnt] && aggMatrix[rCnt][cCnt]) ? aggMatrix[rCnt][cCnt] : (pivotCell.formattedText === '#DIV/0!' ? pivotCell.formattedText : pivotCell.value)) : pivotCell.formattedText;\n                                var isgetValuesHeader = ((this.parent.dataSourceSettings.rows.length === 0 && this.parent.dataSourceSettings.valueAxis === 'row')\n                                    || (this.parent.dataSourceSettings.columns.length === 0 && this.parent.dataSourceSettings.valueAxis === 'column'));\n                                if (pivotCell.type === 'grand sum' && !(this.parent.dataSourceSettings.values.length === 1 && this.parent.dataSourceSettings.valueAxis === 'row' && pivotCell.axis === 'column')) {\n                                    cellValue = isgetValuesHeader ? this.parent.getValuesHeader(pivotCell, 'grandTotal') : this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = (!isNullOrUndefined(pivotCell.valueSort) && (this.parent.localeObj.getConstant('grandTotal') + this.parent.dataSourceSettings.valueSortSettings.headerDelimiter + pivotCell.formattedText\n                                        === pivotCell.valueSort.levelName) && isgetValuesHeader) ? this.parent.getValuesHeader(pivotCell, 'value') : cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan)\n                                    });\n                                    var lastCell = cells[cells.length - 1];\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            lastCell.value = type === 'Excel' ? null : '';\n                                        }\n                                        styles.numberFormat = typeof cellValue === 'string' ? undefined : styles.numberFormat;\n                                        lastCell.style = !isNullOrUndefined(lastCell.value) ? styles : { bold: false, wrapText: true };\n                                    }\n                                    else {\n                                        lastCell.style = headerStyle;\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            lastCell.style = styles;\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                lastCell.style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                var levelName = pivotCell.valueSort ? pivotCell.valueSort.levelName.toString() : '';\n                                                var memberPos = pivotCell.actualText ?\n                                                    pivotCell.actualText.toString().\n                                                        split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length : 0;\n                                                var levelPosition = levelName.\n                                                    split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                                                    (memberPos ? memberPos - 1 : memberPos);\n                                                var level = levelPosition ? (levelPosition - 1) : 0;\n                                                lastCell.style.indent = level * 2;\n                                                maxLevel = level > maxLevel ? level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    if (pivotCell.style || lastCell.style.backColor || lastCell.style.fontColor ||\n                                        lastCell.style.fontName || lastCell.style.fontSize) {\n                                        lastCell.style.backColor = lastCell.style.backColor ? lastCell.style.backColor\n                                            : pivotCell.style.backgroundColor;\n                                        lastCell.style.fontColor = lastCell.style.fontColor ? lastCell.style.fontColor\n                                            : pivotCell.style.color;\n                                        lastCell.style.fontName = lastCell.style.fontName ? lastCell.style.fontName\n                                            : pivotCell.style.fontFamily;\n                                        if (!isNullOrUndefined(lastCell.style.fontSize) || !isNullOrUndefined(pivotCell.style.fontSize)) {\n                                            lastCell.style.fontSize = !isNullOrUndefined(lastCell.style.fontSize) ? Number(lastCell.style.fontSize) : Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    lastCell.style.borders = { color: '#000000', lineStyle: 'thin' };\n                                    var excelHeaderQueryCellInfoArgs = void 0;\n                                    var excelQueryCellInfoArgs = void 0;\n                                    if (pivotCell.axis === 'column') {\n                                        excelHeaderQueryCellInfoArgs = {\n                                            style: headerStyle,\n                                            cell: pivotCell\n                                        };\n                                        this.parent.trigger(events.excelHeaderQueryCellInfo, excelHeaderQueryCellInfoArgs);\n                                    }\n                                    else {\n                                        excelQueryCellInfoArgs = {\n                                            style: styles,\n                                            cell: pivotCell,\n                                            column: undefined,\n                                            data: pivotValues,\n                                            value: cellValue\n                                        };\n                                        this.parent.trigger(events.excelQueryCellInfo, excelQueryCellInfoArgs);\n                                    }\n                                    lastCell.value = (pivotCell.axis === 'column') ? excelHeaderQueryCellInfoArgs.cell.formattedText : excelQueryCellInfoArgs.value;\n                                    lastCell.style = (pivotCell.axis === 'column') ? excelHeaderQueryCellInfoArgs.style : excelQueryCellInfoArgs.style;\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            var pivotCell = { formattedText: '' };\n                            var excelHeaderQueryCellInfoArgs = void 0;\n                            if (pivotCell) {\n                                excelHeaderQueryCellInfoArgs = {\n                                    style: undefined,\n                                    cell: pivotCell\n                                };\n                                this.parent.trigger(events.excelHeaderQueryCellInfo, excelHeaderQueryCellInfoArgs);\n                            }\n                            cells.push({\n                                index: cCnt + 1, colSpan: 1, rowSpan: 1, value: pivotCell.formattedText,\n                                style: excelHeaderQueryCellInfoArgs.style\n                            });\n                        }\n                    }\n                    this.rows.push({ index: this.actualrCnt, cells: cells });\n                }\n            }\n            if (isFooterSet) {\n                this.addHeaderAndFooter(exportProperties.footer, '', 'footer', exportProperties.footer.footerRows);\n            }\n            else if (!isFooterSet && footer !== '' && isNullOrUndefined(args.excelExportProperties)) {\n                this.addHeaderAndFooter({}, footer, 'footer', undefined);\n            }\n            else if (!isNullOrUndefined(args.excelExportProperties) && !isNullOrUndefined(args.excelExportProperties.footer)) {\n                this.addHeaderAndFooter(args.excelExportProperties.footer, '', 'footer', args.excelExportProperties.footer.footerRows);\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: this.rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv', undefined, this.parent.currencyCode);\n        var fileExtension = fileName.split('.').pop();\n        var blobData;\n        if (!isBlob) {\n            book.save(fileExtension === 'xlsx' || fileExtension === 'csv' ? fileName : (fileName + (type === 'Excel' ? '.xlsx' : '.csv')));\n        }\n        else {\n            blobData = book.saveAsBlob(fileExtension === 'xlsx' || type === 'Excel' ?\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' : 'text/csv');\n        }\n        var exportCompleteEventArgs = {\n            type: type,\n            promise: isBlob ? blobData : null\n        };\n        this.parent.trigger(events.exportComplete, exportCompleteEventArgs);\n    };\n    ExcelExport.prototype.updateOlapPageSettings = function (isUpdate) {\n        this.parent.olapEngineModule.isExporting = isUpdate ? true : false;\n        if (!this.parent.exportSpecifiedPages) {\n            this.parent.olapEngineModule.pageSettings = isUpdate ? null : this.parent.olapEngineModule.pageSettings;\n            this.parent.olapEngineModule.isPaging = isUpdate ? false : true;\n        }\n        else {\n            this.parent.olapEngineModule.exportSpeciedPages = this.parent.exportSpecifiedPages = isUpdate ?\n                this.parent.exportSpecifiedPages : undefined;\n        }\n    };\n    /**\n     * To destroy the excel export module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        if (this.engine) {\n            this.engine = null;\n        }\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfBorders, SizeF, PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotExportUtil } from '../../base/export-util';\nimport { PivotUtil } from '../../base/util';\nimport { PDFExportHelper } from './pdf-export-helper';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n        this.pdfExportHelper = new PDFExportHelper();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - string.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams, pdfExportProperties) {\n        pdfExportProperties = pdfExportProperties ? pdfExportProperties : this.exportProperties.pdfExportProperties;\n        var documentSection = eventParams.document.sections.add();\n        var documentHeight = eventParams.document.pageSettings.height;\n        var documentWidth = eventParams.document.pageSettings.width;\n        if (this.exportProperties.width || this.exportProperties.height) {\n            eventParams.document.pageSettings.orientation = ((this.exportProperties.width > this.exportProperties.height)\n                || (!this.exportProperties.height && (this.exportProperties.width > documentHeight)) || (!this.exportProperties.width\n                && (documentWidth > this.exportProperties.height))) ? PdfPageOrientation.Landscape : PdfPageOrientation.Portrait;\n            eventParams.document.pageSettings.size = new SizeF(this.exportProperties.width ? this.exportProperties.width :\n                documentWidth, this.exportProperties.height ? this.exportProperties.height : documentHeight);\n        }\n        else {\n            eventParams.document.pageSettings.orientation = (this.exportProperties.orientation === 0 || this.exportProperties.orientation)\n                ? this.exportProperties.orientation : (!isNullOrUndefined(pdfExportProperties) &&\n                !isNullOrUndefined(pdfExportProperties.pageOrientation)) ? (pdfExportProperties.pageOrientation === 'Landscape' ?\n                PdfPageOrientation.Landscape : PdfPageOrientation.Portrait) : PdfPageOrientation.Landscape;\n            if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.pageSize)) {\n                eventParams.document.pageSettings.size = PivotUtil.getPageSize(pdfExportProperties.pageSize);\n            }\n        }\n        if (!isNullOrUndefined(this.exportProperties.pdfMargins)) {\n            var margins = eventParams.document.pageSettings.margins;\n            margins.top = !isNullOrUndefined(this.exportProperties.pdfMargins.top) ? this.exportProperties.pdfMargins.top : margins.top;\n            margins.bottom = !isNullOrUndefined(this.exportProperties.pdfMargins.bottom) ? this.exportProperties.pdfMargins.bottom :\n                margins.bottom;\n            margins.left = !isNullOrUndefined(this.exportProperties.pdfMargins.left) ? this.exportProperties.pdfMargins.left : margins.left;\n            margins.right = !isNullOrUndefined(this.exportProperties.pdfMargins.right) ? this.exportProperties.pdfMargins.right :\n                margins.right;\n        }\n        documentSection.setPageSettings(eventParams.document.pageSettings);\n        var page = documentSection.pages.add();\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header)) {\n            this.pdfExportHelper.drawHeader(pdfExportProperties, eventParams.document);\n        }\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.footer)) {\n            this.pdfExportHelper.drawFooter(pdfExportProperties, eventParams.document);\n        }\n        return page;\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.pdfExportHelper.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.pdfExportHelper.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.pdfExportHelper.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.pdfExportHelper.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     *\n     * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Object} pdfDoc - Defined the PDF document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<Object>}\n     * @hidden\n     */\n    PDFExport.prototype.exportToPDF = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridStyle = !isNullOrUndefined(this.exportProperties.pdfExportProperties) ?\n            this.exportProperties.pdfExportProperties.theme : undefined;\n        var eventParams = this.applyEvent();\n        if (!isNullOrUndefined(pdfDoc)) {\n            eventParams.document = pdfDoc;\n        }\n        var headerStyle = this.getStyle();\n        var fileName = !isNullOrUndefined(this.exportProperties) && !isNullOrUndefined(this.exportProperties.fileName) ?\n            this.exportProperties.fileName : (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.fileName)) ?\n            pdfExportProperties.fileName : 'default';\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.pivotValues[dataCollIndex];\n        if (this.exportProperties.columnSize || this.exportProperties.width || this.exportProperties.height) {\n            size = this.exportProperties.columnSize > 0 ? this.exportProperties.columnSize : pivotValues[0].length;\n        }\n        this.exportProperties.allowRepeatHeader =\n            this.exportProperties.allowRepeatHeader === true || isNullOrUndefined(this.exportProperties.allowRepeatHeader);\n        var allowRepeatHeader = this.exportProperties.allowRepeatHeader ? this.exportProperties.allowRepeatHeader : false;\n        for (var vLen = 0; allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            if (!isNullOrUndefined(pdfExportProperties)) {\n                this.exportProperties.header = (!isNullOrUndefined(pdfExportProperties.header) &&\n                    !isNullOrUndefined(pdfExportProperties.header.contents) && !isNullOrUndefined(pdfExportProperties.header.contents[0].value))\n                    ? pdfExportProperties.header.contents[0].value : this.exportProperties.header;\n                this.exportProperties.footer = (!isNullOrUndefined(pdfExportProperties.footer) &&\n                    !isNullOrUndefined(pdfExportProperties.footer.contents) && !isNullOrUndefined(pdfExportProperties.footer.contents[0].value))\n                    ? pdfExportProperties.footer.contents[0].value : this.exportProperties.footer;\n            }\n            var page = this.addPage(eventParams, pdfExportProperties);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 0 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                var columnWidth = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize)\n                            : pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                var cellValue = pivotCell.formattedText;\n                                cellValue = (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) ? this.parent.getValuesHeader(pivotCell, 'value') : cellValue;\n                                cellValue = pivotCell.type === 'grand sum' ? (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0) ? this.parent.getValuesHeader(pivotCell, 'grandTotal') :\n                                    this.parent.localeObj.getConstant('grandTotal') : (pivotCell.type === 'sum' ?\n                                    cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt),\n                                    column: pdfGrid.columns.getColumn(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (pivotCell.axis === 'column') {\n                                    args = {\n                                        style: args.style,\n                                        cell: args.cell,\n                                        gridCell: args.pivotCell\n                                    };\n                                    this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n                                    pdfGridRow.cells.getCell(localCnt).value = args.gridCell.formattedText ?\n                                        args.gridCell.formattedText : cellValue;\n                                }\n                                else {\n                                    args = {\n                                        style: args.style,\n                                        cell: args.cell,\n                                        column: undefined,\n                                        data: args.pivotCell,\n                                        value: cellValue\n                                    };\n                                    this.parent.trigger(events.pdfQueryCellInfo, args);\n                                    pdfGridRow.cells.getCell(localCnt).value = args.value ? args.value : cellValue;\n                                }\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt),\n                                    column: pdfGrid.columns.getColumn(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                columnWidth = args.column.width;\n                                var pivotCell = { formattedText: '' };\n                                if (pivotCell.axis === 'column') {\n                                    args = {\n                                        style: args.style,\n                                        cell: args.cell,\n                                        gridCell: args.pivotCell\n                                    };\n                                    this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n                                }\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 &&\n                                    pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt]\n                                        .rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = 0;\n                                if ((!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1)) {\n                                    var cell = pivotValues[rCnt][cCnt];\n                                    var levelName = cell.valueSort ? cell.valueSort.levelName.toString() : '';\n                                    var memberPos = cell.actualText ?\n                                        cell.actualText.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter)\n                                            .length : 0;\n                                    var levelPosition = levelName.split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).length -\n                                        (memberPos ? memberPos - 1 : memberPos);\n                                    var level = levelPosition ? (levelPosition - 1) : 0;\n                                    stringFormat.paragraphIndent = level * 10;\n                                }\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = columnWidth > 0 ? columnWidth : 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.pivotValues.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.pivotValues[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        return new Promise(function (resolve) {\n            var blobData;\n            if (isBlob || isMultipleExport) {\n                if (isBlob) {\n                    blobData = eventParams.document.save();\n                }\n            }\n            else {\n                eventParams.document.save(fileName + '.pdf');\n                eventParams.document.destroy();\n            }\n            var exportCompleteEventArgs = {\n                type: 'PDF',\n                promise: isBlob ? blobData : null\n            };\n            _this.parent.trigger(events.exportComplete, exportCompleteEventArgs);\n            resolve(eventParams.document);\n        });\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell['cellStyle'].font &&\n            theme.cell['cellStyle'].font.fontSize) ? theme.cell['cellStyle'].font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.pdfExportHelper.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.pdfExportHelper.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.pdfExportHelper.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.pdfExportHelper.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.pdfExportHelper.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        /** Event trigerring */\n        var clonedValues;\n        var mdxQuery;\n        var currentPivotValues = PivotExportUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && (this.parent.enableVirtualization || this.parent.enablePaging) && this.parent.dataSourceSettings.mode !== 'Server') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.isPagingOrVirtualizationEnabled = false;\n            if (this.parent.dataType === 'olap') {\n                this.updateOlapPageSettings(true);\n                mdxQuery = this.parent.olapEngineModule.mdxQuery.slice(0);\n            }\n            else {\n                this.engine.pageSettings = null;\n            }\n            this.engine.generateGridData(this.parent.dataSourceSettings, true, true);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotExportUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n            this.engine.isPagingOrVirtualizationEnabled = true;\n            if (this.parent.dataType === 'olap') {\n                this.updateOlapPageSettings(false);\n                this.parent.olapEngineModule.mdxQuery = mdxQuery;\n            }\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            pivotValues: [clonedValues]\n        };\n        this.parent.trigger(events.enginePopulated, args);\n        this.document = new PdfDocument();\n        return { document: this.document, args: args };\n    };\n    PDFExport.prototype.updateOlapPageSettings = function (isUpdate) {\n        this.parent.olapEngineModule.isExporting = isUpdate ? true : false;\n        if (!this.parent.exportSpecifiedPages) {\n            this.parent.olapEngineModule.pageSettings = isUpdate ? null : this.parent.olapEngineModule.pageSettings;\n            this.parent.olapEngineModule.isPaging = isUpdate ? false : true;\n        }\n        else {\n            this.parent.olapEngineModule.exportSpeciedPages = this.parent.exportSpecifiedPages = isUpdate ?\n                this.parent.exportSpecifiedPages : undefined;\n        }\n    };\n    /**\n     * To destroy the pdf export module.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PDFExport.prototype.destroy = function () {\n        if (this.engine) {\n            this.engine = null;\n        }\n        if (this.exportProperties) {\n            this.exportProperties = null;\n        }\n        if (this.document) {\n            this.document = null;\n        }\n        if (this.pdfExportHelper) {\n            this.pdfExportHelper = null;\n        }\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { createElement, remove, select, EventHandler, isNullOrUndefined, initializeCSPTemplate, getInstance } from '@syncfusion/ej2-base';\nimport { Pager as GridPager } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\n/**\n * Module for Pager rendering\n */\n/** @hidden */\nvar Pager = /** @class */ (function () {\n    function Pager(parent) {\n        this.parent = parent;\n        this.parent.pagerModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     *\n     * @returns {string} - string\n     * @hidden\n     */\n    Pager.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     *\n     * @hidden\n     *\n     */\n    Pager.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initPivotPager, this.createPager, this);\n    };\n    /**\n     *\n     * @hidden\n     */\n    Pager.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (isNullOrUndefined(this.parent.pagerSettings.template)) {\n            this.unWireEvent();\n        }\n        this.parent.off(events.initPivotPager, this.createPager);\n    };\n    Pager.prototype.createPager = function () {\n        if (select('#' + this.parent.element.id + 'pivot-pager', this.parent.element) !== null) {\n            remove(select('#' + this.parent.element.id + 'pivot-pager', this.parent.element));\n            this.destroy();\n            this.addEventListener();\n        }\n        var tableWidth = (this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n        var pagerOptions = this.parent.pagerSettings;\n        if (this.parent.enablePaging) {\n            var pagerElement = createElement('div', {\n                id: this.parent.element.id + 'pivot-pager',\n                className: cls.GRID_PAGER + ' ' + (((this.parent.isAdaptive || tableWidth < 650) ? cls.DEVICE : '') + ' ' + (this.parent.enableRtl ? cls.RTL : '') + ' ' + (this.parent.pagerSettings.position === 'Top' ? ' ' + cls.GRID_PAGER_TOP : ' ' + cls.GRID_PAGER_BOTTOM)\n                    + ' ' + ((pagerOptions.enableCompactView || tableWidth < 400) ? cls.COMPACT_VIEW : '')),\n                styles: 'width:' + (this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()) + 'px'\n            });\n            if (this.parent.showFieldList && select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element) && pagerOptions.position === 'Top') {\n                this.parent.element.insertBefore(pagerElement, select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element));\n            }\n            else if (this.parent.showGroupingBar && select('#' + this.parent.element.id + ' .' + cls.GRID_GROUPING_BAR_CLASS, this.parent.element) && pagerOptions.position === 'Top') {\n                this.parent.element.insertBefore(pagerElement, select('#' + this.parent.element.id + ' .' + cls.GRID_GROUPING_BAR_CLASS, this.parent.element));\n            }\n            else {\n                if (this.parent.pagerSettings.position === 'Top') {\n                    this.parent.element.insertBefore(pagerElement, select('#' + this.parent.element.id + '_grid', this.parent.element));\n                }\n                else {\n                    this.parent.element.append(pagerElement);\n                }\n            }\n            var _this_1 = this;\n            var tempFunc = function () {\n                return _this_1.createPagerContainer();\n            };\n            this.pager = new GridPager({\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                template: pagerOptions.template === '' || pagerOptions.template ? pagerOptions.template : initializeCSPTemplate(tempFunc),\n                cssClass: this.parent.cssClass\n            });\n            this.pager.isVue = this.parent.isVue;\n            this.pager.appendTo(pagerElement);\n            if (isNullOrUndefined(pagerOptions.template)) {\n                if (pagerOptions.showRowPager) {\n                    if (!pagerOptions.enableCompactView && tableWidth > 400) {\n                        var rowPagerTextBox = new NumericTextBox({\n                            min: 1,\n                            max: this.parent.engineModule.rowPageCount,\n                            showSpinButton: false,\n                            format: '#',\n                            validateDecimalOnType: true,\n                            decimals: 0,\n                            strictMode: true,\n                            value: this.parent.pageSettings.currentRowPage,\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            width: tableWidth < 669 ? '50px' : '64px',\n                            change: this.rowPageChange.bind(this),\n                            cssClass: this.parent.cssClass\n                        });\n                        rowPagerTextBox.appendTo(select('#' + this.parent.element.id + '_row_textbox', this.parent.element));\n                    }\n                    if (pagerOptions.showRowPageSize) {\n                        var rowPages = this.parent.pagerSettings.rowPageSizes.slice(0);\n                        if (this.parent.pagerSettings.rowPageSizes.indexOf(this.parent.pageSettings.rowPageSize) === -1) {\n                            rowPages.push(this.parent.pageSettings.rowPageSize);\n                            rowPages.sort(function (a, b) { return a - b; });\n                        }\n                        var rowPageSizeDropDown = new DropDownList({\n                            dataSource: rowPages,\n                            value: this.parent.pageSettings.rowPageSize,\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            change: this.rowPageSizeChange.bind(this),\n                            popupHeight: '300px',\n                            popupWidth: '100%',\n                            width: '64px',\n                            cssClass: this.parent.cssClass\n                        });\n                        rowPageSizeDropDown.appendTo(select('#' + this.parent.element.id + '_' + 'row' + '_size_list', this.parent.element));\n                    }\n                }\n                if (pagerOptions.showColumnPager) {\n                    if (!pagerOptions.enableCompactView && tableWidth > 400) {\n                        var columnPagerTextBox = new NumericTextBox({\n                            min: 1,\n                            max: this.parent.engineModule.columnPageCount,\n                            showSpinButton: false,\n                            format: '#',\n                            validateDecimalOnType: true,\n                            decimals: 0,\n                            strictMode: true,\n                            value: this.parent.pageSettings.currentColumnPage,\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            width: tableWidth < 669 ? '50px' : '64px',\n                            change: this.columnPageChange.bind(this),\n                            cssClass: this.parent.cssClass\n                        });\n                        columnPagerTextBox.appendTo(select('#' + this.parent.element.id + '_column_textbox', this.parent.element));\n                    }\n                    if (pagerOptions.showColumnPageSize) {\n                        var columnPages = this.parent.pagerSettings.columnPageSizes.slice(0);\n                        if (this.parent.pagerSettings.columnPageSizes.indexOf(this.parent.pageSettings.columnPageSize) === -1) {\n                            columnPages.push(this.parent.pageSettings.columnPageSize);\n                            columnPages.sort(function (a, b) { return a - b; });\n                        }\n                        var columnPageSizeDropDown = new DropDownList({\n                            dataSource: columnPages,\n                            value: this.parent.pageSettings.columnPageSize,\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            change: this.columnPageSizeChange.bind(this),\n                            popupHeight: '300px',\n                            popupWidth: '100%',\n                            width: '64px',\n                            cssClass: this.parent.cssClass\n                        });\n                        columnPageSizeDropDown.appendTo(select('#' + this.parent.element.id + '_' + 'column' + '_size_list', this.parent.element));\n                    }\n                }\n                this.unWireEvent();\n                this.wireEvent();\n            }\n        }\n    };\n    Pager.prototype.wireEvent = function () {\n        var elements = [].slice.call(this.parent.element.querySelectorAll('.' + cls.FIRST_PAGER_ICON + ', .' + cls.PREV_PAGER_ICON + ', .' + cls.NEXT_PAGER_ICON + ', .' + cls.LAST_PAGER_ICON));\n        for (var i = 0; i < elements.length; i++) {\n            EventHandler.add(elements[i], 'click', this.updatePageSettings, this);\n        }\n    };\n    Pager.prototype.unWireEvent = function () {\n        var elements = [].slice.call(this.parent.element.querySelectorAll('.' + cls.FIRST_PAGER_ICON + ', .' + cls.PREV_PAGER_ICON + ', .' + cls.NEXT_PAGER_ICON + ', .' + cls.LAST_PAGER_ICON));\n        for (var i = 0; i < elements.length; i++) {\n            EventHandler.remove(elements[i], 'click', this.updatePageSettings);\n        }\n    };\n    Pager.prototype.columnPageChange = function (args) {\n        this.parent.pageSettings.currentColumnPage = args.value;\n    };\n    Pager.prototype.rowPageChange = function (args) {\n        this.parent.pageSettings.currentRowPage = args.value;\n    };\n    Pager.prototype.columnPageSizeChange = function (args) {\n        this.parent.pageSettings.columnPageSize = Number(args.value);\n    };\n    Pager.prototype.rowPageSizeChange = function (args) {\n        this.parent.pageSettings.rowPageSize = Number(args.value);\n    };\n    Pager.prototype.updatePageSettings = function (args) {\n        var targetId = args.target.id;\n        switch (targetId) {\n            case this.parent.element.id + '_row_firstIcon':\n                this.parent.pageSettings.currentRowPage = 1;\n                break;\n            case this.parent.element.id + '_row_prevIcon':\n                this.parent.pageSettings.currentRowPage = this.parent.pageSettings.currentRowPage > 1\n                    ? this.parent.pageSettings.currentRowPage - 1 : this.parent.pageSettings.currentRowPage;\n                break;\n            case this.parent.element.id + '_row_nextIcon':\n                this.parent.pageSettings.currentRowPage = this.parent.pageSettings.currentRowPage < this.parent.engineModule.rowPageCount\n                    ? this.parent.pageSettings.currentRowPage + 1 : this.parent.pageSettings.currentRowPage;\n                break;\n            case this.parent.element.id + '_row_lastIcon':\n                this.parent.pageSettings.currentRowPage = this.parent.engineModule.rowPageCount;\n                break;\n            case this.parent.element.id + '_column_firstIcon':\n                this.parent.pageSettings.currentColumnPage = 1;\n                break;\n            case this.parent.element.id + '_column_prevIcon':\n                this.parent.pageSettings.currentColumnPage = this.parent.pageSettings.currentColumnPage > 1\n                    ? this.parent.pageSettings.currentColumnPage - 1 : this.parent.pageSettings.currentColumnPage;\n                break;\n            case this.parent.element.id + '_column_nextIcon':\n                this.parent.pageSettings.currentColumnPage = this.parent.pageSettings.currentColumnPage\n                    < this.parent.engineModule.columnPageCount ? this.parent.pageSettings.currentColumnPage + 1\n                    : this.parent.pageSettings.currentColumnPage;\n                break;\n            case this.parent.element.id + '_column_lastIcon':\n                this.parent.pageSettings.currentColumnPage = this.parent.engineModule.columnPageCount;\n                break;\n        }\n        if (targetId.indexOf('_row') !== -1) {\n            this.parent.actionObj.actionName = events.rowPageNavigation;\n        }\n        else if (targetId.indexOf('_column') !== -1) {\n            this.parent.actionObj.actionName = events.columnPageNavigation;\n        }\n    };\n    Pager.prototype.createPagerContainer = function () {\n        var tableWidth = (this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n        var pagerOptions = this.parent.pagerSettings;\n        var rowMainDiv;\n        var columnMainDiv;\n        if (pagerOptions.showRowPager) {\n            rowMainDiv = this.createPagerItems('row', pagerOptions, tableWidth);\n        }\n        if (pagerOptions.showColumnPager) {\n            columnMainDiv = this.createPagerItems('column', pagerOptions, tableWidth);\n        }\n        var mainDivPagerSettings = createElement('div', {\n            id: this.parent.element.id + '_' + 'mainDiv',\n            className: (cls.GRID_PAGER_DIV + ' ' + ((!pagerOptions.showRowPager || !pagerOptions.showColumnPager) ? cls.GRID_PAGER_SINGLE_DIV : '') + ' ' + (pagerOptions.isInversed ? cls.INVERSE : ''))\n        });\n        var vertiSeparator = createElement('div', {\n            id: this.parent.element.id + '_' + 'vertical' + '_separator',\n            className: (this.parent.isAdaptive || tableWidth < 650) ? cls.PIVOT_H_SEPARATOR : cls.PIVOT_V_SEPARATOR\n        });\n        if (pagerOptions.isInversed && pagerOptions.showColumnPager && pagerOptions.showRowPager) {\n            mainDivPagerSettings.append(columnMainDiv, vertiSeparator, rowMainDiv);\n        }\n        else if (pagerOptions.showColumnPager && pagerOptions.showRowPager) {\n            mainDivPagerSettings.append(rowMainDiv, vertiSeparator, columnMainDiv);\n        }\n        else if (pagerOptions.showRowPager && !pagerOptions.showColumnPager) {\n            mainDivPagerSettings.append(rowMainDiv);\n        }\n        else if (!pagerOptions.showRowPager && pagerOptions.showColumnPager) {\n            mainDivPagerSettings.append(columnMainDiv);\n        }\n        return mainDivPagerSettings.outerHTML;\n    };\n    Pager.prototype.createPagerItems = function (axis, pagerOptions, tableWidth) {\n        var isSinglePagerEnabled = (!pagerOptions.showRowPager || !pagerOptions.showColumnPager);\n        var pagerAxisMainDiv = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_mainDiv',\n            className: (axis === 'row' ? (cls.PIVOT_ROW_PAGER_DIV + ' ' + (!pagerOptions.showRowPageSize ? cls.PAGE_SIZE_DISABLE : '')) : (cls.PIVOT_COLUMN_PAGER_DIV + ' ' + (!pagerOptions.showColumnPageSize ? cls.PAGE_SIZE_DISABLE : '')))\n        });\n        var pagerIconContainer = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_pagerSettings',\n            className: (axis === 'row' ? cls.PIVOT_ROW_PAGER_SETTINGS : cls.PIVOT_COLUMN_PAGER_SETTINGS)\n        });\n        if (this.parent.pagerSettings.showColumnPager && this.parent.pagerSettings.showRowPager) {\n            pagerIconContainer.classList.add(cls.PIVOT_BOTH_PAGER_SETTINGS);\n        }\n        var isFirstDisable = (axis === 'column' && this.parent.pageSettings.currentColumnPage === 1) || (axis === 'row' && this.parent.pageSettings.currentRowPage === 1);\n        var isLastDisable = (axis === 'column' && this.parent.pageSettings.currentColumnPage === this.parent.engineModule.columnPageCount) || (axis === 'row' && this.parent.pageSettings.currentRowPage === this.parent.engineModule.rowPageCount);\n        var navIconContainer = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_NavContainer',\n            attrs: {\n                class: cls.PIVOT_PAGER_NAV_CONTAINER + ' ' + cls.PIVOT_PAGER_CONTAINER\n            }\n        });\n        var pageInfoContainer = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_PageInfoContainer',\n            attrs: {\n                class: cls.PIVOT_PAGER_INFO_CONTAINER + ' ' + cls.PIVOT_PAGER_CONTAINER\n            }\n        });\n        var firstIcon = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_firstIcon',\n            attrs: {\n                class: cls.PIVOT_FIRST_ICON_DEFAULT + (isFirstDisable ? (' ' + cls.DISABLE_FIRST_PAGE + ' ' + cls.ICON_DISABLE) : ' ' + cls.PIVOT_FIRST_ICON_ENABLE),\n                title: this.parent.localeObj.getConstant('goToFirstPage'),\n                'aria-label': this.parent.localeObj.getConstant('goToFirstPage'),\n                tabindex: '0',\n                role: 'button'\n            }\n        });\n        var prevIcon = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_prevIcon',\n            attrs: {\n                class: cls.PIVOT_PREV_ICON_DEFAULT + (isFirstDisable ? (' ' + cls.DISABLE_PREV_PAGE + ' ' + cls.ICON_DISABLE) : ' ' + cls.PIVOT_PREV_ICON_ENABLE),\n                title: this.parent.localeObj.getConstant('goToPreviousPage'),\n                'aria-label': this.parent.localeObj.getConstant('goToPreviousPage'),\n                tabindex: '0',\n                role: 'button'\n            }\n        });\n        var pagerString = createElement('span', {\n            id: this.parent.element.id + '_' + axis + '_pagerString',\n            className: axis === 'row' ? cls.PIVOT_ROW_PAGER_STRING : cls.PIVOT_COLUMN_PAGER_STRING\n        });\n        pagerString.innerText = axis === 'row' ? this.parent.localeObj.getConstant('rowPage') : this.parent.localeObj.getConstant('columnPage');\n        var pagerTextBoxDiv = createElement('input', {\n            id: this.parent.element.id + '_' + axis + '_textbox',\n            className: axis === 'row' ? cls.PIVOT_ROW_DROPDOWN : cls.PIVOT_COLUMN_DROPDOWN,\n            attrs: {\n                'placeholder': '1'\n            }\n        });\n        var mainOfStringDiv = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_of_string_mainDiv',\n            className: axis === 'row' ? cls.PIVOT_ROW_OF_STRING_MAINDIV : cls.PIVOT_COLUMN_OF_STRING_MAINDIV\n        });\n        var ofString = createElement('span', {\n            id: this.parent.element.id + '_' + axis + '_ofString',\n            className: axis === 'row' ? cls.PIVOT_ROW_OF_STRING : cls.PIVOT_COLUMN_OF_STRING\n        });\n        ofString.innerText = this.parent.localeObj.getConstant('of') + ' ';\n        var pagerNumber = createElement('span', {\n            id: this.parent.element.id + '_' + axis + '_pagerNumber',\n            className: axis === 'row' ? cls.PIVOT_ROW_PAGER_NUMBER : cls.PIVOT_COLUMN_PAGER_NUMBER\n        });\n        pagerNumber.innerText = (axis === 'row' ? this.parent.engineModule.rowPageCount : this.parent.engineModule.columnPageCount).toString();\n        var nextIcon = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_nextIcon',\n            attrs: {\n                class: cls.PIVOT_NEXT_ICON_DEFAULT + (isLastDisable ? (' ' + cls.DISABLE_NEXT_PAGE + ' ' + cls.ICON_DISABLE) : ' ' + cls.PIVOT_NEXT_ICON_ENABLE),\n                title: this.parent.localeObj.getConstant('goToNextPage'),\n                'aria-label': this.parent.localeObj.getConstant('goToNextPage'),\n                tabindex: '0',\n                role: 'button'\n            }\n        });\n        var lastIcon = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_lastIcon',\n            attrs: {\n                class: cls.PIVOT_LAST_ICON_DEFAULT + (isLastDisable ? (' ' + cls.DISABLE_LAST_PAGE + ' ' + cls.ICON_DISABLE) : ' ' + cls.PIVOT_LAST_ICON_ENABLE),\n                title: this.parent.localeObj.getConstant('goToLastPage'),\n                'aria-label': this.parent.localeObj.getConstant('goToLastPage'),\n                tabindex: '0',\n                role: 'button'\n            }\n        });\n        var pageSize = createElement('span', {\n            id: this.parent.element.id + '_' + axis + '_size',\n            className: axis === 'row' ? cls.PIVOT_ROW_SIZE : cls.PIVOT_COLUMN_SIZE\n        });\n        pageSize.innerText = axis === 'row' ? this.parent.localeObj.getConstant('rowPerPage') : this.parent.localeObj.getConstant('columnPerPage');\n        var pageSizeDropDownMainDiv = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_size_list_maindiv',\n            className: cls.PIVOT_PAGE_SIZE_LIST_MAINDIV + ' ' + cls.PIVOT_PAGER_CONTAINER\n        });\n        var pageSizeDropDown = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_size_list',\n            className: axis === 'row' ? cls.PIVOT_ROW_SIZE_LIST : cls.PIVOT_COLUMN_SIZE_LIST\n        });\n        var pagerStringContainer = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_text_div',\n            className: cls.PIVOT_TEXT_DIV\n        });\n        var pagerElementContainer = createElement('div', {\n            id: this.parent.element.id + '_' + axis + '_text_div_1',\n            className: cls.PIVOT_TEXT_DIV_1\n        });\n        pageSizeDropDownMainDiv.append(pageSizeDropDown);\n        if (pagerOptions.enableCompactView || tableWidth < 400) {\n            navIconContainer.append(prevIcon, nextIcon);\n            pagerIconContainer.append(navIconContainer);\n        }\n        else {\n            mainOfStringDiv.append(ofString, pagerNumber);\n            navIconContainer.append(firstIcon, prevIcon, nextIcon, lastIcon);\n            pageInfoContainer.append(pagerTextBoxDiv, mainOfStringDiv);\n            pagerIconContainer.append(navIconContainer, pageInfoContainer);\n        }\n        if ((axis === 'row' && pagerOptions.showRowPager) || (axis === 'column' && pagerOptions.showColumnPager)) {\n            if (((axis === 'column' && !pagerOptions.showRowPager) || (axis === 'row' && !pagerOptions.showColumnPager)) && (isSinglePagerEnabled)) {\n                pagerElementContainer.append(pageSize, pageSizeDropDownMainDiv);\n            }\n            if ((!pagerOptions.showColumnPager || !pagerOptions.showRowPager) && (isSinglePagerEnabled)) {\n                if (axis === 'row') {\n                    if (pagerOptions.showRowPageSize) {\n                        pagerAxisMainDiv.append(pagerIconContainer, pagerString, pagerElementContainer);\n                    }\n                    else {\n                        pagerAxisMainDiv.append(pagerIconContainer, pagerString);\n                    }\n                }\n                if (axis === 'column') {\n                    if (pagerOptions.showColumnPageSize) {\n                        pagerAxisMainDiv.append(pagerIconContainer, pagerString, pagerElementContainer);\n                    }\n                    else {\n                        pagerAxisMainDiv.append(pagerIconContainer, pagerString);\n                    }\n                }\n            }\n            else {\n                if ((axis === 'row' && pagerOptions.showRowPageSize) || (axis === 'column' && pagerOptions.showColumnPageSize)) {\n                    if (!pagerOptions.enableCompactView && tableWidth > 400) {\n                        pagerStringContainer.append(pagerString, pageSize);\n                        pagerElementContainer.append(pagerIconContainer, pageSizeDropDownMainDiv);\n                    }\n                    else {\n                        pagerStringContainer.append(pagerString, pagerIconContainer);\n                        pagerElementContainer.append(pageSize, pageSizeDropDownMainDiv);\n                    }\n                }\n                else if ((axis === 'row' && !pagerOptions.showRowPageSize) || (axis === 'column' && !pagerOptions.showColumnPageSize)) {\n                    pagerStringContainer.append(pagerString);\n                    pagerElementContainer.append(pagerIconContainer);\n                }\n                pagerAxisMainDiv.append(pagerStringContainer, pagerElementContainer);\n            }\n        }\n        return pagerAxisMainDiv;\n    };\n    /**\n     * To destroy the pager.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Pager.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pagerModule) {\n            var element = select('#' + this.parent.element.id + '_column_textbox', this.parent.element);\n            var columnPagerTextBox = element ? getInstance(element, NumericTextBox) : null;\n            if (columnPagerTextBox) {\n                columnPagerTextBox.destroy();\n                columnPagerTextBox = null;\n            }\n            element = select('#' + this.parent.element.id + '_row_textbox', this.parent.element);\n            var rowPagerTextBox = element ? getInstance(element, NumericTextBox) : null;\n            if (rowPagerTextBox) {\n                rowPagerTextBox.destroy();\n                rowPagerTextBox = null;\n            }\n            element = select('#' + this.parent.element.id + '_' + 'column' + '_size_list', this.parent.element);\n            var columnPageSizeDropDown = element ? getInstance(element, DropDownList) : null;\n            if (columnPageSizeDropDown) {\n                columnPageSizeDropDown.destroy();\n                columnPageSizeDropDown = null;\n            }\n            element = select('#' + this.parent.element.id + '_' + 'row' + '_size_list', this.parent.element);\n            var rowPageSizeDropDown = element ? getInstance(element, DropDownList) : null;\n            if (rowPageSizeDropDown) {\n                rowPageSizeDropDown.destroy();\n                rowPageSizeDropDown = null;\n            }\n            if (this.pager) {\n                this.pager.destroy();\n            }\n            this.pager = null;\n        }\n        else {\n            return;\n        }\n    };\n    return Pager;\n}());\nexport { Pager };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest, select, remove } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module\n     *\n     * @param {PivotFieldList} parent - Instance of field list.\n     */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Container',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass.split(' '));\n        }\n        if (this.parent.enableFieldSearching) {\n            addClass([fieldListWrappper], cls.FIELD_LIST_SEARCH_MODE_CLASS);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.FIELD_LIST_SEARCH_MODE_CLASS);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS\n            });\n            headerContent.innerText = this.parent.localeObj.getConstant('staticFieldList');\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons(fieldListWrappper);\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function (fieldListWrappper) {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: (this.parent.isPopupView && this.parent.pivotGridModule) ?\n                    (isNullOrUndefined(this.parent.pivotGridModule.pivotDeferLayoutUpdate) ? true :\n                        this.parent.pivotGridModule.pivotDeferLayoutUpdate) : (isNullOrUndefined(this.parent.isDeferLayoutUpdate) ? true :\n                    this.parent.isDeferLayoutUpdate),\n                enableRtl: this.parent.enableRtl,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                locale: this.parent.locale,\n                change: this.onCheckChange.bind(this),\n                cssClass: this.parent.cssClass\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo(select('#' + this.parent.element.id + 'DeferUpdateCheckBox', fieldListWrappper));\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                isPrimary: true,\n                disabled: (this.parent.isPopupView && this.parent.pivotGridModule) ?\n                    (!isNullOrUndefined(this.parent.pivotGridModule.pivotDeferLayoutUpdate) ?\n                        !this.parent.pivotGridModule.pivotDeferLayoutUpdate : false) :\n                    (!isNullOrUndefined(this.parent.isDeferLayoutUpdate) ? !this.parent.isDeferLayoutUpdate : false)\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo(select('#' + this.parent.element.id + '_DeferUpdateButton1', fieldListWrappper));\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate,\n            locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            disabled: (this.parent.isPopupView && this.parent.pivotGridModule && this.parent.pivotGridModule['refreshing']) ?\n                (this.parent.allowDeferLayoutUpdate && !isNullOrUndefined(this.parent.pivotGridModule.pivotDeferLayoutUpdate) ?\n                    !this.parent.pivotGridModule.pivotDeferLayoutUpdate : false) : ((this.parent['refreshing'] &&\n                !isNullOrUndefined(this.parent.isDeferLayoutUpdate) && this.parent.allowDeferLayoutUpdate) ?\n                !this.parent.isDeferLayoutUpdate : false)\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo(select('#' + this.parent.element.id + '_DeferUpdateButton2', fieldListWrappper));\n        if (this.parent.allowDeferLayoutUpdate && ((!this.parent.isDeferLayoutUpdate && this.parent.renderMode === 'Popup' &&\n            this.parent['refreshing']) || (this.parent.isPopupView && this.parent.pivotGridModule &&\n            !this.parent.pivotGridModule.pivotDeferLayoutUpdate && this.parent.pivotGridModule['refreshing']))) {\n            this.deferUpdateApplyButton.element.style.display = 'none';\n            this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n            this.deferUpdateCancelButton.isPrimary = true;\n            this.deferUpdateApplyButton.disabled = this.parent.isPopupView ? this.parent.pivotGridModule.pivotDeferLayoutUpdate\n                : this.parent.isDeferLayoutUpdate;\n            this.deferUpdateCancelButton.disabled = this.parent.isPopupView ? this.parent.pivotGridModule.pivotDeferLayoutUpdate\n                : this.parent.isDeferLayoutUpdate;\n        }\n        this.deferUpdateCancelButton.element.onclick = this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT,\n                attrs: { 'title': this.parent.localeObj.getConstant('deferLayoutUpdate') }\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1', attrs: { 'type': 'button', 'title': this.parent.localeObj.getConstant('apply') }\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2', attrs: { 'type': 'button', 'title': this.parent.localeObj.getConstant('cancel') }\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n            if (this.parent.dataType === 'olap') {\n                this.parent.clonedFieldListData = PivotUtil.cloneOlapFieldSettings(this.parent.olapEngineModule.fieldListData);\n            }\n            this.parent.clonedFieldList = PivotUtil.getClonedFieldList(this.parent.pivotFieldList);\n        }\n        this.parent.isDeferLayoutUpdate = args.checked;\n        if (this.parent.isPopupView && this.parent.pivotGridModule) {\n            this.parent.pivotGridModule.pivotDeferLayoutUpdate = args.checked;\n        }\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !args.checked });\n            this.deferUpdateCancelButton.setProperties({ disabled: !args.checked });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate && args.checked) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        if ((Object.keys(this.parent.clonedFieldList).length !== Object.keys(this.parent.pivotFieldList).length) &&\n            this.parent.calculatedFieldModule && this.parent.calculatedFieldModule.field && this.parent.dataType === 'pivot') {\n            this.parent.engineModule.fields = Object.keys(this.parent.clonedFieldList);\n        }\n        this.onCloseFieldList(null, true);\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.pivotChange = false;\n        }\n        this.parent.isDeferUpdateApplied = true;\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = PivotUtil.getClonedDataSourceSettings(parent.dataSourceSettings);\n        if (this.parent.dataType === 'olap') {\n            this.parent.clonedFieldListData = PivotUtil.cloneOlapFieldSettings(this.parent.olapEngineModule.fieldListData);\n        }\n        parent.clonedFieldList = PivotUtil.getClonedFieldList(parent.pivotFieldList);\n    };\n    DialogRenderer.prototype.onCloseFieldList = function (args, isDeferLayoutEnabled) {\n        if ((this.parent.allowDeferLayoutUpdate || isDeferLayoutEnabled) && (!this.parent.isPopupView ||\n            (this.parent.pivotGridModule && this.parent.pivotGridModule.actionObj.actionName !== '') || this.parent.actionObj.actionName !== '')) {\n            this.parent.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource\n            }, true);\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.fieldList = PivotUtil.getClonedFieldList(this.parent.clonedFieldList);\n                this.parent.olapEngineModule.fieldListData = PivotUtil.cloneOlapFieldSettings(this.parent.clonedFieldListData);\n                if (!this.parent.isPopupView) {\n                    for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                        var name_1 = _a[_i];\n                        var item = this.parent.clonedFieldList[name_1];\n                        this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n                    }\n                }\n                else if (this.parent.isPopupView && this.parent.clonedFieldListData &&\n                    Object.keys(this.parent.clonedFieldListData).length > 0) {\n                    this.parent.olapEngineModule.fieldListData = this.parent.clonedFieldListData;\n                }\n            }\n            else {\n                this.parent.engineModule.fieldList = PivotUtil.getClonedFieldList(this.parent.clonedFieldList);\n            }\n            this.parent.updateDataSource(false, true);\n        }\n        if ((!this.parent.isDeferLayoutUpdate || (this.parent.pivotGridModule\n            && !this.parent.pivotGridModule.pivotDeferLayoutUpdate)) && isDeferLayoutEnabled) {\n            this.parent.pivotChange = false;\n        }\n        if (this.parent.allowDeferLayoutUpdate && this.parent.isPopupView && this.parent.pivotGridModule && !this.parent.isAdaptive) {\n            this.parent.pivotGridModule.actionObj.actionName = '';\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            this.parent.pivotGridModule.setProperties({\n                dataSourceSettings: this.parent.clonedDataSource\n            }, true);\n        }\n        if (this.parent.allowDeferLayoutUpdate && this.parent.allowCalculatedField &&\n            this.parent.dataType === 'pivot' && !this.parent.isAdaptive) {\n            this.parent.engineModule.fieldList = this.parent.pivotFieldList = PivotUtil.getClonedFieldList(this.parent.clonedFieldList);\n            var clonedField_1 = Object.keys(this.parent.engineModule.fieldList);\n            if (this.parent.allowCalculatedField && clonedField_1.length !== this.parent.engineModule.fields.length) {\n                var fields_1 = [];\n                this.parent.engineModule.fields.forEach(function (field) {\n                    if (clonedField_1.indexOf(field) !== -1) {\n                        fields_1[fields_1.length] = field;\n                    }\n                });\n                this.parent.engineModule.fields = fields_1;\n            }\n        }\n        if (this.parent.renderMode === 'Popup' && !isDeferLayoutEnabled) {\n            this.parent.dialogRenderer.fieldListDialog.hide();\n            this.parent.actionObj.actionName = events.closeFieldlist;\n        }\n        else {\n            this.parent.actionObj.actionName = events.actionDropped;\n        }\n        if (this.parent.actionObj.actionName) {\n            this.parent.actionCompleteMethod();\n        }\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList'),\n                'role': 'button'\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                cssClass: this.parent.cssClass,\n                close: this.removeFieldListIcon.bind(this),\n                open: this.dialogOpen.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(select('#' + fieldListWrappper.id + '_dialog-content', fieldListWrappper), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: false,\n                cssClass: this.parent.cssClass,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons(fieldListWrappper);\n            setStyleAttribute(select('#' + fieldListWrappper.id + '_title', fieldListWrappper), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    DialogRenderer.prototype.dialogOpen = function () {\n        if (this.lastTabIndex === 4) {\n            this.adaptiveElement.items[this.lastTabIndex].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.adaptiveElement.refresh();\n        }\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     *\n     * @param {string[]} selectedNodes - selectedNodes\n     * @returns {void}\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            locale: this.parent.locale,\n            selected: this.tabSelect.bind(this),\n            cssClass: this.parent.cssClass\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        this.lastTabIndex = e.selectedIndex;\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('button', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'type': 'button',\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl, locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl, locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl, locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS\n        });\n        axisPrompt.innerText = this.parent.localeObj.getConstant('addPrompt');\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function () {\n        try {\n            if (!this.parent.isAdaptive) {\n                this.parent.actionObj.actionName = events.openCalculatedField;\n                if (this.parent.actionBeginMethod()) {\n                    return;\n                }\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n            }\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    DialogRenderer.prototype.showFieldListDialog = function () {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    /**  @hidden */\n    DialogRenderer.prototype.onShowFieldList = function () {\n        this.parent.actionObj.actionName = events.showFieldList;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        this.parent.actionObj.actionName = '';\n        try {\n            if (this.parent.allowDeferLayoutUpdate) {\n                if (this.parent.isAdaptive) {\n                    this.parent.axisFieldModule.render();\n                }\n                this.parent.clonedDataSource = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n                if (this.parent.dataType === 'olap') {\n                    this.parent.clonedFieldListData = PivotUtil.cloneOlapFieldSettings(this.parent.olapEngineModule.fieldListData);\n                }\n                this.parent.clonedFieldList = PivotUtil.getClonedFieldList(this.parent.pivotFieldList);\n            }\n            addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            this.parent.dialogRenderer.fieldListDialog.show();\n            this.parent.dialogRenderer.fieldListDialog.element.style.top =\n                parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                    '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (this.parent.isAdaptive && this.parent.allowCalculatedField && this.parent.calculatedFieldModule) {\n            if (this.adaptiveElement && this.adaptiveElement.selectedItem === 4) {\n                if (select('#' + this.parent.element.id + 'droppable', this.adaptiveElement.element)) {\n                    this.parent.calculatedFieldModule.updateAdaptiveCalculatedField(false);\n                }\n                else {\n                    this.parent.notify(events.initCalculatedField, { edit: false });\n                }\n            }\n        }\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    /**\n     * Destroys the Field Table component.\n     *\n     * @function destroy\n     * @returns {void}\n     * @hidden\n     */\n    DialogRenderer.prototype.destroy = function () {\n        if (this.parent.renderMode === 'Popup') {\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        if (this.deferUpdateCheckBox && !this.deferUpdateCheckBox.isDestroyed) {\n            this.deferUpdateCheckBox.destroy();\n            this.deferUpdateCheckBox = null;\n        }\n        if (this.deferUpdateApplyButton && !this.deferUpdateApplyButton.isDestroyed) {\n            this.deferUpdateApplyButton.destroy();\n            this.deferUpdateApplyButton = null;\n        }\n        if (this.deferUpdateCancelButton && !this.deferUpdateCancelButton.isDestroyed) {\n            this.deferUpdateCancelButton.destroy();\n            this.deferUpdateCancelButton = null;\n        }\n        if (this.adaptiveElement && !this.adaptiveElement.isDestroyed) {\n            this.adaptiveElement.destroy();\n            this.adaptiveElement = null;\n        }\n        if (this.parent.renderMode === 'Popup') {\n            if (this.fieldListDialog && !this.fieldListDialog.isDestroyed) {\n                this.fieldListDialog.destroy();\n                this.fieldListDialog = null;\n            }\n            if (document.getElementById(this.parent.element.id + '_Container')) {\n                remove(document.getElementById(this.parent.element.id + '_Container'));\n            }\n        }\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined, getInstance } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, TextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module\n     *\n     * @param {PivotFieldList} parent - Instance of field list.\n     */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.isSearching = false;\n        this.parentIDs = [];\n        this.isSpaceKey = false;\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     *\n     * @param {number} axis - Axis position.\n     * @returns {void}\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = this.parent.pivotGridModule ?\n            this.parent.pivotGridModule.defaultFieldListOrder : this.parent.defaultFieldListOrder;\n        this.fieldListSort = this.fieldListSort === 'Ascending' ? 'Ascend' :\n            this.fieldListSort === 'Descending' ? 'Descend' : 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant('allFields') }\n            });\n            treeHeader.innerText = this.parent.localeObj.getConstant('allFields');\n            var treeOuterDiv = createElement('div', {\n                className: cls.FIELD_LIST_TREE_OUTER_DIV_CLASS + ' ' + cls.TREE_CONTAINER\n            });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: cls.FIELD_HEADER_CONTAINER_CLASS });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            if (this.parent.enableFieldSearching) {\n                var searchWrapper = createElement('div', {\n                    id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n                    className: cls.FIELD_LIST_SEARCH_CLASS\n                });\n                var searchInput = createElement('input', { attrs: { 'type': 'text' } });\n                searchWrapper.appendChild(searchInput);\n                this.fieldSearch = new TextBox({\n                    placeholder: this.parent.localeObj.getConstant('search'),\n                    enableRtl: this.parent.enableRtl,\n                    locale: this.parent.locale,\n                    cssClass: cls.FIELD_LIST_SEARCH_INPUT_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                    input: this.textChange.bind(this),\n                    showClearButton: true\n                });\n                this.fieldSearch.isStringTemplate = true;\n                this.fieldSearch.appendTo(searchInput);\n                this.fieldSearch.addIcon('append', cls.FIELD_LIST_SEARCH_ICON_CLASS + ' ' + cls.ICON);\n                var promptDiv = createElement('div', {\n                    className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE\n                });\n                promptDiv.innerText = this.parent.localeObj.getConstant('noMatches');\n                fieldTable.appendChild(searchWrapper);\n                fieldTable.appendChild(promptDiv);\n            }\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS\n                });\n                axisHeader.innerText = this.parent.localeObj.getConstant('centerHeader');\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = { 'None': 'sortNone', 'Ascend': 'sortAscending', 'Descend': 'sortDescending' };\n        var keys = Object.keys(options);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var option = keys_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option,\n                    'title': this.parent.localeObj.getConstant(options[option]),\n                    'role': 'button'\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeChecked.bind(this),\n            nodeClicked: this.nodeStateChange.bind(this),\n            keyPress: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            loadOnDemand: this.parent.dataType === 'olap' ? false : (this.parent.enableFieldSearching ? false : true),\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n        var dragEle = this.parent.renderMode === 'Fixed' ? this.parent.element : this.parentElement;\n        if (!isNullOrUndefined(dragEle.querySelector('.' + cls.FIELD_LIST_CLASS))) {\n            getInstance(dragEle.querySelector('.' + cls.FIELD_LIST_CLASS), TreeView)['dragObj']\n                .enableAutoScroll = false;\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            if (args.nodeData.hasChildren) {\n                allowDrag = false;\n                args.node.querySelector('.' + cls.CHECKBOX_CONTAINER).style.display = 'none';\n                addClass([args.node], cls.FIELD_TREE_PARENT);\n            }\n            else {\n                allowDrag = true;\n            }\n        }\n        if (!isNullOrUndefined(args.nodeData.pid)) {\n            addClass([args.node], cls.FIELD_TREE_CHILD);\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            var field = PivotUtil.getFieldInfo(args.nodeData.id, this.parent);\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: (field.fieldItem ? field.fieldItem.allowDragAndDrop ?\n                        this.parent.localeObj.getConstant('drag') : '' : this.parent.localeObj.getConstant('drag')),\n                    'aria-disabled': 'false'\n                },\n                className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' +\n                    (field.fieldItem ? field.fieldItem.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : '')\n            });\n            if (args.node.querySelector('.' + cls.CHECKBOX_CONTAINER) &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.' + cls.CHECKBOX_CONTAINER));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n        if (this.parent.enableFieldSearching && this.isSearching) {\n            var liElement = args.node;\n            if (this.parent.dataType === 'olap') {\n                var id = liElement.getAttribute('data-uid');\n                var searchItem = this.parent.pivotCommon.eventBase.searchListItem;\n                for (var i = 0; i < this.parentIDs.length; i++) {\n                    if (id === this.parentIDs[i]) {\n                        addClass([liElement], cls.ICON_DISABLE);\n                    }\n                    for (var _i = 0, searchItem_1 = searchItem; _i < searchItem_1.length; _i++) {\n                        var li2 = searchItem_1[_i];\n                        var parentID = this.parent.pivotCommon.eventBase.getParentIDs(this.fieldTable, li2.getAttribute('data-uid'), []);\n                        if (PivotUtil.inArray(id, parentID) > -1) {\n                            removeClass([liElement], cls.ICON_DISABLE);\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < this.nonSearchList.length; i++) {\n                    if (liElement.textContent === this.nonSearchList[i].textContent) {\n                        addClass([liElement], cls.ICON_DISABLE);\n                        break;\n                    }\n                    else {\n                        if (liElement.innerText === this.nonSearchList[i].textContent) {\n                            addClass([liElement], cls.ICON_DISABLE);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.' + cls.CHECKBOX_CONTAINER).style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.' + cls.CHECKBOX_CONTAINER).style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.' + cls.CHECKBOX_CONTAINER).style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : '')\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            locale: this.parent.locale,\n            width: '320px',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: false,\n            cssClass: this.parent.cssClass,\n            close: this.closeTreeDialog.bind(this),\n            target: closest(this.parentElement, '.' + cls.WRAPPER_CLASS)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerText = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_OUTER_DIV_CLASS });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            cssClass: cls.EDITOR_SEARCH_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE\n        });\n        promptDiv.innerText = this.parent.localeObj.getConstant('noMatches');\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            cssClass: this.parent.cssClass,\n            nodeChecked: this.nodeChecked.bind(this),\n            nodeClicked: this.addNode.bind(this),\n            keyPress: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv;\n        var treeOuterDiv;\n        if (this.parent.isAdaptive) {\n            promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        }\n        else {\n            promptDiv = this.parentElement.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n            treeOuterDiv = this.parentElement.querySelector('.' + cls.TREE_CONTAINER);\n        }\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n            if (!this.parent.isAdaptive) {\n                addClass([treeOuterDiv], cls.ICON_DISABLE);\n                removeClass([treeOuterDiv], cls.FIELD_LIST_TREE_OUTER_DIV_SEARCH_CLASS);\n            }\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n            if (!this.parent.isAdaptive) {\n                removeClass([treeOuterDiv], cls.ICON_DISABLE);\n                addClass([treeOuterDiv], cls.FIELD_LIST_TREE_OUTER_DIV_SEARCH_CLASS);\n            }\n        }\n        this.isSearching = disabledList.length > 0 ? true : false;\n        this.nonSearchList = disabledList;\n        if (this.parent.dataType === 'olap') {\n            this.parentIDs = [];\n            for (var i = 0; i < liList.length; i++) {\n                if (liList[i].classList.contains('e-level-1')) {\n                    var id = liList[i].getAttribute('data-uid');\n                    this.parentIDs.push(id);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        var _this = this;\n        if (args.event.target.classList.contains(cls.DRAG_CLASS) &&\n            !args.event.target.classList.contains(cls.DRAG_DISABLE_CLASS)) {\n            var fieldInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n            var dragEventArgs = {\n                fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n                dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n            };\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.parent.isDragging = true;\n                    addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n                    var data = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        data = _this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    else {\n                        data = _this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                    if (data && data.aggregateType === 'CalculatedField') {\n                        for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                            var axisContent = axis_1[_i];\n                            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        }\n                    }\n                    var dragItem = args.clonedNode;\n                    if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                        _this.parent.renderMode) === 'Popup') {\n                        dragItem.style.zIndex = (_this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                    }\n                }\n                else {\n                    _this.parent.isDragging = false;\n                    args.cancel = true;\n                }\n            });\n        }\n        else {\n            this.parent.isDragging = false;\n            args.cancel = true;\n        }\n    };\n    // private getFieldDragEventArgs(dragEventArgs: FieldDragStartEventArgs): FieldDragStartEventArgs | Deferred {\n    //     let callbackPromise: Deferred = new Deferred();\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs, (observedArgs: FieldDragStartEventArgs) => {\n    //         callbackPromise.resolve(observedArgs);\n    //     });\n    //     return callbackPromise;\n    // }\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.isPopupView && this.parent.pivotGridModule ? this.parent.pivotGridModule\n                : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.isDeferLayoutUpdate || (this.parent.pivotGridModule && this.parent.pivotGridModule.pivotDeferLayoutUpdate)) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Container');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Container');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].getAttribute('data-uid') === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeChecked = function (args) {\n        if (this.isSpaceKey) {\n            var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n            if (!isNullOrUndefined(node)) {\n                var li = closest(node, 'li');\n                var id = li.getAttribute('data-uid');\n                if (this.parent.isAdaptive) {\n                    this.addNode(undefined, id, args.action === 'check', node);\n                }\n                else {\n                    this.nodeStateChange(undefined, id, args.action === 'check', node);\n                }\n            }\n        }\n        this.isSpaceKey = false;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args, id, isChecked, node) {\n        var _this = this;\n        node = isNullOrUndefined(node) ? args.node : node;\n        id = isNullOrUndefined(id) ? node.getAttribute('data-uid') : id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[id];\n        if (!isNullOrUndefined(args)) {\n            this.isSpaceKey = args.event.action && args.event.action === 'space';\n            if (isNullOrUndefined(selectedNode) || node.classList.contains(cls.ICON_DISABLE) || (args.event.target &&\n                (args.event.target.classList.contains(cls.COLLAPSIBLE) ||\n                    args.event.target.classList.contains(cls.EXPANDABLE))) ||\n                (args.event.action && args.event.action !== 'enter')) {\n                return;\n            }\n            isChecked = false;\n            var getNodeDetails = this.fieldTable.getNode(node);\n            if (args.event && args.event.target &&\n                !args.event.target.closest('.' + cls.CHECKBOX_CONTAINER)) {\n                if (getNodeDetails.isChecked === 'true') {\n                    this.fieldTable.uncheckAll([node]);\n                    isChecked = false;\n                }\n                else {\n                    this.fieldTable.checkAll([node]);\n                    isChecked = true;\n                }\n            }\n            else {\n                isChecked = getNodeDetails.isChecked === 'true';\n            }\n        }\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        var fieldInfo = PivotUtil.getFieldInfo(id, this.parent);\n        var parentNode = node.closest('.' + cls.FIELD_TREE_PARENT);\n        if (isChecked) {\n            var eventdrop = {\n                fieldName: id, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: (selectedNode.type === 'number' || (selectedNode.type === 'CalculatedField' &&\n                    selectedNode.formula && selectedNode.formula.indexOf('Measure') > -1 &&\n                    this.parent.dataType === 'olap')) ? 'values' : 'rows',\n                dropPosition: fieldInfo.position, draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                    if (parentNode) {\n                        addClass([parentNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                    }\n                    _this.updateSelectedNodes(node, 'check');\n                    var addNode = _this.parent.pivotCommon.dataSourceUpdate.getNewField(id, fieldInfo.fieldItem);\n                    _this.updateReportSettings(addNode, observedArgs);\n                    _this.updateNodeStateChange(id, selectedNode, isChecked);\n                }\n                else {\n                    _this.updateCheckState(selectedNode, 'check');\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: id,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                    if (parentNode && isNullOrUndefined(parentNode.querySelector('.' + cls.FIELD_TREE_CHILD + ' .' + cls.NODE_CHECK_CLASS))) {\n                        removeClass([parentNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                    }\n                    _this.updateSelectedNodes(node, 'uncheck');\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id);\n                    if (_this.parent.dataType === 'pivot' && _this.parent.showValuesButton && _this.parent.dataSourceSettings.values.length > 1 &&\n                        fieldInfo && fieldInfo.position < _this.parent.dataSourceSettings.valueIndex &&\n                        ((_this.parent.dataSourceSettings.valueAxis === 'row' && fieldInfo.axis === 'rows') ||\n                            (_this.parent.dataSourceSettings.valueAxis === 'column' && fieldInfo.axis === 'columns'))) {\n                        control.setProperties({ dataSourceSettings: { valueIndex: _this.parent.dataSourceSettings.valueIndex - 1 } }, true);\n                    }\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                    }\n                    _this.updateNodeStateChange(id, selectedNode, isChecked);\n                }\n                else {\n                    _this.updateCheckState(selectedNode, 'uncheck');\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.updateReportSettings = function (newField, dropArgs) {\n        var dropPosition = dropArgs.dropPosition;\n        var dropClass = dropArgs.dropAxis;\n        if (this.parent.dataType === 'pivot' && this.parent.showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            var dropAxisFields = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                dropClass === 'rows') ? this.parent.dataSourceSettings.rows : (this.parent.dataSourceSettings.valueAxis === 'column' && dropClass === 'columns') ?\n                this.parent.dataSourceSettings.columns : undefined;\n            if (!isNullOrUndefined(dropAxisFields)) {\n                if (dropPosition === -1 && this.parent.dataSourceSettings.valueIndex === -1) {\n                    this.parent.setProperties({ dataSourceSettings: { valueIndex: dropAxisFields.length } }, true);\n                }\n                else if (dropPosition > -1 && dropPosition <= this.parent.dataSourceSettings.valueIndex) {\n                    this.parent.setProperties({ dataSourceSettings: { valueIndex: this.parent.dataSourceSettings.valueIndex + 1 } }, true);\n                }\n                else if (this.parent.dataSourceSettings.valueIndex > -1 && dropPosition > this.parent.dataSourceSettings.valueIndex) {\n                    dropPosition = dropPosition - 1;\n                }\n            }\n        }\n        switch (dropClass) {\n            case 'filters':\n                if (dropPosition !== -1) {\n                    this.parent.dataSourceSettings.filters.splice(dropPosition, 0, newField);\n                }\n                else {\n                    this.parent.dataSourceSettings.filters.push(newField);\n                }\n                break;\n            case 'rows':\n                if (dropPosition !== -1) {\n                    this.parent.dataSourceSettings.rows.splice(dropPosition, 0, newField);\n                }\n                else {\n                    this.parent.dataSourceSettings.rows.push(newField);\n                }\n                break;\n            case 'columns':\n                if (dropPosition !== -1) {\n                    this.parent.dataSourceSettings.columns.splice(dropPosition, 0, newField);\n                }\n                else {\n                    this.parent.dataSourceSettings.columns.push(newField);\n                }\n                break;\n            case 'values':\n                if (dropPosition !== -1) {\n                    this.parent.dataSourceSettings.values.splice(dropPosition, 0, newField);\n                }\n                else {\n                    this.parent.dataSourceSettings.values.push(newField);\n                }\n                if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                    !(this.parent.olapEngineModule).isMeasureAvail && !(this.parent.dataSourceSettings.values.length > 1)) {\n                    var measureField = {\n                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined\n                    };\n                    var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                        this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                    fieldAxis.push(measureField);\n                }\n                break;\n        }\n    };\n    TreeViewRenderer.prototype.updateCheckState = function (selectedNode, action) {\n        var chkState = this.fieldTable.element.querySelectorAll('.' + cls.CHECKBOX_CONTAINER);\n        var innerText = this.fieldTable.element.querySelectorAll('.e-list-text');\n        for (var i = 0; i < chkState.length; i++) {\n            if (selectedNode.caption === innerText[i].textContent) {\n                if (action === 'check') {\n                    this.fieldTable.uncheckAll([selectedNode['id']]);\n                }\n                else {\n                    this.fieldTable.checkAll([selectedNode['id']]);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeStateChange = function (id, selectedNode, isChecked) {\n        if (this.parent.isDeferLayoutUpdate === false || (this.parent.pivotGridModule &&\n            this.parent.pivotGridModule.pivotDeferLayoutUpdate === false)) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            selectedNode.isSelected = isChecked;\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.updateFieldlistData(id, isChecked);\n            }\n            this.updateDataSource();\n        }\n        var selectedLi = this.treeViewElement.querySelector('[data-uid=\"' + id + '\"]');\n        selectedLi.focus();\n        removeClass([selectedLi], 'e-hover');\n        var parent = this.parent;\n        setTimeout(function () {\n            parent.axisFieldModule.render();\n        });\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.isPopupView) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args, id, isChecked, node) {\n        var _this = this;\n        node = isNullOrUndefined(node) ? args.node : node;\n        id = isNullOrUndefined(id) ? node.getAttribute('data-uid') : id;\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[id];\n        if (!isNullOrUndefined(args)) {\n            this.isSpaceKey = args.event.key && args.event.key === ' ';\n            if (isNullOrUndefined(selectedNode) || args.node.classList.contains(cls.ICON_DISABLE) || (args.event.target &&\n                (args.event.target.classList.contains(cls.COLLAPSIBLE) ||\n                    args.event.target.classList.contains(cls.EXPANDABLE))) ||\n                (args.event.key && args.event.key !== 'Enter')) {\n                return;\n            }\n            isChecked = false;\n            var getNodeDetails = this.fieldTable.getNode(args.node);\n            if (args.event && args.event.target &&\n                !args.event.target.classList.contains(cls.CHECK_BOX_FRAME_CLASS)) {\n                if (getNodeDetails.isChecked === 'true') {\n                    this.fieldTable.uncheckAll([args.node]);\n                    isChecked = false;\n                }\n                else {\n                    this.fieldTable.checkAll([args.node]);\n                    isChecked = true;\n                }\n            }\n            else {\n                isChecked = getNodeDetails.isChecked === 'true';\n            }\n        }\n        var fieldInfo = PivotUtil.getFieldInfo(selectedNode.id.toString(), this.parent);\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        if (isChecked) {\n            var axis = ['filters', 'columns', 'rows', 'values'];\n            var eventdrop = {\n                fieldName: fieldInfo.fieldName, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: axis[this.parent.dialogRenderer.adaptiveElement.selectedItem], draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedNodes.push(selectedNode.id.toString());\n                }\n                else {\n                    _this.updateCheckState(selectedNode, 'check');\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: fieldInfo.fieldName,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var count = _this.selectedNodes.length;\n                    while (count--) {\n                        if (_this.selectedNodes[count] === selectedNode.id.toString()) {\n                            _this.selectedNodes.splice(count, 1);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.updateCheckState(selectedNode, 'uncheck');\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = this.parent.pivotFieldList ? Object.keys(this.parent.pivotFieldList) : [];\n            var treeDataInfo = {};\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var key = keys_2[_i];\n                var member = this.parent.pivotFieldList[key];\n                treeDataInfo[key] = { id: member.id, pid: member.pid, caption: member.caption, isSelected: member.isSelected };\n                if (!isNullOrUndefined(member.pid) && !treeDataInfo[key].hasChildren) {\n                    var parentId = member.pid + '_group_name';\n                    treeDataInfo[key].pid = parentId;\n                    treeDataInfo[parentId] = {\n                        id: parentId, caption: member.pid,\n                        isSelected: treeDataInfo[parentId] && treeDataInfo[parentId].isSelected\n                            ? treeDataInfo[parentId].isSelected : member.isSelected, hasChildren: true\n                    };\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                    this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    treeDataInfo[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    treeDataInfo[item.name].isSelected = true;\n                }\n            }\n            var members = Object.keys(treeDataInfo);\n            for (var _b = 0, members_1 = members; _b < members_1.length; _b++) {\n                var member = members_1[_b];\n                var obj = treeDataInfo[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData ? this.parent.olapEngineModule.fieldListData : [];\n        if (this.parent.isAdaptive) {\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                var framedSet = void 0;\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = isNullOrUndefined(this.parent.olapEngineModule.fieldListData) ? [] :\n                PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        this.parent.actionObj.actionName = events.sortFieldTree;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        try {\n            if (target.className.indexOf('e-selected') === -1) {\n                switch (option) {\n                    case 'None':\n                        this.fieldListSort = 'None';\n                        addClass([target], 'e-selected');\n                        removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                        removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                        break;\n                    case 'Ascend':\n                        this.fieldListSort = 'Ascend';\n                        addClass([target], 'e-selected');\n                        removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                        removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                        break;\n                    case 'Descend':\n                        this.fieldListSort = 'Descend';\n                        addClass([target], 'e-selected');\n                        removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                        removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                        break;\n                }\n                this.refreshTreeView();\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n        this.parent.actionObj.actionName = this.parent.getActionCompleteName();\n        if (this.parent.actionObj.actionName) {\n            this.parent.actionCompleteMethod();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (treeData.length > 0) {\n            if (this.parent.dataType === 'olap') {\n                var measure = void 0;\n                var calcMember = void 0;\n                if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                    treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                    calcMember = treeData[0];\n                    measure = treeData[1];\n                    treeData.splice(0, 2);\n                }\n                else {\n                    measure = treeData[0];\n                    treeData.splice(0, 1);\n                }\n                treeData = sortOrder === 'Ascend' ?\n                    (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                        ((b.caption > a.caption) ? -1 : 0); })) : sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                        ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n                if (calcMember) {\n                    treeData.splice(0, 0, calcMember, measure);\n                }\n                else {\n                    treeData.splice(0, 0, measure);\n                }\n            }\n            else {\n                this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n            }\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function () {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n        this.fieldDialog.destroy();\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n        this.fieldDialog = null;\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.editorSearch && !this.editorSearch.isDestroyed) {\n            this.editorSearch.destroy();\n            this.editorSearch = null;\n        }\n        if (this.fieldSearch && !this.fieldSearch.isDestroyed) {\n            this.fieldSearch.destroy();\n            this.fieldSearch = null;\n        }\n        if (this.fieldTable && !this.fieldTable.isDestroyed) {\n            this.fieldTable.destroy();\n            this.fieldTable = null;\n        }\n        if (this.fieldDialog && !this.fieldDialog.isDestroyed) {\n            this.fieldDialog.destroy();\n            this.fieldDialog = null;\n        }\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, EventHandler, removeClass, addClass, Droppable } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-container'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant(fieldLabels[len]) }\n            });\n            axisTitle.innerText = this.parent.localeObj.getConstant(fieldLabels[len]);\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS\n            });\n            axisPrompt.innerText = localePrompt;\n            new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-container'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (!this.parent.isDragging || (!e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseleave')) {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend, detach, isNullOrUndefined, SanitizeHtmlHelper, getInstance } from '@syncfusion/ej2-base';\nimport { EventHandler, select } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /**\n     * Constructor for render module.\n     *\n     * @param {PivotView | PivotFieldList} parent - Component instance.\n     */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Container');\n        var currentAxisElements = Array.prototype.slice.call(this.parentElement.querySelectorAll('.e-group-' + args.axis));\n        var axisElement;\n        if (args.axis === 'rows' && this.parent.showGroupingBar && this.parent.groupingBarModule\n            && isNullOrUndefined(this.parentElement.querySelector('.' + cls.GROUP_PIVOT_ROW))) {\n            currentAxisElements.push(this.parent.groupingBarModule.rowPanel);\n            axisElement = this.parent.groupingBarModule.rowPanel;\n        }\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            if (isNullOrUndefined(PivotUtil.getFieldByName('[Measures]', field))) {\n                var measureField = PivotUtil.getFieldByName('[Measures]', this.parent.dataSourceSettings.fieldMapping);\n                var valueField = {\n                    name: '[Measures]', caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis,\n                    showRemoveIcon: (measureField && 'showRemoveIcon' in measureField) ? measureField.showRemoveIcon : true,\n                    allowDragAndDrop: (measureField && 'allowDragAndDrop' in measureField) ? measureField.allowDragAndDrop : true\n                };\n                if ((this.parent.dataSourceSettings.valueIndex === -1 || this.parent.dataSourceSettings.valueIndex > field.length)) {\n                    valuePos = field.length;\n                    field.push(valueField);\n                    this.parent.setProperties({ dataSourceSettings: { valueIndex: -1 } }, true);\n                }\n                else {\n                    valuePos = this.parent.dataSourceSettings.valueIndex;\n                    field.splice(valuePos, 0, valueField);\n                }\n            }\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Container');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            if (!isNullOrUndefined(this.parentElement.querySelector('.e-group-' + axis))) {\n                axisElement = this.parentElement.querySelector('.e-group-' + axis);\n            }\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var i = 0; i < currentAxisElements.length; i++) {\n                    var element = currentAxisElements[i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS\n                        });\n                        axisPrompt.innerText = (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                            axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                    axis === 'filters' ? this.parent.localeObj.getConstant('filterAxisPrompt') :\n                                        this.parent.localeObj.getConstant('allFields') : '');\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    var elements = this.parent.getModuleName() === 'pivotfieldlist' ?\n                        [axisElement] : currentAxisElements;\n                    for (var j = 0; j < elements.length; j++) {\n                        var element = elements[j];\n                        if ((this.parent.olapEngineModule && (this.parent.olapEngineModule.fieldList[field[i].name] ||\n                            field[i].name === '[Measures]')) || this.parent.engineModule) {\n                            var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                            var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                            if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                                var buttonWrapper = createElement('div', {\n                                    className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 && axis !== 'all-fields' ? ' e-first-btn' : '') + (this.parent.isTabular ? (' ' + cls.TABULAR_PIVOT_BUTTON) : ''),\n                                    attrs: { 'data-tag': axis + ':' + field[i].name }\n                                });\n                                if (this.parent.isTabular) {\n                                    buttonWrapper.style.width = 'auto';\n                                }\n                                var buttonCaption = field[i].caption ? field[i].caption :\n                                    field[i].name;\n                                buttonCaption = this.parent.enableHtmlSanitizer ?\n                                    SanitizeHtmlHelper.sanitize(buttonCaption) : buttonCaption;\n                                var buttonElement = createElement('div', {\n                                    id: this.parent.element.id + '_' + field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, '') + (this.parent.isTabular ? (' ' + cls.TABULAR_ROW_BUTTON) : ''),\n                                    attrs: {\n                                        'data-uid': field[i].name,\n                                        'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                        'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                        'aria-disabled': 'false', 'aria-label': buttonCaption,\n                                        'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                        'data-caption': buttonCaption,\n                                        'data-basefield': this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(field[i].baseField) : field[i].baseField,\n                                        'data-baseitem': this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(field[i].baseItem) : field[i].baseItem,\n                                        'role': 'button'\n                                    }\n                                });\n                                var dropIndicatorElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                    className: cls.DROP_INDICATOR_CLASS\n                                });\n                                var dropLastIndicatorElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                    className: cls.DROP_INDICATOR_CLASS + '-last'\n                                });\n                                var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                                var contentElement = this.createButtonText(field, i, axis, valuePos);\n                                buttonElement.appendChild(contentElement);\n                                if (axis !== 'all-fields') {\n                                    if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                        if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                            !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                                this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                                this.parent.pivotGridModule !== undefined &&\n                                                this.parent.pivotGridModule.enableVirtualization)))) {\n                                            this.createSortOption(buttonElement, field[i].name, field[i]);\n                                        }\n                                        if (axis !== 'values' && valuePos !== i) {\n                                            this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                        }\n                                        if (axis === 'values') {\n                                            this.getTypeStatus(field, i, buttonElement);\n                                        }\n                                    }\n                                    if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                        var calcElement = createElement('span', {\n                                            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                            className: cls.ICON + ' ' + cls.CALC_EDIT\n                                        });\n                                        if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule &&\n                                            (field[i].showEditIcon || field[i].showEditIcon === undefined)) {\n                                            removeClass([calcElement], cls.ICON_DISABLE);\n                                        }\n                                        else {\n                                            addClass([calcElement], cls.ICON_DISABLE);\n                                        }\n                                        buttonElement.appendChild(calcElement);\n                                    }\n                                    var removeElement = createElement('span', {\n                                        attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                        className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                                    });\n                                    if (this.parent.getModuleName() === 'pivotview') {\n                                        if ((this.parent.groupingBarSettings.showRemoveIcon &&\n                                            (field[i].showRemoveIcon || field[i].showRemoveIcon === undefined))) {\n                                            removeClass([removeElement], cls.ICON_DISABLE);\n                                        }\n                                        else {\n                                            addClass([removeElement], cls.ICON_DISABLE);\n                                        }\n                                    }\n                                    else {\n                                        if (field[i].showRemoveIcon || field[i].showRemoveIcon === undefined) {\n                                            removeClass([removeElement], cls.ICON_DISABLE);\n                                        }\n                                        else {\n                                            addClass([removeElement], cls.ICON_DISABLE);\n                                        }\n                                    }\n                                    buttonElement.appendChild(removeElement);\n                                    buttonWrapper.appendChild(dropIndicatorElement);\n                                    buttonWrapper.appendChild(buttonElement);\n                                    buttonWrapper.appendChild(dropLastIndicatorElement);\n                                }\n                                else {\n                                    buttonWrapper.appendChild(dropIndicatorElement);\n                                    buttonWrapper.appendChild(buttonElement);\n                                }\n                                element.appendChild(buttonWrapper);\n                                var pivotButton = new Button({\n                                    enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                                    enableHtmlSanitizer: this.parent.enableHtmlSanitizer, cssClass: this.parent.cssClass\n                                });\n                                pivotButton.isStringTemplate = true;\n                                pivotButton.appendTo(buttonElement);\n                                this.unWireEvent(buttonWrapper, i === valuePos && axis !== 'all-fields' ? 'values' : axis, isMeasureAvail);\n                                this.wireEvent(buttonWrapper, i === valuePos && axis !== 'all-fields' ? 'values' : axis, isMeasureAvail);\n                                if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                    this.parent.getModuleName() === 'pivotfieldlist') {\n                                    this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                                    getInstance(buttonElement.querySelector('.' + cls.BUTTON_DRAGGABLE), Draggable).enableAutoScroll = false;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var valueFiedDropDownList = select('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV, this.parentElement) ?\n                        getInstance(select('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV, this.parentElement), DropDownList) : null;\n                    var _loop_1 = function (i) {\n                        var element = currentAxisElements[i];\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.pivotChartModule) {\n                            var valueData = field.map(function (item) {\n                                return { text: item.caption ? item.caption : item.name, value: item.name };\n                            });\n                            var parent_1 = this_1.parent;\n                            if (valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                valueFiedDropDownList.dataSource = valueData;\n                                valueFiedDropDownList.value = !parent_1.chartSettings.enableMultipleAxis ?\n                                    parent_1.pivotChartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    locale: this_1.parent.locale,\n                                    value: !parent_1.chartSettings.enableMultipleAxis ?\n                                        parent_1.pivotChartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN + (this_1.parent.cssClass ? (' ' + this_1.parent.cssClass) : ''),\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                valueFiedDropDownList.isStringTemplate = true;\n                                valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var i = 0; i < currentAxisElements.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    var columnFieldDropDownList = select('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV, this.parentElement) ?\n                        getInstance(select('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV, this.parentElement), DropDownList) : null;\n                    for (var i = 0; i < currentAxisElements.length; i++) {\n                        var element = currentAxisElements[i];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.pivotChartModule) {\n                            var currentMeasure = this.parent.pivotChartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.pivotChartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _i = 0, rKeys_1 = rKeys; _i < rKeys_1.length; _i++) {\n                                var rKey = rKeys_1[_i];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _b = 0, cKeys_1 = cKeys; _b < cKeys_1.length; _b++) {\n                                        var cKey = cKeys_1[_b];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    locale: this.parent.locale,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                columnFieldDropDownList.isStringTemplate = true;\n                                columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList && engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        text = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(text) : text;\n        var buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && (field[i].allowDragAndDrop || field[i].allowDragAndDrop === undefined) ? '' : cls.DRAG_DISABLE_CLASS : '')\n        });\n        buttonText.innerText = axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n            text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n            text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n            text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text));\n        return buttonText;\n    };\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList) {\n            var fieldListItem = engineModule.fieldList[field[i].name];\n            if (fieldListItem && fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n                this.createSummaryType(buttonElement, field[i].name, field[i]);\n            }\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.getAttribute('data-uid');\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        this.parent.actionObj.actionName = events.editCalculatedField;\n        this.parent.actionObj.fieldInfo = fieldInfo;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        try {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                    this.parent.pivotFieldListModule &&\n                    !this.parent.pivotFieldListModule.isDestroyed)) {\n                    this.parent.pivotFieldListModule.element\n                        .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                    this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                    (this.parent.pivotFieldListModule.calculatedFieldModule).updateAdaptiveCalculatedField(true, fieldName);\n                }\n                else {\n                    if (!this.parent.isAdaptive) {\n                        this.parent.calculatedFieldModule.buttonCall = true;\n                    }\n                    this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                }\n            }\n            else if (this.parent.getModuleName() === 'pivotfieldlist') {\n                if (this.parent.isAdaptive) {\n                    this.parent.dialogRenderer.adaptiveElement.select(4);\n                    (this.parent.calculatedFieldModule).updateAdaptiveCalculatedField(true, fieldName);\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                else {\n                    if (this.parent.dialogRenderer.fieldListDialog) {\n                        this.parent.dialogRenderer.fieldListDialog.hide();\n                        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                    }\n                    this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                    if (this.parent.calculatedFieldModule) {\n                        this.parent.calculatedFieldModule.buttonCall = true;\n                    }\n                }\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag')\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + ((field.allowDragAndDrop || field.allowDragAndDrop === undefined) ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            pivotButton.appendChild(dragWrapper);\n        }\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (this.parent.isDeferLayoutUpdate === false || (this.parent.pivotGridModule &&\n            this.parent.pivotGridModule.pivotDeferLayoutUpdate === false)) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (this.parent.isDeferLayoutUpdate === false || (this.parent.pivotGridModule &&\n            this.parent.pivotGridModule.pivotDeferLayoutUpdate === false)) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = ((this.parent.dataSourceSettings.mode === 'Server' && !filterField) ||\n                (this.parent.dataSourceSettings.mode === 'Local' && engineModule.fieldList[fieldName].filter.length === 0)) ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter')\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '')\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS\n        });\n        contentElement.innerText = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(element.textContent) : element.textContent;\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        var pivotButtons = _this.parentElement.querySelector('.' + axisContent).querySelectorAll('.e-pivot-button');\n                        pivotButtons.forEach(function (button) {\n                            button.style.cursor = 'no-drop';\n                        });\n                    }\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20 } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        if (args.target && args.element && (closest(args.element, '.' + cls.GROUP_ALL_FIELDS_CLASS) &&\n            !closest(args.target, '.' + cls.DROPPABLE_CLASS))) {\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n            var pivotButtons = this.parentElement.querySelector('.' + axisContent).querySelectorAll('.e-pivot-button');\n            pivotButtons.forEach(function (button) {\n                button.style.cursor = 'default';\n            });\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.getAttribute('data-uid'))) {\n            this.updateDataSource();\n            var thisObj = this;\n            thisObj.parent.axisFieldModule.render();\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel && axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.getAttribute('data-uid') : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)) && !fieldInfo.fieldItem.isCalculatedField)) {\n            this.parent.actionObj.actionName = events.sortField;\n            this.parent.actionObj.fieldInfo = fieldInfo;\n            if (this.parent.actionBeginMethod()) {\n                return;\n            }\n            try {\n                if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                    this.parent.dataSourceSettings.enableSorting &&\n                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                        this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableVirtualization) ||\n                        (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                    this.parent.pivotCommon.eventBase.updateSorting(args);\n                    if (this.parent.staticPivotGridModule) {\n                        this.parent.staticPivotGridModule.actionObj = this.parent.actionObj;\n                    }\n                    if (this.parent.isDeferLayoutUpdate === false || (this.parent.pivotGridModule\n                        && this.parent.pivotGridModule.pivotDeferLayoutUpdate === false) ||\n                        this.parent.getModuleName() !== 'pivotfieldlist') {\n                        var actionInfo = {\n                            sortInfo: this.parent.lastSortInfo\n                        };\n                        this.parent.actionObj.actionInfo = actionInfo;\n                        this.updateDataSource(true);\n                    }\n                    var thisObj = this;\n                    if (thisObj.parent instanceof PivotFieldList) {\n                        thisObj.axisField.render();\n                        if (this.parent.isPopupView && this.parent.pivotGridModule) {\n                            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                        }\n                        else if (this.parent.staticPivotGridModule) {\n                            this.parent.staticPivotGridModule.notify(events.uiUpdate, this);\n                        }\n                    }\n                }\n            }\n            catch (execption) {\n                this.parent.actionFailureMethod(execption);\n            }\n        }\n    };\n    /**\n     *\n     * @param {boolean} isRefreshGrid - It contains isRefreshGrid\n     * @returns {void}\n     * @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (this.parent.isDeferLayoutUpdate === false || (this.parent.pivotGridModule\n            && this.parent.pivotGridModule.pivotDeferLayoutUpdate === false) ||\n            this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView && this.parent.pivotGridModule) {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        var pivotObj = this.parent.pivotGridModule ?\n            this.parent.pivotGridModule : this.parent;\n        var fieldName = args.target.parentElement.getAttribute('data-uid');\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        this.parent.actionObj.actionName = events.filterField;\n        this.parent.actionObj.fieldInfo = fieldInfo;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        try {\n            if (pivotObj.getModuleName() === 'pivotfieldlist') {\n                showSpinner(pivotObj.fieldListSpinnerElement);\n            }\n            else {\n                pivotObj.showWaitingPopup();\n            }\n            pivotObj.mouseEventArgs = args;\n            pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ?\n                this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Container');\n            if (pivotObj.dataSourceSettings.mode === 'Server') {\n                if (this.parent.engineModule.fieldList[fieldName].members &&\n                    Object.keys(this.parent.engineModule.fieldList[fieldName].members).length > 0) {\n                    this.updateFilterEvents();\n                }\n                else {\n                    pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n                }\n            }\n            else {\n                if (pivotObj.dataType === 'pivot' && !this.parent.engineModule.fieldList[fieldName].isMembersFilled) {\n                    this.parent.engineModule.fetchFieldMembers(fieldName);\n                }\n                this.updateFilterEvents();\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden */\n    PivotButton.prototype.updateFilterEvents = function () {\n        var pivotObj = this.parent.pivotGridModule ?\n            this.parent.pivotGridModule : this.parent;\n        this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n        var target = pivotObj.mouseEventArgs.target;\n        this.fieldName = target.parentElement.getAttribute('data-uid');\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.bindDialogEvents();\n        }\n        if (pivotObj.getModuleName() === 'pivotfieldlist') {\n            hideSpinner(pivotObj.fieldListSpinnerElement);\n        }\n        else {\n            pivotObj.hideWaitingPopup();\n        }\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.parent.pivotCommon.filterDialog.dialogPopUp.buttons = this.buttonModel();\n            this.parent.pivotCommon.filterDialog.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                isFlat: false,\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE) + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n            },\n            {\n                isFlat: false,\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                isFlat: false,\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this.parent.pivotCommon.filterDialog),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.parent.pivotCommon.filterDialog.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            addClass([this.parent.pivotCommon.filterDialog.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.parent.pivotCommon.filterDialog.dialogPopUp.buttons = this.buttonModel();\n        this.parent.pivotCommon.filterDialog.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function () {\n        var _this = this;\n        var dialogElement = this.parent.pivotCommon.filterDialog.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' ? new Date(operand1) : operand1,\n            value2: filterType === 'date' ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = select('#' + this.parent.element.id + '_' + inputElementString, dialogElement);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                _this.parent.lastFilterInfo = _this.parent.lastFilterInfo.properties ?\n                    _this.parent.lastFilterInfo.properties : _this.parent.lastFilterInfo;\n            }\n            _this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.ClearFilter = function () {\n        var dialogElement = this.parent.pivotCommon.filterDialog.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.getAttribute('data-uid');\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        this.parent.actionObj.actionName = events.removeField;\n        this.parent.actionObj.fieldInfo = fieldInfo;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        try {\n            var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    if (target.parentElement.getAttribute('isvalue') === 'true') {\n                        _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                        if (_this.parent.dataType === 'olap') {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                    }\n                    else {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                        if (_this.parent.dataType === 'pivot' && _this.parent.showValuesButton && _this.parent.dataSourceSettings.values.length > 1 &&\n                            fieldInfo.position < _this.parent.dataSourceSettings.valueIndex && ((_this.parent.dataSourceSettings.valueAxis === 'row' &&\n                            observedArgs.axis === 'rows') || (_this.parent.dataSourceSettings.valueAxis === 'column' && observedArgs.axis === 'columns'))) {\n                            _this.parent.setProperties({\n                                dataSourceSettings: { valueIndex: _this.parent.dataSourceSettings.valueIndex - 1 }\n                            }, true);\n                        }\n                        if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                    }\n                    if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                        _this.parent.axisFieldModule.render();\n                    }\n                    _this.updateDataSource();\n                }\n            });\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    /**\n     *\n     * @param {NodeCheckEventArgs} args - It contains args value.\n     * @returns {void}\n     * @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-memberId') === 'all') {\n            this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.parent.pivotCommon.filterDialog.memberTreeView.checkAll();\n            }\n            else {\n                this.parent.pivotCommon.filterDialog.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.parent.pivotCommon.filterDialog.memberTreeView.getAllCheckedNodes(), fieldName);\n            }\n            this.checkedStateAll(args.action);\n            this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.parent.pivotCommon.filterDialog.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-memberId')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-memberId')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.htmlAttributes['data-memberId']] = item.htmlAttributes['data-memberId'];\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.htmlAttributes['data-memberId']] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.htmlAttributes['data-memberId']].isSelected = state === 'check';\n            }\n        }\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.parent.pivotCommon.filterDialog.memberTreeView.element.querySelector('li[data-memberId=\"' + member + '\"]')) {\n                        var element = this.parent.pivotCommon.filterDialog.memberTreeView.element.querySelector('li[data-memberId=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.parent.pivotCommon.filterDialog.memberTreeView.element.querySelector('li[data-memberId=\"' + node + '\"]')) {\n                        var element = this.parent.pivotCommon.filterDialog.memberTreeView.element.querySelector('li[data-memberId=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.parent.pivotCommon.filterDialog.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.parent.pivotCommon.filterDialog.memberTreeView.fields.dataSource.length ?\n                false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.htmlAttributes['data-memberId']);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        if (this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[filterItem.name].filterType = filterItem.type.toLowerCase();\n            engineModule.fieldList[filterItem.name].filter = [];\n            for (var i = 0; i < filterItem.items.length; i++) {\n                engineModule.fieldList[filterItem.name].filter.push(filterItem.items[i]);\n            }\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                    filterItem = {};\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                var actionInfo = {\n                    filterInfo: _this.parent.lastFilterInfo\n                };\n                _this.parent.actionObj.actionInfo = actionInfo;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n            var item = pivotButtons_2[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (selectedButton) {\n            if (isFiltered) {\n                removeClass([selectedButton], cls.FILTER_CLASS);\n                addClass([selectedButton], cls.FILTERED_CLASS);\n            }\n            else {\n                removeClass([selectedButton], cls.FILTERED_CLASS);\n                addClass([selectedButton], cls.FILTER_CLASS);\n            }\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            if (closest(e.target, '.' + cls.DROPPABLE_CLASS)) {\n                var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        if (element.querySelector('.' + cls.REMOVE_CLASS) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n        }\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        if (element.querySelector('.' + cls.REMOVE_CLASS) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n            this.menuOption = null;\n        }\n        var element = select('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV, this.parentElement);\n        var valueFiedDropDownList = element ? getInstance(element, DropDownList) : null;\n        if (valueFiedDropDownList && !valueFiedDropDownList.isDestroyed) {\n            valueFiedDropDownList.destroy();\n        }\n        element = select('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV, this.parentElement);\n        var columnFieldDropDownList = element ? getInstance(element, DropDownList) : null;\n        if (columnFieldDropDownList && !columnFieldDropDownList.isDestroyed) {\n            columnFieldDropDownList.destroy();\n            columnFieldDropDownList = null;\n        }\n        if (this.draggable && !this.draggable.isDestroyed) {\n            this.draggable.destroy();\n            this.draggable = null;\n        }\n        if (this.axisField) {\n            this.axisField = null;\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        if (!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) {\n            new PivotButton(this.parent);\n        }\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if ((this.parent.dataType === 'pivot' && this.parent.dataSourceSettings.dataSource &&\n            ((!(this.parent.dataSourceSettings.dataSource instanceof DataManager) &&\n                (this.parent.dataSourceSettings.dataSource.length > 0)) ||\n                (this.parent.dataSourceSettings.dataSource instanceof DataManager && this.parent.engineModule.data &&\n                    this.parent.engineModule.data.length > 0))) ||\n            (this.parent.dataType === 'olap' && this.parent.dataSourceSettings.url && this.parent.dataSourceSettings.url !== '') ||\n            (this.parent.dataSourceSettings.mode === 'Server' && this.parent.dataSourceSettings.url !== '')) {\n            var axis = ['rows', 'columns', 'values', 'filters'];\n            for (var len = 0, lnt = fields.length; len < lnt; len++) {\n                if (fields[len]) {\n                    var args = {\n                        field: fields[len],\n                        axis: axis[len].toString()\n                    };\n                    this.parent.notify(events.pivotButtonUpdate, args);\n                }\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module\n     *\n     * @param {PivotFieldList} parent - Instance of field list.\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, Fetch, select } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { DataSourceSettings } from '../../model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param  {PivotFieldListModel} options - options\n     * @param  {string|HTMLElement} element - element\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.pivotChange = false;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this.isPopupView = false;\n        /** @hidden */\n        _this.enableValueSorting = false;\n        _this.request = typeof window !== 'undefined' ? new XMLHttpRequest() : null;\n        _this.remoteData = [];\n        /** @hidden */\n        _this.actionObj = {};\n        /** @hidden */\n        _this.destroyEngine = false;\n        /** @hidden */\n        _this.defaultFieldListOrder = 'None';\n        /** @hidden */\n        _this.isDeferUpdateApplied = false;\n        _this.isInitial = true;\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - ModuleDeclaration[]\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedField' });\n        }\n        return modules;\n    };\n    /**\n     * @returns {AggregateTypes[]}- AggregateTypes[]\n     * @hidden\n     */\n    PivotFieldList.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'Add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Median: 'Median',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            apply: 'Apply',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            summarizeValuesBy: 'Summarize values by',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            yes: 'Yes',\n            no: 'No',\n            None: 'None',\n            qtr: 'Qtr',\n            grandTotal: 'Grand Total'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.isDeferLayoutUpdate = (isNullOrUndefined(this.isDeferLayoutUpdate) && !this.isPopupView) ?\n            this.allowDeferLayoutUpdate : this.isDeferLayoutUpdate;\n        this.wireEvent();\n    };\n    /**\n     * It performs to returnssorted headers.\n     *\n     * @param {IOlapField[]} fieldListData - It contains the olap field informations.\n     * @param {fieldList} fieldList - It contains the olap field list informations.\n     * @returns {ICustomProperties | IOlapCustomProperties} - It contains the internal properties that used for engine population.\n     * @hidden\n     */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var isTabular = this.pivotGridModule ? this.pivotGridModule.isTabular : false;\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : this.pageSettings;\n        var isPaging = this.pivotGridModule ? this.pivotGridModule.enablePaging : false;\n        var isVirtualization = this.pivotGridModule ? this.pivotGridModule.enableVirtualization : false;\n        var enableHtmlSanitizer = this.pivotGridModule ? this.pivotGridModule.enableHtmlSanitizer : this.enableHtmlSanitizer;\n        var localeObj = this.pivotGridModule ? this.pivotGridModule.localeObj :\n            (this.staticPivotGridModule ? this.staticPivotGridModule.localeObj : this.localeObj);\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var allowDataCompression = this.pivotGridModule && this.pivotGridModule.allowDataCompression ?\n            this.pivotGridModule.allowDataCompression : false;\n        var enableOptimizedRendering = this.pivotGridModule && (this.pivotGridModule.enableVirtualization &&\n            this.pivotGridModule.virtualScrollSettings && this.pivotGridModule.virtualScrollSettings.allowSinglePage);\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj,\n                enableVirtualization: isVirtualization,\n                allowDataCompression: allowDataCompression\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj,\n                clonedReport: this.clonedReport,\n                globalize: this.globalize,\n                currenyCode: this.currencyCode,\n                enablePaging: isPaging,\n                enableVirtualization: isVirtualization,\n                enableHtmlSanitizer: enableHtmlSanitizer,\n                allowDataCompression: allowDataCompression,\n                enableOptimizedRendering: enableOptimizedRendering,\n                isTabularLayout: isTabular\n            };\n        }\n        return customProperties;\n    };\n    /**\n     * Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n            }\n            else {\n                var request = new Fetch(this.dataSourceSettings.url, 'GET');\n                request.send().then(function (response) { return typeof (response) === 'string' ? response : response.text(); })\n                    .then(this.onReadyStateChange.bind(this));\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /**\n     *\n     * @hidden\n     *\n     */\n    PivotFieldList.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        var _this = this;\n        this.currentAction = action;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var customProperties = {\n            pageSettings: this.pivotGridModule ? JSON.parse(this.pivotGridModule.getPageSettings()).pageSettings : undefined,\n            enableValueSorting: this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined,\n            enableDrillThrough: this.pivotGridModule ?\n                (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true,\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this)),\n            enableOptimizedRendering: this.pivotGridModule && (this.pivotGridModule.enableVirtualization &&\n                this.pivotGridModule.virtualScrollSettings && this.pivotGridModule.virtualScrollSettings.allowSinglePage),\n            requestType: 'string',\n            headers: { 'Content-type': 'application/json' }\n        };\n        if (this.request.readyState === XMLHttpRequest.UNSENT || this.request.readyState === XMLHttpRequest.OPENED) {\n            this.request.withCredentials = false;\n        }\n        var params = {\n            request: this.request,\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: {},\n            internalProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.pivotGridModule ? this.pivotGridModule.guid : this.guid,\n            isGroupingUpdated: (this.currentAction === 'onRefresh' && this.dataSourceSettings.groupSettings.length > 0) ? true :\n                ((this.pivotGridModule && this.pivotGridModule.groupingModule) ? this.pivotGridModule.groupingModule.isUpdate : false)\n        };\n        this.trigger(events.beforeServiceInvoke, params, function (observedArgs) {\n            _this.request = observedArgs.request;\n            params.internalProperties = observedArgs.internalProperties;\n            params.customProperties = observedArgs.customProperties;\n            params.dataSourceSettings = observedArgs.dataSourceSettings;\n            params.calculatedItem = observedArgs.calculatedItem;\n            params.drillItem = observedArgs.drillItem;\n            params.editArgs = observedArgs.editArgs;\n            params.fetchRawDataArgs = observedArgs.fetchRawDataArgs;\n            params.filterItem = observedArgs.filterItem;\n            params.hash = observedArgs.hash;\n            params.memberName = observedArgs.memberName;\n            params.sortItem = observedArgs.sortItem;\n        });\n        this.request.open('POST', this.dataSourceSettings.url, true);\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        var keys = Object.keys(params.internalProperties.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var headerKey = keys[i];\n            var headerValue = String(params.internalProperties.headers[headerKey]);\n            this.request.setRequestHeader(headerKey, headerValue);\n        }\n        if (params.internalProperties.requestType === 'string') {\n            this.request.send(JSON.stringify(params));\n        }\n        else if (params.internalProperties.requestType === 'base64') {\n            this.request.send(btoa(JSON.stringify(params)));\n        }\n    };\n    PivotFieldList.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var params = {\n                    action: this.currentAction,\n                    response: this.request.responseText\n                };\n                this.trigger(events.afterServiceInvoke, params);\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var members = {};\n                    this.engineModule.globalize = !isNullOrUndefined(this.globalize) ? this.globalize : new Internationalization();\n                    this.engineModule.formatFields = this.engineModule.setFormattedFields(this.dataSourceSettings.formatSettings);\n                    var isDateField = PivotUtil.isDateField(engine.memberName, this.engineModule);\n                    var isNumberType = this.engineModule.fieldList[engine.memberName].type === 'number';\n                    var keys = Object.keys(currentMembers);\n                    for (var i = 0, j = keys.length; i < j; i++) {\n                        var values = currentMembers[keys[i]];\n                        var formattedValue = isDateField ?\n                            this.engineModule.getFormattedValue(values.Name, engine.memberName) :\n                            { formattedText: values.Caption };\n                        members[keys[i]] = {\n                            index: values.Index, ordinal: values.Ordinal,\n                            isDrilled: values.IsDrilled, caption: formattedValue.formattedText\n                        };\n                        dateMembers.push({\n                            formattedText: formattedValue.formattedText,\n                            actualText: isDateField ? formattedValue.dateText : isNumberType ?\n                                (!isNaN(Number(values.Name)) ? Number(values.Name) : values.Name) : values.Name\n                        });\n                    }\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else {\n                    var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    if (this.engineModule.fieldList) {\n                        var keys = Object.keys(this.engineModule.fieldList);\n                        for (var i = 0; i < keys.length; i++) {\n                            if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                            }\n                        }\n                    }\n                    this.engineModule.fieldList = fList;\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n                    var valueSort = JSON.parse(engine.dataSourceSettings).ValueSortSettings;\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                    this.engineModule.isEmptyData = this.dataSourceSettings.values.length === 0 ? true : false;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers') {\n                if (this.isInitial && !this.isPopupView) {\n                    this.initEngine();\n                    this.isInitial = false;\n                }\n                else {\n                    this.enginePopulatedEventMethod(this, true, false);\n                }\n                if (this.calculatedFieldModule && this.currentAction === 'onCalcOperation') {\n                    this.calculatedFieldModule.endDialog();\n                    if (this.calculatedFieldModule.isRequireUpdate) {\n                        this.calculatedFieldModule.isRequireUpdate = false;\n                    }\n                }\n                if (this.pivotGridModule && this.pivotGridModule.calculatedFieldModule &&\n                    this.pivotGridModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotGridModule.calculatedFieldModule.endDialog();\n                    this.pivotGridModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n        }\n    };\n    PivotFieldList.prototype.onReadyStateChange = function (result) {\n        var dataSource = [];\n        if (this.dataSourceSettings.type === 'CSV') {\n            var jsonObject = result.split(/\\r?\\n|\\r/);\n            for (var i = 0; i < jsonObject.length; i++) {\n                if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                    dataSource.push(jsonObject[i].split(','));\n                }\n            }\n        }\n        else {\n            try {\n                dataSource = JSON.parse(result);\n            }\n            catch (error) {\n                dataSource = [];\n            }\n        }\n        if (dataSource && dataSource.length > 0) {\n            this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n        }\n        this.initialLoad();\n    };\n    PivotFieldList.prototype.initialLoad = function () {\n        var _this = this;\n        var loadArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            defaultFieldListOrder: this.defaultFieldListOrder\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.defaultFieldListOrder = loadArgs.defaultFieldListOrder;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass.split(' '));\n            }\n            _this.notify(events.initialLoad, {});\n        });\n    };\n    /**\n     *\n     * Binding events to the Pivot Field List element.\n     *\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     *\n     * Unbinding events from the element on widget destroy.\n     *\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     *\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    _super.prototype.refresh.call(this);\n                    break;\n                case 'dataSourceSettings':\n                    if (newProp.dataSourceSettings && ((!isNullOrUndefined(newProp.dataSourceSettings.dataSource) &&\n                        this.clonedDataSet !== newProp.dataSourceSettings.dataSource && newProp.dataSourceSettings.groupSettings) ||\n                        (Object.keys(newProp.dataSourceSettings).length === 1 && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource'\n                            && this.dataSourceSettings.groupSettings.length > 0))) {\n                        this.clonedDataSet = newProp.dataSourceSettings.dataSource;\n                        this.engineModule.groupingFields = {};\n                    }\n                    if ((!isNullOrUndefined(newProp.dataSourceSettings.dataSource) && !(newProp.dataSourceSettings.groupSettings\n                        && newProp.dataSourceSettings.groupSettings.length > 0)) || (this.dataType === 'olap' && !isNullOrUndefined(newProp.dataSourceSettings.url))) {\n                        if (this.dataType !== 'olap') {\n                            if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n                                PivotUtil.updateDataSourceSettings(this.staticPivotGridModule, this.savedDataSourceSettings);\n                                this.savedDataSourceSettings = undefined;\n                            }\n                            if (newProp.dataSourceSettings.dataSource && (newProp.dataSourceSettings.dataSource.length === 0)\n                                && !isNullOrUndefined(this.staticPivotGridModule)) {\n                                this.savedDataSourceSettings =\n                                    PivotUtil.getClonedDataSourceSettings(this.staticPivotGridModule.dataSourceSettings);\n                                this.staticPivotGridModule.setProperties({ dataSourceSettings: {\n                                        rows: [],\n                                        columns: [],\n                                        values: [],\n                                        filters: []\n                                    } }, true);\n                            }\n                        }\n                        if (this.dataType === 'pivot') {\n                            this.engineModule.fieldList = null;\n                            this.engineModule.isEmptyData = true;\n                            this.engineModule.data = [];\n                            this.engineModule.pivotValues = [];\n                            this.engineModule.groupingFieldsInfo = {};\n                        }\n                        else if (this.dataType === 'olap') {\n                            this.olapEngineModule.fieldList = {};\n                            this.olapEngineModule.fieldListData = undefined;\n                            this.olapEngineModule.isEmptyData = true;\n                        }\n                        if (!isNullOrUndefined(this.staticPivotGridModule)) {\n                            this.staticPivotGridModule.pivotValues = [];\n                        }\n                        this.initialLoad();\n                    }\n                    if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                        if (this.isPopupView && this.pivotGridModule &&\n                            this.pivotGridModule.showGroupingBar && this.pivotGridModule.groupingBarModule) {\n                            var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                            var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                            var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                            var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                            this.pivotGridModule.setProperties({ dataSourceSettings: {\n                                    rows: rows, columns: columns, values: values, filters: filters\n                                } }, true);\n                            this.pivotGridModule.axisFieldModule.render();\n                        }\n                        else if (!this.isPopupView && this.staticPivotGridModule && !this.staticPivotGridModule.isDestroyed) {\n                            var pivot = this.staticPivotGridModule;\n                            if (pivot.showGroupingBar && pivot.groupingBarModule) {\n                                pivot.axisFieldModule.render();\n                            }\n                            if (pivot.showFieldList && pivot.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.filters);\n                                pivot.pivotFieldListModule.setProperties({ dataSourceSettings: {\n                                        rows: rows, columns: columns, values: values, filters: filters\n                                    } }, true);\n                                pivot.pivotFieldListModule.axisFieldModule.render();\n                                if (pivot.pivotFieldListModule.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                                    pivot.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        this.axisFieldModule.render();\n                        if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                            this.notify(events.treeViewUpdate, {});\n                        }\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'showValuesButton':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.showGroupingBar &&\n                        this.pivotGridModule.groupingBarModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ showValuesButton: newProp.showValuesButton }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n                case 'enableFieldSearching':\n                case 'allowDeferLayoutUpdate':\n                case 'allowCalculatedField':\n                    this.refresh();\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ?\n                this.dataSourceSettings.dataSource[0] : !isNullOrUndefined(this.engineModule.data) ?\n                this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) === '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = _this.dataSourceSettings.dataSource;\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : _this.dataSourceSettings.type === 'CSV' ? PivotUtil.getClonedCSVData(pivotDataSet)\n                        : PivotUtil.getClonedData(pivotDataSet));\n                    var dataSourceSettings = JSON.parse(_this.getPersistData()).dataSourceSettings;\n                    dataSourceSettings.dataSource = [];\n                    _this.clonedReport = _this.clonedReport ? _this.clonedReport : dataSourceSettings;\n                }\n                var customProperties = _this.frameCustomProperties();\n                customProperties.enableValueSorting = _this.staticPivotGridModule ?\n                    _this.staticPivotGridModule.enableValueSorting : _this.enableValueSorting;\n                if (_this.dataSourceSettings.mode !== 'Server') {\n                    _this.engineModule.renderEngine(_this.dataSourceSettings, customProperties, _this.aggregateCellInfo\n                        ? _this.getValueCellInfo.bind(_this) : undefined, _this.onHeadersSort ? _this.getHeaderSortInfo.bind(_this) : undefined);\n                }\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                PivotUtil.renderOlapEngine(_this);\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n        if (this.defaultFieldListOrder !== 'None') {\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n        }\n    };\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                (!isNullOrUndefined(this.dataSourceSettings.dataSource) && this.dataSourceSettings.dataSource.length > 0)) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                if (this.dataType === 'pivot' && this.remoteData.length > 0) {\n                    this.engineModule.data = this.remoteData;\n                    this.initEngine();\n                }\n                else {\n                    setTimeout(this.getData.bind(this), 100);\n                }\n            }\n            else {\n                if (this.dataSourceSettings.mode === 'Server') {\n                    this.getEngine('onRefresh');\n                }\n                else {\n                    this.notify(events.dataReady, {});\n                }\n            }\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     *\n     * @param {HeadersSortEventArgs} sortingObj - It contains the current sorting information.\n     * @returns {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.getHeaderSortInfo = function (sortingObj) {\n        var args = sortingObj;\n        this.trigger(events.onHeadersSort, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        if (this.dataSourceSettings.dataSource.defaultQuery) {\n            this.dataSourceSettings.dataSource.executeQuery(this.dataSourceSettings.dataSource\n                .defaultQuery).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        var showDialog;\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            showDialog = this.dialogRenderer.fieldListDialog.visible;\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Container'));\n        }\n        this.renderModule.render();\n        if (this.renderMode === 'Popup') {\n            this.fieldListSpinnerElement = this.dialogRenderer.fieldListDialog.element;\n            if (showDialog) {\n                this.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        else {\n            this.fieldListSpinnerElement = this.element.querySelector('.e-pivotfieldlist-container');\n        }\n        if (this.spinnerTemplate) {\n            createSpinner({\n                target: this.fieldListSpinnerElement, template: this.spinnerTemplate,\n                cssClass: this.cssClass ? this.cssClass : undefined\n            }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement, cssClass: this.cssClass ? this.cssClass : undefined }, this.createElement);\n        }\n        var args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: this.renderMode === 'Popup' ? this.dialogRenderer.fieldListDialog.element : select('#' + this.element.id + '_Container', this.element),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            enableHtmlSanitizer: this.enableHtmlSanitizer,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType,\n            cssClass: this.cssClass\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            if (this.dataType === 'olap') {\n                this.clonedFieldListData = PivotUtil.cloneOlapFieldSettings(this.olapEngineModule.fieldListData);\n            }\n            this.clonedFieldList = PivotUtil.getClonedFieldList(this.pivotFieldList);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        var captionData = this.getFields(dataSourceSettings);\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        if (captionData.length > 0 && engineModule && engineModule.fieldList) {\n            var lnt = captionData.length;\n            while (lnt--) {\n                if (captionData[lnt]) {\n                    for (var _i = 0, _a = captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        return [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values,\n            dataSourceSettings.filters];\n    };\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     *\n     * @function updateDataSource\n     * @returns {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        var _this = this;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && (pivot.pivotGridModule.enableVirtualization\n            || pivot.pivotGridModule.enablePaging) ? pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                var enableValueSorting = isSorted ? false : pivot.staticPivotGridModule ?\n                    pivot.staticPivotGridModule.enableValueSorting : pivot.enableValueSorting;\n                if (isSorted && pivot.dataSourceSettings.valueSortSettings.headerText !== '') {\n                    if (pivot.pivotGridModule) {\n                        pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    }\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                }\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    customProperties.enableValueSorting = enableValueSorting;\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange) && !pivot.allowDeferLayoutUpdate) {\n                        if (isSorted) {\n                            if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onSort(pivot.lastSortInfo);\n                            }\n                            pivot.lastSortInfo = {};\n                        }\n                        if (isFiltered) {\n                            if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                    }\n                    else {\n                        if (pivot.dataSourceSettings.mode === 'Server') {\n                            if (isSorted) {\n                                pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            }\n                            else if (isAggChange) {\n                                pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            }\n                            else if (isCalcChange) {\n                                pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            }\n                            else if (isFiltered) {\n                                pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            }\n                            else {\n                                pivot.getEngine('onDrop', null, null, null, null, null, null);\n                            }\n                        }\n                        else {\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.aggregateCellInfo ?\n                                pivot.getValueCellInfo.bind(pivot) : undefined, pivot.onHeadersSort ?\n                                pivot.getHeaderSortInfo.bind(pivot) : undefined);\n                        }\n                        pivot.lastSortInfo = {};\n                        pivot.lastAggregationInfo = {};\n                        pivot.lastCalcFieldInfo = {};\n                        pivot.lastFilterInfo = {};\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed, enableValueSorting, isFiltered);\n                }\n                pivot.getFieldCaption(pivot.dataSourceSettings);\n            }\n            else {\n                pivot.axisFieldModule.render();\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                }\n                pivot.isRequiredUpdate = false;\n            }\n            if (pivot.dataSourceSettings.mode !== 'Server') {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n            else if ((pivot.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) || pivot.isRequiredUpdate) {\n                hideSpinner(_this.fieldListSpinnerElement);\n                if (_this.pivotGridModule) {\n                    _this.pivotGridModule.hideWaitingPopup();\n                }\n            }\n        });\n        //});\n    };\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var _this = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings);\n                    if (_this.dataType === 'olap') {\n                        _this.clonedFieldListData = PivotUtil.cloneOlapFieldSettings(_this.olapEngineModule.fieldListData);\n                    }\n                    pivot.clonedFieldList = PivotUtil.getClonedFieldList(pivot.pivotFieldList);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (_this.isPopupView && (_this.isDeferLayoutUpdate || (pivot.pivotGridModule &&\n                pivot.pivotGridModule.pivotDeferLayoutUpdate))) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            if ((_this.isPopupView && pivot.pivotGridModule && pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) ||\n                !isNullOrUndefined(pivot.pivotGridModule)) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n        var actionName = this.getActionCompleteName();\n        this.actionObj.actionName = actionName;\n        if (this.actionObj.actionName) {\n            this.actionCompleteMethod();\n        }\n    };\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed, enableValueSorting, isFiltered) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.enableValueSorting = enableValueSorting;\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if ((isCalcChange || isSorted) && !isFiltered) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            PivotUtil.renderOlapEngine(pivot, customProperties);\n        }\n        pivot.lastSortInfo = {};\n        pivot.lastAggregationInfo = {};\n        pivot.lastCalcFieldInfo = {};\n        pivot.lastFilterInfo = {};\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     *\n     * @function update\n     * @param {PivotView} control - Pass the instance of pivot table component.\n     * @returns {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            this.clonedReport = control.clonedReport;\n            this.setProperties({ dataSourceSettings: control.dataSourceSettings, showValuesButton: control.showValuesButton }, true);\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.isPopupView) {\n                this.pivotGridModule = control;\n            }\n            else {\n                this.staticPivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (!this.isPopupView && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                if (this.dataType === 'olap') {\n                    this.clonedFieldListData = PivotUtil.cloneOlapFieldSettings(this.olapEngineModule.fieldListData);\n                }\n                this.clonedFieldList = PivotUtil.getClonedFieldList(this.pivotFieldList);\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     *\n     * @function updateView\n     * @param {PivotView} control - Pass the instance of pivot table component.\n     * @returns {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (control) {\n            var isOlapCalcFieldAdded = this.actionObj.actionName === 'Calculated field applied' && control.dataType === 'olap';\n            if (control.element.querySelector('.e-spin-hide') && !isOlapCalcFieldAdded &&\n                (!(this.allowDeferLayoutUpdate && !this.isDeferUpdateApplied) || control.isInitial)) {\n                control.showWaitingPopup();\n            }\n            control.clonedDataSet = this.clonedDataSet;\n            control.clonedReport = this.clonedReport;\n            control.setProperties({ dataSourceSettings: this.dataSourceSettings, showValuesButton: this.showValuesButton }, true);\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            if (!this.pivotChange) {\n                control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            }\n            var eventArgs = {\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings),\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (!this.isPopupView) {\n                control.guid = this.guid;\n                this.staticPivotGridModule = control;\n                control.isStaticRefresh = true;\n            }\n            this.isDeferUpdateApplied = false;\n            if (this.staticPivotGridModule) {\n                this.staticPivotGridModule.isServerWaitingPopup = true;\n            }\n            control.dataBind();\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     *\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = observedArgs.pivotValues;\n            }\n        });\n    };\n    /** @hidden */\n    PivotFieldList.prototype.actionBeginMethod = function () {\n        var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings),\n            actionName: this.actionObj.actionName,\n            fieldInfo: this.actionObj.fieldInfo,\n            cancel: false\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.actionBegin, eventArgs);\n        return eventArgs.cancel;\n    };\n    /** @hidden */\n    PivotFieldList.prototype.actionCompleteMethod = function () {\n        var eventArgs = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings),\n            actionName: this.actionObj.actionName,\n            fieldInfo: this.actionObj.fieldInfo,\n            actionInfo: this.actionObj.actionInfo\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.actionComplete, eventArgs);\n        this.actionObj.actionName = '';\n        this.actionObj.actionInfo = undefined;\n        this.actionObj.fieldInfo = undefined;\n    };\n    /** @hidden */\n    PivotFieldList.prototype.actionFailureMethod = function (error) {\n        var eventArgs = {\n            actionName: this.actionObj.actionName,\n            errorInfo: error\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.actionFailure, eventArgs);\n    };\n    /** @hidden */\n    PivotFieldList.prototype.getActionCompleteName = function () {\n        var actionName = (this.actionObj.actionName === events.openCalculatedField) ? events.calculatedFieldApplied :\n            (this.actionObj.actionName === events.editCalculatedField) ? events.calculatedFieldEdited :\n                (this.actionObj.actionName === events.sortField) ? events.fieldSorted : (this.actionObj.actionName === events.filterField)\n                    ? events.fieldFiltered : (this.actionObj.actionName === events.removeField) ? events.fieldRemoved\n                    : (this.actionObj.actionName === events.aggregateField) ? events.fieldAggregated :\n                        this.actionObj.actionName === events.sortFieldTree ? events.fieldTreeSorted : this.actionObj.actionName;\n        return actionName;\n    };\n    /**\n     * Destroys the Field Table component.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.engineModule && !this.destroyEngine) {\n            this.engineModule.fieldList = {};\n            this.engineModule.rMembers = null;\n            this.engineModule.cMembers = null;\n            this.engineModule.valueMatrix = [];\n            this.engineModule = {};\n        }\n        if (this.olapEngineModule && !this.destroyEngine) {\n            this.olapEngineModule.fieldList = {};\n            this.olapEngineModule = {};\n        }\n        if (this.pivotFieldList) {\n            this.pivotFieldList = {};\n        }\n        if (this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.pivotCommon) {\n            this.pivotCommon.destroy();\n        }\n        if (this.dialogRenderer) {\n            this.dialogRenderer.destroy();\n        }\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        if (this.contextMenuModule) {\n            this.contextMenuModule = null;\n        }\n        if (this.treeViewModule) {\n            this.treeViewModule = null;\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule = null;\n        }\n        if (this.pivotCommon) {\n            this.pivotCommon = null;\n        }\n        if (this.dialogRenderer) {\n            this.dialogRenderer = null;\n        }\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule = null;\n        }\n        if (this.axisFieldModule) {\n            this.axisFieldModule = null;\n        }\n        if (this.axisTableModule) {\n            this.axisTableModule = null;\n        }\n        if (this.renderModule) {\n            this.renderModule = null;\n        }\n        if (this.clonedDataSet) {\n            this.clonedDataSet = null;\n        }\n        if (this.clonedReport) {\n            this.clonedReport = null;\n        }\n        if (this.clonedFieldList) {\n            this.clonedFieldList = null;\n        }\n        if (this.clonedFieldListData) {\n            this.clonedFieldListData = null;\n        }\n        if (this.localeObj) {\n            this.localeObj = null;\n        }\n        if (this.defaultLocale) {\n            this.defaultLocale = null;\n        }\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"enableFieldSearching\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Median', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotFieldList.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property('USD')\n    ], PivotFieldList.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"beforeServiceInvoke\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"afterServiceInvoke\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onHeadersSort\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, select, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MEDIAN = 'Median';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /**\n     * Constructor for calculatedfield module.\n     *\n     * @param {PivotView | PivotFieldList} parent - It represent the parent.\n     */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.formatTypes = ['Standard', 'Currency', 'Percent', 'Custom', 'None'];\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.treeObj = null;\n        this.droppable = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.formatText = null;\n        this.formatType = null;\n        this.fieldType = null;\n        this.parentHierarchy = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n    }\n    /**\n     * To get module name.\n     *\n     * @returns {string} - It returns the Module name.\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedField';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                case 'shiftE':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node);\n                    }\n                    break;\n                case 'delete':\n                    if (node.tagName === 'LI' && !node.querySelector('.e-list-icon.e-format') && !node.querySelector('.e-list-icon').classList.contains('.e-icons') && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                        node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon'))) {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n                    }\n                    break;\n                case 'enter':\n                    {\n                        var field = node.getAttribute('data-field');\n                        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n                        var type = node.getAttribute('data-type');\n                        var dropField = select('#' + this.parentID + 'droppable', dialog.element);\n                        if (this.parent.dataType === 'pivot') {\n                            if (dropField.value === '') {\n                                if (type === CALC) {\n                                    dropField.value = node.getAttribute('data-uid');\n                                }\n                                else {\n                                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                                }\n                            }\n                            else if (dropField.value !== '') {\n                                if (type === CALC) {\n                                    dropField.value = dropField.value + node.getAttribute('data-uid');\n                                }\n                                else {\n                                    dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                                }\n                            }\n                        }\n                        else {\n                            if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                                field = this.parent.olapEngineModule.fieldList[field].tag;\n                            }\n                            if (dropField.value === '') {\n                                dropField.value = field;\n                            }\n                            else if (dropField.value !== '') {\n                                dropField.value = dropField.value + field;\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Trigger while click treeview icon.\n     *\n     * @param  {NodeClickEventArgs} e - Click event argument.\n     * @returns {void}\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = closest(e.event.target, 'li');\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED) ||\n            e.event.target.classList.contains(cls.GRID_REMOVE)) {\n            if (!this.parent.isAdaptive) {\n                this.displayMenu(node, e.node, e.event.target);\n            }\n            else if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n                if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDIT) && e.event.target.classList.contains(cls.CALC_EDIT)) {\n                    this.isEdit = true;\n                    this.currentFieldName = node.getAttribute('data-field');\n                    this.fieldText = node.getAttribute('data-caption');\n                    this.formulaText = node.getAttribute('data-formula');\n                    this.formatType = node.getAttribute('data-formatString');\n                    this.formatText = this.formatType === 'Custom' ? node.getAttribute('data-customformatstring') : null;\n                    this.fieldType = node.getAttribute('data-membertype');\n                    this.parentHierarchy = this.fieldType === 'Dimension' ? node.getAttribute('data-hierarchy') : null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDITED) && e.event.target.classList.contains(cls.CALC_EDITED)) {\n                    this.isEdit = false;\n                    this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                    this.parentHierarchy = this.fieldType = this.formatType = null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-icons') && e.event.target.classList.contains(cls.GRID_REMOVE)) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, e.node);\n                }\n            }\n        }\n    };\n    /**\n     * Trigger while click treeview icon.\n     *\n     * @param  {AccordionClickArgs} e - Click event argument.\n     * @returns {void}\n     */\n    CalculatedField.prototype.accordionClickHandler = function (e) {\n        if (e.item && e.item.iconCss.indexOf('e-list-icon') !== -1 &&\n            closest(e.originalEvent.target, '.e-acrdn-header-icon')) {\n            var node = closest(e.originalEvent.target, '.e-acrdn-header').querySelector('.' + cls.CALCCHECK);\n            var fieldName = node.getAttribute('data-field');\n            var captionName = node.getAttribute('data-caption');\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            var optionElement = closest(e.originalEvent.target, '.e-acrdn-header-icon');\n            if (formatObj) {\n                var pivotFormat = this.getFormat(formatObj.format);\n                var formatString = (pivotFormat ? this.formatTypes.indexOf(pivotFormat) > -1 ?\n                    formatObj.format : 'Custom' : 'None');\n                this.formatType = formatString;\n            }\n            if (optionElement.querySelector('.' + cls.CALC_EDIT) && e.originalEvent.target.classList.contains(cls.CALC_EDIT)) {\n                this.isEdit = true;\n                this.currentFieldName = fieldName;\n                this.fieldText = captionName ? captionName : fieldName;\n                this.formulaText = this.parent.engineModule.fieldList[fieldName].formula;\n                this.formatText = formatObj ? formatObj.format : '';\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n            }\n            else if (optionElement.querySelector('.' + cls.CALC_EDITED) &&\n                e.originalEvent.target.classList.contains(cls.CALC_EDITED)) {\n                this.isEdit = false;\n                this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n            }\n            else if (optionElement.querySelector('.' + cls.GRID_REMOVE) &&\n                e.originalEvent.target.classList.contains(cls.GRID_REMOVE)) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionCreated = function () {\n        var accordion = getInstance(select('#' + this.parentID + 'accordDiv', document), Accordion);\n        var allElement = accordion.element.querySelectorAll('.e-acrdn-item');\n        for (var i = 0; i < allElement.length; i++) {\n            if (allElement[i].querySelector('.' + cls.CALC_EDIT) || allElement[i].querySelector('.' + cls.CALC_EDITED)) {\n                var element = createElement('span', {\n                    className: 'e-list-icon ' + cls.GRID_REMOVE + ' e-icons'\n                });\n                append([element], allElement[i].querySelector('.e-acrdn-header-icon'));\n                addClass([allElement[i]], cls.SELECT_CLASS);\n            }\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     *\n     * @param  {HTMLElement} node - It contains the value of node.\n     * @param  {HTMLElement} treeNode - It contains the value of tree Node.\n     * @param  {HTMLElement} target - It represent the target.\n     * @returns {void}\n     */\n    CalculatedField.prototype.displayMenu = function (node, treeNode, target) {\n        var edit = target ? target.classList.contains(cls.CALC_EDIT) : true;\n        var edited = target ? target.classList.contains(cls.CALC_EDITED) : true;\n        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n        var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n        try {\n            if (this.parent.dataType === 'pivot' && node.querySelector('.e-list-icon.e-format') &&\n                node.querySelector('.e-list-icon.e-format').classList.contains(cls.ICON) &&\n                !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n                !node.querySelector('.e-list-icon').classList.contains(cls.GRID_REMOVE) &&\n                !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n                var menuObj = select('#' + this.parentID + 'CalcContextmenu', document) ?\n                    getInstance(select('#' + this.parentID + 'CalcContextmenu', document), Menu) : null;\n                if (menuObj && !menuObj.isDestroyed) {\n                    menuObj.destroy();\n                }\n                this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n                this.openContextMenu(node);\n            }\n            else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDIT) &&\n                node.querySelector('.' + cls.CALC_EDIT).classList.contains('e-list-icon') && edit ||\n                (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active') && ((target && !target.classList.contains(cls.GRID_REMOVE)) || !target)))) {\n                this.isEdit = true;\n                var fieldName = node.getAttribute('data-field');\n                var caption = node.getAttribute('data-caption');\n                this.currentFieldName = fieldName;\n                inputObj.value = caption;\n                inputObj.dataBind();\n                var formatString = node.getAttribute('data-formatString');\n                var dialogElement = dialog.element;\n                var ddlFormatTypes = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n                var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n                var customFormatString = node.getAttribute('data-customformatstring');\n                if (this.parent.dataType === 'olap') {\n                    var memberType = node.getAttribute('data-membertype');\n                    var parentHierarchy = node.getAttribute('data-hierarchy');\n                    var expression = node.getAttribute('data-formula');\n                    var fieldTitle = select('#' + this.parentID + '_' + 'FieldNameTitle', dialogElement);\n                    var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n                    var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n                    fieldTitle.innerText = this.parent.localeObj.getConstant('caption');\n                    select('#' + this.parentID + 'droppable', document).value = expression;\n                    memberTypeDrop.readonly = true;\n                    memberTypeDrop.value = memberType;\n                    memberTypeDrop.dataBind();\n                    if (memberType === 'Dimension') {\n                        hierarchyDrop.value = parentHierarchy;\n                    }\n                }\n                else {\n                    addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                    removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                    addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                    node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clearCalculatedField'));\n                    select('#' + this.parentID + 'droppable', document).value = node.getAttribute('data-uid');\n                }\n                if (formatString !== '') {\n                    ddlFormatTypes.value = formatString;\n                    ddlFormatTypes.dataBind();\n                }\n                customFormat.value = customFormatString;\n                customFormat.dataBind();\n            }\n            else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDITED) &&\n                node.querySelector('.' + cls.CALC_EDITED).classList.contains('e-list-icon') && edited ||\n                (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n                this.isEdit = false;\n                inputObj.value = '';\n                inputObj.dataBind();\n                var dialogElement = dialog.element;\n                var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n                customFormat.value = '';\n                customFormat.dataBind();\n                if (this.parent.dataType === 'olap') {\n                    var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n                    var ddlFormatTypes = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n                    var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n                    var fieldTitle = select('#' + this.parentID + '_' + 'FieldNameTitle', dialogElement);\n                    fieldTitle.innerText = this.parent.localeObj.getConstant('fieldTitle');\n                    hierarchyDrop.index = 0;\n                    hierarchyDrop.dataBind();\n                    ddlFormatTypes.index = 0;\n                    ddlFormatTypes.dataBind();\n                    memberTypeDrop.index = 0;\n                    memberTypeDrop.readonly = false;\n                    memberTypeDrop.dataBind();\n                }\n                else {\n                    addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                    removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                    node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                }\n                select('#' + this.parentID + 'droppable', document).value = '';\n            }\n            else if (node.tagName === 'LI' && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon')) && !edit && !edited) {\n                this.parent.actionObj.actionName = events.removeField;\n                if (this.parent.actionBeginMethod()) {\n                    return;\n                }\n                var dropField = select('#' + this.parentID + 'droppable', document);\n                var field = {\n                    name: this.isEdit ? this.currentFieldName : inputObj.value,\n                    caption: inputObj.value,\n                    formula: dropField.value\n                };\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), field, true, treeNode);\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    CalculatedField.prototype.removeCalcField = function (node) {\n        var dataSourceSettings = this.parent.dataSourceSettings;\n        var fieldName = node.getAttribute('data-field');\n        var calcfields = dataSourceSettings.calculatedFieldSettings;\n        var engineModule;\n        if (this.parent.dataType === 'pivot') {\n            if (!this.parent.isAdaptive) {\n                this.treeObj.removeNodes([node]);\n            }\n            else {\n                var index = parseInt(node.getAttribute('id').split(this.parentID + '_')[1], 10);\n                if (typeof index === 'number') {\n                    var accordion = getInstance(select('#' + this.parentID + 'accordDiv', document), Accordion);\n                    accordion.hideItem(index);\n                }\n            }\n        }\n        for (var i = 0; i < calcfields.length; i++) {\n            if (calcfields[i] && calcfields[i].name === fieldName) {\n                calcfields.splice(i, 1);\n                break;\n            }\n        }\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n            var fields_1 = engineModule.fieldListData ?\n                engineModule.fieldListData : [];\n            for (var _i = 0, _a = Object.keys(fields_1); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (fields_1[parseInt(item, 10)].name === fieldName) {\n                    var index = parseInt(item, 10);\n                    if (typeof (index) === 'number') {\n                        fields_1.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            var parentID = this.treeObj.getNode(node).parentID;\n            this.treeObj.removeNodes([node]);\n            if (calcfields.length <= 0) {\n                this.treeObj.removeNodes([parentID]);\n            }\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fields) {\n            for (var i = 0; i < engineModule.fields.length; i++) {\n                if (engineModule.fields[i] === fieldName) {\n                    engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (engineModule.savedFieldList && engineModule.savedFieldList[fieldName]) {\n            delete engineModule.savedFieldList[fieldName];\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName]) {\n            delete engineModule.fieldList[fieldName];\n        }\n        var formatFields = dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatFields.length; i++) {\n            if (formatFields[i] && formatFields[i].name === fieldName) {\n                formatFields.splice(i, 1);\n                break;\n            }\n        }\n        var fields = [dataSourceSettings.values, dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.filters];\n        for (var i = 0, n = fields.length; i < n; i++) {\n            for (var j = 0, length_1 = fields[i].length; j < length_1; j++) {\n                if (fields[i][j].name === fieldName) {\n                    fields[i].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        if (this.isEdit && this.currentFieldName === fieldName) {\n            var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n            this.isEdit = false;\n            inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n        }\n        if ((!isNullOrUndefined(this.parent.isDeferLayoutUpdate) &&\n            !this.parent.isDeferLayoutUpdate) || (this.parent.pivotGridModule &&\n            !this.parent.pivotGridModule.pivotDeferLayoutUpdate) || this.parent.getModuleName() !== 'pivotfieldlist') {\n            this.parent.updateDataSource();\n        }\n        this.closeErrorDialog();\n    };\n    /**\n     * To set position for context menu.\n     *\n     * @param {HTMLElement} node - It contains the value of node.\n     * @returns {void}\n     */\n    CalculatedField.prototype.openContextMenu = function (node) {\n        var _this = this;\n        var fieldName = node.getAttribute('data-field');\n        var type = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 'string' : 'number';\n        var validSummaryTypes = (type === 'string' ? this.getValidSummaryType().slice(0, 2) : this.getValidSummaryType());\n        var eventArgs = {\n            cancel: false, fieldName: fieldName,\n            aggregateTypes: this.getMenuItems(type).slice()\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var duplicateTypes = [];\n                var items = [];\n                for (var _i = 0, _a = observedArgs.aggregateTypes; _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (validSummaryTypes.indexOf(option) > -1 && duplicateTypes.indexOf(option) === -1) {\n                        duplicateTypes.push(option);\n                        items.push({\n                            id: _this.parent.element.id + 'Calc_' + option,\n                            text: _this.parent.localeObj.getConstant(option)\n                        });\n                    }\n                }\n                _this.createMenu(items, node);\n                var pos = node.getBoundingClientRect();\n                var offset = window.scrollY || document.documentElement.scrollTop;\n                var menuObj = getInstance(select('#' + _this.parentID + 'CalcContextmenu', document), Menu);\n                if (_this.parent.enableRtl) {\n                    menuObj.open(pos.top + offset, pos.left - 100);\n                }\n                else {\n                    menuObj.open(pos.top + offset, pos.left + 150);\n                }\n            }\n        });\n    };\n    /**\n     * Triggers while select menu.\n     *\n     * @param  {MenuEventArgs} menu - It represent the menu.\n     * @returns {void}\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split('_').pop());\n            this.curMenu.textContent = field + ' (' + menu.element.textContent + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '0');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     *\n     * @param {MenuItemModel[]} menuItems - It represent the menuItems.\n     * @param {HTMLElement} node - It represent the node data.\n     * @returns {void}\n     */\n    CalculatedField.prototype.createMenu = function (menuItems, node) {\n        var _this = this;\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            // beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this),\n            onClose: function () {\n                _this.treeObj.element.focus();\n                addClass([node], ['e-hover', 'e-node-focus']);\n            }\n        };\n        var contextMenu;\n        if (select('#' + this.parentID + 'CalcContextmenu', document)) {\n            contextMenu = select('#' + this.parentID + 'CalcContextmenu', document);\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parentID + 'CalcContextmenu'\n            });\n        }\n        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n        dialog.element.appendChild(contextMenu);\n        var menuObj = new Menu(menuOptions);\n        menuObj.isStringTemplate = true;\n        menuObj.appendTo(contextMenu);\n    };\n    /**\n     * Triggers while click OK button.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.applyFormula = function () {\n        var _this = this;\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        var eventArgs = {\n            fieldName: this.isEdit ? this.currentFieldName : inputObj.value,\n            calculatedField: this.getCalculatedFieldInfo(),\n            calculatedFieldSettings: PivotUtil.cloneCalculatedFieldSettings(this.parent.dataSourceSettings.calculatedFieldSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.calculatedFieldCreate, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var calcInfo = observedArgs.calculatedField;\n                if (!_this.isEdit) {\n                    if (currentObj.parent.dataType === 'olap') {\n                        var field = calcInfo.name;\n                        if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                            currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                            isExist = true;\n                        }\n                    }\n                    else {\n                        for (var _i = 0, _a = Object.keys(currentObj.parent.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            if (calcInfo.name && calcInfo.name === key &&\n                                currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                                isExist = true;\n                            }\n                        }\n                    }\n                }\n                if (isExist) {\n                    currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n                    return;\n                }\n                _this.existingReport = extend({}, _this.parent.dataSourceSettings, null, true);\n                var report = _this.parent.dataSourceSettings;\n                if (!isNullOrUndefined(calcInfo.name) && calcInfo.name !== '' &&\n                    !isNullOrUndefined(calcInfo.caption) && calcInfo.caption !== '' && calcInfo.formula && calcInfo.formula !== '') {\n                    var field = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        field = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula,\n                            formatString: calcInfo.formatString\n                        };\n                        if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                            field.hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                        }\n                        _this.isFieldExist = false;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name) {\n                                    _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name && _this.isEdit) {\n                                    report.calculatedFieldSettings[i].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                                    _this.parent.olapEngineModule.fieldList[field.name].caption = calcInfo.caption;\n                                    report.calculatedFieldSettings[i].formatString = field.formatString;\n                                    report.calculatedFieldSettings[i].formula = field.formula;\n                                    field = report.calculatedFieldSettings[i];\n                                    _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                    _this.parent.olapEngineModule.getFormattedFields(report.formatSettings);\n                                    if (_this.parent.olapEngineModule.formatFields[field.name]) {\n                                        if (_this.parent.olapEngineModule.formatFields[field.name].format) {\n                                            _this.parent.olapEngineModule.formatFields[field.name].format =\n                                                _this.getFormat(field.formatString);\n                                        }\n                                        else {\n                                            delete _this.parent.olapEngineModule.formatFields[field.name];\n                                        }\n                                    }\n                                    _this.isFieldExist = true;\n                                    break;\n                                }\n                            }\n                            var axisFields = [report.rows, report.columns, report.values, report.filters];\n                            var isFieldExist = false;\n                            for (var _b = 0, axisFields_1 = axisFields; _b < axisFields_1.length; _b++) {\n                                var fields = axisFields_1[_b];\n                                for (var _c = 0, fields_2 = fields; _c < fields_2.length; _c++) {\n                                    var item = fields_2[_c];\n                                    if (item.isCalculatedField && field.name !== null &&\n                                        item.name === field.name && _this.isEdit) {\n                                        item.caption = calcInfo.caption;\n                                        _this.isFieldExist = true;\n                                        isFieldExist = true;\n                                        break;\n                                    }\n                                }\n                                if (isFieldExist) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (!_this.isFieldExist) {\n                            report.calculatedFieldSettings.push(field);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                            _this.parent.olapEngineModule.getFormattedFields(report.formatSettings);\n                            if (_this.parent.olapEngineModule.formatFields[field.name]) {\n                                if (_this.parent.olapEngineModule.formatFields[field.name].format) {\n                                    _this.parent.olapEngineModule.formatFields[field.name].format = _this.getFormat(field.formatString);\n                                }\n                                else {\n                                    delete _this.parent.olapEngineModule.formatFields[field.name];\n                                }\n                            }\n                        }\n                        _this.parent.lastCalcFieldInfo = field;\n                    }\n                    else {\n                        field = {\n                            name: calcInfo.name,\n                            caption: calcInfo.caption,\n                            type: 'CalculatedField'\n                        };\n                        var cField = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula\n                        };\n                        if (!isNullOrUndefined(calcInfo.formatString)) {\n                            cField.formatString = calcInfo.formatString;\n                        }\n                        _this.isFieldExist = true;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                            return;\n                                        }\n                                    }\n                                    _this.isFieldExist = false;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && field.name !== null &&\n                                    report.values[i].name === field.name && _this.isEdit) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            report.values.splice(i, 1);\n                                            report.values.splice(i, 0, field);\n                                            _this.currentFormula = report.calculatedFieldSettings[j].formula;\n                                            report.calculatedFieldSettings.splice(j, 1);\n                                            report.calculatedFieldSettings.splice(j, 0, cField);\n                                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                            _this.isFieldExist = false;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (_this.isFieldExist) {\n                            report.values.push(field);\n                            report.calculatedFieldSettings.push(cField);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                        }\n                        _this.parent.lastCalcFieldInfo = cField;\n                    }\n                    _this.addFormula(report, field.name);\n                }\n                else {\n                    if (isNullOrUndefined(calcInfo.name) || calcInfo.name === '' ||\n                        isNullOrUndefined(calcInfo.caption) || calcInfo.caption === '') {\n                        var inputObj_1 = getInstance(select('#' + _this.parentID + 'ddlelement', document), MaskedTextBox);\n                        inputObj_1.value = '';\n                        addClass([document.getElementById(_this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                        document.getElementById(_this.parentID + 'ddlelement').focus();\n                    }\n                    else {\n                        _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormula'));\n                    }\n                }\n            }\n            else {\n                _this.endDialog();\n                _this.parent.lastCalcFieldInfo = {};\n                _this.isFormula = false;\n            }\n        });\n    };\n    CalculatedField.prototype.getCalculatedFieldInfo = function () {\n        var element = select('#' + this.parentID + 'calculateddialog', document);\n        var dialog = element ? getInstance(element, Dialog) : undefined;\n        var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n        var dropField = select('#' + this.parentID + 'droppable', document);\n        var dialogElement = this.parent.isAdaptive ?\n            this.parent.dialogRenderer.adaptiveElement.element : dialog.element;\n        var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n        var field = {\n            name: this.isEdit ? this.currentFieldName : inputObj.value,\n            caption: inputObj.value,\n            formula: dropField.value\n        };\n        var ddlFormatTypes = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n        field.formatString = (ddlFormatTypes.value === 'Custom' ? customFormat.value : (ddlFormatTypes.value === 'None' ? null : ddlFormatTypes.value));\n        if (this.parent.dataType === 'olap') {\n            var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n            var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n            if (memberTypeDrop.value === 'Dimension') {\n                field.hierarchyUniqueName = hierarchyDrop.value;\n            }\n        }\n        return field;\n    };\n    CalculatedField.prototype.updateFormatSettings = function (report, fieldName, formatString) {\n        var newFormat = { name: fieldName, format: formatString, useGrouping: true };\n        var isFormatExist = false;\n        for (var i = 0; i < report.formatSettings.length; i++) {\n            if (report.formatSettings[i].name === fieldName) {\n                if (formatString === 'undefined' || formatString === undefined || formatString === '') {\n                    report.formatSettings.splice(i, 1);\n                    isFormatExist = true;\n                    break;\n                }\n                else {\n                    var formatObj = report.formatSettings[i].properties ?\n                        report.formatSettings[i].properties : report.formatSettings[i];\n                    formatObj.format = formatString;\n                    report.formatSettings.splice(i, 1, formatObj);\n                    isFormatExist = true;\n                    break;\n                }\n            }\n        }\n        if (!isFormatExist && formatString !== '' && !isNullOrUndefined(formatString)) {\n            report.formatSettings.push(newFormat);\n        }\n    };\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        this.parent.setProperties({ dataSourceSettings: report }, true);\n        if (this.parent.getModuleName() === 'pivotfieldlist' && (this.parent.isDeferLayoutUpdate ||\n            (this.parent.pivotGridModule && this.parent.pivotGridModule.pivotDeferLayoutUpdate))) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            var actionInfo = {\n                calculatedFieldInfo: this.parent.lastCalcFieldInfo\n            };\n            this.parent.actionObj.actionInfo = actionInfo;\n            var actionName = (this.parent.actionObj.actionName === events.editCalculatedField) ?\n                events.calculatedFieldEdited : events.calculatedFieldApplied;\n            this.parent.actionObj.actionName = actionName;\n            this.parent.updateDataSource(false);\n            var pivot = (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule) ?\n                this.parent.pivotGridModule : this.parent;\n            if (pivot && pivot.dataSourceSettings.mode !== 'Server') {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode === 'Fixed' && this.parent.isDeferLayoutUpdate) {\n                this.parent.pivotChange = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        var element = select('#' + this.parentID + 'calculateddialog', document);\n        var dialog = element ? getInstance(element, Dialog) : undefined;\n        if (dialog) {\n            dialog.close();\n        }\n        else {\n            var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n            inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n            var dialogElement = this.parent.isAdaptive ?\n                this.parent.dialogRenderer.parentElement : dialog.element;\n            this.parent.dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            select('#' + this.parentID + 'droppable', this.parent.dialogRenderer.parentElement).value = '';\n            select('#' + this.parentID + 'Custom_Format_Element', this.parent.dialogRenderer.parentElement).value = '';\n            if (this.parent.dataType === 'olap') {\n                var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n                var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n                hierarchyDrop.index = 0;\n                hierarchyDrop.enabled = false;\n                hierarchyDrop.dataBind();\n            }\n            var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n            var ddlFormatTypes = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n            ddlFormatTypes.index = this.parent.dataType === 'olap' ? 0 : 4;\n            ddlFormatTypes.dataBind();\n            customFormat.enabled = false;\n            customFormat.dataBind();\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        if (this.isEdit) {\n            var calcFields = this.parent.dataSourceSettings.calculatedFieldSettings;\n            for (var i = 0; calcFields && i < calcFields.length; i++) {\n                if (calcFields[i].name === this.field) {\n                    calcFields[i].formula = this.currentFormula;\n                    break;\n                }\n            }\n        }\n        else if (this.parent.engineModule.fields) {\n            for (var i = 0; i < this.parent.engineModule.fields.length; i++) {\n                if (this.parent.engineModule.fields[i] === this.field) {\n                    this.parent.engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     *\n     * @param  {PivotView | PivotFieldList} parent - It represent the parent.\n     * @returns {any} - Field List Data.\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            fields =\n                PivotUtil.getClonedData(parent.olapEngineModule.fieldListData ?\n                    parent.olapEngineModule.fieldListData : []);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-calcMemberGroupCDB') > -1)) {\n                    item.expanded = this.isEdit;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = (parent.engineModule.fieldList ? Object.keys(parent.engineModule.fieldList) : []); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var type = null;\n                var typeVal = null;\n                var field = parent.engineModule.fieldList[key];\n                if ((field.type !== 'number' || parent.engineModule.fieldList[key].type === 'include' || parent.engineModule.fieldList[key].type === 'exclude') && field.aggregateType !== 'DistinctCount') {\n                    typeVal = COUNT;\n                }\n                else {\n                    typeVal = field.aggregateType !== undefined ?\n                        (field.aggregateType) : SUM;\n                }\n                type = this.parent.localeObj.getConstant(typeVal);\n                fields.push({\n                    index: field.index,\n                    name: (this.parent.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(field.caption) : field.caption) + ' (' + type + ')',\n                    type: typeVal,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: (this.parent.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(field.formula) : field.formula),\n                    field: (this.parent.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(key) : key),\n                    caption: this.parent.enableHtmlSanitizer ?\n                        SanitizeHtmlHelper.sanitize(field.caption ? field.caption : key) : field.caption ? field.caption : key\n                });\n            }\n        }\n        return fields;\n    };\n    /**\n     * Trigger while drop node in formula field.\n     *\n     * @param {DragAndDropEventArgs} args - It contains the value of args.\n     * @returns {void}\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n        var dropField = select('#' + this.parentID + 'droppable', dialog.element);\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (select('#' + this.parentID + 'calculateddialog', document) !== null) {\n            remove(select('#' + this.parentID + 'calculateddialog', document));\n            while (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n                remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n            }\n        }\n        var calculatedFieldElement = createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        });\n        this.parent.element.appendChild(calculatedFieldElement);\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                isFlat: false,\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true,\n                    cssClass: this.parent.cssClass\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                isFlat: false,\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel'),\n                    cssClass: this.parent.cssClass\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                isFlat: false,\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                    content: this.parent.localeObj.getConstant('clear')\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        var dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (select('#' + _this.parentID + 'ddlelement', dialog.element)) {\n                    select('#' + _this.parentID + 'ddlelement', dialog.element).focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: true,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body,\n            cssClass: this.parent.cssClass\n        });\n        dialog.isStringTemplate = true;\n        dialog.appendTo(calculatedFieldElement);\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n        dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function () {\n        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n        // dialog.element.querySelector('.e-dlg-header').innerText = this.parent.localeObj.getConstant('createCalculatedField');\n        dialog.element.querySelector('.e-dlg-header').setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.destroy();\n        if (!isNullOrUndefined(document.getElementById(this.parentID + 'calculateddialog'))) {\n            remove(document.getElementById(this.parentID + 'calculateddialog'));\n        }\n        if (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n            remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n        }\n        var timeOut = ((this.parent.getModuleName() === 'pivotview') ||\n            ((this.parent.getModuleName() === 'pivotfieldlist') &&\n                this.parent.renderMode === 'Fixed')) ? 0 : 500;\n        if (this.buttonCall) {\n            this.buttonCall = false;\n            setTimeout(this.setFocus.bind(this), timeOut);\n        }\n    };\n    CalculatedField.prototype.setFocus = function () {\n        var parentElement;\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.element) {\n            parentElement = this.parent.element;\n        }\n        else if (document.getElementById(this.parent.element.id + '_Container')) {\n            parentElement = document.getElementById(this.parent.element.id + '_Container');\n        }\n        if (parentElement) {\n            var pivotButtons = [].slice.call(parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.currentFieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * To render dialog elements.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var pivotCalcDiv = createElement('div', { id: this.parentID + 'Pivot_Calc_Div', className: 'e-pivot-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn',\n                className: cls.CALCADDBTN, attrs: { 'type': 'button' }\n            });\n            addBtn.innerText = this.parent.localeObj.getConstant('add');\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn',\n                className: cls.CALCCANCELBTN, attrs: { 'type': 'button' }\n            });\n            cancelBtn.innerText = this.parent.localeObj.getConstant('cancel');\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle'\n                });\n                formulaTitle.innerText = this.parent.localeObj.getConstant('fieldTitle');\n                pivotCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n                pivotCalcDiv.appendChild(inputDiv);\n            }\n            else {\n                outerDiv.appendChild(inputDiv);\n            }\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_container', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS\n                });\n                fieldTitle.innerText = (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                    this.parent.localeObj.getConstant('formulaField'));\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-container' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                            'role': 'button'\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        locale: this.parent.locale,\n                        enableRtl: this.parent.enableRtl,\n                        enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                        width: 220,\n                        cssClass: this.parent.cssClass\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            var treeElement = createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW });\n            treeOuterDiv.appendChild(treeElement);\n            if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n                olapFieldTreeDiv.appendChild(wrapDiv);\n            }\n            else {\n                outerDiv.appendChild(wrapDiv);\n            }\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS\n                });\n                formulaTitle.innerText = (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                    this.parent.localeObj.getConstant('formula'));\n                if (this.parent.dataType === 'olap') {\n                    pivotCalcDiv.appendChild(formulaTitle);\n                }\n                else {\n                    outerDiv.appendChild(formulaTitle);\n                }\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA + ' e-control e-textbox e-input',\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n                pivotCalcDiv.appendChild(dropDiv);\n            }\n            else {\n                outerDiv.appendChild(dropDiv);\n            }\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn',\n                    className: cls.CALCOKBTN, attrs: { 'type': 'button' }\n                });\n                okBtn.innerText = this.parent.localeObj.getConstant('apply');\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS\n                    });\n                    memberTypeTitle.innerText = this.parent.localeObj.getConstant('memberType');\n                    pivotCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                if (this.parent.isAdaptive) {\n                    outerDiv.appendChild(memberTypeDrop);\n                }\n                else {\n                    pivotCalcDiv.appendChild(memberTypeDrop);\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS\n                    });\n                    hierarchyTitle.innerText = this.parent.localeObj.getConstant('selectedHierarchy');\n                    pivotCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', {\n                    id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV\n                });\n                if (this.parent.isAdaptive) {\n                    outerDiv.appendChild(hierarchyDrop);\n                }\n                else {\n                    pivotCalcDiv.appendChild(hierarchyDrop);\n                }\n            }\n            if (!this.parent.isAdaptive) {\n                var formatTitle = createElement('div', {\n                    className: cls.PIVOT_FORMAT_TITLE_CLASS\n                });\n                formatTitle.innerText = this.parent.localeObj.getConstant('formatString');\n                pivotCalcDiv.appendChild(formatTitle);\n            }\n            var ddlFormatTypes = createElement('div', {\n                id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV\n            });\n            if (this.parent.isAdaptive) {\n                outerDiv.appendChild(ddlFormatTypes);\n            }\n            else {\n                pivotCalcDiv.appendChild(ddlFormatTypes);\n            }\n            var customFormatDiv = createElement('div', {\n                id: this.parentID + 'custom_Format_Div',\n                className: cls.PIVOT_CALC_CUSTOM_FORMAT_INPUTDIV\n            });\n            var customFormatObj = createElement('input', {\n                id: this.parentID + 'Custom_Format_Element',\n                attrs: { 'type': 'text' },\n                className: cls.CALC_FORMAT_INPUT\n            });\n            customFormatDiv.appendChild(customFormatObj);\n            pivotCalcDiv.appendChild(customFormatDiv);\n            if (this.parent.isAdaptive) {\n                outerDiv.appendChild(customFormatDiv);\n            }\n            else {\n                pivotCalcDiv.appendChild(customFormatDiv);\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                outerDiv.appendChild(okBtn);\n            }\n            else {\n                if (this.parent.dataType === 'olap') {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                }\n                outerDiv.appendChild(pivotCalcDiv);\n            }\n        }\n        return outerDiv;\n    };\n    /**\n     * To create calculated field adaptive layout.\n     *\n     * @param {boolean} isEdit - It contains the value of isEdit\n     * @returns {void}\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function (isEdit) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement;\n        if (isEdit) {\n            if (select('#' + this.parentID + 'droppable', dialogElement.element)) {\n                var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n                this.formulaText = select('#' + this.parentID + 'droppable', document).value;\n                this.fieldText = inputObj.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n                var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement.element), DropDownList);\n                this.fieldType = memberTypeDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n                var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement.element), DropDownList);\n                this.parentHierarchy = this.fieldType === 'Dimension' ? hierarchyDrop.value : null;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n                var ddlFormatTypes = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement.element), DropDownList);\n                this.formatType = ddlFormatTypes.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n                var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement.element), MaskedTextBox);\n                this.formatText = (this.parent.dataType === 'olap' ? this.formatType : this.getFormat(this.formatType)) === 'Custom' ? customFormat.value : null;\n            }\n        }\n        else {\n            this.currentFieldName = this.formulaText = this.fieldText = this.formatText = null;\n            this.fieldType = this.formatType = this.parentHierarchy = null;\n        }\n        this.renderMobileLayout(dialogElement);\n    };\n    /**\n     * To update calculated field info in adaptive layout.\n     *\n     * @param {boolean} isEdit - isEdit.\n     * @param {string} fieldName - fieldName.\n     * @returns {void}\n     * @hidden\n     */\n    CalculatedField.prototype.updateAdaptiveCalculatedField = function (isEdit, fieldName) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement.element;\n        this.isEdit = isEdit;\n        var calcInfo = (isEdit ? (this.parent.dataType === 'pivot' ?\n            this.parent.engineModule.fieldList[fieldName] : this.parent.olapEngineModule.fieldList[fieldName]) :\n            {\n                id: null, caption: null, formula: null, fieldType: 'Measure',\n                formatString: (this.parent.dataType === 'pivot' ? null : 'Standard'), parentHierarchy: null\n            });\n        this.currentFieldName = calcInfo.id;\n        var inputObj = getInstance(select('#' + this.parentID + 'ddlelement', document), MaskedTextBox);\n        if (select('#' + this.parentID + 'droppable', document)) {\n            this.formulaText = select('#' + this.parentID + 'droppable', document).value = calcInfo.formula;\n            this.fieldText = inputObj.value = calcInfo.caption;\n            inputObj.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n            var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n            this.fieldType = memberTypeDrop.value = calcInfo.fieldType;\n            memberTypeDrop.readonly = isEdit ? true : false;\n            memberTypeDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n            var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n            if (this.fieldType === 'Dimension') {\n                this.parentHierarchy = hierarchyDrop.value = calcInfo.parentHierarchy;\n            }\n            else {\n                this.parentHierarchy = null;\n                hierarchyDrop.index = 0;\n            }\n            hierarchyDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n            var ddlFormatTypes = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n            this.formatType = ddlFormatTypes.value = (this.formatTypes.indexOf(calcInfo.formatString) > -1 ? calcInfo.formatString : 'Custom');\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n            var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            if (this.parent.dataType === 'pivot') {\n                this.formatText = customFormat.value = formatObj ? formatObj.format : null;\n            }\n            else {\n                this.formatText = customFormat.value = (this.formatType === 'Custom' ? calcInfo.formatString : null);\n            }\n            customFormat.dataBind();\n        }\n    };\n    /**\n     * To create treeview.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.createDropElements = function () {\n        var _this = this;\n        var dialog = select('#' + this.parentID + 'calculateddialog', document) ? getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog) : null;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : dialog.element);\n        var fData = [];\n        var fieldData = [];\n        for (var _i = 0, _a = this.formatTypes; _i < _a.length; _i++) {\n            var format = _a[_i];\n            fData.push({ value: (this.parent.dataType === 'pivot' ? this.getFormat(format) : format), text: this.parent.localeObj.getConstant(format) });\n        }\n        if (this.parent.dataType === 'olap') {\n            var mData = [];\n            var memberTypeData = ['Measure', 'Dimension'];\n            for (var _b = 0, memberTypeData_1 = memberTypeData; _b < memberTypeData_1.length; _b++) {\n                var type = memberTypeData_1[_b];\n                mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n            }\n            var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n            for (var _c = 0, _d = fields; _c < _d.length; _c++) {\n                var item = _d[_c];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                    fieldData.push({ value: item.id, text: item.caption });\n                }\n            }\n            var memberTypeObj = new DropDownList({\n                dataSource: mData, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                fields: { value: 'value', text: 'text' },\n                value: this.fieldType !== null ? this.fieldType : mData[0].value,\n                readonly: this.isEdit,\n                cssClass: cls.MEMBER_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n                change: function (args) {\n                    hierarchyListObj_1.enabled = args.value === 'Dimension' ? true : false;\n                    _this.fieldType = args.value;\n                    _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                    hierarchyListObj_1.dataBind();\n                }\n            });\n            memberTypeObj.isStringTemplate = true;\n            memberTypeObj.appendTo(select('#' + this.parentID + 'Member_Type_Div', dialogElement));\n            var hierarchyListObj_1 = new DropDownList({\n                dataSource: fieldData, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                allowFiltering: true,\n                enabled: memberTypeObj.value === 'Dimension' ? true : false,\n                filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n                fields: { value: 'value', text: 'text' },\n                value: this.parentHierarchy !== null && memberTypeObj.value === 'Dimension' ?\n                    this.parentHierarchy : fieldData[0].value,\n                cssClass: cls.MEMBER_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n                change: function (args) {\n                    _this.parentHierarchy = args.value;\n                    _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                }\n            });\n            hierarchyListObj_1.isStringTemplate = true;\n            hierarchyListObj_1.appendTo(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement));\n        }\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.isAdaptive && this.formatType !== null ? this.formatType\n                : this.parent.dataType === 'olap' ? fData[0].value : fData[4].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                _this.formatType = args.value;\n                _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(select('#' + this.parentID + 'Format_Div', dialogElement));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            value: this.formatText !== null && formatStringObj.value === 'Custom' ? this.formatText : null,\n            enabled: formatStringObj.value === 'Custom' ? true : false,\n            change: function (args) {\n                _this.formatText = args.value;\n                _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n            },\n            cssClass: this.parent.cssClass\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo(select('#' + this.parentID + 'Custom_Format_Element', dialogElement));\n    };\n    CalculatedField.prototype.getFormat = function (pivotFormat) {\n        var format = pivotFormat;\n        if (this.parent.dataType !== 'olap') {\n            switch (format) {\n                case 'Standard':\n                    format = 'N';\n                    break;\n                case 'Currency':\n                    format = 'C';\n                    break;\n                case 'Percent':\n                    format = 'P';\n                    break;\n                case 'N':\n                    format = 'Standard';\n                    break;\n                case 'C':\n                    format = 'Currency';\n                    break;\n                case 'P':\n                    format = 'Percent';\n                    break;\n            }\n        }\n        else {\n            switch (format) {\n                case 'Standard':\n                    format = 'N';\n                    break;\n                case 'Currency':\n                    format = 'C';\n                    break;\n                case 'Percent':\n                    format = 'P';\n                    break;\n            }\n        }\n        return format;\n    };\n    /**\n     * To create treeview.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        var dialog = select('#' + this.parentID + 'calculateddialog', document) ? getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog) : null;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : dialog.element);\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                locale: this.parent.locale,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None',\n                cssClass: this.parent.cssClass\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                locale: this.parent.locale,\n                cssClass: this.parent.cssClass,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                keyPress: function (args) {\n                    if (args.event.keyCode === 39) {\n                        args.cancel = true;\n                    }\n                },\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo(select('#' + this.parentID + 'tree', dialogElement));\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n            dragItem.style.zIndex = (dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     *\n     * @param {DrawNodeEventArgs} args - args.\n     * @returns {void}\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatString = (field.formatString ? this.formatTypes.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : 'None');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customformatstring', (formatString === 'Custom' ? field.formatString : ''));\n                var removeElement = createElement('span', {\n                    className: cls.GRID_REMOVE + ' e-icons e-list-icon'\n                });\n                liTextElement.classList.add('e-calcfieldmember');\n                if (this.parent.isAdaptive) {\n                    var editElement = createElement('span', {\n                        className: 'e-list-edit-icon' + (this.isEdit && this.currentFieldName === field.id ?\n                            ' e-edited ' : ' e-edit ') + cls.ICON\n                    });\n                    var editWrapper = createElement('div', { className: 'e-list-header-icon' });\n                    editWrapper.appendChild(editElement);\n                    editWrapper.appendChild(removeElement);\n                    liTextElement.appendChild(editWrapper);\n                }\n                else {\n                    liTextElement.appendChild(removeElement);\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.' + cls.CHECKBOX_CONTAINER).style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n            if (args.node.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                args.node.querySelector('.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                args.node.querySelector('.e-level-members,.e-namedSetCDB-icon')) {\n                addClass([args.node], cls.BUTTON_DRAGGABLE);\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var formatObj = PivotUtil.getFieldByName(field, this.parent.dataSourceSettings.formatSettings);\n            args.node.setAttribute('data-formatString', formatObj ? formatObj.format : '');\n            if (formatObj) {\n                var pivotFormat = this.getFormat(formatObj.format);\n                var formatString = (pivotFormat ? this.formatTypes.indexOf(pivotFormat) > -1 ?\n                    formatObj.format : 'Custom' : 'None');\n                args.node.setAttribute('data-customformatstring', (formatString === 'Custom' ? pivotFormat : ''));\n                args.node.setAttribute('data-formatString', formatObj ? formatString : '');\n            }\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            var spaceElement = createElement('div', {\n                className: ' e-iconspace'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            append([spaceElement, args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.getMenuItems(this.parent.engineModule.fieldList[field].type).length <= 0) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('remove'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.GRID_REMOVE);\n                addClass([args.node.querySelector('.' + 'e-iconspace')], [cls.CALC_EDIT, cls.ICON, 'e-list-icon']);\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('aria-disabled', 'false');\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('tabindex', '-1');\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n                removeClass([args.node.querySelector('.e-iconspace')], 'e-iconspace');\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     *\n     * @param {string} key - key.\n     * @returns {HTMLElement} - createTypeContainer\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_container', className: cls.TREEVIEWOUTER });\n        var type = this.getMenuItems(this.parent.engineModule.fieldList[key].type);\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + key + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key, 'data-value': type[i] },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    CalculatedField.prototype.getMenuItems = function (fieldType, summaryType) {\n        var menuItems = !isNullOrUndefined(summaryType) ? summaryType : this.parent.aggregateTypes;\n        var type = [];\n        var menuTypes = this.getValidSummaryType();\n        for (var i = 0; i < menuItems.length; i++) {\n            if ((menuTypes.indexOf(menuItems[i]) > -1) && (type.indexOf(menuItems[i]) < 0)) {\n                if (((menuItems[i] === COUNT || menuItems[i] === DISTINCTCOUNT) && fieldType !== 'number')\n                    || (fieldType === 'number')) {\n                    type.push(menuItems[i]);\n                }\n            }\n        }\n        return type;\n    };\n    CalculatedField.prototype.getValidSummaryType = function () {\n        return [COUNT, DISTINCTCOUNT,\n            SUM, AVG, MEDIAN,\n            MIN, MAX, PRODUCT,\n            STDEV, STDEVP,\n            VAR, VARP];\n    };\n    /**\n     * To get Accordion Data.\n     *\n     * @param  {PivotView | PivotFieldList} parent - parent.\n     * @returns {AccordionItemModel[]} - Accordion Data.\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var data = [];\n        var keys = Object.keys(parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            data.push({\n                header: '<input id=' + this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=\"' + this.parent.engineModule.fieldList[key].caption + '\" data-type=' +\n                    this.parent.engineModule.fieldList[key].type + '/>',\n                content: (this.parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    (this.getMenuItems(this.parent.engineModule.fieldList[key].type).length < 1)) ? '' :\n                    this.createTypeContainer(key).outerHTML,\n                iconCss: this.parent.engineModule.fieldList[key].aggregateType === CALC ? 'e-list-icon' + ' ' +\n                    (this.isEdit && this.currentFieldName === key ? 'e-edited' : 'e-edit') : ''\n            });\n        }\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     *\n     * @param {Tab} tabObj - tabObj\n     * @returns {void}\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        var _this = this;\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        var dialog = select('#' + this.parentID + 'calculateddialog', document) ? getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog) : null;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : dialog.element);\n        if (this.parent.isAdaptive && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null) {\n            this.createDropElements();\n        }\n        var cancelBtn = new Button({\n            cssClass: this.parent.cssClass, locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo(select('#' + this.parentID + 'cancelBtn', dialogElement));\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({\n                cssClass: this.parent.cssClass, isPrimary: true, locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo(select('#' + this.parentID + 'okBtn', dialogElement));\n            var inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName'),\n                locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n                change: function (args) {\n                    _this.fieldText = args.value;\n                    _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                },\n                cssClass: this.parent.cssClass\n            });\n            inputObj.isStringTemplate = true;\n            inputObj.appendTo(select('#' + this.parentID + 'ddlelement', dialogElement));\n            if (this.formulaText !== null && select('#' + this.parentID + 'droppable', this.parent.dialogRenderer.parentElement) !== null) {\n                var drop = select('#' + this.parentID + 'droppable', this.parent.dialogRenderer.parentElement);\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({\n                cssClass: this.parent.cssClass, isPrimary: true, locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo(select('#' + this.parentID + 'addBtn', dialogElement));\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    locale: this.parent.locale,\n                    enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                    nodeClicked: this.fieldClickHandler.bind(this),\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this),\n                    nodeSelected: function (args) {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    },\n                    cssClass: this.parent.cssClass\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo(select('#' + this.parentID + 'accordDiv', dialogElement));\n            }\n            else {\n                var accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    locale: this.parent.locale,\n                    enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                    expanding: this.accordionExpand.bind(this),\n                    clicked: this.accordionClickHandler.bind(this),\n                    created: this.accordionCreated.bind(this)\n                });\n                accordion.isStringTemplate = true;\n                accordion.appendTo(select('#' + this.parentID + 'accordDiv', dialogElement));\n                this.updateType();\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            var keys = Object.keys(this.parent.engineModule.fieldList);\n            for (var index = 0, i = keys.length; index < i; index++) {\n                var key = keys[index];\n                var type = this.parent.engineModule.fieldList[key].type !== 'number' ? [COUNT, DISTINCTCOUNT] :\n                    [SUM, COUNT, AVG, MEDIAN, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton = void 0;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i_1 = 0; i_1 < type.length; i_1++) {\n                        radiobutton = new RadioButton({\n                            label: this.parent.localeObj.getConstant(type[i_1]),\n                            name: AGRTYPE + key,\n                            checked: args.element.querySelector('[data-type').getAttribute('data-type') === type[i_1],\n                            change: this.onChange.bind(this),\n                            locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n                            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                            cssClass: this.parent.cssClass\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo(select('#' + this.parentID + 'radio' + key + type[i_1], args.element));\n                    }\n                }\n            }\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.parentElement.querySelector('.e-label')\n            .innerText;\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', args.event.target.getAttribute('data-value'));\n    };\n    CalculatedField.prototype.updateType = function () {\n        var keys = Object.keys(this.parent.engineModule.fieldList);\n        var dialog = select('#' + this.parentID + 'calculateddialog', document) ? getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog) : null;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : dialog.element);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            var type = null;\n            if ((this.parent.engineModule.fieldList[key].type !== 'number' ||\n                this.parent.engineModule.fieldList[key].type === 'include' ||\n                this.parent.engineModule.fieldList[key].type === 'exclude') &&\n                (this.parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                type = COUNT;\n            }\n            else {\n                type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                    this.parent.engineModule.fieldList[key].aggregateType : SUM;\n            }\n            var checkbox = new CheckBox({\n                label: this.parent.engineModule.fieldList[key].caption + ' (' + this.parent.localeObj.getConstant(type) + ')',\n                locale: this.parent.locale, enableRtl: this.parent.enableRtl, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                cssClass: this.parent.cssClass\n            });\n            checkbox.isStringTemplate = true;\n            checkbox.appendTo(select('#' + this.parentID + '_' + index, dialogElement));\n            select('#' + this.parentID + '_' + index, dialogElement).setAttribute('data-field', key);\n            select('#' + this.parentID + '_' + index, dialogElement).setAttribute('data-type', type);\n        }\n    };\n    /**\n     * Trigger while click cancel button.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     *\n     * @param {any} args - It contains the args value.\n     * @param {boolean} args.edit - It contains the value of edit under args.\n     * @param {string} args.fieldName - It contains the value of fieldName under args.\n     * @returns {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function (args) {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout(args && args.edit !== undefined ? args.edit : true);\n            this.isEdit = (args && args.edit !== undefined ? args.edit : this.isEdit);\n        }\n        else if (!this.parent.isAdaptive) {\n            this.isEdit = (args && args.edit !== undefined ? args.edit : false);\n            this.renderDialogLayout();\n            if (args && args.edit) {\n                var target = this.treeObj.element.querySelector('li[data-field=\"' + args.fieldName + '\"]');\n                if (target) {\n                    addClass([target], ['e-active', 'e-node-focus']);\n                    target.setAttribute('aria-selected', 'true');\n                    target.id = this.treeObj.element.id + '_active';\n                    if (this.parent.dataType === 'pivot') {\n                        var e = { event: { target: target.querySelector('.e-list-icon.e-edit.e-icons') } };\n                        this.fieldClickHandler(e);\n                    }\n                    else {\n                        this.displayMenu(target);\n                    }\n                }\n            }\n            var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n            dialog.element.style.top = parseInt(dialog.element.style.top, 10) < 0 ? '0px' : dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     *\n     * @returns {void}\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        var dialog = getInstance(select('#' + this.parentID + 'calculateddialog', document), Dialog);\n        dialog.content = this.renderDialogElements();\n        dialog.refresh();\n        var inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName'),\n            locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            cssClass: this.parent.cssClass\n        });\n        inputObj.isStringTemplate = true;\n        inputObj.appendTo(select('#' + this.parentID + 'ddlelement', dialog.element));\n        this.createDropElements();\n        this.createTreeView();\n        this.droppable = new Droppable(select('#' + this.parentID + 'droppable', dialog.element));\n        this.keyboardEvents = new KeyboardEvents(dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter', shiftE: 'shift+E', delete: 'delete' },\n            eventName: 'keydown'\n        });\n    };\n    CalculatedField.prototype.createConfirmDialog = function (title, description, calcInfo, isRemove, node) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_CalculatedFieldErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: isRemove ? this.removeCalcField.bind(this, node) : this.replaceFormula.bind(this, calcInfo),\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                        content: isRemove ? this.parent.localeObj.getConstant('yes') : this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                        content: isRemove ? this.parent.localeObj.getConstant('no') : this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            cssClass: this.parent.cssClass,\n            close: this.removeErrorDialog.bind(this)\n        });\n        confirmPopUp.isStringTemplate = true;\n        confirmPopUp.appendTo(errorDialog);\n        // confirmPopUp.element.querySelector('.e-dlg-header').innerText = title;\n    };\n    CalculatedField.prototype.replaceFormula = function (calcInfo) {\n        var report = this.parent.dataSourceSettings;\n        if (this.parent.dataType === 'olap') {\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                    if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                    }\n                    report.calculatedFieldSettings[j].formatString = calcInfo.formatString;\n                    report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === calcInfo.name) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                            this.updateFormatSettings(report, calcInfo.name, calcInfo.formatString);\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, calcInfo.name);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        var element = select('#' + this.parentID + '_CalculatedFieldErrorDialog', document);\n        var confirmPopUp = element ? getInstance(element, Dialog) : null;\n        if (confirmPopUp && !confirmPopUp.isDestroyed) {\n            confirmPopUp.destroy();\n        }\n        if (select('#' + this.parentID + '_CalculatedFieldErrorDialog', document) !== null) {\n            remove(select('#' + this.parentID + '_CalculatedFieldErrorDialog', document));\n        }\n    };\n    CalculatedField.prototype.closeErrorDialog = function () {\n        var confirmPopUp = getInstance(select('#' + this.parentID + '_CalculatedFieldErrorDialog', document), Dialog);\n        confirmPopUp.close();\n    };\n    /**\n     * To add event listener.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     *\n     * @returns {void}\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        if (this.treeObj && !this.treeObj.isDestroyed) {\n            this.treeObj.destroy();\n        }\n        if (this.treeObj) {\n            this.treeObj = null;\n        }\n        if (this.newFields) {\n            this.newFields = null;\n        }\n        if (this.curMenu) {\n            this.curMenu = null;\n        }\n        if (this.droppable) {\n            this.droppable = null;\n        }\n        if (this.keyboardEvents) {\n            this.keyboardEvents = null;\n        }\n        var element = select('#' + this.parentID + 'ddlelement', document);\n        if (element) { /* inputObj */\n            getInstance(element, MaskedTextBox).destroy();\n        }\n        element = select('#' + this.parentID + 'calculateddialog', document);\n        if (element) { /* dialog */\n            getInstance(element, Dialog).destroy();\n        }\n        element = select('#' + this.parentID + 'CalcContextmenu', document);\n        if (element) { /* menuObj */\n            getInstance(element, Menu).destroy();\n        }\n        element = select('#' + this.parentID + 'accordDiv', document);\n        if (element) { /* accordion */\n            getInstance(element, Accordion).destroy();\n        }\n        element = select('#' + this.parentID + '_CalculatedFieldErrorDialog', document);\n        if (element) { /* confirmPopUp */\n            getInstance(element, Dialog).destroy();\n        }\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass, isNullOrUndefined, select, remove } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /**\n     * Constructor for Field List module.\n     *\n     * @param {PivotView} parent - It represent the parent\n     */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - It returns a ModuleName\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldList';\n    };\n    FieldList.prototype.initiateModule = function () {\n        if (!select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element)) {\n            this.element = createElement('div', {\n                id: this.parent.element.id + '_PivotFieldList',\n                styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                    ';display:none'\n            });\n            if (select('#' + this.parent.element.id + 'containerwrapper', document) === null) {\n                var containerWrapper = createElement('div', {\n                    id: this.parent.element.id + 'containerwrapper',\n                    styles: 'height:' + (isNaN(this.parent.height) ? this.parent.height : (this.parent.height + 'px'))\n                });\n                this.parent.element.parentElement.appendChild(containerWrapper);\n                containerWrapper.appendChild(this.element);\n                containerWrapper.appendChild(this.parent.element);\n            }\n            else {\n                select('#' + this.parent.element.id + 'containerwrapper', document).appendChild(this.element);\n            }\n            this.parent.pivotFieldListModule = new PivotFieldList({\n                dataSourceSettings: {\n                    providerType: this.parent.dataSourceSettings.providerType,\n                    rows: [],\n                    columns: [],\n                    values: [],\n                    filters: []\n                },\n                spinnerTemplate: this.parent.spinnerTemplate,\n                allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n                renderMode: 'Popup',\n                allowCalculatedField: this.parent.allowCalculatedField,\n                showValuesButton: this.parent.showValuesButton,\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                target: this.parent.element.parentElement,\n                aggregateTypes: this.parent.aggregateTypes,\n                maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n                aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n                onHeadersSort: this.parent.bindTriggerEvents.bind(this.parent),\n                cssClass: this.parent.cssClass,\n                enableFieldSearching: this.parent.enableFieldSearching,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            this.parent.pivotFieldListModule.isPopupView = true;\n            this.parent.pivotFieldListModule.pivotGridModule = this.parent;\n            this.parent.pivotFieldListModule.appendTo(this.element);\n        }\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.actionObj.actionName = 'Field list refreshed';\n        }\n        if (this.element) {\n            var hasFieldList = void 0;\n            for (var i = 0; i < this.parent.toolbar.length; i++) {\n                if (this.parent.toolbar[i] === 'FieldList') {\n                    hasFieldList = true;\n                }\n            }\n            if (hasFieldList && this.parent.dataSourceSettings.mode === 'Server') {\n                this.element.style.display = 'none';\n            }\n            else {\n                this.element.style.display = 'block';\n            }\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else if (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)))) {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.pivotChartModule.getCalulatedWidth() : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth && (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS))))) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth),\n                top: this.parent.element.querySelector('.' + cls.FIELD_PANEL_SCROLL_CLASS) ? this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetHeight.toString() + 'px' : ''\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.initiateModule, this);\n        this.parent.on(events.uiUpdate, this.updateControl, this);\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.initiateModule);\n        this.parent.off(events.uiUpdate, this.updateControl);\n    };\n    /**\n     * To destroy the Field List.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed) {\n            this.parent.pivotFieldListModule.destroy();\n            this.parent.pivotFieldListModule = null;\n            if (!isNullOrUndefined(select('#' + this.parent.element.id + '_PivotFieldList', document))) {\n                remove(select('#' + this.parent.element.id + '_PivotFieldList', document));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, isNullOrUndefined, prepend } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { PivotButton } from '../actions/pivot-button';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module\n     *\n     * @param {PivotView} parent - Instance.\n     */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the grouping bar pivot button rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        if ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed))) {\n            new PivotButton(this.parent);\n        }\n        this.createPivotButtons();\n        var pivotButtons = [];\n        pivotButtons = pivotButtons.concat([].slice.call(this.parent.groupingBarModule.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            if (!this.parent.isTabular) {\n                var indentDiv = createElement('span', {\n                    className: 'e-indent-div',\n                    styles: this.parent.isTabular ? 'auto' : 'width:' + j * indentWidth + 'px'\n                });\n                prepend([indentDiv], pivotButtons[j]);\n            }\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        var elements = Array.prototype.slice.call(this.parent.element.querySelectorAll('.' + cls.GROUP_ALL_FIELDS_CLASS +\n            ',.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.' + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS));\n        if (isNullOrUndefined(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW))) {\n            elements.push(this.parent.groupingBarModule.rowPanel);\n        }\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            if ((this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) ||\n                (this.parent.dataSourceSettings.columns.length > 0 ? !element.classList.contains(cls.GROUP_CHART_COLUMN) : true)) {\n                element.innerHTML = '';\n            }\n        }\n        if ((this.parent.dataType === 'pivot' && this.parent.dataSourceSettings.dataSource && ((!(this.parent.dataSourceSettings.dataSource instanceof DataManager) &&\n            (this.parent.dataSourceSettings.dataSource.length > 0)) ||\n            (this.parent.dataSourceSettings.dataSource instanceof DataManager && this.parent.engineModule.data &&\n                this.parent.engineModule.data.length > 0))) || (this.parent.dataType === 'olap' &&\n            this.parent.dataSourceSettings.url && this.parent.dataSourceSettings.url !== '') ||\n            (this.parent.dataSourceSettings.mode === 'Server' && this.parent.dataSourceSettings.url &&\n                this.parent.dataSourceSettings.url !== '')) {\n            var axis = ['rows', 'columns', 'values', 'filters'];\n            if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings.showFieldsPanel) {\n                axis.push('all-fields');\n                fields.push([]);\n                for (var _i = 0, _a = (this.parent.engineModule && this.parent.engineModule.fieldList ?\n                    Object.keys(this.parent.engineModule.fieldList) : []); _i < _a.length; _i++) {\n                    var key = _a[_i];\n                    if (this.parent.engineModule.fieldList[key] &&\n                        !this.parent.engineModule.fieldList[key].isSelected) {\n                        fields[fields.length - 1].push(PivotUtil.getFieldInfo(key, this.parent, true).fieldItem);\n                    }\n                }\n            }\n            for (var i = 0, lnt = fields.length; i < lnt; i++) {\n                if (fields[i]) {\n                    var args = {\n                        field: fields[i],\n                        axis: axis[i].toString()\n                    };\n                    this.parent.notify(events.pivotButtonUpdate, args);\n                }\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass, select, selectAll } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\nimport { Toolbar } from '@syncfusion/ej2-navigations';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module\n     *\n     * @param {PivotView} parent - Instance.\n     */\n    function GroupingBar(parent) {\n        this.rowAxisWidth = 0;\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - Module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingBar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        var leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'container' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'container'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'container'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'container'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS + (this.parent.isTabular ?\n                ' ' + cls.TABULAR_GROUP_ROWS : '') });\n        var columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        var valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        var filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(columnPanel);\n        valueAxisPanel.appendChild(valuePanel);\n        filterAxisPanel.appendChild(filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        leftAxisPanel.appendChild(valueAxisPanel);\n        leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(createElement('div', { styles: 'display:flex;' }));\n        this.groupingTable.firstElementChild.appendChild(leftAxisPanel);\n        this.groupingTable.firstElementChild.appendChild(this.rightAxisPanel);\n        if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null && this.parent.groupingBarSettings.showFieldsPanel) {\n            this.gridPanel = this.createToolbarUI(this.groupingTable);\n        }\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, columnPanel, valuePanel, filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            if (select('#' + this.parent.element.id + '_AllFields', this.groupingChartTable)) {\n                select('#' + this.parent.element.id + '_AllFields', this.groupingChartTable).remove();\n                this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n            }\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /**\n     * Appends the grouping table or chart table element to the DOM based on the display option and layout settings.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.appendToElement = function () {\n        var element = this.groupingTable ? this.groupingTable : this.groupingChartTable;\n        if (isNullOrUndefined(element)) {\n            return;\n        }\n        var leftAxisPanel = element.getElementsByClassName(cls.LEFT_AXIS_PANEL_CLASS)[0];\n        var filterPanel = element.getElementsByClassName(cls.GROUP_FILTER_CLASS + ' ' +\n            cls.FILTER_AXIS_CLASS)[0];\n        var columnPanel = element.getElementsByClassName(cls.GROUP_COLUMN_CLASS + ' ' +\n            cls.COLUMN_AXIS_CLASS)[0];\n        var valuePanel = element.getElementsByClassName(cls.GROUP_VALUE_CLASS + ' ' +\n            cls.VALUE_AXIS_CLASS)[0];\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    var elements = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS);\n                    for (var i = 0; i < elements.length; i++) {\n                        var element_1 = elements[i];\n                        remove(element_1);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, select('#' + this.parent.element.id + '_chart', this.parent.element));\n                        if (this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n                            var chartPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                                (this.parent.getWidthAsNumber() - 2);\n                            this.chartPanel.width = chartPanelWidth < 400 ? '398px' : chartPanelWidth;\n                            this.chartPanel.refreshOverflow();\n                            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                                clearTimeout(this.timeOutObj);\n                                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n                            }\n                        }\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        if (this.parent.isTabular) {\n                            leftAxisPanel.style.minWidth = this.parent.dataSourceSettings.rows.length *\n                                this.parent.gridSettings.columnWidth + 'px';\n                            valuePanel.style.minWidth = this.parent.dataSourceSettings.rows.length *\n                                this.parent.gridSettings.columnWidth + 'px';\n                        }\n                        else {\n                            leftAxisPanel.style.minWidth = '180px';\n                            valuePanel.style.minWidth = '180px';\n                        }\n                    }\n                    if (this.parent.firstColWidth) {\n                        leftAxisPanel.style.minWidth = 'auto';\n                        valuePanel.style.minWidth = 'auto';\n                    }\n                    filterPanel.removeAttribute('style');\n                    columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.' + cls.HEADERCELL)], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n                        var gridPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                            (this.parent.getWidthAsNumber() - 2);\n                        this.gridPanel.width = gridPanelWidth;\n                        this.gridPanel.refreshOverflow();\n                    }\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('colgroup').children[0];\n                    var valuePanelWidth = this.parent.isTabular ? this.rowAxisWidth :\n                        parseInt(colGroupElement.style.width, 10);\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - valuePanelWidth);\n                    setStyleAttribute(valuePanel, { width: valuePanelWidth + 'px' });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    this.groupingTable.style.display = '';\n                    var rightPanelHeight = (valuePanel.offsetHeight / 2);\n                    if (this.parent.displayOption.primary === 'Chart') {\n                        this.groupingTable.style.display = 'none';\n                    }\n                    if (rightPanelHeight > columnPanel.offsetHeight) {\n                        setStyleAttribute(filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.' + cls.HEADERCONTENT).offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _i = 0, columnRows_1 = columnRows; _i < columnRows_1.length; _i++) {\n                        var element_2 = columnRows_1[_i];\n                        setStyleAttribute(element_2, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element_2.querySelectorAll('.e-rhandler'));\n                        for (var _a = 0, rowHeader_1 = rowHeader; _a < rowHeader_1.length; _a++) {\n                            var rhElement = rowHeader_1[_a];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                    this.updateChartAxisHeight();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    var groupingBarSelector = this.parent.currentView === 'Table' ? '.e-chart-grouping-bar'\n                        : '.e-pivot-grouping-bar';\n                    var groupingBar = this.parent.element.querySelector(groupingBarSelector);\n                    if (groupingBar) {\n                        groupingBar.style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.updateChartAxisHeight = function () {\n        if (this.groupingChartTable && select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n            var rowPanel = this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS);\n            var valuePanel = this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS);\n            var filterPanel = this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS);\n            var columnPanel = this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS);\n            if (rowPanel && columnPanel) {\n                rowPanel.style.height = 'auto';\n                columnPanel.style.height = 'auto';\n                if (rowPanel.offsetHeight > 0 && columnPanel.offsetHeight > 0) {\n                    var maxHeight = rowPanel.offsetHeight > columnPanel.offsetHeight ? rowPanel.offsetHeight :\n                        columnPanel.offsetHeight;\n                    setStyleAttribute(rowPanel, { height: formatUnit(maxHeight) });\n                    setStyleAttribute(columnPanel, { height: formatUnit(maxHeight) });\n                }\n            }\n            if (valuePanel && filterPanel) {\n                valuePanel.style.height = 'auto';\n                filterPanel.style.height = 'auto';\n                if (valuePanel.offsetHeight > 0 && filterPanel.offsetHeight > 0) {\n                    var maxHeight = valuePanel.offsetHeight > filterPanel.offsetHeight ? valuePanel.offsetHeight :\n                        filterPanel.offsetHeight;\n                    setStyleAttribute(valuePanel, { height: formatUnit(maxHeight) });\n                    setStyleAttribute(filterPanel, { height: formatUnit(maxHeight) });\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            if (this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n                var chartPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                    (this.parent.getWidthAsNumber() - 2);\n                this.chartPanel.width = chartPanelWidth < 400 ? '398px' : chartPanelWidth;\n                this.chartPanel.refreshOverflow();\n            }\n            this.updateChartAxisHeight();\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n        }\n        if (this.groupingTable) {\n            var valuePanel = this.groupingTable.getElementsByClassName(cls.GROUP_VALUE_CLASS + ' ' +\n                cls.VALUE_AXIS_CLASS)[0];\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n                var gridPanelWidth = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) :\n                    (this.parent.getWidthAsNumber() - 2);\n                this.gridPanel.width = gridPanelWidth < 400 ? '398px' : gridPanelWidth;\n                this.gridPanel.refreshOverflow();\n            }\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('colgroup').children[0];\n            var valuePanelWidth = this.parent.isTabular ? this.rowAxisWidth : parseInt(colGroupElement.style.width, 10);\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - valuePanelWidth);\n            setStyleAttribute(valuePanel, { width: valuePanelWidth + 'px' });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.' + cls.HEADERCELL)], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.' + cls.HEADERCONTENT).offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.' + cls.HEADERCONTENT).offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        if (!handlerElement.parentElement.parentElement.querySelector('.' + cls.FREEZED_CELL)) {\n                            setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.alignIcon = function () {\n        if (this.parent.pivotFieldListModule) {\n            var element = this.parent.pivotFieldListModule.element;\n            var currentWidth = void 0;\n            if (this.parent.currentView === 'Table') {\n                currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n            }\n            else {\n                currentWidth = this.parent.chart ? this.parent.pivotChartModule.getCalulatedWidth() : currentWidth;\n            }\n            if (currentWidth) {\n                var minWidth = !this.parent.isAdaptive ? 400 : 300;\n                var actWidth = currentWidth < minWidth ? minWidth : currentWidth;\n                setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: formatUnit(this.parent.enableRtl ?\n                        -Math.abs((actWidth) -\n                            element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                        (actWidth) -\n                            element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth),\n                    top: this.parent.element.querySelector('.' + cls.FIELD_PANEL_SCROLL_CLASS) ? this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetHeight.toString() + 'px' : ''\n                });\n            }\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var emptyRowHeader = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.e-columnheader');\n        addClass([emptyRowHeader.querySelector('.' + cls.HEADERCELL)], 'e-group-row');\n        emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n        var colGroupElement = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var indentWidth = this.parent.isTabular ? 0 : lastButton.querySelector('.e-indent-div').offsetWidth + 20;\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    indentWidth);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.' + cls.HEADERCONTENT).querySelector('.' + cls.HEADERCELL);\n                //const rowContentTable: HTMLElement =\n                //this.parent.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('tbody').querySelector('.' + cls.FREEZED_CELL);\n                var rowContent = this.parent.element.querySelector('.' + cls.CONTENT_CLASS).querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var hasPivotColumns = this.parent.pivotColumns.length > 0;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = gridColumn[0].autoFit ?\n                        gridColumn[0].width : (colwidth > this.resColWidth ? colwidth : this.resColWidth);\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.parent.setCommonColumnsWidth(this.parent.renderModule.pivotColumns[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                var columnWidth = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                gridColumn[cCnt].width = (gridColumn[cCnt].autoFit || (hasPivotColumns\n                                    && this.parent.pivotColumns[cCnt].autoFit)) ? gridColumn[cCnt].width :\n                                    ((this.parent.renderModule.lastColumn &&\n                                        this.parent.renderModule.lastColumn.field === gridColumn[cCnt].field) ?\n                                        (columnWidth - 3) : columnWidth);\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                if (this.parent.isTabular) {\n                    var pivotButtons_1 = this.rowAxisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                    this.rowAxisWidth = this.getPivotButtonsTotalWidth(pivotButtons_1);\n                    if (this.parent.engineModule.rowMaxLevel === 0 && pivotButtons_1.length === 1) {\n                        this.rowAxisWidth = 250;\n                    }\n                    if ((this.parent.element.getBoundingClientRect().width * 0.8) <= this.rowAxisWidth) {\n                        this.rowAxisWidth = pivotButtons_1.length * this.parent.gridSettings.columnWidth;\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    buttonWidth = gridColumn[0].autoFit ? gridColumn[0].width.toString() : buttonWidth;\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    //rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    //setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        if (this.parent.isTabular) {\n                            this.rowAxisWidth = this.parent.dataSourceSettings.rows.length * this.parent.gridSettings.columnWidth;\n                            for (var i = 0; i < this.parent.engineModule.rowMaxLevel; i++) {\n                                gridColumn[i].width = this.parent.gridSettings.columnWidth;\n                            }\n                        }\n                        else {\n                            gridColumn[0].width = this.resColWidth;\n                        }\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth\n                    ? this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable || this.groupingChartTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            (!this.parent.isDragging || (!e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseleave'))) {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.RefreshFieldsPanel = function () {\n        if (this.parent.dataType === 'pivot' && this.parent.groupingBarSettings != null) {\n            if (selectAll('#' + this.parent.element.id + '_AllFields', this.parent.element).length > 0) {\n                for (var _i = 0, _a = selectAll('#' + this.parent.element.id + '_AllFields', this.parent.element); _i < _a.length; _i++) {\n                    var element = _a[_i];\n                    element.remove();\n                }\n            }\n            if (this.parent.groupingBarSettings.showFieldsPanel) {\n                if (this.groupingChartTable && this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n                    this.chartPanel = this.createToolbarUI(this.groupingChartTable);\n                }\n                if (this.groupingTable) {\n                    this.gridPanel = this.createToolbarUI(this.groupingTable);\n                }\n                this.parent.axisFieldModule.render();\n                this.refreshUI();\n            }\n        }\n    };\n    GroupingBar.prototype.createToolbarUI = function (element) {\n        if (select('#' + this.parent.element.id + '_AllFields', element)) {\n            select('#' + this.parent.element.id + '_AllFields', element).remove();\n        }\n        element.prepend(createElement('div', { id: this.parent.element.id + '_AllFields' }));\n        var toolbarObj = new Toolbar({\n            cssClass: cls.ALL_FIELDS_PANEL_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            enableRtl: this.parent.enableRtl, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            items: [{ template: '<div class=' + cls.GROUP_ALL_FIELDS_CLASS + '></div>' }],\n            allowKeyboard: false,\n            width: !this.parent.gridSettings.allowAutoResizing ? (this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2)) : 'auto'\n        });\n        toolbarObj.appendTo(select('#' + this.parent.element.id + '_AllFields', element));\n        return toolbarObj;\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.renderLayout, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.appendToElement, this);\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.appendToElement);\n        this.parent.off(events.initSubComponent, this.renderLayout);\n    };\n    /**\n     * To destroy the groupingbar\n     *\n     * @returns {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n            this.parent.pivotButtonModule = null;\n        }\n        if (this.groupingTable && this.groupingTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.gridPanel != null && !this.gridPanel.isDestroyed) {\n            this.gridPanel.destroy();\n            this.gridPanel = null;\n        }\n        if (this.groupingChartTable && this.groupingChartTable.querySelector('.' + cls.ALL_FIELDS_PANEL_CLASS) && this.chartPanel != null && !this.chartPanel.isDestroyed) {\n            this.chartPanel.destroy();\n            this.chartPanel = null;\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    GroupingBar.prototype.getPivotButtonsTotalWidth = function (pivotButtons) {\n        var totalWidth = 0;\n        for (var i = 0; i < pivotButtons.length; i++) {\n            var buttonWidth = pivotButtons[i].getBoundingClientRect().width < this.parent.gridSettings.columnWidth ?\n                this.parent.gridSettings.columnWidth : pivotButtons[i].getBoundingClientRect().width;\n            totalWidth += buttonWidth + 6;\n        }\n        return totalWidth;\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass, select, SanitizeHtmlHelper, getInstance } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker, TextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module\n     *\n     * @param {PivotView} parent - Instance of pivot table.\n     */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     *\n     * @returns {string} - Module name.\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalFormatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (select('#' + this.parentID + 'conditionalformatting', document) !== null) {\n            remove(select('#' + this.parentID + 'conditionalformatting', document));\n        }\n        var conditionalFormattingElement = createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n            className: cls.FORMAT_DIALOG\n        });\n        this.parent.element.appendChild(conditionalFormattingElement);\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                isFlat: false,\n                buttonModel: {\n                    cssClass: (this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON) + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition')\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                isFlat: false,\n                buttonModel: {\n                    isPrimary: true, cssClass: cls.FORMAT_APPLY_BUTTON + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                isFlat: false,\n                buttonModel: {\n                    cssClass: cls.FORMAT_CANCEL_BUTTON + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        var dialog;\n        if (this.parent.isAdaptive) {\n            dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: this.parent.cssClass, header: this.parent.localeObj.getConstant('conditionalFormatting'), target: document.body\n            });\n        }\n        else {\n            dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: this.parent.cssClass, isModal: true, closeOnEscape: true,\n                enableRtl: this.parent.enableRtl, locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormatting'), target: this.parent.element\n            });\n        }\n        dialog.isStringTemplate = true;\n        dialog.appendTo(conditionalFormattingElement);\n        // dialog.element.querySelector('.e-dlg-header').innerText = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function () {\n        select('#' + this.parentID + 'conditionalformatting', document).querySelector('.' + cls.DIALOG_HEADER)\n            .setAttribute('title', this.parent.localeObj.getConstant('conditionalFormatting'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var _this = this;\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            _this.destroyColorPickers();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            var actionInfo = {\n                conditionalFormattingInfo: this.parent.dataSourceSettings.conditionalFormatSettings\n            };\n            this.parent.actionObj.actionInfo = actionInfo;\n            if (this.parent.dataSourceSettings.values.length > 0) {\n                this.parent.renderPivotGrid();\n            }\n            var dialog = getInstance(select('#' + this.parentID + 'conditionalformatting', document), Dialog);\n            dialog.close();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        var dialog = getInstance(select('#' + this.parentID + 'conditionalformatting', document), Dialog);\n        dialog.close();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (select('#' + this.parentID + 'conditionvalue1' + i, document).value === '' ||\n                select('#' + this.parentID + 'conditionvalue2' + i, document).value === '') {\n                if (select('#' + this.parentID + 'conditionvalue1' + i, document).value === '') {\n                    select('#' + this.parentID + 'conditionvalue1' + i, document).focus();\n                }\n                else {\n                    select('#' + this.parentID + 'conditionvalue2' + i, document).focus();\n                }\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(select('#' + this.parentID + 'conditionvalue1' + i, document).value);\n            this.newFormat[i].value2 =\n                Number(select('#' + this.parentID + 'conditionvalue2' + i, document).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                className: cls.EMPTY_FORMAT\n            });\n            element.innerText = this.parent.localeObj.getConstant('emptyFormat');\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        var dialog = getInstance(select('#' + this.parentID + 'conditionalformatting', document), Dialog);\n        dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { type: 'button', 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv' + i, className: cls.FORMAT_INNER });\n            var valueTable = createElement('table', {\n                id: this.parentID + '_valueTable' + i, className: cls.FORMAT_TABLE, attrs: { 'role': 'table' }\n            });\n            var valueTableRow = createElement('tr');\n            var valueTableElements = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL\n            });\n            valuelabel.innerText = this.parent.localeObj.getConstant('value');\n            valueTableElements.appendChild(valuelabel);\n            valueTableRow.appendChild(valueTableElements);\n            valueTable.appendChild(valueTableRow);\n            valueTableRow = createElement('tr');\n            valueTableElements = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            measureDropdown.appendChild(measureInput);\n            valueTableElements.appendChild(measureDropdown);\n            valueTableRow.appendChild(valueTableElements);\n            valueTableElements = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' + i });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            valueTableElements.appendChild(conditionDropdown);\n            valueTableRow.appendChild(valueTableElements);\n            valueTableElements = createElement('td', {\n                attrs: {\n                    style: 'display:table'\n                },\n                className: cls.FORMAT_INPUT_VALUE\n            });\n            var formatValueClassName = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ?\n                cls.HIDDEN : '';\n            var conditionValueParentDiv = createElement('div', {\n                attrs: {\n                    style: 'display: table-row;'\n                }\n            });\n            var conditionValue1WrapperDiv = createElement('div', {\n                id: this.parentID + 'ConditionValue1' + i,\n                attrs: {\n                    style: 'display: table-cell;'\n                }\n            });\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text',\n                    'tabindex': '0',\n                    'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                }\n            });\n            conditionValue1WrapperDiv.appendChild(value1);\n            conditionValueParentDiv.appendChild(conditionValue1WrapperDiv);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i,\n                className: cls.FORMAT_VALUE_SPAN + ' ' + formatValueClassName,\n                innerHTML: '&'\n            });\n            conditionValueParentDiv.appendChild(valuespan);\n            var conditionValue2WrapperDiv = createElement('div', {\n                id: this.parentID + 'ConditionValue2' + i,\n                attrs: {\n                    style: 'display: table-cell;'\n                }\n            });\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text',\n                    'tabindex': '0',\n                    'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                }\n            });\n            conditionValue2WrapperDiv.appendChild(value2);\n            conditionValueParentDiv.appendChild(conditionValue2WrapperDiv);\n            valueTableElements.appendChild(conditionValueParentDiv);\n            valueTableRow.appendChild(valueTableElements);\n            valueTable.appendChild(valueTableRow);\n            innerDiv.appendChild(valueTable);\n            var grandTotalTable = createElement('table', {\n                id: this.parentID + '_grandTotalTable' + i, className: cls.FORMAT_TABLE + ' ' + cls.GRANDTOTAL_CHECKBOX_TABLE, attrs: { 'role': 'table' }\n            });\n            var grandTotalTableRow = createElement('tr');\n            var grandTotalTableElements = createElement('td');\n            grandTotalTable.appendChild(grandTotalTableRow);\n            var checkBoxInput = createElement('input', {\n                id: this.parentID + 'grandtotalcheckbox' + i,\n                attrs: {\n                    'type': 'checkbox', 'tabindex': '0'\n                }\n            });\n            grandTotalTableElements.appendChild(checkBoxInput);\n            grandTotalTableRow.appendChild(grandTotalTableElements);\n            grandTotalTable.appendChild(grandTotalTableRow);\n            innerDiv.appendChild(grandTotalTable);\n            var formatTable = createElement('table', {\n                id: this.parentID + '_formatTable' + i, className: cls.FORMAT_TABLE, attrs: { 'role': 'table' }\n            });\n            var formatTableRow = createElement('tr');\n            var formatTableElements = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL\n            });\n            formatlabel.innerText = this.parent.localeObj.getConstant('formatLabel');\n            formatTableElements.appendChild(formatlabel);\n            formatTableRow.appendChild(formatTableElements);\n            formatTable.appendChild(formatTableRow);\n            formatTableRow = createElement('tr');\n            formatTableElements = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' + i });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            formatTableElements.appendChild(fontNameDropdown);\n            formatTableRow.appendChild(formatTableElements);\n            formatTableElements = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' + i });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            formatTableElements.appendChild(fontSizeDropdown);\n            formatTableRow.appendChild(formatTableElements);\n            if (this.parent.isAdaptive) {\n                formatTable.appendChild(formatTableRow);\n                formatTableRow = createElement('tr');\n                formatTable.appendChild(formatTableRow);\n                formatTableRow = createElement('tr');\n            }\n            formatTableElements = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_FONT_COLOR\n            });\n            formatTableElements.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_BACK_COLOR\n            });\n            formatTableElements.appendChild(colorPicker2);\n            formatTableRow.appendChild(formatTableElements);\n            formatTableElements = createElement('td');\n            var valuePreview = createElement('input', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                attrs: {\n                    'tabindex': '-1', 'readonly': 'true', 'value': '123.45'\n                }\n            });\n            formatTableElements.appendChild(valuePreview);\n            formatTableRow.appendChild(formatTableElements);\n            formatTable.appendChild(formatTableRow);\n            innerDiv.appendChild(formatTable);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var dialog = getInstance(select('#' + this.parentID + 'conditionalformatting', document), Dialog);\n        var dialogElement = dialog.element;\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            var caption = this.parent.dataSourceSettings.values[i_1].caption ||\n                this.parent.dataSourceSettings.values[i_1].name;\n            caption = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(caption) : caption;\n            fields.push({\n                index: i_1 + 1,\n                name: caption,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        var fieldsDropDown = [];\n        fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: '100%',\n            cssClass: this.parent.cssClass,\n            popupHeight: '200px', popupWidth: 'auto', locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            change: this.measureChange.bind(this, i)\n        });\n        fieldsDropDown[i].isStringTemplate = true;\n        fieldsDropDown[i].appendTo(select('#' + this.parentID + 'measureinput' + i, dialogElement));\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        var conditionsDropDown = [];\n        conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: '100%',\n            cssClass: this.parent.cssClass,\n            popupHeight: '200px', popupWidth: 'auto', locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            change: this.conditionChange.bind(this, i)\n        });\n        conditionsDropDown[i].isStringTemplate = true;\n        conditionsDropDown[i].appendTo(select('#' + this.parentID + 'conditioninput' + i, dialogElement));\n        var formatValueClassName = !(this.newFormat[i].conditions === 'Between' || this.newFormat[i].conditions === 'NotBetween') ?\n            cls.HIDDEN : '';\n        var conditionValue1 = new TextBox({\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            cssClass: cls.FORMAT_VALUE1 + ' ' + this.parent.cssClass,\n            width: 'auto'\n        });\n        conditionValue1.isStringTemplate = true;\n        conditionValue1.appendTo(select('#' + this.parentID + 'conditionvalue1' + i, dialogElement));\n        var conditionValue2 = new TextBox({\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            cssClass: cls.FORMAT_VALUE2 + ' ' + formatValueClassName + ' ' + this.parent.cssClass,\n            width: 'auto'\n        });\n        conditionValue2.isStringTemplate = true;\n        conditionValue2.appendTo(select('#' + this.parentID + 'conditionvalue2' + i, dialogElement));\n        var grandTotalCheckBox = new CheckBox({\n            label: this.parent.localeObj.getConstant('applyToGrandTotal'),\n            checked: this.newFormat[i].applyGrandTotals,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            change: this.onCheckChange.bind(this, i),\n            cssClass: this.parent.cssClass\n        });\n        grandTotalCheckBox.isStringTemplate = true;\n        grandTotalCheckBox.appendTo(select('#' + this.parentID + 'grandtotalcheckbox' + i, dialogElement));\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        var fontNameDropDown = [];\n        fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: '100%',\n            cssClass: this.parent.cssClass,\n            popupHeight: '200px', popupWidth: 'auto', locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            change: this.fontNameChange.bind(this, i)\n        });\n        fontNameDropDown[i].isStringTemplate = true;\n        fontNameDropDown[i].appendTo(select('#' + this.parentID + 'fontnameinput' + i, dialogElement));\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        var fontSizeDropDown = [];\n        fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px', popupWidth: 'auto',\n            value: value, width: '100%',\n            change: this.fontSizeChange.bind(this, i),\n            locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            cssClass: this.parent.cssClass\n        });\n        fontSizeDropDown[i].isStringTemplate = true;\n        fontSizeDropDown[i].appendTo(select('#' + this.parentID + 'fontsizeinput' + i, dialogElement));\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        var valuespan = select('#' + this.parentID + 'valuespan' + i, document);\n        var conditionvalue2 = select('#' + this.parentID + 'conditionvalue2' + i, document);\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            valuespan.classList.remove(cls.HIDDEN);\n            conditionvalue2.parentElement.classList.remove(cls.HIDDEN);\n        }\n        else {\n            valuespan.classList.add(cls.HIDDEN);\n            conditionvalue2.parentElement.classList.add(cls.HIDDEN);\n        }\n    };\n    ConditionalFormatting.prototype.onCheckChange = function (i, args) {\n        this.newFormat[i].applyGrandTotals = args.checked;\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var dialog = getInstance(select('#' + this.parentID + 'conditionalformatting', document), Dialog);\n        var dialogElement = dialog.element;\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = value.charAt(0) === '#' && this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        select('#' + this.parentID + 'valuepreview' + i, document).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + ' ' + cls.FORMAT_FONT_COLOR_PICKER +\n                (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i), locale: this.parent.locale, enableRtl: this.parent.enableRtl\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo(select('#' + this.parentID + 'fontcolor' + i, dialogElement));\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = value.charAt(0) === '#' && this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        select('#' + this.parentID + 'valuepreview' + i, document).style.backgroundColor = color;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontFamily = format.style.fontFamily;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i),\n            locale: this.parent.locale, enableRtl: this.parent.enableRtl\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo(select('#' + this.parentID + 'backgroundcolor' + i, dialogElement));\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), locale: this.parent.locale, enableRtl: this.parent.enableRtl,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo(select('#' + this.parentID + 'removeButton' + i, dialogElement));\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.destroyColorPickers();\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     *\n     * @param {string} h - It represent the hex value.\n     * @returns {boolean} - It returns the isHex value as boolean.\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     *\n     * @param {string} hex - hex value.\n     * @returns { { r: number, g: number, b: number } | null } - Hex value.\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     *\n     * @param {string} colour - It contains the color value.\n     * @returns {string} - It returns the colour Name To Hex.\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        else if (colour.search('rgba') === 0) {\n            var value = colour.substr(5).split(')')[0].split(',');\n            var rgb = '';\n            var a = '';\n            for (var i = 0; i < value.length - 1; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            a = (Math.round(+value[3] * 255)).toString(16);\n            return '#' + rgb + a;\n        }\n        else if (colour.search('rgb') === 0) {\n            var value = colour.substr(4).split(')')[0].split(',');\n            var rgb = '';\n            for (var i = 0; i < value.length; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            return '#' + rgb;\n        }\n        return '#d5d5d5';\n    };\n    ConditionalFormatting.prototype.removeDialog = function () {\n        var element = select('#' + this.parentID + 'conditionalformatting', document);\n        var dialog = element ? getInstance(element, Dialog) : null;\n        if (dialog && !dialog.isDestroyed) {\n            this.destroyColorPickers();\n            dialog.destroy();\n        }\n        if (element) {\n            remove(element);\n        }\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.destroyColorPickers = function () {\n        for (var i = 0; i < (this.newFormat ? this.newFormat.length : 0); i++) {\n            if (this.fontColor && this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                this.fontColor[i].destroy();\n            }\n            if (this.backgroundColor && this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                this.backgroundColor[i].destroy();\n            }\n        }\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        getInstance(select('#' + this.parentID + 'conditionalformatting', document), Dialog).refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        var element = select('#' + this.parentID + 'conditionalformatting', document);\n        var dialog = element ? getInstance(element, Dialog) : null;\n        if (dialog && !dialog.isDestroyed) {\n            dialog.close();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, getInstance, addClass, removeClass, select, SanitizeHtmlHelper, setValue } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { Deferred } from '@syncfusion/ej2-data';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        /** @hidden */\n        this.isMultiAxisChange = false;\n        /** @hidden */\n        this.isReportChange = false;\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     *\n     * @returns {string} - string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (select('#' + this.parent.element.id + 'pivot-toolbar', this.parent.element) !== null) {\n            remove(select('#' + this.parent.element.id + 'pivot-toolbar', this.parent.element));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element)) {\n            this.parent.element.insertBefore(element, select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element));\n        }\n        else if (this.parent.showGroupingBar &&\n            select('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar', this.parent.element)) {\n            this.parent.element.insertBefore(element, select('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar', this.parent.element));\n        }\n        else {\n            this.parent.element.insertBefore(element, select('#' + this.parent.element.id + '_grid', this.parent.element));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            items: this.getItems(),\n            allowKeyboard: false,\n            cssClass: this.parent.cssClass,\n            width: this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()\n        });\n        this.toolbar.isStringTemplate = true;\n        var viewStr = 'viewContainerRef';\n        var registerTemp = 'registeredTemplate';\n        var registeredTemplate = {};\n        if ((this.parent)[viewStr]) {\n            setValue(registerTemp, registeredTemplate, this.toolbar);\n            (this.toolbar)[viewStr] = (this.parent)[viewStr];\n        }\n        if (this.parent.toolbarTemplate && typeof (this.parent.toolbarTemplate) === 'string') {\n            this.toolbar.appendTo(this.parent.toolbarTemplate);\n            this.parent.element.replaceChild(this.toolbar.element, this.parent.element.querySelector('.' + cls.GRID_TOOLBAR));\n            this.toolbar.element.classList.add(cls.GRID_TOOLBAR);\n        }\n        else {\n            this.toolbar.appendTo(element);\n        }\n        this.toolbar.width = this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber();\n        if (this.parent.chart) {\n            this.parent.chart.setProperties({ width: this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString() }, true);\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports);\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    {\n                        var toDisable = this.parent.displayOption.view === 'Chart';\n                        items.push({\n                            prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                            id: this.parent.element.id + 'grid', cssClass: (toDisable ? cls.MENU_DISABLE : '') + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                            click: this.menuItemClick.bind(this)\n                        });\n                    }\n                    break;\n                case 'Chart':\n                    {\n                        var validTypes = (this.parent.displayOption.view === 'Table');\n                        items.push({\n                            template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                            id: this.parent.element.id + 'chartmenu', cssClass: (validTypes ? cls.MENU_DISABLE : '') + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '')\n                        });\n                    }\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType === 'olap') {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n                default:\n                    if (typeof (item) === 'object') {\n                        items.push(item);\n                    }\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf('FieldList') === -1 && select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element) &&\n            select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element).style.display === 'none') {\n            select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element).style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    Toolbar.prototype.reportChange = function (args) {\n        this.parent.actionObj.actionName = events.reportChange;\n        this.isReportChange = true;\n        if (this.parent.actionBeginMethod()) {\n            args.cancel = true;\n            return;\n        }\n        try {\n            this.dropArgs = args;\n            if (this.parent.isModified && this.currentReport !== '') {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n            }\n            else {\n                this.reportLoad(args);\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this_1 = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            var actionInfo = {\n                reportName: args.itemData.value\n            };\n            this.parent.actionObj.actionInfo = actionInfo;\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this_1.currentReport = observedArgs.reportName;\n                _this_1.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.getCurrentReport(),\n                reportName: this.currentReport\n            };\n            this.parent.actionObj.actionName = this.parent.getActionCompleteName();\n            var actionInfo = {\n                reportName: this.currentReport\n            };\n            this.parent.actionObj.actionInfo = actionInfo;\n            this.parent.trigger(events.saveReport, saveArgs);\n            if (this.parent.actionObj.actionName) {\n                this.parent.actionCompleteMethod();\n            }\n            this.parent.isModified = false;\n        }\n        else if (this.currentReport === '' && (args.item.id === (this.parent.element.id + 'save') || args.item.id === (this.parent.element.id + 'saveas'))) {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function () {\n        if (!select('#' + this.parent.element.id + 'mdx-dialog', document)) {\n            this.renderMDXDialog();\n        }\n        var mdxDialog = getInstance(select('#' + this.parent.element.id + 'mdx-dialog', document), Dialog);\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            attrs: { 'readonly': 'readonly', 'aria-label': this.parent.localeObj.getConstant('mdxQuery') }\n        });\n        textarea.innerText = this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim();\n        outerDiv.appendChild(textarea);\n        mdxDialog.content = outerDiv;\n        mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        if (args) {\n            var dialog = getInstance(select('#' + this.parent.element.id + 'report-dialog', document), Dialog);\n            dialog.header = args.item.tooltipText;\n            var outerDiv = createElement('div', {\n                className: cls.GRID_REPORT_OUTER\n            });\n            var label = createElement('div', {\n                className: cls.GRID_REPORT_LABEL\n            });\n            label.innerText = this.parent.localeObj.getConstant('reportName');\n            var input = createElement('input', {\n                className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n                attrs: {\n                    'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                    'value': (action && action === 'rename' ? this.currentReport : '')\n                }\n            });\n            input.innerText = (action && action === 'rename' ? this.currentReport : '');\n            input.setSelectionRange(input.textContent.length, input.textContent.length);\n            outerDiv.appendChild(label);\n            outerDiv.appendChild(input);\n            dialog.content = outerDiv;\n            dialog.refresh();\n            dialog.show();\n        }\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        var actionName = (args.item.id === this.parent.element.id + 'new') ? events.addNewReport : (args.item.id === this.parent.element.id + 'save') ? events.saveCurrentReport : (args.item.id === this.parent.element.id + 'saveas') ? events.saveAsCurrentReport\n            : (args.item.id === this.parent.element.id + 'rename') ? events.renameCurrentReport : (args.item.id === this.parent.element.id + 'remove') ? events.removeCurrentReport : (args.item.id === this.parent.element.id + 'load') ? events.loadReports\n                : (args.item.id === this.parent.element.id + 'formatting') ? events.openConditionalFormatting : (args.item.id === this.parent.element.id + 'numberFormatting') ? events.openNumberFormatting\n                    : (args.item.id === this.parent.element.id + 'mdxQuery') ? events.MdxQuery : (args.item.id === this.parent.element.id + 'fieldlist') ? events.showFieldList : '';\n        this.parent.actionObj.actionName = actionName;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        try {\n            switch (args.item.id) {\n                case (this.parent.element.id + 'save'):\n                case (this.parent.element.id + 'saveas'):\n                    this.saveReport(args);\n                    break;\n                case (this.parent.element.id + 'remove'):\n                    this.action = 'Remove';\n                    if (this.currentReport && this.currentReport !== '') {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                    }\n                    else {\n                        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                    }\n                    return;\n                case (this.parent.element.id + 'rename'):\n                    this.renameReport(args);\n                    break;\n                case (this.parent.element.id + 'new'):\n                    this.action = 'New';\n                    this.newArgs = args;\n                    if (this.parent.isModified && this.currentReport && this.currentReport !== '') {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                    }\n                    else {\n                        this.createNewReport(args);\n                    }\n                    break;\n                case (this.parent.element.id + 'load'):\n                    this.action = 'Load';\n                    break;\n                case (this.parent.element.id + 'fieldlist'):\n                    if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                        this.parent.pivotFieldListModule.dialogRenderer.onShowFieldList();\n                    }\n                    break;\n                case (this.parent.element.id + 'formatting'):\n                    if (this.parent.conditionalFormattingModule) {\n                        this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                    }\n                    break;\n                case (this.parent.element.id + 'mdxQuery'):\n                    this.mdxQueryDialog();\n                    break;\n                case (this.parent.element.id + 'numberFormatting'):\n                    if (this.parent.numberFormattingModule) {\n                        this.parent.numberFormattingModule.showNumberFormattingDialog();\n                    }\n                    break;\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (select('#' + this.parent.element.id + 'report-dialog', this.parent.element) !== null) {\n            remove(select('#' + this.parent.element.id + 'report-dialog', this.parent.element));\n        }\n        var reportDialogElement = createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        });\n        this.parent.element.appendChild(reportDialogElement);\n        var dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body,\n            cssClass: this.parent.cssClass\n        });\n        dialog.isStringTemplate = true;\n        dialog.appendTo(reportDialogElement);\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (select('#' + this.parent.element.id + 'mdx-dialog', this.parent.element) !== null) {\n            remove(select('#' + this.parent.element.id + 'mdx-dialog', this.parent.element));\n        }\n        var mdxDialogElement = createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        });\n        this.parent.element.appendChild(mdxDialogElement);\n        var mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    isFlat: false,\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body,\n            cssClass: this.parent.cssClass\n        });\n        mdxDialog.isStringTemplate = true;\n        mdxDialog.appendTo(mdxDialogElement);\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var mdxDialog = getInstance(select('#' + this.parent.element.id + 'mdx-dialog', document), Dialog);\n        var textArea = mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var _this_1 = this;\n        var dialog = getInstance(select('#' + this.parent.element.id + 'report-dialog', document), Dialog);\n        var reportInput = dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        if (!this.parent.localeObj) {\n            this.parent = getInstance(select('#' + this.parent.element.id, document), PivotView);\n        }\n        if ((dialog.header === this.parent.localeObj.getConstant('save') ||\n            dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'Save';\n            this.currentReport = reportInput.value;\n            var isExist_1 = false;\n            var _this_2 = this;\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_1 = true;\n                        break;\n                    }\n                }\n                if (isExist_1) {\n                    _this_2.createConfirmDialog(_this_2.parent.localeObj.getConstant('alert'), _this_2.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_2.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var saveArgs = {\n                    report: _this_2.getCurrentReport(),\n                    reportName: reportInput.value\n                };\n                var actionInfo = {\n                    reportName: reportInput.value\n                };\n                _this_1.parent.actionObj.actionInfo = actionInfo;\n                _this_2.parent.trigger(events.saveReport, saveArgs);\n                _this_2.parent.isModified = false;\n                _this_2.updateReportList();\n                getInstance(select('#' + _this_1.parent.element.id + 'report-dialog', document), Dialog).hide();\n            });\n        }\n        else if (dialog.header === this.parent.localeObj.getConstant('new') &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'New';\n            this.currentReport = reportInput.value;\n            var isExist_2 = false;\n            var _this_3 = this;\n            var reports_1 = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports_1, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === reports_1.reportName[i]) {\n                        isExist_2 = true;\n                        break;\n                    }\n                }\n                if (isExist_2) {\n                    _this_3.createConfirmDialog(_this_3.parent.localeObj.getConstant('alert'), _this_3.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_3.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                _this_3.parent.trigger(events.newReport);\n                var saveArgs = {\n                    report: _this_3.getCurrentReport(),\n                    reportName: reportInput.value\n                };\n                var actionInfo = {\n                    reportName: reportInput.value\n                };\n                _this_1.parent.actionObj.actionInfo = actionInfo;\n                _this_3.parent.trigger(events.saveReport, saveArgs);\n                _this_3.parent.isModified = false;\n                _this_3.updateReportList();\n                getInstance(select('#' + _this_1.parent.element.id + 'report-dialog', document), Dialog).hide();\n            });\n        }\n        else if (dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            if (this.currentReport === reportInput.value) {\n                dialog.hide();\n                return;\n            }\n            this.action = 'Rename';\n            var isExist = false;\n            this.renameText = reportInput.value;\n            var reports = this.fetchReports();\n            for (var i = 0; i < reports.reportName.length; i++) {\n                if (reportInput.value === reports.reportName[i]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (isExist) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                    this.parent.localeObj.getConstant('replaceConfirmAfter'));\n                return;\n            }\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: reportInput.value\n            };\n            var actionInfo = {\n                reportName: { oldName: this.currentReport, newName: reportInput.value }\n            };\n            this.parent.actionObj.actionInfo = actionInfo;\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = reportInput.value;\n            this.updateReportList();\n            dialog.hide();\n        }\n        this.parent.actionObj.actionName = this.parent.getActionCompleteName();\n        if (this.parent.actionObj.actionName) {\n            this.parent.actionCompleteMethod();\n        }\n    };\n    Toolbar.prototype.createNewReport = function (args) {\n        this.dialogShow(args);\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        var dialog = getInstance(select('#' + this.parent.element.id + 'report-dialog', document), Dialog);\n        dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            cssClass: this.parent.cssClass,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    isFlat: false,\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('yes'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '')\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    isFlat: false,\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('no'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : '')\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        confirmPopUp.isStringTemplate = true;\n        confirmPopUp.appendTo(errorDialog);\n        confirmPopUp.element.querySelector('.e-dlg-header').innerText = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(title) : title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        var _this_1 = this;\n        var dialog = getInstance(select('#' + this.parent.element.id + 'report-dialog', document), Dialog);\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            var actionInfo = {\n                reportName: this.currentReport\n            };\n            this.parent.actionObj.actionInfo = actionInfo;\n            this.parent.trigger(events.removeReport, removeArgs);\n            var reports = this.fetchReports();\n            if (reports.reportName && reports.reportName.length > 0) {\n                var loadArgs = {\n                    reportName: reports.reportName[reports.reportName.length - 1]\n                };\n                this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                    _this_1.currentReport = observedArgs.reportName;\n                    _this_1.parent.isModified = false;\n                });\n                this.currentReport = reports.reportName[reports.reportName.length - 1];\n            }\n            else {\n                this.currentReport = '';\n                this.parent.isModified = false;\n                this.action = '';\n            }\n            this.updateReportList();\n            this.parent.actionObj.actionName = events.reportRemoved;\n            if (this.parent.actionObj.actionName) {\n                this.parent.actionCompleteMethod();\n            }\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '' && this.parent.isModified) {\n                var saveArgs = {\n                    report: this.getCurrentReport(),\n                    reportName: this.currentReport\n                };\n                var actionInfo = {\n                    reportName: this.currentReport\n                };\n                this.parent.actionObj.actionInfo = actionInfo;\n                this.parent.actionObj.actionName = events.reportSaved;\n                if (this.parent.actionObj.actionName) {\n                    this.parent.actionCompleteMethod();\n                }\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.parent.actionObj.actionName = events.addNewReport;\n                    this.createNewReport(this.newArgs);\n                }\n                else {\n                    this.parent.actionObj.actionName = events.reportChange;\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else if (this.action === 'New') {\n                this.parent.trigger(events.newReport);\n                var saveArgs = {\n                    report: this.getCurrentReport(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                this.updateReportList();\n                dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            var saveArgs = {\n                report: this.getCurrentReport(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n            this.updateReportList();\n            dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: this.renameText,\n                isReportExists: true\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = this.renameText;\n            this.parent.isModified = false;\n            this.updateReportList();\n            dialog.hide();\n        }\n        var confirmPopUp = getInstance(select('#' + this.parent.element.id + '_ConfirmDialog', document), Dialog);\n        confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        var dialog = getInstance(select('#' + this.parent.element.id + 'report-dialog', document), Dialog);\n        if (this.action === 'New') {\n            if (this.parent.isModified) {\n                this.createNewReport(this.newArgs);\n            }\n            else {\n                dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            if (select('#' + this.parent.element.id + '_reportlist', this.parent.element)) {\n                var reportList = getInstance(select('#' + this.parent.element.id + '_reportlist', this.parent.element), DropDownList);\n                this.currentReport = reportList.value;\n            }\n            dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            dialog.hide();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        var confirmPopUp = getInstance(select('#' + this.parent.element.id + '_ConfirmDialog', document), Dialog);\n        confirmPopUp.hide();\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.createChartMenu = function () {\n        var _this_1 = this;\n        if (select('#' + this.parent.element.id + 'chart_menu', this.parent.element)) {\n            var chartMenuElement = select('#' + this.parent.element.id + 'chart_menu', this.parent.element);\n            var menuItems = [];\n            var types = this.getValidChartType();\n            for (var i = 0; (i < types.length && i < 7); i++) {\n                var type = types[i];\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant(type.toLowerCase()),\n                    id: this.parent.element.id + '_' + type\n                });\n            }\n            if (menuItems.length === 7) {\n                menuItems.splice(6);\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant('MoreOption'),\n                    id: this.parent.element.id + '_' + 'ChartMoreOption'\n                });\n            }\n            var toDisable = (menuItems.length <= 0 || this.parent.displayOption.view === 'Table');\n            menuItems.push({\n                separator: true\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('multipleAxes'),\n                id: this.parent.element.id + '_' + 'multipleAxes'\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('showLegend'),\n                id: this.parent.element.id + '_' + 'showLegend'\n            });\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : menuItems\n                }];\n            var chartMenu = chartMenuElement ? getInstance(chartMenuElement, Menu) : null;\n            if (chartMenu && !chartMenu.isDestroyed) {\n                chartMenu.destroy();\n                chartMenu = null;\n            }\n            chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                cssClass: cls.TOOLBAR_MENU + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                select: this.menuItemClick.bind(this),\n                beforeOpen: this.whitespaceRemove.bind(this),\n                onClose: function () {\n                    _this_1.focusToolBar();\n                },\n                beforeItemRender: this.multipleAxesCheckbox.bind(this)\n            });\n            chartMenu.isStringTemplate = true;\n            chartMenu.appendTo(chartMenuElement);\n        }\n    };\n    Toolbar.prototype.create = function () {\n        var _this_1 = this;\n        if (select('#' + this.parent.element.id + 'chart_menu', this.parent.element)) {\n            this.createChartMenu();\n        }\n        if (select('#' + this.parent.element.id + 'export_menu', this.parent.element)) {\n            var exportMenuElement = select('#' + this.parent.element.id + 'export_menu', this.parent.element);\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            var exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                cssClass: cls.TOOLBAR_MENU + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this),\n                onClose: function () {\n                    _this_1.focusToolBar();\n                }\n            });\n            exportMenu.isStringTemplate = true;\n            exportMenu.appendTo(exportMenuElement);\n        }\n        if (select('#' + this.parent.element.id + 'subtotal_menu', this.parent.element)) {\n            var subTotalMenuElement = select('#' + this.parent.element.id + 'subtotal_menu', this.parent.element);\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            separator: true\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('subTotalPosition'),\n                            id: this.parent.element.id + 'subtotalpositions',\n                            iconCss: cls.PIVOT_DISABLE_ICON + ' ' + cls.ICON,\n                            items: [\n                                {\n                                    text: this.parent.localeObj.getConstant('auto'),\n                                    id: this.parent.element.id + 'sub-none-position',\n                                    iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                                },\n                                {\n                                    text: this.parent.localeObj.getConstant('top'),\n                                    id: this.parent.element.id + 'sub-top-position',\n                                    iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                                },\n                                {\n                                    text: this.parent.localeObj.getConstant('bottom'),\n                                    id: this.parent.element.id + 'sub-bottom-position',\n                                    iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                                }\n                            ]\n                        }\n                    ]\n                }];\n            var subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                cssClass: cls.TOOLBAR_MENU + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this),\n                onClose: function () {\n                    _this_1.focusToolBar();\n                }\n            });\n            subTotalMenu.isStringTemplate = true;\n            subTotalMenu.appendTo(subTotalMenuElement);\n        }\n        if (select('#' + this.parent.element.id + 'grandtotal_menu', this.parent.element)) {\n            var grandTotalMenuElement = select('#' + this.parent.element.id + 'grandtotal_menu', this.parent.element);\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            separator: true\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('grandTotalPosition'),\n                            id: this.parent.element.id + 'grandtotalpositions',\n                            iconCss: cls.PIVOT_DISABLE_ICON + ' ' + cls.ICON,\n                            items: [\n                                {\n                                    text: this.parent.localeObj.getConstant('top'),\n                                    id: this.parent.element.id + 'top-position',\n                                    iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                                },\n                                {\n                                    text: this.parent.localeObj.getConstant('bottom'),\n                                    id: this.parent.element.id + 'bottom-position',\n                                    iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                                }\n                            ]\n                        }\n                    ]\n                }];\n            var grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                cssClass: cls.TOOLBAR_MENU + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this),\n                onClose: function () {\n                    _this_1.focusToolBar();\n                }\n            });\n            grandTotalMenu.isStringTemplate = true;\n            grandTotalMenu.appendTo(grandTotalMenuElement);\n        }\n        if (select('#' + this.parent.element.id + 'formatting_menu', this.parent.element)) {\n            var formattingMenuElement = select('#' + this.parent.element.id + 'formatting_menu', this.parent.element);\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormatMenu'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormattingMenu'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            var formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale, enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                cssClass: cls.TOOLBAR_MENU + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                select: this.menuItemClick.bind(this)\n            });\n            formattingMenu.isStringTemplate = true;\n            formattingMenu.appendTo(formattingMenuElement);\n        }\n        var saveArgs = {\n            report: this.parent.getPersistData(),\n            reportName: this.parent.localeObj.getConstant('defaultReport')\n        };\n        this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n        this.parent.trigger(events.saveReport, saveArgs);\n        if (select('#' + this.parent.element.id + '_reportlist', this.parent.element)) {\n            var reportListElement = select('#' + this.parent.element.id + '_reportlist', this.parent.element);\n            var reports = this.fetchReports();\n            var reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                cssClass: cls.REPORT_LIST_DROP + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            reportList.isStringTemplate = true;\n            reportList.appendTo(reportListElement);\n        }\n        this.updateItemElements();\n    };\n    Toolbar.prototype.getCurrentReport = function () {\n        var reportStr = this.parent.getPersistData();\n        if (this.parent.dataSourceSettings.type === 'CSV' && this.parent.dataSourceSettings.mode !== 'Server') {\n            var reportSettings = JSON.parse(reportStr);\n            reportSettings.dataSourceSettings.dataSource.splice(0, 0, this.parent.engineModule.fields);\n            reportStr = JSON.stringify(reportSettings);\n        }\n        return reportStr;\n    };\n    Toolbar.prototype.updateItemElements = function () {\n        var itemElements = [].slice.call(this.toolbar.element.querySelectorAll('.e-toolbar-item'));\n        for (var _i = 0, itemElements_1 = itemElements; _i < itemElements_1.length; _i++) {\n            var element = itemElements_1[_i];\n            if (element.querySelector('button')) {\n                element.querySelector('button').setAttribute('tabindex', '0');\n            }\n            else if (element.querySelector('.e-menu.e-menu-parent')) {\n                element.querySelector('.e-menu.e-menu-parent').setAttribute('tabindex', '-1');\n                if (element.querySelector('.e-menu-item.e-menu-caret-icon')) {\n                    element.querySelector('.e-menu-item.e-menu-caret-icon').setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.whitespaceRemove = function (args) {\n        var separator = args.element.querySelector('.e-separator');\n        if (separator) {\n            separator.style.margin = '0px';\n        }\n    };\n    Toolbar.prototype.multipleAxesCheckbox = function (args) {\n        var _this_1 = this;\n        if (this.parent.element.id + '_' + 'multipleAxes' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'checkBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('multipleAxes'),\n                cssClass: 'e-multipleAxes' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                checked: this.parent.chartSettings.enableMultipleAxis,\n                change: function () {\n                    document.getElementById(_this_1.parent.element.id + '_' + 'multipleAxes').click();\n                },\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            args.element.innerText = '';\n            checkbox.appendTo(inputCheckbox);\n            if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Pareto'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) &&\n                !args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.add(cls.MENU_DISABLE);\n                checkbox.disabled = true;\n            }\n            else if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Pareto'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) &&\n                args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.remove(cls.MENU_DISABLE);\n                checkbox.disabled = false;\n            }\n            var checkboxObj = this.parent.element.querySelector('.' + cls.CHECKBOX_CONTAINER + '.e-multipleAxes');\n            args.element.appendChild(checkboxObj);\n        }\n        else if (this.parent.element.id + '_' + 'showLegend' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'showLegendCheckBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('showLegend'),\n                checked: this.getLableState(),\n                cssClass: 'e-showLegend' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n                change: function () {\n                    document.getElementById(_this_1.parent.element.id + '_' + 'showLegend').click();\n                },\n                enableRtl: this.parent.enableRtl,\n                locale: this.parent.locale,\n                enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n            });\n            args.element.innerText = '';\n            checkbox.appendTo(inputCheckbox);\n            var checkboxObj = this.parent.element.querySelector('.' + cls.CHECKBOX_CONTAINER + '.e-showLegend');\n            args.element.appendChild(checkboxObj);\n        }\n    };\n    Toolbar.prototype.getLableState = function () {\n        var chartSettings = JSON.parse(this.parent.getChartSettings()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.showLableState = chartSettings.legendSettings.visible;\n        }\n        else {\n            this.showLableState = true;\n        }\n        return this.showLableState;\n    };\n    Toolbar.prototype.getAllChartItems = function () {\n        return ['Line', 'Column', 'Area', 'Bar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StackingLine', 'StepLine', 'StepArea',\n            'SplineArea', 'Scatter', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'StackingLine100', 'Bubble', 'Pareto',\n            'Polar', 'Radar', 'Pie', 'Pyramid', 'Funnel', 'Doughnut'];\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        if (this.parent.currentView === 'Table') {\n            addClass(items.slice(3), cls.MENU_HIDE);\n            removeClass(items.slice(1, 3), cls.MENU_HIDE);\n        }\n        else {\n            addClass(items.slice(1, 3), cls.MENU_HIDE);\n            removeClass(items.slice(3), cls.MENU_HIDE);\n        }\n    };\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!(args.parentItem.id === this.parent.element.id + 'subtotalpositions')) {\n            if (!select('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (!select('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (!select('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (!select('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals &&\n                !this.parent.dataSourceSettings.showColumnSubTotals) {\n                select('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals &&\n                this.parent.dataSourceSettings.showColumnSubTotals) {\n                select('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals &&\n                this.parent.dataSourceSettings.showColumnSubTotals) {\n                select('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals &&\n                !this.parent.dataSourceSettings.showColumnSubTotals)) {\n                select('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n        }\n        else {\n            select('#' + this.parent.element.id + 'sub-none-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            if (this.parent.dataSourceSettings.subTotalsPosition === 'Auto') {\n                select('#' + this.parent.element.id + 'sub-none-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            select('#' + this.parent.element.id + 'sub-top-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            if (this.parent.dataSourceSettings.subTotalsPosition === 'Top') {\n                select('#' + this.parent.element.id + 'sub-top-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            select('#' + this.parent.element.id + 'sub-bottom-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            if (this.parent.dataSourceSettings.subTotalsPosition === 'Bottom') {\n                select('#' + this.parent.element.id + 'sub-bottom-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!(args.parentItem.id === this.parent.element.id + 'grandtotalpositions')) {\n            if (!select('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (!select('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (!select('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (!select('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n                select('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            }\n            if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals &&\n                !this.parent.dataSourceSettings.showColumnGrandTotals) {\n                select('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals &&\n                this.parent.dataSourceSettings.showColumnGrandTotals) {\n                select('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals &&\n                this.parent.dataSourceSettings.showColumnGrandTotals) {\n                select('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals &&\n                !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n                select('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n        }\n        else {\n            select('#' + this.parent.element.id + 'top-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            if (this.parent.dataSourceSettings.grandTotalsPosition === 'Top') {\n                select('#' + this.parent.element.id + 'top-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n            select('#' + this.parent.element.id + 'bottom-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n            if (this.parent.dataSourceSettings.grandTotalsPosition === 'Bottom') {\n                select('#' + this.parent.element.id + 'bottom-position' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n            }\n        }\n    };\n    Toolbar.prototype.updateReportList = function () {\n        if (select('#' + this.parent.element.id + '_reportlist', this.parent.element)) {\n            var reports = this.fetchReports();\n            var reportList = getInstance(select('#' + this.parent.element.id + '_reportlist', this.parent.element), DropDownList);\n            reportList.dataSource = reports.reportName;\n            if (this.currentReport === '' && reportList.dataSource.length > 0) {\n                reportList.value = reportList.dataSource[reportList.dataSource.length - 1];\n                reportList.text = reportList.dataSource[reportList.dataSource.length - 1];\n                this.currentReport = reportList.dataSource[reportList.dataSource.length - 1];\n            }\n            else {\n                reportList.value = this.currentReport;\n                reportList.text = this.currentReport;\n            }\n            reportList.refresh();\n        }\n    };\n    Toolbar.prototype.menuItemClick = function (args) {\n        var _this_1 = this;\n        var exportArgs = {};\n        var type;\n        var actionName = (args.item.id === this.parent.element.id + 'grid') ? events.tableView : (args.item.id === this.parent.element.id + '_' + 'Column') ? events.chartView : (args.item.id === this.parent.element.id + '_' + 'Bar') ? events.chartView : (args.item.id === this.parent.element.id + '_' + 'Line') ? events.chartView\n            : (args.item.id === this.parent.element.id + '_' + 'Area') ? events.chartView : (args.item.id === this.parent.element.id + '_' + 'Scatter') ? events.chartView : (args.item.id === this.parent.element.id + '_' + 'Polar') ? events.chartView : (args.item.id === this.parent.element.id + '_' + 'ChartMoreOption') ? events.chartView\n                : (args.item.id === this.parent.element.id + '_' + 'multipleAxes') ? events.multipleAxis : (args.item.id === this.parent.element.id + '_' + 'showLegend') ? events.showLegend : (args.item.id === this.parent.element.id + 'pdf') ? events.pdfExport : (args.item.id === this.parent.element.id + 'png') ? events.pngExport\n                    : (args.item.id === this.parent.element.id + 'excel') ? events.excelExport : (args.item.id === this.parent.element.id + 'csv') ? events.csvExport : (args.item.id === this.parent.element.id + 'jpeg') ? events.jpegExport : (args.item.id === this.parent.element.id + 'svg') ? events.svgExport\n                        : (args.item.id === this.parent.element.id + 'notsubtotal') ? events.hideSubTotals : (args.item.id === this.parent.element.id + 'subtotalrow') ? events.subTotalsRow : (args.item.id === this.parent.element.id + 'subtotalcolumn') ? events.subTotalsColumn\n                            : (args.item.id === this.parent.element.id + 'subtotal') ? events.showSubTotals : (args.item.id === this.parent.element.id + 'notgrandtotal') ? events.hideGrandTotals : (args.item.id === this.parent.element.id + 'grandtotalrow') ? events.grandTotalsRow\n                                : (args.item.id === this.parent.element.id + 'grandtotalcolumn') ? events.grandTotalsColumn : (args.item.id === this.parent.element.id + 'grandtotal') ? events.showGrandTotals\n                                    : (args.item.id === this.parent.element.id + 'numberFormattingMenu') ? events.numberFormattingMenu : (args.item.id === this.parent.element.id + 'conditionalFormattingMenu') ? events.conditionalFormattingMenu : '';\n        this.parent.actionObj.actionName = actionName;\n        if (this.parent.actionBeginMethod()) {\n            return;\n        }\n        if (this.getAllChartItems().indexOf(args.item.id.split(this.parent.element.id + '_')[1]) > -1 ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'ChartMoreOption') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'multipleAxes') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'showLegend')) {\n            type = args.item.id.split(this.parent.element.id + '_')[1];\n        }\n        try {\n            switch (args.item.id) {\n                case (this.parent.element.id + 'grid'):\n                    if (this.parent.grid && this.parent.chart) {\n                        this.parent.grid.element.style.display = '';\n                        this.parent.chart.element.style.display = 'none';\n                        if (this.parent.chartSettings.enableMultipleAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                            this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                        }\n                        this.parent.currentView = 'Table';\n                        this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                        if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                            if (this.parent.element.querySelector('.e-pivot-grouping-bar')) {\n                                this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                            }\n                            if (this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                                this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                            }\n                        }\n                        var actionInfo = {\n                            toolbarInfo: {\n                                displayOption: this.parent.displayOption,\n                                gridSettings: this.parent.gridSettings\n                            }\n                        };\n                        this.parent.actionObj.actionInfo = actionInfo;\n                        this.parent.layoutRefresh();\n                    }\n                    break;\n                case (this.parent.element.id + 'pdf'):\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.pdfExport({ fileName: 'Export.pdf' }, false, undefined, false);\n                    }\n                    else {\n                        this.parent.chartExport('PDF', { fileName: 'result' }, undefined, null, undefined);\n                    }\n                    break;\n                case (this.parent.element.id + 'excel'):\n                    exportArgs = {\n                        excelExportProperties: { fileName: 'Export.xlsx' },\n                        isBlob: undefined,\n                        isMultipleExport: undefined,\n                        workbook: undefined\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        _this_1.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    });\n                    break;\n                case (this.parent.element.id + 'csv'):\n                    exportArgs = {\n                        excelExportProperties: { fileName: 'Export.csv' },\n                        isBlob: false,\n                        isMultipleExport: false,\n                        workbook: undefined\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        if (_this_1.parent.dataSourceSettings.mode === 'Server') {\n                            _this_1.parent.getEngine('onCsvExport', null, null, null, null, null, null, null, null, observedArgs.excelExportProperties);\n                        }\n                        else {\n                            _this_1.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                        }\n                    });\n                    break;\n                case (this.parent.element.id + 'png'):\n                    this.parent.chartExport('PNG', { fileName: 'result' }, undefined, null, undefined);\n                    break;\n                case (this.parent.element.id + 'jpeg'):\n                    this.parent.chartExport('JPEG', { fileName: 'result' }, undefined, null, undefined);\n                    break;\n                case (this.parent.element.id + 'svg'):\n                    this.parent.chartExport('SVG', { fileName: 'result' }, undefined, null, undefined);\n                    break;\n                case (this.parent.element.id + 'notsubtotal'):\n                    this.parent.setProperties({ dataSourceSettings: { showSubTotals: false, showColumnSubTotals: false, showRowSubTotals: false } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'subtotalrow'):\n                    this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: false, showRowSubTotals: true } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'subtotalcolumn'):\n                    this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: false } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'subtotal'):\n                    this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: true } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'notgrandtotal'):\n                    this.parent.setProperties({ dataSourceSettings: { showGrandTotals: false, showColumnGrandTotals: false, showRowGrandTotals: false } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'grandtotalrow'):\n                    this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: false, showRowGrandTotals: true } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'grandtotalcolumn'):\n                    this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: false } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'grandtotal'):\n                    this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: true } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'top-position'):\n                    this.parent.setProperties({ dataSourceSettings: { grandTotalsPosition: 'Top' } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'bottom-position'):\n                    this.parent.setProperties({ dataSourceSettings: { grandTotalsPosition: 'Bottom' } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'sub-top-position'):\n                    this.parent.setProperties({ dataSourceSettings: { subTotalsPosition: 'Top' } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'sub-bottom-position'):\n                    this.parent.setProperties({ dataSourceSettings: { subTotalsPosition: 'Bottom' } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'sub-none-position'):\n                    this.parent.setProperties({ dataSourceSettings: { subTotalsPosition: 'Auto' } }, true);\n                    this.parent.refreshData();\n                    break;\n                case (this.parent.element.id + 'numberFormattingMenu'):\n                    if (this.parent.numberFormattingModule) {\n                        this.parent.numberFormattingModule.showNumberFormattingDialog();\n                    }\n                    break;\n                case (this.parent.element.id + 'conditionalFormattingMenu'):\n                    if (this.parent.conditionalFormattingModule) {\n                        this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                    }\n                    break;\n                case (this.parent.element.id + '_' + type):\n                    if (args.item && args.item.text) {\n                        if (type === 'ChartMoreOption') {\n                            this.createChartTypeDialog();\n                        }\n                        else if (type === 'multipleAxes') {\n                            if (this.parent.chartSettings.enableScrollOnMultiAxis) {\n                                this.isMultiAxisChange = true;\n                            }\n                            this.parent.chartSettings.enableMultipleAxis = !this.parent.chartSettings.enableMultipleAxis;\n                            this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                        }\n                        else if (this.getAllChartItems().indexOf(type) > -1) {\n                            this.updateChartType(type, false);\n                        }\n                        else if (type === 'showLegend') {\n                            this.parent.chart.legendSettings.visible = !this.showLableState;\n                            if (this.parent.chartSettings.legendSettings) {\n                                this.parent.chartSettings.legendSettings.visible = !this.showLableState;\n                            }\n                            else {\n                                this.parent.setProperties({ chartSettings: { legendSettings: { visible: !this.showLableState } } }, true);\n                            }\n                            this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                        }\n                    }\n                    break;\n            }\n        }\n        catch (execption) {\n            this.parent.actionFailureMethod(execption);\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    Toolbar.prototype.getValidChartType = function () {\n        var menuItems = [];\n        for (var i = 0; (i <= this.parent.chartTypes.length); i++) {\n            var type = this.parent.chartTypes[i];\n            if ((this.getAllChartItems().indexOf(type) > -1) && (menuItems.indexOf(type) < 0)) {\n                menuItems.push(type);\n            }\n        }\n        return menuItems;\n    };\n    Toolbar.prototype.createChartTypeDialog = function () {\n        var _this_1 = this;\n        var chartDialog = this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + '_ChartTypeDialog',\n            className: cls.PIVOTCHART_TYPE_DIALOG\n        }));\n        var chartTypesDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('chartTypeSettings'),\n            content: this.getDialogContent(),\n            isModal: true,\n            beforeOpen: this.beforeOpen.bind(this),\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: function () { _this_1.chartTypeDialogUpdate(); },\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this_1.removeDialog(); },\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            cssClass: this.parent.cssClass,\n            close: this.removeDialog.bind(this)\n        });\n        chartTypesDialog.isStringTemplate = true;\n        chartTypesDialog.appendTo(chartDialog);\n    };\n    Toolbar.prototype.removeDialog = function () {\n        var chartTypesDialog = select('#' + this.parent.element.id + '_ChartTypeDialog', this.parent.element) ?\n            getInstance(select('#' + this.parent.element.id + '_ChartTypeDialog', this.parent.element), Dialog) : null;\n        if (chartTypesDialog && !chartTypesDialog.isDestroyed) {\n            chartTypesDialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_ChartTypeDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ChartTypeDialog'));\n        }\n    };\n    Toolbar.prototype.chartTypeDialogUpdate = function () {\n        var chartType = getInstance(select('#' + this.parent.element.id + '_ChartTypeOption'), DropDownList).value;\n        var checked = getInstance(select('#' + this.parent.element.id + '_DialogMultipleAxis'), CheckBox).checked;\n        var checkedShow = getInstance(select('#' + this.parent.element.id + '_DialogShowLabel'), CheckBox).checked;\n        this.parent.chart.legendSettings.visible = checkedShow;\n        if (this.chartLableState) {\n            this.parent.chart.legendSettings.visible = checkedShow;\n            if (this.parent.chartSettings.legendSettings) {\n                this.parent.chartSettings.legendSettings.visible = checkedShow;\n            }\n            else {\n                this.parent.setProperties({ chartSettings: { legendSettings: { visible: checkedShow } } }, true);\n            }\n        }\n        this.updateChartType(chartType, false);\n        this.parent.chartSettings.enableMultipleAxis = checked;\n        this.parent.chartSettings.multipleAxisMode = getInstance(select('#' + this.parent.element.id + '_AxisModeOption'), DropDownList).value;\n        var chartTypesDialog = select('#' + this.parent.element.id + '_ChartTypeDialog', document) ?\n            getInstance(select('#' + this.parent.element.id + '_ChartTypeDialog', document), Dialog) : null;\n        chartTypesDialog.close();\n    };\n    Toolbar.prototype.updateChartType = function (type, isMultiAxis) {\n        if (this.getAllChartItems().indexOf(type) > -1) {\n            if (this.parent.chart) {\n                this.parent.currentView = 'Chart';\n                this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultipleAxis) {\n                    this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                    this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height = formatUnit(this.parent.pivotChartModule.getChartHeight());\n                }\n                this.parent.chart.setProperties({\n                    width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()),\n                    height: formatUnit(this.parent.pivotChartModule.getChartHeight())\n                }, true);\n                if (this.parent.chartSettings.chartSeries.type === type && !isMultiAxis) {\n                    this.parent.chart.refresh();\n                }\n                else {\n                    this.parent.chartSettings.chartSeries.type = type;\n                }\n                var actionInfo = {\n                    toolbarInfo: {\n                        displayOption: this.parent.displayOption,\n                        chartSettings: this.parent.chartSettings\n                    }\n                };\n                this.parent.actionObj.actionInfo = actionInfo;\n            }\n        }\n    };\n    Toolbar.prototype.getDialogContent = function () {\n        var mainWrapper = createElement('div', { className: 'e-chart-type-div-content' });\n        var optionWrapperDiv = createElement('div', { className: 'e-chart-type-option-container' });\n        var axisModeWrapperDiv = createElement('div', { className: 'e-multiple-axes-mode-container' });\n        var optionTextDiv = createElement('div', {\n            className: 'e-chart-type-option-text'\n        });\n        optionTextDiv.innerText = this.parent.localeObj.getConstant('ChartType');\n        var axisModeTextDiv = createElement('div', {\n            className: 'e-multiple-axes-mode-text'\n        });\n        axisModeTextDiv.innerText = this.parent.localeObj.getConstant('multipleAxisMode');\n        var dropOptionDiv = createElement('div', { id: this.parent.element.id + '_ChartTypeOption' });\n        var dropModeOptionDiv = createElement('div', { id: this.parent.element.id + '_AxisModeOption' });\n        optionWrapperDiv.appendChild(optionTextDiv);\n        optionWrapperDiv.appendChild(dropOptionDiv);\n        var chartTypeDatasource = [];\n        var multipleAxisModeDatasource = [\n            { value: 'Stacked', text: this.parent.localeObj.getConstant('stacked') },\n            { value: 'Single', text: this.parent.localeObj.getConstant('single') },\n            { value: 'Combined', text: this.parent.localeObj.getConstant('combined') }\n        ];\n        var chartType = this.getValidChartType();\n        for (var i = 0; i < chartType.length; i++) {\n            chartTypeDatasource.push({\n                value: chartType[i], text: this.parent.localeObj.getConstant(chartType[i].toLowerCase())\n            });\n        }\n        var optionWrapper = new DropDownList({\n            dataSource: chartTypeDatasource, enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.chartSeries.type ? this.parent.chartSettings.chartSeries.type : this.getValidChartType()[0],\n            width: '100%',\n            change: this.changeDropDown.bind(this),\n            cssClass: this.parent.cssClass\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(dropOptionDiv);\n        mainWrapper.appendChild(optionWrapperDiv);\n        var checkboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogMultipleAxis',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(checkboxWrap);\n        var labelCheckboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogShowLabel',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(labelCheckboxWrap);\n        axisModeWrapperDiv.appendChild(axisModeTextDiv);\n        axisModeWrapperDiv.appendChild(dropModeOptionDiv);\n        mainWrapper.appendChild(axisModeWrapperDiv);\n        var axisModeWrapper = new DropDownList({\n            dataSource: multipleAxisModeDatasource, enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.multipleAxisMode ? this.parent.chartSettings.multipleAxisMode : 'Stacked',\n            width: '100%',\n            enabled: this.parent.chartSettings.enableMultipleAxis,\n            cssClass: this.parent.cssClass\n        });\n        axisModeWrapper.isStringTemplate = true;\n        axisModeWrapper.appendTo(dropModeOptionDiv);\n        return mainWrapper;\n    };\n    Toolbar.prototype.changeDropDown = function (args) {\n        var chartSettings = JSON.parse(this.parent.getChartSettings()).chartSettings;\n        if (!(chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined)) {\n            getInstance(select('#' + this.parent.element.id + '_DialogShowLabel'), CheckBox).checked = true;\n        }\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Pareto'].indexOf(args.value.toString()) > -1) {\n            getInstance(select('#' + this.parent.element.id + '_DialogMultipleAxis'), CheckBox).disabled = true;\n            getInstance(select('#' + this.parent.element.id + '_AxisModeOption'), DropDownList).enabled = false;\n        }\n        else {\n            var multipleAxisCheckBox = getInstance(select('#' + this.parent.element.id + '_DialogMultipleAxis'), CheckBox);\n            multipleAxisCheckBox.disabled = false;\n            getInstance(select('#' + this.parent.element.id + '_AxisModeOption'), DropDownList).enabled = multipleAxisCheckBox.checked;\n        }\n    };\n    Toolbar.prototype.beforeOpen = function () {\n        var _this_1 = this;\n        var checkbox = new CheckBox({\n            label: this.parent.localeObj.getConstant('multipleAxes'),\n            cssClass: 'e-dialog-multiple-axis' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            checked: this.parent.chartSettings.enableMultipleAxis ? this.parent.chartSettings.enableMultipleAxis : false,\n            change: function (args) {\n                getInstance(select('#' + _this_1.parent.element.id + '_AxisModeOption'), DropDownList).enabled = args.checked;\n            },\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        var checkbox1 = new CheckBox({\n            label: this.parent.localeObj.getConstant('showLegend'),\n            checked: this.getLableState(),\n            change: function () { _this_1.chartLableState = true; },\n            cssClass: 'e-dialog-show-legend' + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''),\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer\n        });\n        var chartTypesDialog = select('#' + this.parent.element.id + '_ChartTypeDialog', document) ?\n            getInstance(select('#' + this.parent.element.id + '_ChartTypeDialog', document), Dialog) : null;\n        checkbox1.appendTo(select('#' + this.parent.element.id + '_DialogShowLabel', chartTypesDialog.element));\n        checkbox.appendTo(select('#' + this.parent.element.id + '_DialogMultipleAxis', chartTypesDialog.element));\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Pareto'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            checkbox.disabled = true;\n            getInstance(select('#' + this.parent.element.id + '_AxisModeOption'), DropDownList).enabled = false;\n        }\n        var chartSettings = JSON.parse(this.parent.getChartSettings()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.chartLableState = true;\n        }\n        else {\n            this.chartLableState = false;\n        }\n    };\n    /**\n     * To refresh the toolbar\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.destroy();\n        this.createToolbar();\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        var element = select('#' + this.parent.element.id + '_ConfirmDialog', document);\n        var confirmPopUp = element ? getInstance(element, Dialog) : null;\n        if (confirmPopUp && !confirmPopUp.isDestroyed) {\n            confirmPopUp.destroy();\n            confirmPopUp = null;\n        }\n        element = select('#' + this.parent.element.id + 'report-dialog', document);\n        var dialog = element ? getInstance(element, Dialog) : null;\n        if (dialog && !dialog.isDestroyed) {\n            dialog.destroy();\n            dialog = null;\n        }\n        element = select('#' + this.parent.element.id + 'mdx-dialog', document);\n        var mdxDialog = element ? getInstance(element, Dialog) : null;\n        if (mdxDialog && !mdxDialog.isDestroyed) {\n            mdxDialog.destroy();\n            mdxDialog = null;\n        }\n        element = select('#' + this.parent.element.id + 'chart_menu', document);\n        var chartMenu = element ? getInstance(element, Menu) : null;\n        if (chartMenu && !chartMenu.isDestroyed) {\n            chartMenu.destroy();\n            chartMenu = null;\n        }\n        element = select('#' + this.parent.element.id + '_ChartTypeDialog', document);\n        var chartTypesDialog = element ? getInstance(element, Dialog) : null;\n        if (chartTypesDialog && !chartTypesDialog.isDestroyed) {\n            chartTypesDialog.destroy();\n            chartTypesDialog = null;\n        }\n        element = select('#' + this.parent.element.id + 'export_menu', document);\n        var exportMenu = element ? getInstance(element, Menu) : null;\n        if (exportMenu && !exportMenu.isDestroyed) {\n            exportMenu.destroy();\n            exportMenu = null;\n        }\n        element = select('#' + this.parent.element.id + 'subtotal_menu', document);\n        var subTotalMenu = element ? getInstance(element, Menu) : null;\n        if (subTotalMenu && !subTotalMenu.isDestroyed) {\n            subTotalMenu.destroy();\n            subTotalMenu = null;\n        }\n        element = select('#' + this.parent.element.id + 'grandtotal_menu', document);\n        var grandTotalMenu = element ? getInstance(element, Menu) : null;\n        if (grandTotalMenu && !grandTotalMenu.isDestroyed) {\n            grandTotalMenu.destroy();\n            grandTotalMenu = null;\n        }\n        element = select('#' + this.parent.element.id + 'formatting_menu', document);\n        var formattingMenu = element ? getInstance(element, Menu) : null;\n        if (formattingMenu && !formattingMenu.isDestroyed) {\n            formattingMenu.destroy();\n            formattingMenu = null;\n        }\n        element = select('#' + this.parent.element.id + '_reportlist', document);\n        var reportList = element ? getInstance(element, DropDownList) : null;\n        if (reportList && !reportList.isDestroyed) {\n            reportList.destroy();\n            reportList = null;\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n            this.toolbar = null;\n        }\n        element = select('#' + this.parent.element.id + 'pivot-toolbar', document);\n        if (element) {\n            remove(element);\n        }\n    };\n    Toolbar.prototype.focusToolBar = function () {\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-selected'), 'e-selected');\n        if (document.querySelector('.e-toolbar-items')) {\n            addClass([document.querySelector('.e-toolbar-items')], 'e-focused');\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend, select, SanitizeHtmlHelper, getInstance, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.newFormat = [];\n        this.lastFormattedValue = [];\n    }\n    /**\n     * To get module name.\n     *\n     * @returns {string} - It returns Module Name\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberFormatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: '320px',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () {\n                        _this.dialog.hide();\n                    },\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            cssClass: this.parent.cssClass,\n            target: this.parent.element,\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerText = this.parent.localeObj.getConstant('numberFormat');\n        var formatObject;\n        this.newFormat = [{ name: this.parent.localeObj.getConstant('AllValues'), format: 'N0', useGrouping: true, type: undefined }];\n        var format = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.formatSettings.length; i++) {\n            formatObject = {\n                name: this.parent.dataSourceSettings.formatSettings[i].name,\n                format: this.parent.dataSourceSettings.formatSettings[i].format,\n                useGrouping: this.parent.dataSourceSettings.formatSettings[i].useGrouping,\n                type: this.parent.dataSourceSettings.formatSettings[i].type\n            };\n            this.newFormat.push(formatObject);\n        }\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        for (var j = 0; j < this.parent.dataSourceSettings.values.length; j++) {\n            if (format.indexOf(this.parent.dataSourceSettings.values[j].name) === -1) {\n                formatObject = {\n                    name: this.parent.dataSourceSettings.values[j].name, format: 'N0',\n                    useGrouping: true\n                };\n                this.newFormat.push(formatObject);\n            }\n        }\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE,\n            attrs: { 'role': 'tableItems' }\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE\n        });\n        valueLable.innerText = this.parent.localeObj.getConstant('values');\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE\n        });\n        formatLable.innerText = this.parent.localeObj.getConstant('formatType');\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE\n        });\n        groupingLable.innerText = this.parent.localeObj.getConstant('grouping');\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE\n        });\n        decimalLable.innerText = this.parent.localeObj.getConstant('decimalPlaces');\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE\n        });\n        this.customLable.innerText = this.parent.localeObj.getConstant('customFormatString');\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        var valuesDropDown;\n        var formatDropDown;\n        var groupingDropDown;\n        if (select('#' + this.parent.element.id + '_FormatValueDrop', this.dialog.element)) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                var caption = this.parent.dataSourceSettings.values[i].caption ||\n                    this.parent.dataSourceSettings.values[i].name;\n                caption = this.parent.enableHtmlSanitizer ? SanitizeHtmlHelper.sanitize(caption) : caption;\n                valueFields.push({\n                    index: i + 1, name: caption,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), change: this.valueChange.bind(this), width: '100%',\n                open: this.customUpdate.bind(this)\n            });\n            valuesDropDown.isStringTemplate = true;\n            valuesDropDown.appendTo(select('#' + this.parent.element.id + '_FormatValueDrop', this.dialog.element));\n        }\n        if (select('#' + this.parent.element.id + '_FormatDrop', this.dialog.element)) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 3, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                cssClass: cls.FORMATTING_FORMAT_DROP + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%'\n            });\n            formatDropDown.isStringTemplate = true;\n            formatDropDown.appendTo(select('#' + this.parent.element.id + '_FormatDrop', this.dialog.element));\n        }\n        if (select('#' + this.parent.element.id + '_GroupingDrop', this.dialog.element)) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), width: '100%', change: this.groupingChange.bind(this)\n            });\n            groupingDropDown.isStringTemplate = true;\n            groupingDropDown.appendTo(select('#' + this.parent.element.id + '_GroupingDrop', this.dialog.element));\n        }\n        if (select('#' + this.parent.element.id + '_DecimalDrop', this.dialog.element)) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 }\n            ];\n            var decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl, locale: this.parent.locale,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), popupHeight: 150, width: '100%', change: this.decimalChange.bind(this)\n            });\n            decimalDropDown.isStringTemplate = true;\n            decimalDropDown.appendTo(select('#' + this.parent.element.id + '_DecimalDrop', this.dialog.element));\n        }\n        if (formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n        if (this.lastFormattedValue.length !== 0) {\n            valuesDropDown.value = this.lastFormattedValue[0].name;\n            var fString = this.lastFormattedValue[0].format;\n            var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n            var group = this.lastFormattedValue[0].useGrouping ? this.parent.localeObj.getConstant('true') :\n                this.parent.localeObj.getConstant('false');\n            this.updateFormattingDialog(fString, first, group);\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.newFormat;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n                var group = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                    this.parent.localeObj.getConstant('false');\n                this.updateFormattingDialog(fString, first, group);\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            var formatDropDown = getInstance(select('#' + this.parent.element.id + '_FormatDrop', this.parent.element), DropDownList);\n            formatDropDown.value = this.parent.localeObj.getConstant('number');\n            var decimalDropDown = getInstance(select('#' + this.parent.element.id + '_DecimalDrop', this.parent.element), DropDownList);\n            decimalDropDown.value = 0;\n            var groupingDropDown = getInstance(select('#' + this.parent.element.id + '_GroupingDrop', this.parent.element), DropDownList);\n            groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.updateFormattingDialog = function (fString, first, group) {\n        var formatDropDown = getInstance(select('#' + this.parent.element.id + '_FormatDrop', this.parent.element), DropDownList);\n        if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n            formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                this.parent.localeObj.getConstant('number');\n            var decimalDropDown = getInstance(select('#' + this.parent.element.id + '_DecimalDrop', this.parent.element), DropDownList);\n            decimalDropDown.value = Number(fString.split('')[1]);\n            var groupingDropDown = getInstance(select('#' + this.parent.element.id + '_GroupingDrop', this.parent.element), DropDownList);\n            groupingDropDown.value = group;\n        }\n        else {\n            formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n            this.customText.value = fString;\n        }\n    };\n    NumberFormatting.prototype.customUpdate = function () {\n        var formatDropDown = getInstance(select('#' + this.parent.element.id + '_FormatDrop', this.parent.element), DropDownList);\n        if (formatDropDown.value === this.parent.localeObj.getConstant('Custom')) {\n            var index = this.getIndexValue();\n            this.newFormat[index].format = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        var index = this.getIndexValue();\n        var groupingDropDown = getInstance(select('#' + this.parent.element.id + '_GroupingDrop', this.parent.element), DropDownList);\n        var decimalDropDown = getInstance(select('#' + this.parent.element.id + '_DecimalDrop', this.parent.element), DropDownList);\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            groupingDropDown.enabled = false;\n            decimalDropDown.enabled = false;\n            this.newFormat[index].format = this.customText.value;\n        }\n        else {\n            var text = this.formattedText();\n            this.newFormat[index].format = text;\n            this.customText.disabled = true;\n            groupingDropDown.enabled = true;\n            decimalDropDown.enabled = true;\n            this.customText.value = '';\n        }\n    };\n    NumberFormatting.prototype.groupingChange = function () {\n        var index = this.getIndexValue();\n        var groupingDropDown = getInstance(select('#' + this.parent.element.id + '_GroupingDrop', this.parent.element), DropDownList);\n        this.newFormat[index].useGrouping = groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false;\n    };\n    NumberFormatting.prototype.getIndexValue = function () {\n        var format = [];\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        var valuesDropDown = getInstance(select('#' + this.parent.element.id + '_FormatValueDrop', this.parent.element), DropDownList);\n        var index = format.indexOf(valuesDropDown.value.toString());\n        return index;\n    };\n    NumberFormatting.prototype.decimalChange = function () {\n        var index = this.getIndexValue();\n        var text = this.formattedText();\n        this.newFormat[index].format = text;\n    };\n    NumberFormatting.prototype.formattedText = function () {\n        var text;\n        var formatDropDown = getInstance(select('#' + this.parent.element.id + '_FormatDrop', this.parent.element), DropDownList);\n        var decimalDropDown = getInstance(select('#' + this.parent.element.id + '_DecimalDrop', this.parent.element), DropDownList);\n        if (formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            return text += decimalDropDown.value;\n        }\n        else {\n            return text = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text = this.formattedText();\n        var index = this.getIndexValue();\n        this.newFormat = this.newFormat.splice(index, 1);\n        var format = extend([], this.newFormat, true);\n        var formatSettings = this.parent.dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatSettings.length; i++) {\n            this.insertFormat(formatSettings[i].name, formatSettings[i].format, formatSettings[i].type, formatSettings[i].currency, formatSettings[i].useGrouping);\n        }\n        var valuesDropDown = getInstance(select('#' + this.parent.element.id + '_FormatValueDrop', this.parent.element), DropDownList);\n        if (valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                this.insertFormat(this.parent.dataSourceSettings.values[i].name, text);\n            }\n        }\n        else {\n            this.insertFormat(valuesDropDown.value.toString(), text);\n        }\n        var eventArgs = {\n            formatSettings: PivotUtil.cloneFormatSettings(this.newFormat),\n            formatName: valuesDropDown.value.toString(),\n            cancel: false\n        };\n        this.parent.trigger(events.numberFormatting, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: observedArgs.formatSettings } }, true);\n                var actionInfo = {\n                    numberFormattingInfo: _this.parent.dataSourceSettings.formatSettings\n                };\n                _this.parent.actionObj.actionInfo = actionInfo;\n                try {\n                    _this.parent.updateDataSource();\n                    _this.dialog.close();\n                }\n                catch (exception) {\n                    _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n                    _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormat'));\n                    _this.parent.hideWaitingPopup();\n                }\n            }\n            else {\n                _this.dialog.close();\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            }\n        });\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text, formatType, currency, useGrouping) {\n        var isExist = false;\n        var groupingDropDown = getInstance(select('#' + this.parent.element.id + '_GroupingDrop', this.parent.element), DropDownList);\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: !isNullOrUndefined(useGrouping) ?\n                useGrouping : groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false,\n            type: formatType,\n            currency: currency\n        };\n        var format = this.newFormat;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n        this.lastFormattedValue = [];\n        this.lastFormattedValue.push(newFormat);\n    };\n    /**\n     * To add event listener.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n            this.dialog = null;\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, select, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { PivotExportUtil } from '../../base/export-util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     *\n     * @param {PivotView} parent - Instance.\n     * @hidden\n     */\n    function Grouping(parent) {\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - string\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        var selectedCellsInfo = [];\n        this.parentElement = parentElement;\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('data-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName, selectedCellsInfo);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName, selectedCellsInfo);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     *\n     * @function getSelectedOptions\n     * @param  {SelectedCellsInfo[]} selectedCellsInfo - Get the members name from the given selected cells information\n     * @returns {string[]} - string\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName, selectedCellsInfo) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type, selectedCellsInfo);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName, selectedCellsInfo) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            if (this.parent.dataSourceSettings.mode === 'Server') {\n                this.parent.getEngine('onRefresh');\n            }\n            else {\n                this.parent.initEngine();\n            }\n        }\n    };\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        delete this.parent.engineModule.groupingFieldsInfo[fieldName];\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     *\n     * @function getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @returns {SelectedCellsInfo[]} - return type\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var i = 0; i < selectedElements.length; i++) {\n            var element = selectedElements[i];\n            var colIndex = Number(element.getAttribute('data-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type, selectedCellsInfo) {\n        var groupDialogElement = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialogElement);\n        var groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this, selectedCellsInfo),\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () {\n                        groupDialog.hide();\n                    },\n                    isFlat: false,\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS + (this.parent.cssClass ? (' ' + this.parent.cssClass) : ''), content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement,\n            cssClass: this.parent.cssClass\n        });\n        groupDialog.isStringTemplate = true;\n        groupDialog.appendTo(groupDialogElement);\n    };\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-container' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text'\n                    });\n                    captionInputTextDiv1.innerText = this.parent.localeObj.getConstant('groupFieldCaption');\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-container' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text'\n                    });\n                    inputTextDiv1.innerText = this.parent.localeObj.getConstant('groupTitle');\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-container' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        locale: this.parent.locale,\n                        value: caption, width: '100%',\n                        cssClass: this.parent.cssClass\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        locale: this.parent.locale,\n                        width: '100%',\n                        cssClass: this.parent.cssClass\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-container'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-container'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-container'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text'\n                    });\n                    intervalTextDiv1.innerText = this.parent.localeObj.getConstant('groupBy');\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') }\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                            cssClass: this.parent.cssClass\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                            cssClass: this.parent.cssClass\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                            cssClass: this.parent.cssClass,\n                            select: function () {\n                                getInstance(select('#' + groupInstance.parentElement.id + '_GroupDialog', document), Dialog).element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                var nodeList = intervalObj_1['liCollections'];\n                                var activeListCount = 0;\n                                nodeList.forEach(function (item) {\n                                    if (item.classList.contains('e-active')) {\n                                        activeListCount++;\n                                    }\n                                });\n                                if (activeListCount === 0) {\n                                    getInstance(select('#' + groupInstance.parentElement.id + '_GroupDialog', document), Dialog).element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                            }\n                        });\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                            cssClass: this.parent.cssClass\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                            cssClass: this.parent.cssClass\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            locale: this.parent.locale,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%',\n                            cssClass: this.parent.cssClass\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        locale: this.parent.locale,\n                        enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                        cssClass: this.parent.cssClass,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance(select('#' + _this.parentElement.id + 'group_start_input'), DateTimePicker) :\n                                getInstance(select('#' + _this.parentElement.id + 'group_start_input'), NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        locale: this.parent.locale,\n                        enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n                        cssClass: this.parent.cssClass,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance(select('#' + _this.parentElement.id + 'group_end_input'), DateTimePicker) :\n                                getInstance(select('#' + _this.parentElement.id + 'group_end_input'), NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    Grouping.prototype.updateGroupSettings = function (selectedCellsInfo) {\n        var groupDialog = getInstance(select('#' + this.parentElement.id + '_GroupDialog', document), Dialog);\n        var dialogElement = groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = this.parent.dataSourceSettings.type === 'CSV' ? PivotUtil.getClonedCSVData(dataSet) : PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance(select('#' + this.parentElement.id + 'group_input_option'), MaskedTextBox);\n            var captionInputInstance = getInstance(select('#' + this.parentElement.id + 'group_caption_option'), MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotExportUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ?\n                customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance(select('#' + this.parentElement.id + 'group_start_option'), CheckBox);\n            var endCheckBoxInstance = getInstance(select('#' + this.parentElement.id + 'group_end_option'), CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance(select('#' + this.parentElement.id + 'group_start_input'), DateTimePicker) :\n                getInstance(select('#' + this.parentElement.id + 'group_start_input'), NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance(select('#' + this.parentElement.id + 'group_end_input'), DateTimePicker) :\n                getInstance(select('#' + this.parentElement.id + 'group_end_input'), NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance(select('#' + this.parentElement.id + 'group_interval_input'), MultiSelect) :\n                getInstance(select('#' + this.parentElement.id + 'group_interval_input'), NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item) { return item.name; });\n                if (newItems) {\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field, fieldName);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n                var groupingTypes_1 = [\n                    '_date_group_years',\n                    '_date_group_quarters',\n                    '_date_group_quarterYear',\n                    '_date_group_months',\n                    '_date_group_days',\n                    '_date_group_hours',\n                    '_date_group_minutes',\n                    '_date_group_seconds'\n                ];\n                if (groups[groupOrders[0]].length === 0) {\n                    delete this.parent.engineModule.groupingFieldsInfo[fieldName];\n                    var _loop_1 = function (key) {\n                        if (groupingTypes_1.some(function (dateTypes) { return key === \"\" + fieldName + dateTypes; })) {\n                            delete this_1.parent.engineModule.groupingFieldsInfo[key];\n                        }\n                    };\n                    var this_1 = this;\n                    for (var key in this.parent.engineModule.groupingFieldsInfo) {\n                        _loop_1(key);\n                    }\n                    var _loop_2 = function (key) {\n                        if (groupingTypes_1.some(function (dateTypes) { return key === \"\" + fieldName + dateTypes; })) {\n                            delete this_2.parent.engineModule.fieldList[key];\n                        }\n                    };\n                    var this_2 = this;\n                    for (var key in this.parent.engineModule.fieldList) {\n                        _loop_2(key);\n                    }\n                    var updatedFields = this.parent.engineModule.fields.filter(function (item) {\n                        return !groupingTypes_1.some(function (dateTypes) { return item === \"\" + fieldName + dateTypes; });\n                    });\n                    this.parent.engineModule.fields = updatedFields;\n                }\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName, groupedFieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        else if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length === 0 &&\n            !isNullOrUndefined(groupedFieldName)) {\n            delete this.parent.engineModule.fieldList[groupedFieldName];\n            delete this.parent.engineModule.groupingFieldsInfo[groupedFieldName];\n            var updatedFields = this.parent.engineModule.fields.filter(function (value) { return value !== groupedFieldName; });\n            this.parent.engineModule.fields = updatedFields;\n        }\n        return orderedSettings;\n    };\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if ((this.parent.grid && this.parent.grid.isDestroyed) || isNullOrUndefined(this.parent.grid)) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        var element = select('#' + this.parent.element.id + '_GroupDialog', document);\n        var groupDialog = element ? getInstance(element, Dialog) : null;\n        if (groupDialog && !groupDialog.isDestroyed) {\n            groupDialog.destroy();\n        }\n        if (this.parent.element && document.getElementById(this.parent.element.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_GroupDialog'));\n        }\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.render, this); //For initial rendering\n    };\n    /**\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.render);\n    };\n    /**\n     * To destroy the pivot button event listener\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping, index.Pager);\nindex.PivotFieldList.Inject(index.CalculatedField);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","dateValue","Date","isNaN","Number","valueOf","getDay","getHours","getMinutes","getSeconds","getMilliseconds","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedCSVData","map","row","slice","getDefinedObj","undefined","inArray","collection","i","cnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","this","type","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","valueIndex","grandTotalsPosition","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","fieldMapping","showSubTotals","showRowSubTotals","showColumnSubTotals","subTotalsPosition","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","showAggregationOnValueField","authentication","CloneAuthenticationObject","getClonedFieldList","fieldListObj","clonedfieldlistObj","keysLength","fieldlistObj","caption","id","isSelected","sort","filterType","index","filter","isCustomField","showRemoveIcon","showFilterIcon","showSortIcon","showNoDataItems","isCalculatedField","showEditIcon","showValueTypeIcon","allowDragAndDrop","pid","aggregateType","baseField","baseItem","dateMember","cloneDateMembers","members","cloneFormatMembers","formatString","format","formula","isExcelFilter","membersOrder","isAlphanumeric","tag","expanded","spriteCssClass","name","defaultHierarchy","hasAllMember","allMember","isChecked","filterMembers","cloneFieldMembers","childMembers","searchMembers","htmlAttributes","currrentMembers","isHierarchy","isNamedSets","actualFilter","levels","levelCount","fieldType","memberType","parentHierarchy","clonedCollection","collection_1","set","formattedText","actualText","clonedFormatMembers","cloneFormatMembersObj","isDrilled","ordinal","collection_2","hasChildren","updateDataSourceSettings","collection_3","axis","isNamedSet","dataType","groupName","cloneOlapFieldSettings","collection_4","collection_5","condition","items","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_6","order","getFormattedHeader","headerCell","engine","clonedHeader","frameHeaderWithKeys","valueSort","fieldName","isDateType","isDateField","formatFields","isSum","getFormattedValue","getFormattedMembers","groupingFields","fieldMembers","fieldList","j","engineModule","indexOf","formatChartHeaders","chartModule","isColumnHeader","formattedValues","parent","join","collection_7","delimiter","collection_8","calendar","currency","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","userName","password","collection_9","hierarchyUniqueName","collection_10","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_11","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_12","getFilterItemByName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","getFieldInfo","hasAllField","len","fieldItem","position","olapEngineModule","isButtonIconRefesh","prop","oldProp","newProp","isButtonRefresh","propValidation","oldAxesProp","newAxesProp","axes","oldAxis","newAxis","options","oldAxisProp","newAxisProp","k","a","b","c","propValidation_1","validation","exception","formatPivotValues","pivotValues","Axis","ActualText","indexObject","IndexObject","Index","rowHeaders","RowHeaders","columnHeaders","ColumnHeaders","FormattedText","actualValue","ActualValue","rowIndex","RowIndex","colIndex","ColIndex","colSpan","ColSpan","level","Level","rowSpan","RowSpan","IsSum","isGrandSum","IsGrandSum","ValueSort","Ordinal","hasChild","HasChild","IsDrilled","Value","Type","Members","formatFieldList","fList","Id","Caption","FormatString","formattedMembers","FormattedMembers","DateMember","Filter","Sort","AggregateType","BaseField","BaseItem","FilterType","Format","Formula","IsSelected","IsExcelFilter","ShowNoDataItems","IsCustomField","ShowFilterIcon","ShowSortIcon","ShowRemoveIcon","ShowEditIcon","ShowValueTypeIcon","AllowDragAndDrop","IsCalculatedField","ShowSubTotals","frameContent","rowPosition","dataContent","pivot","isEmptyData","isEngineUpdated","rowCnt","start","end","rCnt","cCnt","getLocalizedObject","locale","localeObj","getConstant","updateReport","report","Rows","Name","DataType","Columns","FormatSettings","Currency","MaximumFractionDigits","MaximumSignificantDigits","MinimumFractionDigits","MinimumIntegerDigits","MinimumSignificantDigits","Skeleton","UseGrouping","generateUUID","d","getTime","d2","performance","now","replace","r","Math","random","floor","toString","applyCustomSort","sortDetails","sortMembersOrder","hasMembersOrder","isOlap","grandTotal","IsOrderChanged","concat","reverse","updatedMembers","isNormalType","shift","member","sortText","dateText","splice","pop","applyHeadersSort","isNumberGroupSorting","aText","bText","parseFloat","localeCompare","numeric","sensitivity","match","renderOlapEngine","customProperties","renderEngine","frameCustomProperties","fieldListData","onHeadersSort","getHeaderSortInfo","bind","measureIndex","actionObj","actionName","errorInfo","actionFailureMethod","header","framedHeader","getPageSize","pageSize","SizeF","getSortedValue","aggreColl","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","PivotEngine","aggregatedValueMatrix","valueContent","groupingFieldsInfo","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","columnPageCount","rowPageCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeadersCount","columnHeadersCount","rMembers","cMembers","isLastHeaderHasMeasures","isPagingOrVirtualizationEnabled","rowMaxLevel","valueMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rowGrandTotal","columnGrandTotal","removeRowGrandTotal","removeColumnGrandTotal","isValueHasAdvancedAggregate","rawIndexObject","reformAxisCount","isEditing","valueAxisFields","actualData","groupRawIndex","fieldKeys","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","formatRegex","measureNames","enablePaging","enableVirtualization","enableHtmlSanitizer","enableOptimizedRendering","groupedDataType","emptyRowsLength","tabularPivotValues","clearProperties","isExport","dataSource","fn","getValueCellInfo","globalize","Internationalization","currencyCode","currenyCode","fieldsType","clonedReport","enableSort","showSubTotalsAtTop","isTabularLayout","showSubTotalsAtBottom","isValueFilterEnabled","isDrillThrough","pageSettings","getGroupedRawData","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMultiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fillFieldMembers","updateSortSettings","columnLength","updateFilterMembers","generateGridData","pos","requireDatasourceUpdate","countFields","hasCountField","realData","headerFields","groupRawData","finalData","groupKeys","indexLength","currData","vPos","hPos","memberJoin","currFieldName","currValue","savedData","summType","_this","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","len_1","interval","isInRangeAvail","getRange","newDate","newFieldName","setFullYear","getFullYear","month","ceil","getMonth","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","caption_1","clonedFields","cloneField","newField","axisField","currentField","currentFieldCaption","caption_2","field","getMappingField","len_3","mappingField","cEndValue","unframedSet","dataLength","numericFieldName","currentData","parseInt","max","currentStartValue","round","currentEndValue","startValue","endValue","getNumberGroupHeaders","grouping","_b","keys_2","_c","axisFields_2","len_4","customFieldName","pattern","parentField","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","getPercentFormat","formatField","isHavingFormat","toLowerCase","getFormattedFields","setFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","lenE","getCalculatedField","dataTypes","isMembersFilled","updateMembersOrder","updateTreeViewData","sortInfo","updateFieldList","lnt","groupingTypes","groupSetting","some","forEach","unBoundField","dateType","actualFormula","this_2","calc","calcProperties","trim","powerFunction","formulaType","split","lmt","aggregateValue","matchStrings","selectedString","filterElements","filterElements_1","dataFields_1","validateValueFields","fetchFieldMembers","fieldPosition","generateMembers","Set","kl","formulaFields","dlen","has","isDataAvail","membersCnt","isFieldHasExpandAll","dl","memberkey","mkey","SanitizeHtmlHelper","sanitize","formattedValue","String","memberName","valueMatrixInfo","kLn","add","generateValueMatrix","keyLen","flList","tkln","fieldValue","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","valueFilter","rowFilterData","isValueFiltered","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","column","cellSets","getCellSet","rowCellType","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","updatedRowMembers","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","getTabularPivotValues","setRowSpan","updateHeaders","rowFlag","columnFlag","updatePivotValues","slicePos","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","grandHeader","insertAllMember","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","isNotDateType","childrens","stringValue","alphaNumbervalue","nullValue","charAt","sortHeaders","isHeaderSortByDefault","membersInfo","toLocaleLowerCase","copyOrder","m","isNullArgument","valueSortHeaderText","textArray","name_1","hText","mIndex","mType","getMember","sortByValueRow","vlen","rMembers_1","rMembers_2","rowLength","rowCells","savedCell","spanCnt","colLength","indexObj","startIndex","lastIndex","colCnt","columnSpan","cell","getMemberSpanCount","rowPos","curentCell","cellType","hierarchyName","isSpanned","cell_1","rowCellArray","cellIndex","vDrilledItem","fieldCnt","drillOption","hasValueField","isFieldAvail","isDrillMemberExpand","hasMeasureIndex","memberString","isAllValuesAvail","field_1","name_2","keyInd","parentMember","valueFil","hierarchy","keysPos","rlen","decisionObj","reportDataType","isNoData","savedMembers","lt","memInd","headerValue","availData","isFiltered","uniqueName","isExpandMember","hIndLen","filterPosition","outOfRange","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","columnPageSize","rowPageSize","currentColumnPage","currentRowPage","requirePageCount","exactStartPos","performSlicing","startPos","removeChildMembers","framedMember","customText","grandTotalSet","unshift","reformAxis","pIndex","vlt","rTotal","cTotal","valueParentIndex","tnum","actCnt","isLeastNode","isRowFieldsAvail","recursiveRowData","isValue","actpos","isValueCellUpdated","vln","isValueIndexFound","rowUniqueName","cln","clt","updateRowData","parentIndex","columnUniqueName","insertRowSubTotals","isValueAxis","parentIndexes","subTotal","valueCells","valueCell","getParentIndex","parentInfo","dataValue","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","actualHeaders","headers_2","updateSelectedHeaders","isValuesAvail","aggregateHeaders","children","vCount","isChild","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_3","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","rowIndex_1","len_5","cLevelName","axisObj","isSelectedColumn","len_6","uniqueLevelName","rowIndex_3","colIndex_3","currentSet","selectedHeaderCollection_1","rowIndex_2","colIndex_2","_g","indexCollection_2","cVal","formatNumber","clen","_k","rowindexCollection_2","_h","selectedHeaderCollection_2","_j","rowindexCollection_1","selectedColumn","getSelectedColumn","_l","indexCollection_3","selectedColumnValue","selectedRow","getSelectedRow","_m","selectedHeaderCollection_3","_o","rowIndex_4","_p","colIndex_4","_q","indexCollection_4","selectedRowValue","_r","selectedHeaderCollection_4","_s","rowindexCollection_3","selectedCol","_t","indexCollection_5","selectedColValue","_u","colIndex_5","_v","selectedHeaderCollection_5","_w","rowIndex_5","_x","rowIndex_6","_y","selectedHeaderCollection_6","colheads_1","head","rowheads_1","gTotalIndex","totalValues","gTotalIndex_1","rIndex","gTotalIndex_2","isGrand","toLocaleString","currentCellSets","keys_3","updateValueMembers","headerInfo","levelInfo","vcnt","levelIndex","name_4","calObj","vData","hData","drillInfo","isFieldValueHeader","reArrangeValueMember","member_1","frameDefinedHeaderData","rowAxis","hasColumnTotal","headerData","clt_1","hasRowTotal","clt_2","colItmLn","isHidden","isTotalHide","lvl","isSingleMeasure","name_5","isGrandTotal","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","test","items_1","text","RegExp","rowPivotValues","firstRow","emptyRow","headerColIndex","colData","i_2","levelNameParts","currentRow","dLevelName","duplIsDrilled","span","setColumnSpan","i_1","colDataValues","spanlength","f","splitedText","drillMem","drillItem","emptyHeaderLength","tabluarValue","initialLoad","uiUpdate","contentReady","dataReady","treeViewUpdate","chartView","ROOT","RTL","DEVICE","ICON","WRAPPER_CLASS","COLLAPSE","EXPAND","TABLE","ROWSHEADER","HEADERCELL","CALCINPUT","FORMAT","FORMULA","MENU_HIDE","HIDDEN","VIRTUALTABLE_DIV","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","HEADERCONTENT","GRID_REMOVE","GRID_TOOLBAR","PIVOTCHART","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","TOOLBAR_MENU","PIVOT_CONTENT_LOADER","AggregateMenu","menuInfo","stringAggregateTypes","render","args","parentElement","openContextMenu","target","getAttribute","fieldInfo","buttonElement","isStringField","summaryTypes","getMenuItem","actionBeginMethod","eventArgs","cancel","aggregateTypes","displayMenuCount","getModuleName","isPopupView","trigger","observedArgs","createContextMenu","currentMenu","getBoundingClientRect","enableRtl","open","top","window","scrollY","document","documentElement","scrollTop","left","execption","menuItems","isDestroyed","destroy","checkDuplicates","element","getAllSummaryType","menuOptions","cssClass","beforeOpen","beforeMenuOpen","onClose","select","focus","selectOptionInContextMenu","contextMenu","getElementById","innerHTML","createElement","appendChild","Menu","isStringTemplate","appendTo","isString","zIndex","display","createValueSettingsDialog","valueDialogElement","className","attrs","data-field","valueDialog","Dialog","animationSettings","effect","allowDragging","content","createFieldOptions","isModal","visible","showCloseIcon","width","height","X","Y","buttons","click","updateValueSettings","isFlat","buttonModel","isPrimary","hide","closeOnEscape","renderMode","close","removeDialog","fieldCaption","summaryType","summaryDataSource","summaryItems","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","fieldName_1","isDateField_1","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","innerText","textContent","getElementsByClassName","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","dataBind","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","querySelector","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","isDeferLayoutUpdate","pivotDeferLayoutUpdate","notify","events.uiUpdate","triggerPopulateEvent","getInstance","dialogElement","captionInstance","summaryInstance","baseFieldInstance","baseItemInstance","cls.PIVOT_BUTTON_CLASS","remove","Render","isAutoFitEnabled","pivotColumns","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","drilledLevelInfo","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","gridSettings","formatList","getFormatList","aggMenu","refreshRequired","initProperties","isTabular","columnWidth","gridCellCollection","injectGridModules","getRowStartPos","grid","notEmpty","frameDataSource","frozenColumnsLength","frozenColumns","frameStackedHeaders","frameGridDataSource","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","addPivotAutoFitClass","removePivotAutoFitClass","getHeaderContent","calculateGridWidth","allowAutoResizing","refreshUI","calculateGridHeight","bindGrid","gridElement","on","headerRefreshed","refreshHeader","maxIndent","isOverflows","colGrandPos","rowGrandPos","timeOutObj","mCont","virtualTable","closest","cls.VIRTUALTABLE_DIV","mHdr","vtr","virtualHeaderDiv","setStyleAttribute","cls.TABLE","transform","freezedCellValue","right","ele","scrollLeft","isEmpty","Grid","frozenRows","enableHover","frameEmptyData","frameEmptyColumns","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","clipMode","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","rowHeight","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","pdfExportComplete","excelExportComplete","actionComplete","excelDataBound","requestType","body","classList","contains","lastGridSettings","gridObject","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","lastColumn","exportCompleteEventArgs","promise","setFocusOnLastCell","isInitial","refreshData","onContentReady","events.contentReady","keyboardModule","event","nodeName","gridFocus","serviceLocator","getService","setFocusedElement","addClass","getCellElement","currentElement","cellTarget","lastCellClicked","elem","bool","isGroupElement","allowGrouping","groupingModule","validateField","pivotValue1","querySelectorAll","cls.EXPAND","selectAll","cls.MENU_HIDE","cls.COLLAPSE","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","allowCalculatedField","fieldType_1","menuItem","exportArgs","rowIndx","colIndx","pivotValue","pdfDoc","isBlob","isMultipleExport","pdfExportProperties","fileName","pdfExport","workbook","excelExportProperties","excelExport","csvExport","event_1","MouseEvent","view","bubbles","cancelable","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","validateColumnTotalcell","headerPosKeys","sumLock","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","vSort","lock","styles","headerTextAlign","getChildColumnWidth","customAttributes","gridColumns","minWidth","hideScroll","parentColumn","parentColumn_1","colName","offsetWidth","firstColWidth","gridColumn","cls.HEADERCONTENT","firstRowHeight","offsetHeight","resizedValue","e","clearTimeout","setTimeout","onSelect","pivotArgs","currentCell","selectedElements","rowOuterDiv","customClass","hyperlinkSettings","dataColIndex","isValueCell","memberPos","levelPosition","cellLevelName","onOlapRowCellBoundEvent","localizedText","setSpanAttributes","cls.ROWSHEADER","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","textAlign","olapValueAxis","isSummaryCellHyperlink","isValueCellHyperlink","cellTemplate","appendTemplate","unWireEvents","wireEvents","pivotview","getCellTemplate","targetCell","isVue","isVue3","container","append","firstChild","appendHtml","outerHTML","rowMeasurePos","tupRowInfo","tupInfo","cellActualText","memberPosition","uNameCollection","fieldSep","substring","nxtIndextCount","lastIndextCount","prevHasChild","fPos","typeCollection","indent","iPos","actualLevelName","levelUniqueName","isSubTotalCell","currPos_1","parentUniqueName","currPos_2","lvlPosition","hierarchyPOs","currPos_3","currHierarchyPos","currPos","lvlPos","hasChild_1","measurePosition","allStartPos","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnFieldsAvail","isColumnCellHyperlink","updateWrapper","hdrdiv","lineHeight","div","navigator","userAgent","tupColumnInfo","outerDiv","innerDiv","prevCell","isSpannedCell","currCell","parentCellSpan","parentCellPos","onHyperCellClick","nativeEvent","getElement","mode","layout","0","1","calculateColWidth","colCount","parWidth","gridHeight","parentHeight","getHeightAsNumber","headersLength","getScrollBarWidth","colWidth","resizeColWidth","eleWidth","totColWidth","elementCreated","parHeight","minHeight","showToolbar","currentView","displayOption","cls.GRID_TOOLBAR","tableHeight","contentHeight","tableWidth","horizontalOverflow","commonOverflow","autoFitApplied","refreshColumn","toolbarModule","isReportChange","pivotFieldListModule","headerCnt","headerSplit","splitPos","measureFlag","colMeasurePos","colDepth","columnModel","actualCnt","colField","isEmptyGrid","autoFit","cloneDataWithoutIndex","setSavedWidth","tmpSpan","innerModel","innerPos","groupRowElement","buttonDivs","rowHeaderWidth","getTotalColumnWidth","n_1","updatePivotColumn","triggerColumnRenderEvent","formatArray","fString","fCnt","getValidHeader","gridCell","exportHeaderEvent","hAlign","exportType","aggMatrix","exportContentEvent","numberFormat","paragraphIndent","excelRows","cells","tmpCell","framedDataSource","EventHandler","attrName","spanValue","totalColumnWidth","CommonKeyboardInteraction","keyConfigs","shiftF","shiftS","shiftE","delete","enter","escape","upArrow","downArrow","altJ","tabIndex","KeyboardEvents","keyAction","keyActionHandler","eventName","processFilter","processSort","processEdit","processDelete","processEnter","processClose","processFilterNodeSelection","processComponentFocus","stopPropagation","preventDefault","getButtonElement","allPivotButtons","moduleName","filterDialog","dialogPopUp","dialogElement_1","isExcelFilter_1","allowExcelLikeFilter","keyCode","memberEditorTree","firstLi","removeAttribute","allMemberEditorTree","parentID","dialogInstance","button","pivotButtons_1","EventBase","searchListItem","updateSorting","checkisDescending","isDescending","sortObj","addMembersOrder","newSortObj","lastSortInfo","updateFiltering","treeData","getOlapData","sortType","isValidFilterItemsAvail","getTreeData","popupTarget","filterTargetID","createFilterDialog","isItemAvail","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","getFilterMembers","getMembers","filterItemObj","dummyfilterItems","memberObject","filterItems_1","getParentNode","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","applyFilterCustomSort","getParentIDs","treeObj","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","isDataOverflow","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","filterItems_3","modifiedFieldName","data-fieldName","data-memberId","isSearchRender","updateChildNodeStates","members_4","state","sMembers","members_5","parentItem","parentNodes","selectedNodes_1","parent_1","members_6","isNodeExpand","NodeStateModified","onStateModified","droppedClass","droppedPosition","dataSourceUpdate","btnElement","actualFieldName","description","errorDialog","createErrorDialog","getButtonPosition","updateFieldlistData","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","draggedClass","draggedPosition","nodeDropped","eventdrop","dropField","dropAxis","dropPosition","draggedAxis","removeFieldFromReport","showValuesButton","dropAxisFields","getNewField","droppedField","droppedAxis","droppedArgs","isMeasureAvail","measureField","fieldCount","ErrorDialog","errorPopUp","closeErrorDialog","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","aria-label","filterCaption","headerTemplate","filterObject","getFilterObject","iconCss","disabled","closeFilterDialog","removeFilterDialog","filterArgs","filterSetting","createTabMenu","updateCheckedState","createTreeView","visibility","memberTreeView","nodeChecked","pivotButtonModule","nodeStateModified","allMemberSelect","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","createSortOptions","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","nodeAttr","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeSelected","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","sortWrapper","cls.FILTER_SORT_CLASS","cls.RTL","sortAscendElement","cls.SORT_SELECTED_CLASS","sortDescendElement","sortBtnElement","Button","unWireEvent","wireEvent","dropMenu","DropDownButton","selectedLevel","nodeLimit","getSearchMembers","isAllMember","checkedNode","getNode","uncheckAll","checkAll","applySorting","sortElements","dataCount","nodeData","childNodes","getChildMembers","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","formatObj","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","measures","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","levelObj","fieldlistData_1","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","cloneNode","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","lDataSource","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","NumericTextBox","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","inputObj2_2","inputObj1_3","inputObj2_3","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","setFocus","PivotCommon","pivotEngine","Common","commonModule","addEventListener","initiateCommonModule","pivotCommon","Browser","isDevice","events.initialLoad","removeEventListener","off","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","FieldListFieldOptions","Style","ConditionalFormatSettings","GroupSettings","CustomGroups","CalculatedFieldSettings","DrillOptions","ValueSortSettings","Authentication","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","cellSelectionMode","wrapMode","Event","KeyboardInteraction","tab","shiftTab","shiftUp","shiftDown","shiftLeft","shiftRight","shiftEnter","ctrlEnter","leftArrow","rightArrow","ctrlShiftF","pivotViewKeyboardModule","processTab","processShiftTab","processSelection","clearSelection","toggleFieldList","getNextButton","allpivotButtons","getPrevButton","columnFilterValueGroup","rowGroup","chartGroup","tableAxis","chartAxis","columnFilterValueAxis","groupingbarButton","headerButton","getFocusedElement","nextButton","currentInfo","skipAction","showFieldList","toolbar","activeElement","getElementsByTagName","lastChild","prevButton","allPivotButtons_1","shiftKey","ctrlKey","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","dialogRenderer","fieldListDialog","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldElement","items_2","items_3","items_4","dropClass","VirtualScroll","previousValues","frozenPreviousValues","eventType","isFireFox","addInternalEvents","gridContent","mScrollBar","clearEvents","onHorizondalScroll","onVerticalScroll","common","onCustomScrollbarScroll","setPageXY","onTouchScroll","isPreventScrollEvent","onWheelScroll","deltaMode","deltaY","getPointXY","pageXY","x","y","touches","pageX","pageY","pointerType","update","virtualScrollSettings","allowSinglePage","direction","vScrollPos","scrollHeight","rowValues","exactSize","section","scrollPosObject","vertical","clientHeight","showWaitingPopup","rowStartPos_1","getEngine","scrollPage","pageRowStartPos","enginePopulatedEventMethod","exactPage","verticalSection","hScrollPos","scrollWidth","colValues","abs","enableOptimizedRendering_1","horizontal","clientWidth","pivot_1","colStartPos_1","pageColStartPos","horizontalSection","getActionCompleteName","actionCompleteMethod","fCont","cls.PIVOT_CONTENT_LOADER","verticalScrollScale","horizontalScrollScale","eleScrollLeft","horiOffset","alignFreezedCells","scrollDirection","vertiOffset","scrollerBrowserLimit","excessMove","notLastPage","vWidth","virtualDiv","mCntScrollPos","mCntVScrollPos","isParentCells","rowsHeaderElement","setFrozenColumnPosition","virtualTableElement","top_1","contentTable","movableTable","vHeight","removeInternalEvents","DrillThroughDialog","indexString","isUpdated","showDrillThroughDialog","gridData","rawData","gridIndexObjects","editSettings","allowInlineEditing","allowEditing","editCell","removeDrillThroughDialog","drillThroughDialog","createDrillThroughGrid","drillThroughGrid","dataWithPrimarykey","beforeClose","updateData","previousPosition","gridIndexObjectsValue_1","addItems","prevItems","gridIndex","drillThroughValue","Key","addedData","removedData","updatedData","eventArgs_1","previousData","actionInfo","editInfo","drillKeyConfigs","drillthroughKeyboardModule","drillthroughKeyActionHandler","gridResize","currentTarget","firstElementChild","numericTextBox","textBoxValue","indexValue","blur","dataIndex","textBoxElement","focusIn","dataPos","drillThroughBody","drillThroughBodyHeader","toolbarItems","allowCommandColumns","Toolbar","ColumnChooser","showColumnChooser","allowPaging","formatData","dialogModule","gridObj","Edit","Page","actionBegin","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","isPrimaryKey","defaultValue","validationRules","required","beforeBatchSave","frameGridColumns","editType","isDateFieldExist","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","drillThroughElement","valueCaption","aggType","tupleInfo","measureName","rowOrdinal","colOrdinal","getUniqueName","getDrillThroughData","maxRowsInDrillThrough","gridJSON","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","triggerDialog","frameData","valuetText","getRowText","drillThrough","PivotChart","headerColl","maxLevel","columnGroupObject","selectedLegend","chartSeriesInfo","measuresNames","accumulationType","isChartInitial","loadChart","chartSettings","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","zoomFactor","dataLabel","refresh","appendChartElement","enableMultipleAxis","chartSeries","measureList","accEmptyPoint","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","drillDimension","isValidHeader","groupHierarchyWithLevels","rKeys_1","rKey","valueSort_1","firstRowCell","fieldPos","currrentLevel","isAttributeDrill","cKeys","prevMemberCell","valueSort_2","levelName_1","prevIndex","cKeys_1","cKey","measureAllow","colHeaders","values_2","columnSeries","colorIndex","yValue","refreshChart","prevColorIndex","persistSettings","getChartSettings","seriesColors","palettes","getSeriesColor","theme","columnDelimiter","columnHeader","chartType","fieldWithCaption","currentColumn","currentSeries","frameChartSeries","xName","yName","emptyPointSettings","innerRadius","columnKeys_1","showMultiLevelLabels","multiAxisKey","currentSeriesName","fieldCaptionName","showPointColorByMembers","seriesName","fill","tooltipMappingName","yAxisName","multipleAxisMode","seriesEvent","pivotChart","bindChart","frameObjectWithKeys","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","primary","insertBefore","cls.PIVOTCHART","chartElement","enableScrollOnMultiAxis","getGridWidthAsNumber","getChartHeight","getChartAutoHeight","overflow","overflowX","isMultiAxisChange","Chart","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","StackingLineSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","StripLine","DataLabel","AccumulationChart","PieSeries","FunnelSeries","PyramidSeries","AccumulationDataLabel","AccumulationLegend","AccumulationTooltip","legendSettings","tooltip","enableSmartLabels","center","pieCenter","enableBorderOnMouseMove","highlightMode","highlightPattern","titleStyle","subTitle","subTitleStyle","margin","border","background","selectionMode","accumulationSelectionMode","isMultiSelect","enableExport","selectedDataIndexes","enableAnimation","useGroupingSeparator","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","tooltipRender","loaded","load","resized","zoomSettings","chartArea","crosshair","isTransposed","enableCanvas","enableSideBySidePlacement","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","legendClick","axisLabelRender","multiLevelLabelClick","axisMultiLabelRender","multiLevelLabelRender","hideWaitingPopup","hideSpinner","fieldListSpinnerElement","legendText","seriesIndex","pointIndex","creatMenu","accumulationMenu","scrollX","drillThroughModule","yAxisTitles","percentChart","percentAggregateTypes","valCnt","divider","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","edgeLabelPlacement","plotOffsetRight","plotOffsetTop","lengthofFormat","colIndexColl","rKeys_2","cKeys_2","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","getZoomFactor","calculatedWidth","getCalulatedWidth","seriesLength","template","templateFn","templateParser","tooltipTemplate","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","majorTickLines","enableSelectionZooming","valueFormat","point","columnText","rowText","getTooltipTemplate","rowFields","getHeaderField","columnFields","templateVariable","valueField","tooltipTemplateFn","pointY","isChartLoaded","getWidthAsNumber","alignIcon","multilabelAxisName","updateView","isServerWaitingPopup","groupingTable","groupingChartTable","gridPanel","refreshOverflow","chartPanel","getString","getMenuItems","expand","collapse","drillMenuOpen","drillMenuSelect","enableItems","levelCol","offSetHeight","offSetVal","isNone","labelInfo","memberUqName","fieldAvail","memIndex","drillArgs","enginePopulatingEventArgs","renderPivotGrid","drillItems","uName","zoomModule","isZoomed","getResizedChartHeight","destroyEngine","axisLabelFont","size","fontWeight","fontStyle","axisTitleFont","chartTitleFont","chartSubTitleFont","crosshairLabelFont","tooltipLabelFont","legendLabelFont","stripLineLabelFont","stockEventFont","Animation","ChartSegment","Font","Margin","Border","Offset","Indexes","ChartArea","CrosshairSettings","DataLabelSettings","bottom","PivotChartConnectorStyle","PivotChartDataLabel","MarkerSettings","ErrorBarCapSettings","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","CrosshairTooltip","StripLineSettings","LabelBorder","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","ChartLocation","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","PivotChartSeriesErrorSettings","PivotChartSeriesTrendline","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","PivotChartSettingsIndexes","PivotChartSettingsMargin","PivotAxis","PivotTooltipSettings","PivotPieChartCenter","PivotZoomSettings","ChartSettings","titleSettings","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isPaging","updateDrilledItems","fieldDataObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","query","frameMDXQuery","request","LCID","roles","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","isExporting","exportSpeciedPages","rowSize","calColumnSize","columnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","drillQuery","getAttributeDrillQuery","getMeasurePos","drilledMembers_1","drillInfo_1","result","getDrillLevel","getDimensionPos","isExist","isAttributeMemberExist","levelQuery","getHierarchyQuery","isAvailable","hierarchyPosition","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_2","rawQuery","drillInfo_2","dimensionQuery","slicers","colUqName","getDimensionUniqueName","slicerUqName","dimension","hierarchyNode","curElement","hierarchyNode_1","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","mappingFields","clonedValTuple","clonedColumnTuple","clonedRowTuple","namedSetsPosition","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","isColDrill","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","culture","getAxisFields","formats","frameSortObject","setNamedSetsPosition","updateFieldlist","getCubes","loadCalculatedMemberElements","measuresInfo","getMeasureInfo","olapVirtualization","measureAxis","updateFilterItems","xmlDoc","xmlaCellSet","countCells","virtualScrollingData","getVirtualScrollingData","isCalculated","clearEngineProperties","performEngine","columnTuple","rowTuple","valueTuple","colTuples","rowTuples","valTuples","calColSize","measureInfo","isColGrandTolExists","isRowGrandTolExists","isAddColGrandTotals","isAddRowGrandTotals","getAxisdepth","valueInfo","rowDepth","colTuplesOffset","rowTuplesOffset","virtualColTuples","virtualRowTuples","colLastLevel","rowLastLevel","getVirtualTotals","totalsCollection","virtualValuesTupples","getVirtualValues","tuplesCollection","depth","isAddGrandTotals","axisDepth","currLevel","offset","valueTuples","calColumnPage","calColunmnSize","colTotalsIndex","rowTotalsIndex","colTuplesLen","rowTuplesLen","columnDepth","framedVirtValTuples","virtValTuples","rowValuesOffset","virtRowTotalValues","virtRows","virtTotals","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","valCollection","valueCollection","getDrillInfo","columnData","getActualTuples","indexColls","tupColls","fieldColls","drilledMember","tuplesColl","deapth","tuples","isAddElement","memTypeColl","uNameColl","l","memType","rowColls_1","rowColls_2","colMeasures","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","framedValCollection","getValueSortInfo","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","memberIndex","headersCollection","granSumPos","reArrangeHeaders","membersColls","isValueSorting","selectedMember","parentLevel","isParentAvail","isChildAvail","memberUName","memberCaption","memberLevel","isParent","childMember","childUName","childCaption","childLevel","childHeaderCollection","actualIndex","headerColl1","headerColl2","isGrandTotalAdd","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","startTupPos","lastMesPos","isGrandTotalTop","subTotals","memPos","prevParent","typeColl","drillStartPos","startDrillUniquename","firstTupMembers","attrDrill","checkAttributeDrill","drillAllow","withoutAllAllow","olapRowValueIndex","frameGrandTotalValues","frameGrandTotalAxisSet","insertRowGrandTotal","lastPos","lastMemPos","withoutAllDrilled","getDepth","getCaptionCollectionWithMeasure","insertRowSubTotal","showTotals","prevRowParent","axislength","subTotalLevel","nextLevels","grandTotalFlag","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","parentUName","UName","currUName","currCaption","uNames","uNamesKeys","captions","captionsKeys","uCollection","setDrillInfo","drillEndPos","tuple","isAddTotals","captionColection","isMeasureAdd","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","isGrandtoalDataAdd","typeColl_1","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberDepth","getMeasurePosition","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","levelNameKeys","isAdjacentToMeasure","isAdjacent","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","lastIndexOf","rPos","currentTuple","frameUniqueName","getParentUname","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","valueColl","sliceIndex","newPos","valuePos","temporary","arrange","arrangeHeaders","prevRowCell","prevColValue","prevColIndex","prevColRowCell","sortColumnHeaders","length_1","cellPos","length_2","q","weight","hgt","height1","hgt1","leng","pElement","cElement","o","hasLastMeasure","measureAvail","valueElement","valueArray","sortMembers","childCollection","header_1","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","getOrdinal","nextRow","newOrdinal","rowEndPos","startRowOrdinal","lastColCell","valElement","formatDate","mAxis","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","vOrdinalIndex","vOrdinalIndexPos","cRow","vTupleOrdinal","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillField","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","isValueSort","expression","isSelect","validateCube","isCubeExist","getFieldListItems","getAggregateType","isMembersAvail","parentNodes_1","currentItems","selectedElement","drilledItems","maxRows","filteritems","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","isSearchFilter","loadLevelMember","isAllFilterData","filterParentQuery","filterItemName","dimProp","getOlapFilterText","loadLevelMembers","memberUQName","getCalcChildMembers","searchString","maxNodeLimit","fields_2","parentUqName","nodeSelect","fieldDate","hierarchyElements","fields_3","isAllMemberAvail","dimensionName","isSameDim","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","fields_4","dimensionCaption","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_5","fieldObj","loadHierarchyElements","dataFields_4","fields_6","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_7","levelCaption","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_8","measureGRPName","measuresGroups","success","Ajax","contentType","beforeSend","onSuccess","DOMParser","parseFromString","onFailure","send","httpRequest","setRequestHeader","btoa","connectionInfo","getMDXQuery","PDFExportHelper","drawHeader","pdfDocument","clientSize","PointF","fromTop","bounds","RectangleF","drawPageTemplate","PdfPageTemplateElement","drawFooter","footer","fromBottom","contents","processContentValidation","Error","drawText","drawPageNumber","src","drawImage","drawLine","points","x1","y1","x2","y2","pageTemplate","font","getFontFromContent","brush","getBrushFromContent","pen","textPenColor","penColor","hexDecToRgb","PdfPen","PdfColor","g","PdfSolidBrush","PdfStringFormat","stringFormat","setContentFormat","graphics","drawString","documentHeader","textBrushColor","brushColor","pageNumber","PdfPageNumberField","numberStyle","getPageNumberStyle","pageNumberType","compositeField","PdfCompositeField","total","pageCount","PdfPageCountField","draw","image","PdfBitmap","getPenFromContent","penSize","dashStyle","getDashStyle","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","bold","Bold","italic","Italic","underline","Underline","strikeout","Strikeout","PdfStandardFont","PdfTextAlignment","Left","PdfVerticalAlignment","Middle","alignment","Right","Center","Justify","vAlign","lineAlignment","Bottom","Top","dashType","hexDec","bigint","ChartExport","pdfExportHelper","pdfChartExport","controls","chartInfo","getChartInfo","svgObject","URL","createObjectURL","Blob","XMLSerializer","serializeToString","svg","Image","ctx","getContext","Promise","resolve","onload","PdfDocument","revokeObjectURL","exportPdf","isVertical","isCanvas","SvgRenderer","createSvg","groupEle","renderer","createGroup","availableSize","documentSection","sections","documentWidth","documentHeight","margins","chartWidth","exportProperties","orientation","PdfPageOrientation","Landscape","Portrait","pageOrientation","pdfMargins","setPageSettings","imageString","toDataURL","pdfPage","pages","getClientSize","blobPromise","save","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","PageSettings","PagerSettings","DisplayOption","VirtualScrollSettings","PivotView","_this_1","lastFilterInfo","lastCalcFieldInfo","allowEngineExport","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","remoteData","defaultItems","isCellBoxMultiSelection","isStaticRefresh","posCount","isModified","isInitialRendering","needsID","pivotRefresh","Component","XMLHttpRequest","defaultFieldListOrder","setValue","mergePersistPivotData","requiredModules","modules","allowConditionalFormatting","allowNumberFormatting","toolbarTemplate","preRender","isIE","info","isTouchMode","renderToolTip","chartExportModule","defaultLocale","applyToGrandTotal","noValue","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","all","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Median","Min","SampleVar","PopulationVar","RunningTotals","Max","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormatting","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","grandTotals","reportName","pdf","excel","csv","png","jpeg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stackingline","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","stackingline100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","true","false","decimalPlaces","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormattingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","stacked","single","combined","grandTotalPosition","None","rowPage","rowPerPage","columnPage","columnPerPage","goToFirstPage","goToPreviousPage","goToNextPage","goToLastPage","subTotalPosition","auto","loading","L10n","isDragging","allowDeferLayoutUpdate","onBeforeTooltipOpen","showTooltip","showTipPointer","mouseTrail","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","aggregateGroup","buildDefaultItems","getFieldByID","exportGroupItems","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLegendClick","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","chartPointClick","showMemberSeries","updatePageSettings","pivotChartModule","heightAsNumber","loadData","guid","renderEmptyGrid","Fetch","then","response","onReadyStateChange","readyState","DONE","currentAction","status","buffer","Save","params","responseText","currentMembers","dateMembers","isNumberType","updateFilterEvents","parsedObj","pivotCount","RowCount","ColumnCount","RowStartPosition","ColumnStartPosition","RowFirstLevel","ColumnFirstLevel","ColumnPageCount","RowPageCount","HeaderText","HeaderDelimiter","SortOrder","ColumnIndex","initEngine","isRequireUpdate","endDialog","aggField","cField","rawDataArgs","editArgs","getPageSettings","enableDrillThrough","stringify","Content-type","UNSENT","OPENED","withCredentials","getPersistData","internalProperties","aggregatedItem","calculatedItem","fetchRawDataArgs","hash","exportAllPages","isGroupingUpdated","isUpdate","onreadystatechange","responseType","headerKey","keyEntity","chartLoadEvent","chartLoadedEvent","chartTextRenderEvent","chartPointRenderEvent","chartSeriesRenderEvent","chartLegendRenderEvent","chartPointClickEvent","chartTooltipRenderEvent","chartLegendClickEvent","chartMultiLevelLabelRenderEvent","chartBeforePrintEvent","chartAnimationCompleteEvent","chartMouseMoveEvent","chartMouseClickEvent","chartPointMoveEvent","chartMouseLeaveEvent","chartMouseDownEvent","chartMouseUpEvent","chartDragCompleteEvent","chartZoomCompleteEvent","chartScrollStartEvent","chartScrollEndEvent","chartScrollChangedEvent","persistData","addOnPersist","jsonObject","cellTemplateFn","spinnerTemplate","createSpinner","loadArgs_1","updateClass","generateData","events.dataReady","isRemoveDatasource","loadPersistData","pivotData","localStorage","getItem","dataObj","showConditionalFormattingDialog","conditionalFormattingModule","withHeader","onPropertyChanged","isRequireRefresh","clonedDataSet","updateGroupingReport","savedDataSourceSettings","axisFieldModule","treeViewModule","fieldTable","events.treeViewUpdate","createChartMenu","toggleButtonState","renderLayout","appendToElement","dataSet","groupingBarSettings","RefreshFieldsPanel","refreshToolbar","enableFieldSearching","refreshPageData","buttonClass","closestDisabledElement","compile","innerHtml","tempElement","clearTemplate","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","isNumberFormattingApplied","isConditionalFormattingApplied","clonedDataSource","applyFormatting","formatUnit","showSpinner","isSorted","isAggChange","isCalcChange","aggregateCellInfo","excelExportModule","exportToExcel","exportInfo","gridPdfExport","currentExportView","pdfExportModule","exportToPDF","chartExport","orientation_1","exportModule","exportBothTableAndChart","pdfData","tableExportDocumnt","printChart","print","chartDrillInfo","clonedDrillMembers_1","drillMembers","drilledItem_1","onOlapDrill","clonedDrillMembers","isAttributeHierarchy","clonedMembers","drillSet","memberItem","itemPos","clonedMembers_1","drillItemCollection","clonedMembers_2","horiScrollHeight","verOffset","mCnt","gridContentDiv","isHorizontalOverFlow","loaderElement","virtualScrollTableDiv","virtualTableDiv","virtualScrollDiv","maxHeight","newContentVirtualDiv","translateValue","newScrollWidth","overflowY","vertiTop","pivotButton","unwireEvents","movableVirtualScrollBar","headerScrollUpdate","contentLeft","hasField","getColText","templateObject","isReact","tooltipContent_1","renderReactTemplates","contentTemp_1","contentFunc","initializeCSPTemplate","getLevel","limit","colText","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","lastSelectedElement","mouseMoveHandler","parentAt","cls.HEADERCELL","mouseUpHandler","cellClicked","drillFieldName","FieldName","valueSortInfo","updateTotColWidth","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","stackedColumns","getStackedColumns","setCommonColumnsWidth","setColumnWidth","displayMode","isAngular","getComputedStyle","onWindowResize","rowDeselect","selectRow","cellClick","getSelectedCellsPos","setSavedSelectedCells","ele_2","applyRowSelection","rCount","colStart","colEnd","rowStart","isCtrl","queryStringArray","isToggle","activeColumns","actColPos","rowSelectedList","isTargetSelected","scrollModule","setWidth","setHeight","isArray","this$_1","pivot_2","getData","aggregateObj","sortingObj","bindTriggerEvents","getObject","defaultQuery","executeQuery","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","formatClass","insertRule","createTextNode","conditionalSettings","ilen","jlen","isApplyHyperLink","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","newFieldName_1","isDateGroupUpdated","out_j_1","out_len_1","isSameField","drillObj","settingsObj","isExists","removeButtonFocus","events.chartView","gridcolumns_4","pagerModule","numberFormattingModule","exportSpecifiedPages","cls.ROOT","showNumberFormattingDialog","getValuesHeader","pivotCell","NotifyPropertyChanges","PivotExportUtil","getClonedPivotValues","clonedSets","getClonedPivotValueObj","isContainCommonElements","collection1","collection2","actualrCnt","addHeaderAndFooter","spanCount","isHeaderSet","isFooterSet","isFileNameSet","clonedValues","currentPivotValues","customFileName","updateOlapPageSettings","dataCollections","headerRows","workSheets","dataColl","colLen","rowLen","wrapText","headerStyle","isgetValuesHeader","lastCell","backColor","fontColor","fontName","borders","lineStyle","excelHeaderQueryCellInfoArgs","excelQueryCellInfoArgs","footerRows","blobData","book","Workbook","worksheets","fileExtension","saveAsBlob","PDFExport","addPage","eventParams","page","getFontStyle","fontType","getBorderStyle","borderStyle","PdfBorders","pdfColor","borderWidth","borderColor","getStyle","gridStyle","Helvetica","getFontFamily","penBrushColor","setRecordThemeStyle","record","setFont","setTextBrush","borderRecord","setBorder","applyEvent","firstColumnWidth","dataCollIndex","allowRepeatHeader","vLen","integratedCnt","pdfGrid","PdfGrid","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","applyStyle","getColumn","processCellStyle","indent_1","hexToRgb","backgroundBrush","textBrush","family","getFont","arg","textColor","textPen","Pager","createPager","pagerSettings","pagerOptions","pagerElement","cls.GRID_PAGER","enableCompactView","tempFunc","createPagerContainer","pager","GridPager","showRowPager","min","showSpinButton","validateDecimalOnType","decimals","strictMode","rowPageChange","showRowPageSize","rowPages","rowPageSizes","rowPageSizeChange","popupHeight","popupWidth","showColumnPager","columnPageChange","showColumnPageSize","columnPages","columnPageSizes","columnPageSizeChange","elements","targetId","rowMainDiv","columnMainDiv","createPagerItems","mainDivPagerSettings","cls.GRID_PAGER_DIV","isInversed","vertiSeparator","isSinglePagerEnabled","pagerAxisMainDiv","cls.PIVOT_ROW_PAGER_DIV","cls.PIVOT_COLUMN_PAGER_DIV","pagerIconContainer","isFirstDisable","isLastDisable","navIconContainer","class","cls.PIVOT_PAGER_NAV_CONTAINER","pageInfoContainer","cls.PIVOT_PAGER_INFO_CONTAINER","firstIcon","role","prevIcon","pagerString","pagerTextBoxDiv","mainOfStringDiv","ofString","pagerNumber","nextIcon","lastIcon","pageSizeDropDownMainDiv","cls.PIVOT_PAGE_SIZE_LIST_MAINDIV","pageSizeDropDown","pagerStringContainer","pagerElementContainer","columnPagerTextBox","rowPagerTextBox","columnPageSizeDropDown","rowPageSizeDropDown","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldListData","clonedFieldList","pivotFieldList","pivotChange","isDeferUpdateApplied","isDeferLayoutEnabled","clonedField_1","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","dialogOpen","offsetTop","footerTemplate","lastTabIndex","adaptiveElement","selectedNodes","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","onShowFieldList","show","updateAdaptiveCalculatedField","TreeViewRenderer","isSearching","isSpaceKey","fieldListSort","renderTreeDialog","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_OUTER_DIV_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","searchInput","fieldSearch","TextBox","input","textChange","addIcon","cls.FIELD_LIST_SEARCH_ICON_CLASS","centerDiv","axisHeader","renderTreeView","headerWrapper","Ascend","Descend","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeStateChange","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","dragEle","enableAutoScroll","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","liElement","searchItem","searchItem_1","li2","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","addNode","liList","disabledList","draggedNode","dragEventArgs","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","droppableButton","wrapperElement","getNodeDetails","updateCheckState","updateSelectedNodes","updateReportSettings","updateNodeStateChange","removeFieldArgs","dropArgs","chkState","selectedLi","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","treeDataInfo","parentId","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","updateDropIndicator","PivotButton","menuOption","PivotFieldList","AxisFieldRenderer","renderPivotButton","currentAxisElements","rowPanel","isMeasureFieldsAvail","buttonWrapper","data-tag","buttonCaption","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","calcElement","removeElement","createDraggable","Draggable","valueFiedDropDownList","valueData","ddlDiv","availColindex","columnFieldDropDownList","firstValueRow","delimiter_1","aggregation","filterMem","updateButtontext","buttonText","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","validateDropdown","createSummaryType","createMenuOption","openCalculatedFieldDialog","buttonCall","draggable","clone","enableTailMode","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","filterCLass","filterField","cls.FILTER_COMMON_CLASS","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","actualFilterItems","updatedFilterItems_1","cloneElement","intDestroy","detach","fieldListPopup","cursor","cursorAt","isNOU","targetTouches","isButtonDropped","droppableTarget","staticPivotGridModule","thisObj","isRefreshGrid","pivotObj","mouseEventArgs","bindDialogEvents","updateDialogButtonEvents","ClearFilter","updateFilterState","updateCustomFilter","removeDataSourceSettings","inputElementString","focusElement","filterEventArgs","refreshPivotButtonState","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","sNodeLength","filterInfo","selectedButton","pivotButtons_2","handlers","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","isVirtualization","loadArgs","fieldListRender","requireRefresh","pivotDataSet","this$_2","showDialog","getFieldCaption","captionData","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","updateOlapDataSource","isOlapCalcFieldAdded","VARP","CALC","isFormula","formatTypes","existingReport","droppable","newFields","isFieldExist","formulaText","fieldText","formatText","isEdit","currentFieldName","displayMenu","cls.GRID_REMOVE","createConfirmDialog","dialog","fieldClickHandler","cls.FORMAT","renderMobileLayout","accordionClickHandler","originalEvent","optionElement","pivotFormat","accordionCreated","allElement","Accordion","clearFormula","treeNode","edited","inputObj","ddlFormatTypes","memberTypeDrop","hierarchyDrop","readonly","curMenu","removeCalcField","calcfields","hideItem","removeNodes","validSummaryTypes","getValidSummaryType","duplicateTypes","createMenu","selectContextMenu","applyFormula","currentObj","calculatedField","getCalculatedFieldInfo","calcInfo","updateFormatSettings","currentFormula","addFormula","newFormat","isFormatExist","calculatedFieldInfo","showError","cls.CALCINPUT","calcFields","getFieldListData","typeVal","icon","fieldDropped","currentValue","cursorPos","selectionStart","textAfterText","textCovered","textBeforeText","setSelectionRange","createDialog","calculatedFieldElement","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","timeOut","renderDialogElements","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","pivotCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","treeElement","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","createDropElements","fData","fieldData","mData","memberTypeData_1","memberTypeObj","hierarchyListObj_1","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","editElement","editWrapper","liTextElement_1","spaceElement","prepend","createTypeContainer","data-ftxt","data-value","menuTypes","getAccordionData","cancelBtnClick","autoCheck","accordion","expanding","accordionExpand","clicked","created","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","isRemove","confirmPopUp","replaceFormula","FieldList","initiateModule","containerWrapper","updateControl","hasFieldList","currentWidth","actualWidth","AxisFields","indentDiv","showFieldsPanel","GroupingBar","rowAxisWidth","touchObj","Touch","tapHold","tapHoldHandler","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","createToolbarUI","axisPanels_1","element_1","chartPanelWidth","emptyRowCount","emptyHeader","gridPanelWidth","colGroupElement","valuePanelWidth","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","element_2","rowHeader_1","rhElement","updateChartAxisHeight","groupingBarSelector","groupingBar","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","indentWidth","lastButtonWidth","buttonWidth","rowHeaderTable","rowContent","colwidth","hasPivotColumns","valueColWidth","getPivotButtonsTotalWidth","dropIndicatorUpdate","toolbarObj","allowKeyboard","totalWidth","ConditionalFormatting","conditionalFormattingElement","addButtonClick","cancelButtonClick","conditionalFormating","refreshConditionValues","destroyColorPickers","addFormat","conditionalFormattingInfo","createDialogElements","renderDropDowns","renderColorPicker","valueTable","valueTableRow","valueTableElements","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","formatValueClassName","cls.HIDDEN","conditionValueParentDiv","conditionValue1WrapperDiv","valuespan","cls.FORMAT_VALUE_SPAN","conditionValue2WrapperDiv","grandTotalTable","cls.FORMAT_TABLE","grandTotalTableRow","grandTotalTableElements","checkBoxInput","formatTable","formatTableRow","formatTableElements","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","cls.INPUT","fieldsDropDown","measureChange","conditionsDropDown","conditionChange","conditionValue1","cls.FORMAT_VALUE1","conditionValue2","cls.FORMAT_VALUE2","grandTotalCheckBox","fontNames","fontNameDropDown","fontNameChange","fontSizeDropDown","fontSizeChange","conditionvalue2","ColorPicker","cls.FORMAT_COLOR_PICKER","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","rgb","currentReport","createToolbar","renderDialog","tool","getItems","viewStr","registeredTemplate","replaceChild","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","toDisable","cls.TOOLBAR_GRID","menuItemClick","validTypes","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","reportLoad","itemData","saveReport","saveArgs","getCurrentReport","dialogShow","mdxQueryDialog","renderMDXDialog","mdxDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","newArgs","createNewReport","reportDialogElement","okBtnClick","mdxDialogElement","copyMDXQuery","textArea","execCommand","err","reportInput","isExist_2","_this_3","reports_1","updateReportList","renameText","renameArgs","oldName","newName","isExist_1","_this_2","okButtonClick","removeArgs","isReportExists","chartMenuElement","getValidChartType","separator","cls.TOOLBAR_CHART","chartMenu","cls.TOOLBAR_MENU","whitespaceRemove","focusToolBar","beforeItemRender","multipleAxesCheckbox","exportMenuElement","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","subTotalMenuElement","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","cls.PIVOT_DISABLE_ICON","subTotalMenu","updateSubtotalSelection","grandTotalMenuElement","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","formattingMenuElement","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","reportListElement","updateItemElements","reportStr","reportSettings","itemElements_1","inputCheckbox","checkboxObj","getLableState","showLableState","getAllChartItems","toolbarInfo","createChartTypeDialog","updateChartType","chartTypes","chartDialog","chartTypesDialog","getDialogContent","chartTypeDialogUpdate","checkedShow","chartLableState","isMultiAxis","mainWrapper","optionWrapperDiv","axisModeWrapperDiv","optionTextDiv","axisModeTextDiv","dropOptionDiv","dropModeOptionDiv","chartTypeDatasource","multipleAxisModeDatasource","changeDropDown","checkboxWrap","labelCheckboxWrap","axisModeWrapper","multipleAxisCheckBox","checkbox1","NumberFormatting","lastFormattedValue","updateFormatting","formatObject","renderControls","outerElement","table","tRow","tValue","valueLable","valueDrop","formatLable","formatDrop","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","formatDropDown","groupingDropDown","valueChange","customUpdate","dropDownChange","groupingChange","decimalDropDown","decimalChange","first","updateFormattingDialog","getIndexValue","insertFormat","formatName","numberFormattingInfo","Grouping","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialogElement","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","activeListCount","selectedInterval","intervalObj","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groups","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupingTypes_1","dateTypes","updatedFields","groupOrders_1","orderedSettings","groupedFieldName","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping","index.Pager"],"mappings":"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,KAAKmnH,GACDnnH,E1BxhJS,kB0ByhJT,MACJ,K1BznJe,kB0B0nJXA,E1BzhJa,mB0B0hJb,MACJ,K1B1nJc,sB0B2nJVA,E1B1hJe,sB0B2hJf,MACJ,K1B3nJiB,yB0B4nJbA,E1B3hJkB,yB0B4hJlB,MACJ,K1B5nJe,kB0B6nJXA,E1B5hJY,kB0B6hJZ,MACJ,K1B7nJiB,oB0B8nJbA,E1B7hJe,qB0B8hJf,MACJ,K1B9nJgB,wB0B+nJZA,E1B9hJiB,wB0B+hJjB,MACJ,K1B/nJmB,2B0BgoJfA,E1B/hJoB,2B0BgiJpB,MACJ,K1BhoJiB,oB0BioJbA,E1BhiJc,oB0BiiJd,MACJ,K1B/rJW,a0BgsJPA,E1BjiJS,c0BkiJT,MACJ,K1BpnJqB,+B0BqnJjBA,E1B9lJoB,0B0B+lJpB,MACJ,K1B/nJqB,wB0BgoJjBA,E1BriJmB,yB0BsiJnB,MACJ,K1BhoJW,a0BioJPA,E1BtiJS,c0BuiJT,MACJ,K1BjoJa,e0BkoJTA,E1BviJW,gB0BwiJX,MACJ,K1BloJa,e0BmoJTA,E1BxiJU,e0ByiJV,MACJ,K1BznJgB,kB0B0nJZA,E1BziJa,kB0B0iJb,MACJ,K1BpoJY,c0BqoJRA,E1B1iJU,e0B2iJV,MACJ,K1BrpJc,gB0BspJVA,E1B3iJW,gB0B4iJX,MACJ,K1BxoJmB,sB0ByoJfA,E1BpnJgB,sB0BqnJhB,MACJ,K1BzoJc,iB0B0oJVA,E1BrnJY,kB0BsnJZ,MACJ,K1B1oJc,gB0B2oJVA,E1BtnJW,gB0BunJX,MACJ,K1B/rJW,a0BgsJPA,E1BnmJS,c0BomJT,MACJ,K1B5rJY,c0B6rJRA,E1BpmJU,e0BqmJV,MACJ,K1B7rJW,a0B8rJPA,E1BrmJS,c0BsmJT,MACJ,K1B1sJW,a0B2sJPA,E1B9mJS,c0B+mJT,MACJ,K1BvsJW,a0BwsJPA,E1BnnJS,c0BonJT,MACJ,K1B5sJa,e0B6sJTA,E1BxnJW,gB0BynJX,MACJ,K1BzpJc,gB0B0pJVA,E1BvkJW,gB0BwkJX,MACJ,K1BhvJmB,sB0BivJfA,E1BxoJS,c0ByoJT,MACJ,K1BrvJc,iB0BsvJVA,E1BzoJY,kB0B0oJZ,MAC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"}