{"version":3,"file":"ej2-pdf.umd.min.js","sources":["../src/pdf/core/enumerator.js","../src/pdf/core/graphics/pdf-stream-writer.js","../src/pdf/core/fonts/pdf-string-format.js","../src/pdf/core/fonts/pdf-font-metrics.js","../src/pdf/core/fonts/string-layouter.js","../src/pdf/core/fonts/ttf-table.js","../src/pdf/core/fonts/ttf-reader.js","../src/pdf/core/fonts/unicode-true-type-font.js","../src/pdf/core/graphics/rightToLeft/text-shape.js","../src/pdf/core/graphics/rightToLeft/bidirectional.js","../src/pdf/core/graphics/rightToLeft/text-renderer.js","../src/pdf/core/fonts/pdf-standard-font.js","../src/pdf/core/graphics/pdf-path.js","../src/pdf/core/graphics/images/pdf-image.js","../src/pdf/core/graphics/pdf-graphics.js","../src/pdf/core/import-export/xml-writer.js","../src/pdf/core/import-export/xfdf-document.js","../src/pdf/core/import-export/json-document.js","../src/pdf/core/graphics/pdf-template.js","../src/pdf/core/pdf-action.js","../src/pdf/core/form/field.js","../src/pdf/core/annotations/pdf-appearance.js","../src/pdf/core/annotations/annotation.js","../src/pdf/core/annotations/annotation-collection.js","../src/pdf/core/pdf-outline.js","../src/pdf/core/pdf-page.js","../src/pdf/core/graphics/images/image-decoder.js","../src/pdf/core/graphics/images/jpeg-decoder.js","../src/pdf/core/compression/enum.js","../src/pdf/core/compression/decompressed-output.js","../src/pdf/core/compression/in-buffer.js","../src/pdf/core/compression/huffman-tree.js","../src/pdf/core/compression/inflater.js","../src/pdf/core/compression/deflate-stream.js","../src/pdf/core/graphics/images/png-decoder.js","../src/pdf/core/utils.js","../src/pdf/core/pdf-primitives.js","../src/pdf/core/base-stream.js","../src/pdf/core/content-parser.js","../src/pdf/core/decode-stream.js","../src/pdf/core/decrypt-stream.js","../src/pdf/core/flate-stream.js","../src/pdf/core/pdf-catalog.js","../src/pdf/core/predictor-stream.js","../src/pdf/core/security/encryptor.js","../src/pdf/core/pdf-parser.js","../src/pdf/core/pdf-cross-reference.js","../src/pdf/core/form/form.js","../src/pdf/core/import-export/fdf-document.js","../src/pdf/core/import-export/xml-document.js","../src/pdf/core/pdf-file-structure.js","../src/pdf/core/pdf-page-import-options.js","../src/pdf/core/pdf-merge.js","../src/pdf/core/pdf-document.js","../src/pdf/core/annotations/pdf-paddings.js","../src/pdf/core/graphics/pdf-layouter.js","../src/pdf/core/graphics/images/pdf-bitmap.js","../src/pdf/core/list/pdf-list-item.js","../src/pdf/core/list/pdf-list.js"],"sourcesContent":["/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define the types of points and segments in a path.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Add path points\n * let pathPoints: Array<number[]> = [[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]];\n * // Add path types\n * let pathTypes: PathPointType[] = [0, 1, 1, 1, 1];\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath(pathPoints, pathTypes);\n * // Draw the path to the PDF page\n * page.graphics.drawPath(path, pen, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * The starting point of a path.\n     */\n    PathPointType[PathPointType[\"start\"] = 0] = \"start\";\n    /**\n     * A straight line segment.\n     */\n    PathPointType[PathPointType[\"line\"] = 1] = \"line\";\n    /**\n     * A Bezier curve segment.\n     */\n    PathPointType[PathPointType[\"bezier\"] = 3] = \"bezier\";\n    /**\n     * A mask for extracting the type of a point.\n     */\n    PathPointType[PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    /**\n     * Indicates that the segment has dashed line style.\n     */\n    PathPointType[PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    /**\n     * Indicates a marker point in the path.\n     */\n    PathPointType[PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    /**\n     * Closes the current path.\n     */\n    PathPointType[PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(PathPointType || (PathPointType = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\nexport var _PdfColorSpace;\n(function (_PdfColorSpace) {\n    _PdfColorSpace[_PdfColorSpace[\"rgb\"] = 0] = \"rgb\";\n    _PdfColorSpace[_PdfColorSpace[\"cmyk\"] = 1] = \"cmyk\";\n    _PdfColorSpace[_PdfColorSpace[\"grayScale\"] = 2] = \"grayScale\";\n    _PdfColorSpace[_PdfColorSpace[\"indexed\"] = 3] = \"indexed\";\n})(_PdfColorSpace || (_PdfColorSpace = {}));\n/**\n * Public enum type to represent the ordered list style\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the ordered list number style for the list items\n * list.style = PdfNumberStyle.lowerLatin;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * No numbering at all.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type '1'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"numeric\"] = 1] = \"numeric\";\n    /**\n     * Specifies the style 'a'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerLatin\"] = 2] = \"lowerLatin\";\n    /**\n     * Specifies the style 'i'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerRoman\"] = 3] = \"lowerRoman\";\n    /**\n     * Specifies the style 'A'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperLatin\"] = 4] = \"upperLatin\";\n    /**\n     * Specifies the style 'I'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperRoman\"] = 5] = \"upperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * Public enum to define the style used for unordered list.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a unordered list and pass the list item collection\n * let list: PdfUnorderedList = new PdfUnorderedList(items);\n * // Set the unordered list style for the list items\n * list.style = PdfUnorderedListStyle.circle;\n * // Draw the unordered list associated with items\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfUnorderedListStyle;\n(function (PdfUnorderedListStyle) {\n    /**\n     * No bulleting at all.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies disk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"disk\"] = 1] = \"disk\";\n    /**\n     * Specifies square style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"square\"] = 2] = \"square\";\n    /**\n     * Specifies asterisk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"asterisk\"] = 3] = \"asterisk\";\n    /**\n     * Specifies circle style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"circle\"] = 4] = \"circle\";\n})(PdfUnorderedListStyle || (PdfUnorderedListStyle = {}));\n/**\n * Public enum to define a layout type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to the list item collection by passing the array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout format for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Initialize layout type for drawing\n * pageLayout.layout = PdfLayoutType.paginate;\n * // Draw the list on the page along with the specified layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Get the layout type used to draw the list\n * let layoutType: PdfLayoutType = pageLayout.layout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies pagination across multiple pages based on the specified dimensions and layout options\n     */\n    PdfLayoutType[PdfLayoutType[\"paginate\"] = 0] = \"paginate\";\n    /**\n     * Specifies content to be laid out to fit within a single page, without pagination\n     */\n    PdfLayoutType[PdfLayoutType[\"onePage\"] = 1] = \"onePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * Public enum to define a layout Break type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the item to list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set  the layout break type for drawing\n * pageLayout.break = PdfLayoutBreakType.fitPage;\n * // Draw the list associated with items along with layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies that content should break to a new page to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitPage\"] = 0] = \"fitPage\";\n    /**\n     * Specifies that content should break to a new page or element to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitElement\"] = 1] = \"fitElement\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n/**\n * Public enum to define a list marker alignment\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the marker alignment\n * list.alignment = PdfListMarkerAlignment.left;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfListMarkerAlignment;\n(function (PdfListMarkerAlignment) {\n    /**\n     * Left alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Right alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"right\"] = 1] = \"right\";\n})(PdfListMarkerAlignment || (PdfListMarkerAlignment = {}));\n","import { _escapePdfName } from './../utils';\nimport { _PdfColorSpace } from '../enumerator';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, arg2, arg3) {\n        if (typeof value === 'string' && typeof arg2 === 'boolean') {\n            this._stream.write(\"/\" + value + \" \");\n            this._writeOperator(arg2 ? 'CS' : 'cs');\n        }\n        else if (Array.isArray(value) && typeof arg2 === 'number' && typeof arg3 === 'boolean') {\n            var colorSpaceName = void 0;\n            switch (arg2) {\n                case _PdfColorSpace.rgb:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n                case _PdfColorSpace.cmyk:\n                    colorSpaceName = 'DeviceCMYK';\n                    break;\n                case _PdfColorSpace.grayScale:\n                    colorSpaceName = 'DeviceGray';\n                    break;\n                default:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n            }\n            this._stream.write(\"/\" + colorSpaceName + \" \");\n            this._writeOperator(arg3 ? 'CS' : 'cs');\n            this._setColor(value, arg3);\n        }\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._setLeading = function (leading) {\n        this._write(leading.toFixed(3) + \" \");\n        this._write(this._whiteSpace);\n        this._writeOperator('TL');\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this._isList = false;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines === null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && typeof this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && typeof this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs !== null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs !== null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 !== null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (!internals) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 === null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        if (this._metrics._name === 'Helvetica' ||\n            this._metrics._name === 'Courier' ||\n            this._metrics._name === 'TimesRoman' ||\n            this._metrics._name === 'Symbol' ||\n            this._metrics._name === 'ZapfDingbats') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this.style = style;\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                metrics._name = 'Courier';\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                metrics._name = 'TimesRoman';\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                metrics._name = 'Symbol';\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                metrics._name = 'ZapfDingbats';\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode, PathPointType } from './../enumerator';\n/**\n * Implements graphics path, which is a sequence of primitive graphics elements.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics object of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath();\n * // Add a line to the Graphics path\n * path.addLine(10, 250, 200, 250);\n * // Draw the path on the PDF page\n * graphics.drawPath(path, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPath = /** @class */ (function () {\n    function PdfPath(points, pathTypes) {\n        this._points = [];\n        this._pathTypes = [];\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._isStart = true;\n        this._isXps = false;\n        this._brush = undefined;\n        this._pen = undefined;\n        if (points && pathTypes) {\n            if (Array.isArray(points) && Array.isArray(pathTypes)) {\n                this._points = points;\n                this._pathTypes = pathTypes;\n            }\n            else {\n                throw new Error('Invalid constructor arguments.');\n            }\n        }\n        else {\n            this._points = [];\n            this._pathTypes = [];\n        }\n    }\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last point of the path.\n         *\n         * @returns {number[]} The value of the last point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the last point of the path.\n         * let lastPoint: number[] = path.lastPoint;\n         * // Draw the path on the PDF page.\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[count - 1][0];\n                value[1] = this._points[count - 1][1];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the array of points that represent the x and y coordinates defining the path.\n         *\n         * @returns {Array<number[]>} An array of arrays of numbers, where each inner array represents a set of points.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path points of the path\n         * let pathPoints: Array<number[]> = path.pathPoints;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the types of the corresponding points in the path.\n         *\n         * @returns {PathPointType[]} An array of `PathPointType` objects representing the types of each path point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path types of the path\n         * let pathTypes: PathPointType[] = path.pathTypes;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        /**\n         * Gets the fill mode.\n         *\n         * @returns {PdfFillMode} The fill mode of the PDF path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the fill mode of the path\n         * let fillMode: PdfFillMode = path.fillMode;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fillMode;\n        },\n        /**\n         * Sets the fill mode.\n         *\n         * @param {PdfFillMode} mode The fill mode of the path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Set the fill mode of the path\n         * path.fillMode = PdfFillMode.alternate;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (mode) {\n            this._fillMode = mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this._addPath(arg1._points, arg1._pathTypes);\n        }\n        else if (Array.isArray(arg1) && Array.isArray(arg2)) {\n            this._addPath(arg1, arg2);\n        }\n    };\n    PdfPath.prototype._addPath = function (pathPoints, pathTypes) {\n        if (!pathPoints || pathPoints.length === 0) {\n            throw new Error('Path points cannot be null or undefined.');\n        }\n        if (!pathTypes || pathTypes.length === 0) {\n            throw new Error('Path types cannot be null or undefined.');\n        }\n        if (pathPoints.length !== pathTypes.length) {\n            throw new Error('The argument arrays should be of equal length.');\n        }\n        for (var i = 0; i < pathPoints.length; i++) {\n            if (i >= pathPoints.length || i < 0) {\n                throw new Error('Index' + i + 'is out of bounds.');\n            }\n            this._points.push(pathPoints[Number.parseInt(i.toString(), 10)].slice());\n            this._pathTypes.push(pathTypes[Number.parseInt(i.toString(), 10)]);\n        }\n    };\n    /**\n     * Adds a line segment to the path.\n     *\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a line segment to the path\n     * path.addLine(10, 250, 200, 250);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], PathPointType.line);\n    };\n    PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this.addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i += 2) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this.lastPoint[0] || point[1] !== this.lastPoint[1])) {\n                    this._addPoint(point, PathPointType.line);\n                }\n                else if (point[0] !== this.lastPoint[0] && point[1] !== this.lastPoint[1]) {\n                    this._addPoint(point, PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n        }\n    };\n    PdfPath.prototype._addPoint = function (point, type) {\n        this._points.push(point);\n        this._pathTypes.push(type);\n    };\n    /**\n     * Adds an arc within a bounding rectangle using the angles that define the start and sweep of the arc.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} width The width of the rectangular region.\n     * @param {number} height The height of the rectangular region.\n     * @param {number} startAngle The start angle of the arc.\n     * @param {number} sweepAngle The angle between start angle and the end of the arc.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('Empty.pdf'));\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(10, 100, 50, 150, 150, 150, 200, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, PathPointType.bezier);\n        }\n    };\n    /**\n     * Adds a rectangle to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangle.\n     * @param {number} width The width of the rectangle.\n     * @param {number} height The height of the rectangle.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a rectangle to the path\n     * path.addRectangle(10, 20, 50, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addRectangle = function (x, y, width, height) {\n        this.startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds a polygon to the path.\n     *\n     * @param {Array<number[]>} points The points of the polygon, where each point is an array of two numbers representing the x and y coordinates.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a polygon to the path\n     * path.addPolygon([[200, 10], [300, 100], [150, 100], [200, 10]]);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this.startFigure();\n        this._addPoints(newPoints, PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds an ellipse to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} width The width of the bounding rectangle for the ellipse.\n     * @param {number} height The height of the bounding rectangle for the ellipse.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add an ellipse to the path\n     * path.addEllipse(200, 200, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addEllipse = function (x, y, width, height) {\n        this.startFigure();\n        this.addArc(x, y, width, height, 0, 360);\n        this.closeFigure();\n    };\n    /**\n     * Adds a Bezier curve to the path using specified coordinates for the start point, two control points, and the end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(100, 100, 150, 150, 50, 250, 100, 300);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [startX, startY, firstX, firstY, secondX, secondY, endX, endY];\n        this._addPoints(points, PathPointType.bezier);\n    };\n    PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this.addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    /**\n     * Adds a pie slice to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} width The width of the bounding rectangle.\n     * @param {number} height The height of the bounding rectangle.\n     * @param {number} startAngle The angle in degrees measured clockwise from the x-axis to the start of the pie slice.\n     * @param {number} sweepAngle The angle in degrees measured clockwise from the startAngle parameter to the end of the pie slice.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a pie slice to the path\n     * path.addPie(0, 20, 100, 100, 270, 45);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPie = function (x, y, width, height, startAngle, sweepAngle) {\n        this.startFigure();\n        this.addArc(x, y, width, height, startAngle, sweepAngle);\n        this._addPoint([x + width / 2, y + height / 2], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Starts a new figure in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Start a new figure in the path\n     * path.startFigure();\n     * // Add some path points (optional)\n     * path.addLine(50, 50, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.startFigure = function () {\n        this._isStart = true;\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this.closeFigure(this._points.length - 1);\n            }\n            this.startFigure();\n        }\n    };\n    /**\n     * Closes all non-closed figures in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n     * // Close all non-closed figures\n     * path.closeAllFigures();\n     * // Draw the path on the PDF page\n     * page.graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        for (var i = 0; i < this._points.length; ++i) {\n            var pointType = this._pathTypes[Number.parseInt(i.toString(), 10)];\n            var flag = false;\n            if (i !== 0 && pointType === PathPointType.start) {\n                this.closeFigure(i - 1);\n                flag = true;\n            }\n            else if (i === this._pathTypes.length - 1 && !flag && this._isXps) {\n                if (this._points[0][0] === this._points[Number.parseInt(i.toString(), 10)][0] &&\n                    this._points[0][1] === this._points[Number.parseInt(i.toString(), 10)][1]) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return PdfPath;\n}());\nexport { PdfPath };\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _PdfBaseStream } from './../base-stream';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfFont, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PathPointType } from './../enumerator';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { PdfPath } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphics` class.\n     *\n     * @param {number[]} size The graphics client size.\n     * @param {_PdfContentStream} content Content stream.\n     * @param {_PdfCrossReference} xref Cross reference.\n     * @param {PdfPage | PdfTemplate} source Source object of the graphics.\n     * @private\n     */\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._isItalic = false;\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj) {\n                if (obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = xref._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the size of the canvas reduced by margins and page templates (Read only).\n         *\n         * @returns {number[]} The width and height of the client area as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics client size.\n         * let size: number[] = page.graphics.clientSize;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return [this._clipBounds[2], this._clipBounds[3]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject && this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(result.pen, result.brush);\n    };\n    /**\n     * Draws a Bezier curve using a specified pen and coordinates for the start point, two control points, and end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a Bezier curve on the page graphics\n     * graphics.drawBezier(50, 100, 200, 50, 100, 150, 150, 100, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY, pen) {\n        this._stateControl(pen, null, null);\n        this._sw._beginPath(startX, startY);\n        this._sw._appendBezierSegment(firstX, firstY, secondX, secondY, endX, endY);\n        this._drawGraphicsPath(pen);\n    };\n    PdfGraphics.prototype.drawPie = function (x, y, width, height, startAngle, sweepAngle, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._constructPiePath(x, y, x + width, y + height, startAngle, sweepAngle);\n        this._sw._appendLineSegment(x + width / 2, y + height / 2);\n        this._drawGraphicsPath(result.pen, result.brush, null, true);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var result = this._setPenBrush(first, second);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} width Width of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} height Height of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} startAngle Angle measured in degrees clockwise from the x-axis to the first side of the arc shape.\n     * @param {number} sweepAngle Angle measured in degrees clockwise from the startAngle parameter to the second side of the arc shape.\n     * @param {PdfPen} pen Pen that determines the stroke color, width, and style of the arc.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw an arc on the page graphics\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    /**\n     * Draws a PDF template onto the page graphics.\n     *\n     * @param {PdfTemplate} template The PDF template to be drawn.\n     * @param {{x: number, y: number, width: number, height: number}} bounds The bounds of the template.\n     * @param {number} bounds.x The x-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.y The y-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.width The width of the area where the template will be drawn.\n     * @param {number} bounds.height The height of the area where the template will be drawn.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Get the appearance template of the annotation\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Get the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Draw the template on the page graphics within the specified bounds\n     * graphics.drawTemplate(template, { x: 10, y: 20, width: template.size[0], height: template.size[1] });\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawTemplate = function (template, bounds) {\n        var _this = this;\n        if (typeof template !== 'undefined') {\n            if (template._isExported || template._isResourceExport) {\n                if (this._crossReference) {\n                    template._crossReference = this._crossReference;\n                    template._importStream(true, template._isResourceExport);\n                }\n                else {\n                    template._importStream(false, template._isResourceExport);\n                    this._pendingResource.push(template);\n                }\n            }\n            var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n            var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n            var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n            var cropBox = void 0;\n            var mediaBox = void 0;\n            if (this._page) {\n                cropBox = this._page.cropBox;\n                mediaBox = this._page.mediaBox;\n                if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                    if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                        this.translateTransform(cropBox[0], -cropBox[1]);\n                        bounds.x = -cropBox[0];\n                        bounds.y = cropBox[1];\n                    }\n                }\n            }\n            var state = this.save();\n            var matrix = new _PdfTransformationMatrix();\n            if (this._page) {\n                var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                    this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                    cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                    (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n                matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n            }\n            else {\n                matrix._translate(bounds.x, -(bounds.y + bounds.height));\n            }\n            if (needScale) {\n                if (template._isAnnotationTemplate && template._needScale) {\n                    var scaleApplied = false;\n                    if (template._content && template._content.dictionary) {\n                        var dictionary = template._content.dictionary;\n                        if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                            var templateMatrix = dictionary.getArray('Matrix');\n                            var templateBox = dictionary.getArray('BBox');\n                            if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                                var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                                var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                                var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                                var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                                if (roundScaleX === templateScaleX &&\n                                    roundScaleY === templateScaleY &&\n                                    templateBox[2] === template._size[0] &&\n                                    templateBox[3] === template._size[1]) {\n                                    matrix = new _PdfTransformationMatrix();\n                                    matrix._translate(bounds.x - templateMatrix[4], -(bounds.y + templateMatrix[5]));\n                                    matrix._scale(1, 1);\n                                    scaleApplied = true;\n                                }\n                            }\n                        }\n                    }\n                    if (!scaleApplied) {\n                        matrix._scale(scaleX, scaleY);\n                    }\n                }\n                else {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var isReference = false;\n            var keyName_1;\n            var isNew = true;\n            var ref_1;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj) {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        sourceDictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        sourceDictionary = obj;\n                    }\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                    this._resources.forEach(function (value, key) {\n                        if (key && key instanceof _PdfReference) {\n                            var base = _this._crossReference._fetch(key);\n                            if (base && template && base === template._content) {\n                                keyName_1 = value;\n                                ref_1 = key;\n                            }\n                        }\n                    });\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName_1 === 'undefined') {\n                keyName_1 = _PdfName.get(_getNewGuidString());\n                if (template && template._content.reference) {\n                    ref_1 = template._content.reference;\n                }\n                else if (this._crossReference) {\n                    ref_1 = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': template._content, 'key': keyName_1, 'source': sourceDictionary });\n                }\n                if (ref_1 && this._crossReference) {\n                    if (!this._crossReference._cacheMap.has(ref_1) && template && template._content) {\n                        this._crossReference._cacheMap.set(ref_1, template._content);\n                    }\n                    sourceDictionary.update(keyName_1.name, ref_1);\n                    this._resources.set(ref_1, keyName_1);\n                }\n                this._resourceObject._updated = true;\n            }\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n            this._sw._executeObject(keyName_1);\n            this.restore(state);\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        this._crossReference = crossReference;\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry instanceof PdfTemplate) {\n                    entry._crossReference = crossReference;\n                    entry._updatePendingResource(crossReference);\n                }\n                else if (entry.resource instanceof _PdfBaseStream) {\n                    var reference = void 0;\n                    if (entry.resource._reference) {\n                        reference = entry.resource._reference;\n                    }\n                    else {\n                        reference = crossReference._getNextReference();\n                        entry.resource._reference = reference;\n                    }\n                    if (!crossReference._cacheMap.has(reference) && entry.resource) {\n                        crossReference._cacheMap.set(reference, entry.resource);\n                    }\n                    entry.source.update(entry.key.name, reference);\n                    this._resources.set(reference, entry.key);\n                }\n                else if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                else if (entry.resource instanceof PdfFont) {\n                    this._updateFontResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var reference;\n        if (image._reference) {\n            reference = image._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            image._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(reference, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n                if (image._maskStream && image._maskStream.dictionary) {\n                    var ref = void 0;\n                    if (image._maskReference) {\n                        ref = image._maskReference;\n                    }\n                    else {\n                        ref = crossReference._getNextReference();\n                        image._maskReference = ref;\n                    }\n                    crossReference._cacheMap.set(ref, image._maskStream);\n                    image._maskStream.dictionary._updated = true;\n                    image._imageStream.dictionary.set('SMask', ref);\n                }\n            }\n        }\n        source.update(keyName.name, reference);\n        this._resources.set(reference, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._updateFontResource = function (font, keyName, source, crossReference) {\n        var reference;\n        if (font._reference) {\n            reference = font._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            font._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (font._dictionary) {\n                crossReference._cacheMap.set(reference, font._dictionary);\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    crossReference._cacheMap.set(reference, internal._fontDictionary);\n                }\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (path, first, second) {\n        var result = this._setPenBrush(first, second);\n        if (result.pen || result.brush) {\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(result.pen, result.brush, path.fillMode, false);\n        }\n    };\n    /**\n     * Draws a rounded rectangle on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} width The width of the rounded rectangle.\n     * @param {number} height The height of the rounded rectangle.\n     * @param {number} radius The radius of the rounded corners of the rectangle.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the rectangle.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the rectangle.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * // Draw a rounded rectangle on the page graphics\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new PdfPath();\n        if (radius === 0) {\n            path.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this.drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path.closeFigure();\n            this.drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._constructPiePath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n            this._sw._beginPath(point[0], point[1]);\n            for (var i = 0; i < points.length; i = i + 8) {\n                point = [points[Number.parseInt(i.toString(), 10)],\n                    points[i + 1],\n                    points[i + 2],\n                    points[i + 3],\n                    points[i + 4],\n                    points[i + 5],\n                    points[i + 6],\n                    points[i + 7]];\n                this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n            }\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        var setPattern = [];\n        for (var i = 0; i < pattern.length; ++i) {\n            setPattern[i] = pattern[i] * pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(setPattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value The string to be drawn.\n     * @param {PdfFont} font The font used to draw the string.\n     * @param {number[]} bounds An array specifying the bounds [x, y, width, height] where the string will be drawn.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the string.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the string.\n     * @param {PdfStringFormat} format The format that specifies text layout information such as alignment, line spacing, and trimming.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 12);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        if (!format) {\n            format = new PdfStringFormat();\n        }\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & PathPointType.closePath) === PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        var hasResource = false;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n            }\n            if (typeof sourceDictionary !== 'undefined' && sourceDictionary !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (_this._crossReference) {\n                        if (key !== null && typeof key !== 'undefined') {\n                            var dictionary = _this._crossReference._fetch(key);\n                            if (dictionary && ((font instanceof PdfStandardFont && dictionary === font._dictionary) ||\n                                (font instanceof PdfTrueTypeFont && dictionary === font._fontInternal._fontDictionary))) {\n                                keyName = value;\n                                ref = key;\n                                hasResource = true;\n                            }\n                        }\n                    }\n                    else if (font._reference && font._reference === key) {\n                        keyName = value;\n                        ref = key;\n                        hasResource = true;\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                if (font._reference) {\n                    ref = font._reference;\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (this._crossReference) {\n                    ref = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': font, 'key': keyName, 'source': sourceDictionary });\n                }\n            }\n            if (ref && this._crossReference) {\n                if (!font._reference) {\n                    font._reference = ref;\n                }\n                if (font._dictionary) {\n                    this._crossReference._cacheMap.set(ref, font._dictionary);\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (font instanceof PdfTrueTypeFont) {\n                    var internal = font._fontInternal;\n                    if (internal && internal._fontDictionary) {\n                        this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                    }\n                    sourceDictionary.update(keyName.name, ref);\n                }\n            }\n            if (!hasResource) {\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._setPenBrush = function (first, second) {\n        var pen;\n        var brush;\n        if (first) {\n            if (first instanceof PdfPen) {\n                pen = first;\n            }\n            else {\n                brush = first;\n            }\n        }\n        if (second && second instanceof PdfBrush) {\n            brush = second;\n        }\n        this._stateControl(pen, brush, null);\n        return { pen: pen, brush: brush };\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            if (font && font instanceof PdfTrueTypeFont && font._fontInternal &&\n                font._fontInternal instanceof _UnicodeTrueTypeFont && font.isItalic) {\n                if (!font._fontInternal._ttfMetrics._isItalic) {\n                    state = this.save();\n                    this._isItalic = true;\n                }\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            if (this._isItalic) {\n                this.translateTransform(layoutRectangle[0] + font.size / 5, layoutRectangle[1] - shift + verticalAlignShift);\n                this._skewTransform(0, -11);\n            }\n            else {\n                matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                    verticalAlignShift);\n                this._sw._modifyTM(matrix);\n            }\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            if (this._isItalic) {\n                this._sw._startNextLine(0, 0);\n                this._sw._setLeading(+height);\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            if (this._isItalic) {\n                this.restore(state);\n            }\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex <= pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        else {\n            page = this._crossReference._document.addPage();\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        var setLineWidth = false;\n        if (pen && brush) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (font && font instanceof PdfTrueTypeFont && (font.isUnicode || (font._style & PdfFontStyle.bold) !== 0)) {\n            var fontName = font._fontInternal._metrics._postScriptName;\n            var isBoldFont = false;\n            if (fontName && fontName.toLocaleLowerCase().includes('bold')) {\n                isBoldFont = true;\n            }\n            if (font._fontInternal && font._fontInternal._metrics && font._fontInternal._metrics._isBold !==\n                font.isBold && font.isBold === true && !isBoldFont) {\n                if (!pen && brush) {\n                    pen = new PdfPen(brush._color, 1);\n                }\n                tm = _TextRenderingMode.fillStroke;\n                setLineWidth = true;\n            }\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n        if (font && setLineWidth) {\n            this._sw._setLineWidth(font.size / 30);\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && format.wordSpacing > 0);\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format !== null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draws a line on the page graphics.\n     *\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the line.\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a line on the page graphics\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply scale transform\n     * graphics.scaleTransform(0.5, 0.5);\n     * // Draw a string with the scaled transformation\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply translate transform\n     * graphics.translateTransform(100, 100);\n     * // Draw a string with the translation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply rotate transform\n     * graphics.rotateTransform(-90);\n     * // Draw a string with the rotation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region, specified as [x, y, width, height].\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set clipping region\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * // Draw a string within the clipping region\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Sets the transparency for the graphics.\n     *\n     * @param {number} stroke The transparency value for strokes.\n     * @param {number} fill The transparency value for fills.\n     * @param {PdfBlendMode} mode The blend mode to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set transparency\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * // Draw the string\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary) {\n            if (dictionary.has('CA')) {\n                stroke = dictionary.get('CA');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('BM')) {\n                mode = _mapBlendMode(dictionary.get('BM'));\n            }\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    PdfGraphics.prototype._clipTranslateMargins = function (clipBounds) {\n        this._clipBounds = clipBounds;\n        this._sw._writeComment('Clip margins.');\n        this._sw._appendRectangle(clipBounds[0], clipBounds[1], clipBounds[2], clipBounds[3]);\n        this._sw._closePath();\n        this._sw._clipPath(false);\n        this._sw._writeComment('Translate co-ordinate system.');\n        this.translateTransform(clipBounds[0], clipBounds[1]);\n    };\n    PdfGraphics.prototype._skewTransform = function (angleX, angleY) {\n        var matrix = new _PdfTransformationMatrix();\n        this._getSkewTransform(angleX, angleY, matrix);\n        this._sw._modifyCtm(matrix);\n        matrix._multiply(matrix);\n    };\n    PdfGraphics.prototype._getSkewTransform = function (angleX, angleY, input) {\n        input._skew(-angleX, -angleY);\n        return input;\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    _PdfTransformationMatrix.prototype._skew = function (angleX, angleY) {\n        var tanA = Math.tan(this._degreeToRadians(angleX));\n        var tanB = Math.tan(this._degreeToRadians(angleY));\n        var skew = new _Matrix(1, tanA, tanB, 1, 0, 0);\n        this._matrix._multiply(skew);\n    };\n    _PdfTransformationMatrix.prototype._degreeToRadians = function (degreesX) {\n        var degreeRadFactor = Math.PI / 180;\n        return degreeRadFactor * degreesX;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics state\n * let state: PdfGraphicsState = graphics.save();\n * // Set graphics translate transform\n * graphics.translateTransform(100, 100);\n * // Draw the string\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * // Restore the graphics state\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode, _compressStream } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary && dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary && annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup && popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key, isNewReference) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                if (dictionary.has(key)) {\n                    this._writeArray(writer, dictionary.getArray(key), dictionary);\n                }\n                else {\n                    this._writeArray(writer, primitive, dictionary);\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = void 0;\n                    if (isNewReference) {\n                        if (streamDictionary.has('Filter') && streamDictionary.get('Filter').name === 'DCTDecode') {\n                            data = primitive.getString(true);\n                        }\n                        else {\n                            data = _compressStream(primitive, true);\n                        }\n                    }\n                    else {\n                        data = primitive.getString(true);\n                    }\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    data = data.replace(/</g, '&lt;');\n                    data = data.replace(/>/g, '&gt;');\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key, primitive._isNew);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        var bytes;\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                    break;\n                case 'TextMarkupContent':\n                    bytes = _stringToBytes(primitive);\n                    this._writeAttributeString(writer, key.toLowerCase(), _byteArrayToHexString(bytes));\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data, true);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data, true), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                if (annotations._comments && annotations._comments.length > 0) {\n                                    annotations._comments = [];\n                                }\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _bytesToString, _hexStringToByteArray, _decode, _isNullOrUndefined, _compressStream } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._isImport = false;\n        _this._isColorSpace = false;\n        _this._isDuplicate = false;\n        _this._isGroupingSupport = false;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            _this._jsonData = _stringToBytes(key, true, false, _this._jsonData);\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                _this._jsonData = _stringToBytes(value, true, false, _this._jsonData);\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _stringToBytes(i.toString(), true, false, []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            var count = 0;\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    if (count !== 0) {\n                        this._jsonData.push(this._comma);\n                    }\n                    count++;\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _stringToBytes(this._convertToJson(this._table), true, false, this._jsonData);\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary && dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        var rcValue;\n        var bytes;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (_isNullOrUndefined(value)) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive) {\n                    var bytes_1 = _stringToBytes(primitive);\n                    var styleTable = new Map();\n                    styleTable.set('unicodeData', _byteArrayToHexString(bytes_1));\n                    this._table.set(key, this._convertToJson(styleTable));\n                }\n                break;\n            case 'RC':\n                rcValue = dictionary.get('RC');\n                if (typeof rcValue === 'string' && rcValue.includes('<body')) {\n                    var index = rcValue.indexOf('<body');\n                    if (index > 0) {\n                        rcValue = rcValue.substring(index);\n                    }\n                    this._writeAttributeString('contents-richtext', rcValue);\n                }\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n                break;\n            case 'TextMarkupContent':\n                bytes = _stringToBytes(primitive);\n                this._writeAttributeString(key, _byteArrayToHexString(bytes));\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                if (typeof primitive === 'string' && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (_isNullOrUndefined(vertices) && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('area', array[0]);\n                }\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('distance', array[0]);\n                }\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('xformat', array[0]);\n                }\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('tformat', array[0]);\n                }\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('vformat', array[0]);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails) {\n            if (measurementDetails.has('C')) {\n                details.set('c', this._getValue(measurementDetails.get('C'), true));\n            }\n            if (measurementDetails.has('F')) {\n                details.set('f', this._getValue(measurementDetails.get('F'), true));\n            }\n            if (measurementDetails.has('D')) {\n                details.set('d', this._getValue(measurementDetails.get('D'), true));\n            }\n            if (measurementDetails.has('RD')) {\n                details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n            }\n            if (measurementDetails.has('U')) {\n                details.set('u', this._getValue(measurementDetails.get('U'), true));\n            }\n            if (measurementDetails.has('RT')) {\n                details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n            }\n            if (measurementDetails.has('SS')) {\n                details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n            }\n            if (measurementDetails.has('FD')) {\n                details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n            }\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && _this._isGroupingSupport))) {\n                    _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n                }\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array, isColorSpace, isNewReference) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        if (isNewReference === void 0) { isNewReference = false; }\n        if (value instanceof _PdfName) {\n            value.name = this._getValidString(value.name);\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var list = [];\n            if (key === 'ColorSpace' || isColorSpace) {\n                this._writeArray(list, value, dictionary, true);\n            }\n            else {\n                this._writeArray(list, value, dictionary);\n            }\n            this._isColorSpace = false;\n            this._writeTable('array', this._convertToJsonArray(list), table, key, array);\n        }\n        else if (typeof value === 'string') {\n            var isTabSpace = false;\n            if (value.indexOf('\\t') !== -1) {\n                isTabSpace = true;\n            }\n            if (key !== 'AllowedInteractions') {\n                value = this._getValidString(value);\n            }\n            if (this._isColorSpace || key === 'AllowedInteractions' || this._hasUnicodeCharacters(value) || isTabSpace) {\n                var bytes = _stringToBytes(value);\n                this._writeTable('unicodeData', _byteArrayToHexString(bytes), table, key, array);\n                isTabSpace = false;\n            }\n            else {\n                this._writeTable('string', value, table, key, array);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = void 0;\n            var baseStream = value; // eslint-disable-line\n            var isImageStream = false;\n            if (streamDictionary.has('Subtype') && streamDictionary.get('Subtype').name === 'Image') {\n                isImageStream = true;\n            }\n            if (isNewReference) {\n                if (value.dictionary.has('Filter') && value.dictionary.get('Filter').name === 'DCTDecode') {\n                    data = value.getString(true);\n                }\n                else {\n                    data = _compressStream(value, true);\n                }\n                if (!streamDictionary.has('Length') && data && data !== '') {\n                    streamDictionary.update('Length', baseStream.length);\n                }\n            }\n            else {\n                if (isImageStream && baseStream.stream) {\n                    if (baseStream.stream instanceof _PdfStream) {\n                        if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                            var streamLength = baseStream.stream.end - baseStream.stream.start;\n                            baseStream.getBytes(streamLength);\n                            var bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                            data = baseStream.getString(true, bytes);\n                        }\n                        else {\n                            var stream = baseStream.stream;\n                            data = baseStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                        }\n                    }\n                    else if (baseStream.stream.stream) {\n                        var flateStream = baseStream.stream; // eslint-disable-line\n                        if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                            var streamLength = flateStream.stream.end - flateStream.stream.start;\n                            flateStream.getBytes(streamLength);\n                            var bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                            data = flateStream.getString(true, bytes);\n                        }\n                        else if (flateStream.stream instanceof _PdfStream) {\n                            var stream = flateStream.stream;\n                            data = flateStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                        }\n                    }\n                }\n                else {\n                    data = value.getString(true);\n                }\n                if (!streamDictionary.has('Length') && data && data !== '') {\n                    streamDictionary.update('Length', value.length);\n                }\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key, array, isColorSpace, value._isNew);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary, isColorSpace) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        for (var i = 0; i < value.length; i++) {\n            if (isColorSpace && typeof value[Number.parseInt(i.toString(), 10)] === 'string') {\n                this._isColorSpace = true;\n            }\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array, isColorSpace);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += \"\\\"\" + key + \"\\\":\" + value;\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._hasUnicodeCharacters = function (value) {\n        var unicodeRegex = /[^\\x00-\\x7F]/; // eslint-disable-line\n        return value.split('').some(function (char) { return unicodeRegex.exec(char) !== null; }); // eslint-disable-line\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data, true);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        this._isImport = true;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            if (annotations_1._comments && annotations_1._comments.length > 0) {\n                                                                annotations_1._comments = [];\n                                                            }\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'contents-richtext':\n                    if (typeof value === 'string') {\n                        _this._addString(dictionary, 'RC', value);\n                    }\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    if (value) {\n                        if (value && typeof value === 'string') {\n                            _this._addString(dictionary, 'AllowedInteractions', value);\n                        }\n                        else {\n                            var interactionKeys = Object.keys(value);\n                            if (interactionKeys && interactionKeys.length > 0 && interactionKeys.indexOf('unicodeData') !== -1) {\n                                var convertString = JSON.stringify(value['unicodeData']);\n                                convertString = convertString.substring(1, convertString.length - 1);\n                                value = _bytesToString(_hexStringToByteArray(convertString, false), true);\n                                _this._addString(dictionary, 'AllowedInteractions', value);\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, typeof value === 'string' ? value : JSON.stringify(value));\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            if (dictionary.size > 0) {\n                value = this._crossReference._getNextReference();\n                dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n                this._crossReference._cacheMap.set(value, dictionary);\n            }\n            else {\n                value = new _PdfDictionary(this._crossReference);\n            }\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else if (keys.indexOf('unicodeData') !== -1) {\n            value = _bytesToString(_hexStringToByteArray(element.unicodeData, false), true);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            if (this._crossReference) {\n                this._parseStreamElements(stream, element);\n            }\n            else {\n                stream._pendingResources = JSON.stringify(element);\n            }\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStreamElements = function (stream, element) {\n        if (typeof element === 'undefined' && stream._pendingResources) {\n            element = JSON.parse(stream._pendingResources);\n        }\n        if (element) {\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage || (this._isImport && stream._isCompress)) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n        }\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\nimport { _JsonDocument } from './../import-export/json-document';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._isExported = false;\n        this._isResourceExport = false;\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n                this._templateOriginalSize = this._size;\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            if (typeof value !== 'undefined') {\n                this._size = [value[2], value[3]];\n                this._content = new _PdfContentStream([]);\n                this._content.dictionary._crossReference = this._crossReference;\n                this._initialize();\n                this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n            }\n            else {\n                this._isReadOnly = true;\n            }\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template. (Read only)\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        /**\n         * Get the size of the PDF template. (Read only)\n         *\n         * @returns {number[]} Template width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array.\n         * let size: number[] = template.size;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"_originalSize\", {\n        /**\n         * Get the original size of the PDF template. (Read only)\n         *\n         * Remarks: The `_originalSize` property is internal and provides access to the original dimensions of the PDF template.\n         *\n         * @returns {number[]} Template original width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array\n         * let size: number[] = template._originalSize;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._templateOriginalSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    PdfTemplate.prototype._exportStream = function (dictionary, crossReference) {\n        var jsonDocument = new _JsonDocument();\n        jsonDocument._crossReference = crossReference;\n        jsonDocument._isAnnotationExport = true;\n        var resourceTable = new Map();\n        jsonDocument._writeObject(resourceTable, dictionary.get('N'), dictionary, 'normal');\n        this._appearance = jsonDocument._convertToJson(resourceTable);\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._importStream = function (hasCrossReference, isResourceExport) {\n        var jsonDocument = new _JsonDocument();\n        if (hasCrossReference) {\n            jsonDocument._crossReference = this._crossReference;\n        }\n        var json = JSON.parse(this._appearance); // eslint-disable-line    \n        if (json) {\n            var entryKey = isResourceExport ? 'resources' : 'normal'; // eslint-disable-line\n            var entry = json[entryKey]; // eslint-disable-line    \n            if (entry) {\n                if (isResourceExport) {\n                    var resourceDictionary = jsonDocument._parseDictionary(entry['dict']);\n                    if (hasCrossReference) {\n                        this._content.dictionary.update('Resources', resourceDictionary);\n                    }\n                }\n                else {\n                    this._content = jsonDocument._parseStream(entry['stream']);\n                    if (hasCrossReference) {\n                        this._content.dictionary._crossReference = this._crossReference;\n                        this._content.dictionary._updated = true;\n                    }\n                }\n            }\n        }\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._updatePendingResource = function (crossReference) {\n        if (this._content._pendingResources && this._content._pendingResources !== '') {\n            var jsonDocument = new _JsonDocument();\n            jsonDocument._crossReference = crossReference;\n            jsonDocument._parseStreamElements(this._content);\n            this._content._pendingResources = '';\n            jsonDocument._dispose();\n        }\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { _obtainDestination } from './utils';\n/**\n * Represents base class for all action types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the GoTo action to the mouse enter property of the button field\n * let pdfAction: PdfAction = field.actions.mouseEnter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfAction = /** @class */ (function () {\n    function PdfAction() {\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        /**\n         * Get the next action to be performed after the action represented by this instance.\n         *\n         * @returns {PdfAction} The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * // Create a PdfGoToAction for navigating to the specified page.\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._next;\n        },\n        /**\n         * Set the next action to be performed after the action represented by this instance.\n         *\n         * @param {PdfAction} value The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the third page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._next = value;\n            var reference = this._page._crossReference._getNextReference();\n            this._page._crossReference._cacheMap.set(reference, value._dictionary);\n            value._dictionary.objId = reference.toString();\n            this._dictionary.update('Next', reference);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n/**\n * Represents an action which goes to a destination in the current document.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Set the goto action to the button\n * field.actions.mouseEnter = gotoAction;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfGoToAction = /** @class */ (function (_super) {\n    __extends(PdfGoToAction, _super);\n    function PdfGoToAction(arg) {\n        var _this = _super.call(this) || this;\n        if (arg instanceof PdfDestination) {\n            _this._destination = arg;\n            _this._page = arg.page;\n        }\n        else {\n            _this._page = arg;\n            _this._destination = new PdfDestination(arg, [0, 0]);\n        }\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', new _PdfName('Action'));\n        _this._dictionary.update('S', new _PdfName('GoTo'));\n        return _this;\n    }\n    Object.defineProperty(PdfGoToAction.prototype, \"destination\", {\n        /**\n         * Get the destination to be navigated.\n         *\n         * @returns {PdfDestination} The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter.destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Set the destination to be navigated.\n         *\n         * @param {PdfDestination} value The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the goto action to the button\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._destination = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGoToAction;\n}(PdfAction));\nexport { PdfGoToAction };\n/**\n * Represents actions to be performed as response to field events.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the pdf field actions\n * let fieldActions: PdfFieldActions = field.actions;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfFieldActions = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfFieldActions` class.\n     *\n     * @private\n     * @param {PdfField} field field items.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access button field\n     * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n     * // Access the second page\n     * let secondPage: PdfPage = document.getPage(2);\n     * // Create a PdfDestination for the specified page\n     * let destination: PdfDestination = new PdfDestination(secondPage)\n     * // Creates a new PdfGoToAction with the specified destination\n     * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n     * // Set the goto action to the button\n     * field.actions.mouseEnter = gotoAction;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfFieldActions(field) {\n        this._field = field;\n    }\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseEnter\", {\n        /**\n         * Get the action to be performed when the mouse cursor enters the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse enters the field area\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseEnter) {\n                this._mouseEnter = this._getPdfAction('E');\n            }\n            return this._mouseEnter;\n        },\n        /**\n         * Set the action to be performed when the mouse cursor enters the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseEnter = value;\n                this._updateAction(this._mouseEnter, 'E');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseLeave\", {\n        /**\n         * Get the action to be performed when the cursor exits the fields area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse leave the field area.\n         * let action: PdfAction = field.actions.mouseLeave;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseLeave) {\n                this._mouseLeave = this._getPdfAction('X');\n            }\n            return this._mouseLeave;\n        },\n        /**\n         * Set the action to be performed when the cursor exits the fields area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse leave property of the button field\n         * field.actions.mouseLeave = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseLeave = value;\n                this._updateAction(this._mouseLeave, 'X');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseUp\", {\n        /**\n         * Get the action to be performed when the mouse button is released inside the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse up the field area.\n         * let action: PdfAction = field.actions.mouseUp;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseUp) {\n                this._mouseUp = this._getPdfAction('U');\n            }\n            return this._mouseUp;\n        },\n        /**\n         * Set the action to be performed when the mouse button is released inside the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse up property of the button field\n         * field.actions.mouseUp = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseUp = value;\n                this._updateAction(this._mouseUp, 'U');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseDown\", {\n        /**\n         * Get the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse down the field area.\n         * let action: PdfAction = field.actions.mouseDown;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseDown) {\n                this._mouseDown = this._getPdfAction('D');\n            }\n            return this._mouseDown;\n        },\n        /**\n         * Set the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse down property of the button field\n         * field.actions.mouseDown = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseDown = value;\n                this._updateAction(this._mouseDown, 'D');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"gotFocus\", {\n        /**\n         * Get the action to be performed when the field receives the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the got focus the field area.\n         * let action: PdfAction = field.actions.gotFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._gotFocus) {\n                this._gotFocus = this._getPdfAction('Fo');\n            }\n            return this._gotFocus;\n        },\n        /**\n         * Set the action to be performed when the field receives the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the got focus property of the button field\n         * field.actions.gotFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._gotFocus = value;\n                this._updateAction(this._gotFocus, 'Fo');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"lostFocus\", {\n        /**\n         * Get the action to be performed when the field loses the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the lost focus the field area.\n         * let action: PdfAction = field.actions.lostFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._lostFocus) {\n                this._lostFocus = this._getPdfAction('Bl');\n            }\n            return this._lostFocus;\n        },\n        /**\n         * Set the action to be performed when the field loses the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the lost focus property of the button field\n         * field.actions.lostFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._lostFocus = value;\n                this._updateAction(this._lostFocus, 'Bl');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFieldActions.prototype._updateAction = function (action, key) {\n        var widget;\n        if (this._field._kidsCount > 0) {\n            widget = this._field.itemAt(0);\n            if (widget && widget._dictionary && action instanceof PdfGoToAction) {\n                var dictionary = new _PdfDictionary();\n                var page = action._page;\n                var destination = action.destination;\n                if (destination._destinationMode === PdfDestinationMode.location) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('XYZ'), destination.location[0], page.size[1], destination.zoom]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitR) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitR'), 0, 0, 0, 0]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitH) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitH'), page.size[1]]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitToPage) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('Fit')]);\n                }\n                dictionary.set(key, action._dictionary);\n                dictionary._updated = true;\n                widget._dictionary.update('AA', dictionary);\n            }\n        }\n    };\n    PdfFieldActions.prototype._getPdfAction = function (key) {\n        var result;\n        var widget = this._field.itemAt(0);\n        if (widget && widget._dictionary && widget._dictionary.has('AA')) {\n            var action = widget._dictionary.get('AA');\n            if (action && action.has(key)) {\n                var dictionary = action.get(key);\n                if (dictionary && dictionary.has('S')) {\n                    var type = dictionary.get('S');\n                    if (type && type.name === 'GoTo' && dictionary.has('D')) {\n                        if (!dictionary._crossReference) {\n                            dictionary._crossReference = widget._crossReference;\n                        }\n                        result = new PdfGoToAction(_obtainDestination(dictionary, 'D'));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return PdfFieldActions;\n}());\nexport { PdfFieldActions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails, _isNullOrUndefined, _stringToPdfString, _mapFont } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\nimport { PdfFieldActions } from '../pdf-action';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._enableGrouping = false;\n        this._isDuplicatePage = false;\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._isTransparentBorderColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isUpdating = false;\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary && this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color && _isNullOrUndefined(value)) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var annots = void 0;\n                if (this.page._pageDictionary.has('Annots')) {\n                    annots = this.page._pageDictionary.get('Annots');\n                }\n                if (this._kids && this._kids.length > 0) {\n                    for (var i = 0; i < this._kids.length; i++) {\n                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                        if (reference) {\n                            if (this.page._pageDictionary.has('Annots')) {\n                                if (annots) {\n                                    var index1 = annots.indexOf(reference);\n                                    if (index1 !== -1) {\n                                        return index1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this._dictionary && this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                    if (this._ref) {\n                        if (annots) {\n                            var index1 = annots.indexOf(this._ref);\n                            if (index1 !== -1) {\n                                return index1;\n                            }\n                        }\n                    }\n                }\n                return -1;\n            }\n            else {\n                return this._tabIndex;\n            }\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            if (this._isLoaded) {\n                var page = this.page;\n                if (page &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual ||\n                        (this.form && this.form._tabOrder === PdfFormFieldsTabOrder.manual))) {\n                    if (page._pageDictionary.has('Annots')) {\n                        var annots = page._pageDictionary.get('Annots');\n                        var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                        page._annotations = annotationCollection;\n                        var index = annots.indexOf(this._ref);\n                        if (index < 0) {\n                            index = this._annotationIndex;\n                        }\n                        var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                        page._pageDictionary.update('Annots', annotations);\n                        page._pageDictionary._updated = true;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary && dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._parseBorderColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict.has('BC')) {\n                    var bgArray = mkDict.getArray('BC');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && _isNullOrUndefined(value) && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary && this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    PdfField.prototype._updateBorderColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.borderColor = value;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BC') || _parseColor(mkDictionary.getArray('BC')) !== value) {\n                    mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary && this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element !== null && typeof element !== 'undefined' && element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary && this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary && dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource && resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n                this._font._reference = reference;\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            var diameter = bounds[2];\n            if (this._enableGrouping) {\n                diameter = Math.min(bounds[2], bounds[3]);\n            }\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    diameter - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, (this._enableGrouping ?\n                Math.min(bounds[2], bounds[3]) : bounds[2]) - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen || parameter.backBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled || parameter.backBrush) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen || parameter.backBrush) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen || parameter.shadowBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        if (this._kids.indexOf(item._ref) === -1) {\n            var currentIndex = this._kidsCount;\n            item._index = currentIndex;\n            this._kids.push(item._ref);\n            this._parsedItems.set(currentIndex, item);\n        }\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[1], 0);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(0, graphics._size[0]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics.drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary && dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary && this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = _stringToPdfString(text);\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = _stringToPdfString(text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._createItem(bounds);\n        this._initializeFont(this._defaultFont);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        var pdfFont;\n        var stringFormat;\n        var enableGrouping = false;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        if (this.maxLength && text.length > this.maxLength) {\n            text = text.substring(0, this.maxLength);\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping && widget.font !== null && typeof widget.font !== 'undefined') {\n            pdfFont = widget.font;\n            if (pdfFont.size === 0) {\n                pdfFont._size = 8;\n                pdfFont._fontMetrics._size = 0;\n            }\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (enableGrouping && widget.textAlignment !== null && typeof widget.textAlignment !== 'undefined') {\n            stringFormat = stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        if (enableGrouping) {\n            this._drawTextBox(graphics, parameter, text, pdfFont, stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        else {\n            this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0 && this.borderColor) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        var stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        this._drawTextBox(g, parameter, text, font, stringFormat, multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n            var rotate = this.rotate;\n            if (rotate !== null && typeof rotate !== 'undefined' && rotate === 90) {\n                rectangle[1] = rectangle[2] / 2;\n            }\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                            parameter.stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"actions\", {\n        /**\n         * Gets the actions of the field. [Read-Only]\n         *\n         * @returns {PdfFieldActions} The actions.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._actions) {\n                this._actions = new PdfFieldActions(this);\n            }\n            return this._actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary && fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var text;\n        var font;\n        var stringFormat;\n        var enableGrouping = false;\n        var isSizeZero = false;\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping) {\n            if (widget._mkDictionary && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                text = widget._mkDictionary.get('CA');\n            }\n            else {\n                text = '';\n            }\n            if (typeof widget.font !== 'undefined' && widget.font.size !== null && widget.font.size !== 0) {\n                font = widget.font;\n            }\n            stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (this._isLoaded && widget instanceof PdfWidgetAnnotation &&\n            widget !== null && typeof widget !== 'undefined' && widget._defaultAppearance) {\n            var fontName = widget._defaultAppearance.fontName;\n            if (fontName === null || typeof fontName === 'undefined') {\n                fontName = 'Helvetica';\n            }\n            var fontSize = widget._defaultAppearance.fontSize;\n            if (fontSize === null || typeof fontSize === 'undefined') {\n                fontSize = this._defaultFont.size;\n            }\n            else if (fontSize === 0) {\n                isSizeZero = true;\n            }\n            var previousFont = void 0;\n            var currentFont = void 0;\n            var font_1;\n            this._stringFormat = new PdfStringFormat();\n            this._stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n            this._stringFormat.alignment = PdfTextAlignment.center;\n            if (fontSize !== null && typeof fontSize !== 'undefined' && fontName) {\n                font_1 = _mapFont(fontName, fontSize, PdfFontStyle.regular, widget);\n            }\n            if (font_1 !== null && typeof font_1 !== 'undefined') {\n                currentFont = font_1;\n            }\n            else {\n                currentFont = this._defaultFont;\n            }\n            var textWidth = currentFont.measureString(this.text, this._stringFormat);\n            if (isSizeZero && currentFont && currentFont instanceof PdfStandardFont) {\n                if (this._isLoaded && !widget._dictionary.has('AP')) {\n                    var width = widget.bounds.width - 8 * border.width;\n                    var height = widget.bounds.height - 8 * border.width;\n                    while (textWidth[0] < width || textWidth[1] < height) {\n                        previousFont = currentFont;\n                        currentFont = new PdfStandardFont(currentFont.fontFamily, currentFont._size + 1);\n                        textWidth = currentFont.measureString(this.text, this._stringFormat);\n                        if (textWidth[0] > width || textWidth[1] > height) {\n                            currentFont = previousFont;\n                            break;\n                        }\n                    }\n                    this._font = currentFont;\n                }\n            }\n        }\n        if (enableGrouping) {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, text, font, stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, text, font, stringFormat);\n            }\n        }\n        else {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n            if (this._isLoaded) {\n                this._setAppearance = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, item);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawCheckBox(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        }\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item, itemValue) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            normalDictionary.update(itemValue, normalCheckedReference);\n        }\n        else {\n            normalDictionary.update('Yes', normalCheckedReference);\n        }\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            pressedDictionary.update(itemValue, pressCheckedReference);\n        }\n        else {\n            pressedDictionary.update('Yes', pressCheckedReference);\n        }\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(!this._isLoaded);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, item);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                if (!this._isDuplicatePage) {\n                    item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                }\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else if (!this._isDuplicatePage) {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawRadioButton(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        }\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        var actualValue = item.value;\n        if (!actualValue && item._enableGrouping) {\n            actualValue = 'check' + item._index;\n        }\n        normalDictionary.update(actualValue, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(actualValue, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary && this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary && this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary && this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var width = itemFont.measureString((selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var text = (selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1];\n                var textSize = itemFont.measureString(text);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont = new PdfStandardFont(fontFamily, i);\n                        var size = itemFont.measureString(text);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont = new PdfStandardFont(fontFamily, fontSize);\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            var itemsCount = this._kidsCount;\n            var count = options.length <= itemsCount ? options.length : itemsCount;\n            this._listValues = new Array(count);\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                if (Array.isArray(index) && index.length > 0) {\n                    index = index[0];\n                    this._selectedIndex = index;\n                }\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (_isNullOrUndefined(index) && this._listValues !== null && typeof this._listValues !== 'undefined') {\n                            var value = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                            if (Array.isArray(value)) {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value[1];\n                            }\n                            else {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (i === index) {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                                this._selectedIndex = i;\n                            }\n                            else {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            item._text = '';\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            if (item._enableGrouping && typeof item.rotate === 'undefined') {\n                parameter.rotationAngle = 0;\n            }\n            else {\n                parameter.rotationAngle = item.rotate;\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (_isNullOrUndefined(this._listValues) && this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (isFlatten || needAppearance) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics.drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            template = signatureTemplate;\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics.drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary && dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _isNullOrUndefined } from '../utils';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        if (_isNullOrUndefined(bounds)) {\n            this._bounds = bounds;\n        }\n        else {\n            this._bounds = [];\n        }\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap, _PdfColorSpace } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints, _updateBounds, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont, PdfCjkStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isTransparentColor = false;\n        this._isRotated = false;\n        this._isChanged = false;\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary && this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary && this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && this._dictionary && this._dictionary.has('Border') || (width || vRadius || hRadius)) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary !== null && this._dictionary && this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary && this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary && this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary && this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' && this.subject !== value) {\n                this._dictionary.update('Subj', value);\n                this._subject = value;\n                if (this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._isRotated = true;\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary && this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary) {\n            if (this._dictionary.has('Rotate')) {\n                angle = this._dictionary.get('Rotate');\n            }\n            else if (this._dictionary.has('Rotation')) {\n                angle = this._dictionary.get('Rotation');\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getMediaOrCropBox = function (page) {\n        var cropOrMediaBox;\n        if (page && page._pageDictionary && page._pageDictionary.has('MediaBox')) {\n            cropOrMediaBox = page._pageDictionary.get('MediaBox');\n        }\n        else if (page && page._pageDictionary && page._pageDictionary.has('CropBox')) {\n            cropOrMediaBox = page._pageDictionary.get('CropBox');\n        }\n        return cropOrMediaBox;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = 0;\n        if (_isNullOrUndefined(linePoints)) {\n            count = linePoints.length;\n        }\n        var x = [];\n        var y = [];\n        if (count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary && this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (this._page && box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) ||\n                                    (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics.drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._page.annotations.remove(this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this instanceof PdfLineAnnotation && this._dictionary && !this._dictionary.has('AP')) {\n            if (this._isLoaded) {\n                currentBounds = this._bounds;\n            }\n            else {\n                if (this instanceof PdfLineAnnotation && !this.measure) {\n                    currentBounds = _toRectangle([this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height]);\n                }\n                else {\n                    if (this._setAppearance && this.flatten && !this.measure) {\n                        currentBounds = this._bounds;\n                    }\n                    else {\n                        currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                            this.bounds.width, this.bounds.height]);\n                    }\n                }\n            }\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    if (this instanceof PdfLineAnnotation && !this.measure && !this._isLoaded) {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        if (this._setAppearance && this.flatten && !this.measure) {\n                            currentBounds = this.bounds;\n                        }\n                        else if (!this._isLoaded) {\n                            currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                        }\n                    }\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary && this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            if (!template._content.dictionary.has('Matrix') && template._content.dictionary.has('BBox')) {\n                var box = template._content.dictionary.getArray('BBox');\n                bounds.x -= box[0];\n                bounds.y += box[1];\n            }\n            if (this instanceof PdfAngleMeasurementAnnotation && !this._isLoaded) {\n                bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            graphics.drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._page.annotations.remove(this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            page.annotations.remove(annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (_isNullOrUndefined(points) && this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint;\n        if (_isNullOrUndefined(points)) {\n            previousPoint = points[points.length - 1];\n        }\n        else {\n            points = [];\n        }\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path.closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (_isNullOrUndefined(brush)) {\n            graphics.drawPath(pdfpath, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path.closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics.drawPath(pdfpath, pen);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        if (_isNullOrUndefined(points)) {\n            for (var i = 0; i < points.length; i++) {\n                var first = points[Number.parseInt(i.toString(), 10)];\n                var second = points[(i + 1) % points.length];\n                sum += (second[0] - first[0]) * (second[1] + first[1]);\n            }\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect !== null && typeof borderEffect !== 'undefined' && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new PdfPath();\n        if (_isNullOrUndefined(rectangle) && rectangle.length === 4) {\n            graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        }\n        var radius = 0;\n        if (_isNullOrUndefined(intensity)) {\n            radius = intensity * 4.25;\n        }\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new PdfPath();\n            graphicsPath.addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        if (typeof this.color === 'undefined') {\n            this._isTransparentColor = true;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(axisPoint, (angle + 60), count);\n                second = this._getAxisValue(axisPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = [fontStyle];\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        entry = entry.trim();\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new PdfPath();\n            path.addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        if (_page && _page.size) {\n            clientSize = _page.size;\n        }\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._page.annotations.remove(this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox = this._getCropOrMediaBox();\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    PdfAnnotation.prototype._getPoints = function (polygonPoints) {\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var points = polygonPoints;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            var modifiedPoints = [];\n            for (var i = 0; i < points.length; i++) {\n                modifiedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            for (var j = 0; j < modifiedPoints.length; j = j + 2) {\n                var x = modifiedPoints[Number.parseInt(j.toString(), 10)];\n                var y = modifiedPoints[j + 1];\n                if (cropOrMediaBox) {\n                    points[Number.parseInt(j.toString(), 10)] = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        points[j + 1] = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        points[j + 1] = y + cropOrMediaBox[1];\n                    }\n                }\n            }\n        }\n        return points;\n    };\n    PdfAnnotation.prototype._getCropOrMediaBox = function () {\n        var cropOrMediaBox;\n        if (this._page) {\n            cropOrMediaBox = this._page.cropBox;\n            if (!cropOrMediaBox || cropOrMediaBox.length === 0) {\n                cropOrMediaBox = this._page.mediaBox;\n            }\n        }\n        if (cropOrMediaBox && cropOrMediaBox[3] < 0) {\n            var y = cropOrMediaBox[1];\n            var height = cropOrMediaBox[3];\n            cropOrMediaBox[3] = y;\n            cropOrMediaBox[1] = height;\n        }\n        return cropOrMediaBox;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (linePoints !== null && typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        else {\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (cropOrMediaBox && cropOrMediaBox.length > 3 && this.linePoints.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                this._linePoints[0] += cropOrMediaBox[0];\n                this._linePoints[1] += cropOrMediaBox[1];\n                this._linePoints[2] += cropOrMediaBox[0];\n                this._linePoints[3] += cropOrMediaBox[1];\n                this._dictionary.update('L', this._linePoints);\n            }\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this.border.dash === null || typeof this.border.dash === 'undefined') {\n            this.border.dash = [];\n            if (this.border.style === PdfBorderStyle.dashed) {\n                this.border.dash = [3, 1];\n            }\n            else if (this.border.style === PdfBorderStyle.dot) {\n                this.border.dash = [1, 1];\n            }\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            var isUpdated = false;\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n                if (this._page._isNew && !(this._flatten || flatten)) {\n                    var boundsArray = this._obtainLineBounds();\n                    var bounds = {\n                        x: boundsArray[0],\n                        y: boundsArray[1], width: boundsArray[2], height: boundsArray[3]\n                    };\n                    this._bounds = bounds;\n                    var updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                    this._dictionary.update('Rect', updatedBounds);\n                    isUpdated = true;\n                }\n            }\n            else {\n                var bounds = this._obtainLineBounds();\n                var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n                if (this._page._isNew && this._page._pageSettings && this._setAppearance && !this.flatten) {\n                    rectangleBounds = _updateBounds(this, bounds);\n                }\n                this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n                this._dictionary.update('Rect', rectangleBounds);\n                isUpdated = true;\n            }\n            if (this._dictionary.has('Measure') && !isUpdated) {\n                var boundsArray = this._obtainLineBounds();\n                var bounds = { x: boundsArray[0],\n                    y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n                this._bounds = bounds;\n                var updatedBounds = void 0;\n                if (this._page && this._page._isNew && this._page._pageSettings && !this._setAppearance && !this.flatten) {\n                    updatedBounds = _updateBounds(this);\n                }\n                else {\n                    updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                }\n                this._dictionary.update('Rect', updatedBounds);\n                if (this.flatten && !this.measure && this._page && this._page.size && Array.isArray(this._page.size) &&\n                    this._page.size.length >= 2) {\n                    this._bounds = { x: boundsArray[0], y: this._page.size[1] - (boundsArray[1] + boundsArray[3]),\n                        width: boundsArray[2], height: boundsArray[3] };\n                }\n            }\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, 0);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        if (this.border.style === PdfBorderStyle.dashed) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dash;\n            parameter.borderPen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dot;\n            parameter.borderPen._dashPattern = [1, 1];\n        }\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, 0);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n            pen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n            pen._dashPattern = [1, 1];\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush;\n        if (this.innerColor) {\n            brush = new PdfBrush(this._innerColor);\n        }\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = 0;\n        if (this.caption.cap) {\n            lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        }\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            var leaderLineValue = this.leaderLine;\n            if (leaderLineValue === null || typeof leaderLineValue === 'undefined') {\n                this._leaderLine = 0;\n                leaderLineValue = 0;\n            }\n            if (leaderLineValue < 0) {\n                leaderLine = -(leaderLineValue);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = leaderLineValue;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n            if ((!this.measure) && (!this._dictionary.has('Measure'))) {\n                this._dictionary.update('Rect', [rectangleBounds[0], rectangleBounds[1], rectangleBounds[2], rectangleBounds[3]]);\n            }\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var color = this.color ? this.color : [0, 0, 0];\n        var borderPen = new PdfPen(color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            if (this._page._isNew && this._page._pageSettings) {\n                nativeRectangle1 = _updateBounds(this);\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        this._points = this._getPoints(this._points);\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            this._points.push(this._points[0]);\n            this._points.push(this._points[1]);\n        }\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new PdfPath();\n                    graphicsPath.addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (_isNullOrUndefined(this.borderEffect) && _isNullOrUndefined(this.borderEffect.intensity) &&\n                this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new PdfPath();\n                graphicsPath.addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page && this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    if (this.flatten) {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                    }\n                    else {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], -points_1[j + 1]]);\n                    }\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        else {\n            _this._points = [];\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        var color = this.color ? this.color : [0, 0, 0];\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.border.width > 0) {\n                borderPen = new PdfPen(color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics.drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && color) {\n                parameter.borderPen = new PdfPen(color, this.border.width);\n            }\n            if (color) {\n                parameter.foreBrush = new PdfBrush(color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics.drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds && (!this._setAppearance || (this._setAppearance && this.flatten))) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            this._points = this._getPoints(this._points);\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new PdfPath();\n        graphicspath.addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new PdfPath()).addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        graphics.drawPath(path, pen);\n        path.addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._isEnableControlPoints = true;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                var box = template._content.dictionary.getArray('BBox');\n                var angle = this._getRotationAngle();\n                if (box && angle !== null && typeof angle !== 'undefined') {\n                    template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten && !this.flattenPopups && this._dictionary.has('Popup')) {\n            var reference = this._dictionary.getRaw('Popup');\n            if (this._page._pageDictionary.has('Annots')) {\n                var annots = this._page._pageDictionary.getRaw('Annots'); // eslint-disable-line\n                if (annots && Array.isArray(annots) && annots.length > 0) {\n                    var index = annots.indexOf(reference);\n                    if (index >= 0) {\n                        this._page.annotations.removeAt(index);\n                    }\n                }\n            }\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    if (this._isEnableControlPoints) {\n                        var p1 = [];\n                        var p2 = [];\n                        var value = this._getControlPoints(point, p1, p2);\n                        p1 = value.controlP1;\n                        p2 = value.controlP2;\n                        var index = 0;\n                        for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                            pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                            index++;\n                        }\n                    }\n                    else {\n                        if (count % 3 === 1) {\n                            pathPointCont = count;\n                            pathPoints = new Array(pathPointCont);\n                            pathPoints = point;\n                        }\n                        else if (count % 3 === 0) {\n                            pathPointCont = count + 1;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            pathPointCont = count + 2;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                            pathPoints[pathPointCont - 2] = point[point.length - 2];\n                        }\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1.addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (this._isLoaded) {\n                            borderPen._lineCap = PdfLineCap.round;\n                        }\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            graphics.drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics.drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)].slice();\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0 && (!isEqual || this._isModified)) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n                _this._isModified = false;\n            });\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var containsCropOrMediaBox = false;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            containsCropOrMediaBox = true;\n            for (var i = 0; i < inkCollection.length; i++) {\n                var inkList = inkCollection[Number.parseInt(i.toString(), 10)];\n                var modifiedInkList = inkList;\n                for (var j = 0; j < inkList.length; j = j + 2) {\n                    var x = inkList[Number.parseInt(j.toString(), 10)];\n                    var y = inkList[j + 1];\n                    x = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        y = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        y = y + cropOrMediaBox[1];\n                    }\n                    modifiedInkList[Number.parseInt(j.toString(), 10)] = x;\n                    modifiedInkList[j + 1] = y;\n                    inkCollection[Number.parseInt(i.toString(), 10)] = modifiedInkList;\n                }\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._isEnableControlPoints || containsCropOrMediaBox) {\n            return this._getInkBoundsValue(inkCollection);\n        }\n        else {\n            if (!this._isFlatten) {\n                this._updateInkListCollection(inkCollection);\n            }\n            return [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n    };\n    PdfInkAnnotation.prototype._updateInkListCollection = function (inkCollection) {\n        for (var i = 0; i < inkCollection.length; i++) {\n            var inkList = [];\n            for (var j = 0; j < inkCollection[Number.parseInt(i.toString(), 10)].length; j++) {\n                inkList.push(inkCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]);\n            }\n            this._inkPointsCollection[Number.parseInt(i.toString(), 10)] = inkList;\n        }\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function (inkCollection) {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else if (inkCollection) {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints, inkCollection);\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints, inkCollection) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            else if (cropOrMediaBox) {\n                xMax = xMax - xMin;\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            else if (cropOrMediaBox) {\n                yMax = yMax - yMin;\n            }\n            if (cropOrMediaBox) {\n                xMin = xMin + cropOrMediaBox[0];\n                yMin = yMin + cropOrMediaBox[1];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        if (!this._isFlatten && inkCollection) {\n            this._updateInkListCollection(inkCollection);\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n                if (list.length === innerList.length) {\n                    list = [];\n                }\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._comment = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 9 5.0908 cm 7.74 12.616 m -7.74 12.616 l -8.274 12.616 -8.707 12.184 -8.707 11.649 c h f Q 0 G ';\n        _this._commentSecondHalf = '0 i 0.60 w 4 M 1 j 0 J [0 100]1 d  1 0 0 1 9 5.0908 cm 4.1 1.71 m -0.54 -2.29 l  -0.54 1.71 l  -5.5 1.71 l  -5.5 14.42 l  10.5 14.42 l  10.5 1.71 l  4.1 1.71 l -2.33 9.66 m 7.34 9.66 l 7.34 8.83 l -2.33 8.83 l -2.33 9.66 l -2.33 7.28 m 5.88 7.28 l 5.88 6.46 l -2.33 6.46 l -2.33 7.28 l 14.9 23.1235 m -14.9 23.1235 l -14.9 -20.345 l 14.9 -20.345 l 14.9 23.1235 l b ';\n        _this._note = '0 G 0 i 0.61 w 4 M 0 j 0 J []0 d  q 1 0 0 1 16.959 1.3672 cm 0 0 m 0 -0.434 -0.352 -0.785 -0.784 -0.785 c -14.911 -0.785 l -15.345 -0.785 -15.696 -0.434 -15.696 0 c -15.696 17.266 l -15.696 17.699 -15.345 18.051 -14.911 18.051 c -0.784 18.051 l -0.352 18.051 0 17.699 0 17.266 c h b Q q 1 0 0 1 4.4023 13.9243 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4019 11.2207 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 8.5176 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 5.8135 cm 0 0 m 9.418 0 l S Q ';\n        _this._help = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 12.1465 10.5137 cm -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c h f Q ';\n        _this._helpSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  1 0 0 1 12.1465 10.5137 cm 0 0 m -0.682 -0.756 -0.958 -1.472 -0.938 -2.302 c -0.938 -2.632 l -3.385 -2.632 l -3.403 -2.154 l -3.459 -1.216 -3.147 -0.259 -2.316 0.716 c -1.729 1.433 -1.251 2.022 -1.251 2.647 c -1.251 3.291 -1.674 3.715 -2.594 3.751 c -3.202 3.751 -3.937 3.531 -4.417 3.2 c -5.041 5.205 l -4.361 5.591 -3.274 5.959 -1.968 5.959 c 0.46 5.959 1.563 4.616 1.563 3.089 c 1.563 1.691 0.699 0.771 0 0 c -2.227 -6.863 m -2.245 -6.863 l -3.202 -6.863 -3.864 -6.146 -3.864 -5.189 c -3.864 -4.196 -3.182 -3.516 -2.227 -3.516 c -1.233 -3.516 -0.589 -4.196 -0.57 -5.189 c -0.57 -6.146 -1.233 -6.863 -2.227 -6.863 c -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c b ';\n        _this._insert = ' 0 i 0.59 w 4 M 0 j 0 J []0 d  1 0 0 1 8.5386 19.8545 cm 0 0 m -8.39 -19.719 l 8.388 -19.719 l h B ';\n        _this._key = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 6.5 12.6729 cm 0.001 5.138 m -2.543 5.138 -4.604 3.077 -4.604 0.534 c -4.604 -1.368 -3.449 -3.001 -1.802 -3.702 c -1.802 -4.712 l -0.795 -5.719 l -1.896 -6.82 l -0.677 -8.039 l -1.595 -8.958 l -0.602 -9.949 l -1.479 -10.829 l -0.085 -12.483 l 1.728 -10.931 l 1.728 -3.732 l 1.737 -3.728 1.75 -3.724 1.76 -3.721 c 3.429 -3.03 4.604 -1.385 4.604 0.534 c 4.604 3.077 2.542 5.138 0.001 5.138 c f Q ';\n        _this._keySecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._newParagraph = '1 0.819611 0 rg 0 G 0 i 0.58 w 4 M 0 j 0 J []0 d ';\n        _this._newParagraphSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._paragraph = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h f Q ';\n        _this._paragraphSecondHalf = '0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h S Q q 1 0 0 1 11.6787 2.6582 cm 0 0 m -1.141 0 l -1.227 0 -1.244 0.052 -1.227 0.139 c -0.656 1.157 -0.52 2.505 -0.52 3.317 c -0.52 3.594 l -2.833 3.783 -5.441 4.838 -5.441 8.309 c -5.441 10.778 -3.714 12.626 -0.57 13.024 c -0.535 13.508 -0.381 14.129 -0.242 14.389 c -0.207 14.44 -0.174 14.475 -0.104 14.475 c 1.088 14.475 l 1.156 14.475 1.191 14.458 1.175 14.372 c 1.105 14.095 0.881 13.127 0.881 12.402 c 0.881 9.431 0.932 7.324 0.95 4.06 c 0.95 2.298 0.708 0.813 0.189 0.07 c 0.155 0.034 0.103 0 0 0 c b Q ';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics.drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (this.opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this.opacity);\n        }\n        switch (this.icon) {\n            case PdfPopupIcon.comment:\n                graphics._sw._write(this._comment);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._commentSecondHalf);\n                break;\n            case PdfPopupIcon.paragraph:\n                graphics._sw._write(this._paragraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._paragraphSecondHalf);\n                break;\n            case PdfPopupIcon.help:\n                graphics._sw._write(this._help);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._helpSecondHalf);\n                break;\n            case PdfPopupIcon.note:\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._note);\n                break;\n            case PdfPopupIcon.insert:\n                graphics._sw._write('0 G ');\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._insert);\n                break;\n            case PdfPopupIcon.key:\n                graphics._sw._write(this._key);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._keySecondHalf);\n                break;\n            case PdfPopupIcon.newParagraph:\n                graphics._sw._write(this._newParagraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._newParagraphSecondHalf);\n                break;\n        }\n        if (this.opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._destination) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._destination = value;\n                if (this._isLoaded) {\n                    this._destination._initializePrimitive();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (typeof array === 'string') {\n                array = this._getDestination(array);\n            }\n            if (array && array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && array && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                if (index >= 0) {\n                    var page = this._crossReference._document.getPage(index);\n                    if (page && array[1] instanceof _PdfName) {\n                        var mode = array[1];\n                        if (mode) {\n                            if (mode.name === 'XYZ') {\n                                var left = array[2];\n                                var top_4 = array[3];\n                                var zoom = array[4];\n                                var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                    || (typeof zoom === 'undefined' && zoom === null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._destination = new PdfDestination();\n                    var zoom = array[4];\n                    var mode = array[1];\n                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                        this._destination.zoom = zoom;\n                    }\n                    if (mode.name === 'Fit') {\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                    else if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var topValue = array[3];\n                        if ((typeof left === 'undefined' && left === null) || (typeof topValue === 'undefined' && topValue === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    this._destination._index = index;\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference && reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    else if (typeof reference === 'string') {\n                        referenceArray = this._getDestination(reference);\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._getDestination = function (name) {\n        var document = this._crossReference._document;\n        var destinationArray; // eslint-disable-line\n        if (document) {\n            destinationArray = this._getNamedDestination(document, name);\n        }\n        return destinationArray;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedDestination = function (document, result) {\n        var destination; // eslint-disable-line\n        var catalog = document._catalog;\n        if (catalog && catalog._catalogDictionary && catalog._catalogDictionary.has('Names')) {\n            var names = catalog._catalogDictionary.get('Names');\n            if (names && names.has('Dests')) {\n                var kids = names.get('Dests');\n                if (kids) {\n                    var ref = this._getNamedObjectFromTree(kids, result);\n                    destination = this._extractDestination(ref, document);\n                }\n            }\n        }\n        return destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._extractDestination = function (ref, document) {\n        var dict;\n        var destinationArray; // eslint-disable-line\n        if (ref && ref instanceof _PdfReference) {\n            dict = document._crossReference._fetch(ref);\n        }\n        if (dict && dict.has('D')) {\n            destinationArray = dict.getRaw('D');\n        }\n        return destinationArray ? destinationArray : ref;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedObjectFromTree = function (kids, name) {\n        var found = false;\n        var currentDictionary = kids;\n        var reference;\n        while (!found && currentDictionary) {\n            if (currentDictionary && currentDictionary.has('Kids')) {\n                currentDictionary = this._getProperKid(currentDictionary, name);\n            }\n            else if (currentDictionary && currentDictionary.has('Names')) {\n                reference = this._findName(currentDictionary, name);\n                found = true;\n            }\n        }\n        return reference;\n    };\n    PdfDocumentLinkAnnotation.prototype._findName = function (current, name) {\n        var names = current.get('Names'); // eslint-disable-line\n        var halfLength = names.length / 2;\n        var lowerIndex = 0;\n        var topIndex = halfLength - 1;\n        var half = 0;\n        var found = false;\n        var destinationReference;\n        while (!found) {\n            half = Math.floor((lowerIndex + topIndex) / 2);\n            if (lowerIndex > topIndex) {\n                break;\n            }\n            var result = names[Number.parseInt(half.toString(), 10) * 2]; // eslint-disable-line\n            if (result && result instanceof _PdfReference) {\n                result = current._crossReference._fetch(result);\n            }\n            var cmp = this._stringCompare(name, result);\n            if (cmp > 0) {\n                lowerIndex = half + 1;\n            }\n            else if (cmp < 0) {\n                topIndex = half - 1;\n            }\n            else {\n                found = true;\n                break;\n            }\n        }\n        if (found) {\n            destinationReference = names[half * 2 + 1];\n        }\n        return destinationReference;\n    };\n    PdfDocumentLinkAnnotation.prototype._getProperKid = function (kids, name) {\n        var kidsArray; // eslint-disable-line\n        var kid;\n        if (kids && kids.has('Kids')) {\n            kidsArray = kids.getRaw('Kids');\n        }\n        if (kidsArray && Array.isArray(kidsArray) && kidsArray.length !== 0) {\n            kidsArray = kids.getArray('Kids');\n            for (var i = 0; i < kidsArray.length; i++) {\n                kid = kidsArray[Number.parseInt(i.toString(), 10)];\n                if (this._checkLimits(kid, name)) {\n                    break;\n                }\n            }\n        }\n        return kid;\n    };\n    PdfDocumentLinkAnnotation.prototype._checkLimits = function (kid, result) {\n        var found = false;\n        if (kid && kid.has('Limits')) {\n            var limits = kid.get('Limits'); // eslint-disable-line\n            var lowerLimit = limits[0];\n            var higherLimit = limits[1];\n            var lowCompare = this._stringCompare(lowerLimit, result);\n            var highCompare = this._stringCompare(higherLimit, result);\n            if (lowCompare === 0 || highCompare === 0) {\n                found = true;\n            }\n            else if (lowCompare < 0 && highCompare > 0) {\n                found = true;\n            }\n        }\n        return found;\n    };\n    PdfDocumentLinkAnnotation.prototype._stringCompare = function (limits, result) {\n        var byteArray = _stringToBytes(limits);\n        var byteArray1 = _stringToBytes(result);\n        var commonSize = Math.min(byteArray.length, byteArray1.length);\n        var resultValue = 0;\n        for (var i = 0; i < commonSize; i++) {\n            var byte = byteArray[Number.parseInt(i.toString(), 10)];\n            var byte1 = byteArray1[Number.parseInt(i.toString(), 10)];\n            resultValue = byte - byte1;\n            if (resultValue !== 0) {\n                break;\n            }\n        }\n        if (resultValue === 0) {\n            resultValue = byteArray.length - byteArray1.length;\n        }\n        return resultValue;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        else if (this._destination) {\n            this._dictionary.update('Dest', this._destination._array);\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the text markup annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the text markup annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    var nativeRectangle = this._obtainNativeRectangle();\n                    this._dictionary.update('Rect', _fromRectangle({ x: nativeRectangle[0], y: nativeRectangle[1], width: nativeRectangle[2], height: nativeRectangle[3] }));\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (value.length > 0) {\n                    this._quadPoints = new Array((value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n                this._isChanged = true;\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._obtainNativeRectangle = function () {\n        var nativeRectangle = [this._bounds.x, this._bounds.y + this._bounds.height, this._bounds.width, this._bounds.height];\n        var cropOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            nativeRectangle[1] = size[1] - nativeRectangle[1];\n            cropOrMediaBox = this._getCropOrMediaBox();\n        }\n        if (cropOrMediaBox) {\n            if (cropOrMediaBox[3] < 0) {\n                var yCrop = cropOrMediaBox[1];\n                var heightCrop = cropOrMediaBox[3];\n                cropOrMediaBox[1] = heightCrop;\n                cropOrMediaBox[3] = yCrop;\n            }\n            if (cropOrMediaBox.length > 2 && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                nativeRectangle[0] += cropOrMediaBox[0];\n                if (this._page && this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[1] > 0 && cropOrMediaBox[3] === 0) {\n                    nativeRectangle[1] += cropOrMediaBox[3];\n                }\n                else {\n                    nativeRectangle[1] += cropOrMediaBox[1];\n                }\n            }\n        }\n        return nativeRectangle;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var size = this._page.size;\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        if (this._isChanged) {\n            this._setQuadPoints(size);\n            this._dictionary.update('Rect', _updateBounds(this));\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1 && this._isChanged) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n        this._isChanged = false;\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width = 0;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics.drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics.drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    var defaultRect = [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height];\n                    var rect = this._setAppearance ? _updateBounds(this) : defaultRect;\n                    this._dictionary.update('Rect', rect);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        var margins;\n        if (this._page && this._page._isNew && this._page._pageSettings && this._page._pageSettings.margins) {\n            var margin = this._page._pageSettings.margins;\n            margins = { left: margin.left, top: margin.top, right: margin.right, bottom: margin.bottom };\n        }\n        else {\n            margins = { left: 0, top: 0, right: 0, bottom: 0 };\n        }\n        if (this.bounds.x !== 0 && this.bounds.y !== 0 && this.bounds.width !== 0 && this.bounds.height !== 0) {\n            this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n        var noofRect = this._quadPoints.length / 8;\n        var cropOrMediaBox = this._getMediaOrCropBox(this._page);\n        var isContainscropOrMediaBox = false;\n        if (!this._isLoaded && cropOrMediaBox && cropOrMediaBox.length > 3 && !this.flatten) {\n            var cropOrMediaBoxX = cropOrMediaBox[0];\n            var cropOrMediaBoxY = cropOrMediaBox[1];\n            if (cropOrMediaBoxX !== 0 || cropOrMediaBoxY !== 0) {\n                for (var i = 0; i < noofRect; i++) {\n                    var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0] + margins.left + cropOrMediaBoxX;\n                    var locationY = cropOrMediaBoxY + margins.top;\n                    textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[1 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[3 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                    textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n                }\n                isContainscropOrMediaBox = true;\n            }\n        }\n        if (!isContainscropOrMediaBox) {\n            for (var i = 0; i < noofRect; i++) {\n                var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[1 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[3 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                    this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n            }\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || ((!this._isLoaded || (this._page && this._page._isDuplicate)) && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            var dictionary_1 = this._dictionary.get('AP'); // eslint-disable-line\n            if (dictionary_1 && dictionary_1 instanceof _PdfDictionary) {\n                _removeDuplicateReference(dictionary_1, this._crossReference, 'N');\n            }\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._alterRotateBounds = true;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an appearance template for a rubber stamp annotation.\n     *\n     * @returns {PdfTemplate} Returns the appearance template of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRubberStampAnnotation.prototype.createTemplate = function () {\n        var template;\n        if (this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        template = new PdfTemplate();\n                        template._isExported = true;\n                        var templateDictionary = appearanceStream.dictionary;\n                        var matrix = templateDictionary.getArray('Matrix');\n                        var bounds = templateDictionary.getArray('BBox');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (bounds && bounds.length > 3) {\n                                var rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                template._size = [rectangle[2], rectangle[3]];\n                                template._templateOriginalSize = [rect.width, rect.height];\n                            }\n                        }\n                        else if (bounds) {\n                            templateDictionary.update('Matrix', [1, 0, 0, 1, -bounds[0], -bounds[1]]);\n                            template._size = [bounds[2], bounds[3]];\n                        }\n                        template._exportStream(dictionary, this._crossReference);\n                    }\n                }\n            }\n            else {\n                template = this._createRubberStampAppearance();\n            }\n        }\n        return template;\n    };\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        if (this._dictionary.has('AP') && this._isLoaded && !this._isRotated) {\n            this._parseStampAppearance();\n        }\n        else {\n            this._appearanceTemplate = this._createRubberStampAppearance();\n        }\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance || this._isRotated) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                isTransformBBox = this._parseStampAppearance();\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._parseStampAppearance = function () {\n        var isTransformBBox = false;\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                var isStamp = false;\n                if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                    var isRotated = false;\n                    var size = void 0;\n                    var rect = void 0;\n                    if (appearanceStream) {\n                        isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                            this.rotationAngle === PdfRotationAngle.angle0);\n                        if (!isRotated) {\n                            isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                this.rotationAngle === PdfRotationAngle.angle0);\n                        }\n                    }\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    isStamp = true;\n                    isTransformBBox = isRotated ? true : false;\n                    if (isTransformBBox) {\n                        var matrix = appearanceStream.dictionary.getArray('Matrix');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            var bounds = appearanceStream.dictionary.getArray('BBox');\n                            if (bounds && bounds.length > 3) {\n                                rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                size = [rectangle[2], rectangle[3]];\n                                this._appearanceTemplate._size = size;\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                    }\n                    else if (rect) {\n                        size = [rect.width, rect.height];\n                    }\n                }\n                if (!isStamp) {\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return isTransformBBox;\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this.icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (this._alterRotateBounds && typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        else {\n            this.rotateAngle = this._getRotationAngle();\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        this._dictionary.update('Rect', _updateBounds(this));\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._isContentUpdated = false;\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        _this._parsedXMLData = [];\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._lineEndingStyle = this._obtainLineEndingStyle();\n            }\n            else if (typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = PdfLineEndingStyle.none;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    var rcBrush = void 0;\n                    var rcColor = [];\n                    if (this._parsedXMLData.length > 0 && this._parsedXMLData[3]) {\n                        rcBrush = this._parsedXMLData[3];\n                        rcColor = rcBrush._color;\n                        this._textMarkUpColor = rcColor;\n                    }\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                this._updateStyle(this.font, value, this.textAlignment);\n            }\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            else if (this._dictionary.has('RC')) {\n                var rcAlignment = void 0;\n                if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                    rcAlignment = this._parsedXMLData[1];\n                    this._textAlignment = rcAlignment;\n                }\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('RC')) {\n            annot._parsedXMLData = annot._parseXMLData(dictionary.get('RC'));\n        }\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            this._cropBoxValueX = cropOrMediaBox[0];\n            this._cropBoxValueY = cropOrMediaBox[1];\n        }\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            this._dictionary.update('Rect', _updateBounds(this));\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (this._dictionary.has('RC') && this._isContentUpdated) {\n            this._updateStyle(this.font, this._textMarkUpColor, this.textAlignment);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var box = template._content.dictionary.getArray('BBox');\n        var angle = this._getRotationAngle();\n        if (box && angle !== null && typeof angle !== 'undefined') {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle_1 = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle_1, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        if (text) {\n            this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        }\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        if (this.flatten) {\n            this._bounds = { x: bounds[0], y: (this._page.size[1] - (bounds[1] + bounds[3])), width: bounds[2], height: bounds[3] };\n        }\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            var rcFont = void 0;\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[0]) {\n                rcFont = this._parsedXMLData[0];\n            }\n            if (rcFont instanceof PdfStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n            else if (rcFont instanceof PdfCjkStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._updateStyle = function (font, color, alignment) {\n        var ds = 'font:' +\n            font._metrics._name +\n            ' ' +\n            font.size +\n            'pt;style:' + _reverseMapPdfFontStyle(font.style) +\n            ';color:' +\n            this._colorToHex(color);\n        this._dictionary.update('DS', ds);\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font:'\n            + font._metrics._name + ' ' + font.size + 'pt;font-weight:'\n            + (font.isBold ? 'bold' : 'normal') + ';color:' + this._colorToHex(color) + '\"><p dir=\"ltr\">';\n        var textAlignment;\n        var alignmentText;\n        if (alignment !== null && typeof alignment !== 'undefined') {\n            switch (alignment) {\n                case PdfTextAlignment.left:\n                    alignmentText = 'left';\n                    break;\n                case PdfTextAlignment.center:\n                    alignmentText = 'center';\n                    break;\n                case PdfTextAlignment.right:\n                    alignmentText = 'right';\n                    break;\n                case PdfTextAlignment.justify:\n                    alignmentText = 'justify';\n                    break;\n            }\n            if (alignmentText) {\n                textAlignment = 'text-align:' + alignmentText + ';';\n            }\n        }\n        var decorationText = '';\n        var textDecoration;\n        var italic = 'font-style:italic';\n        var bold = 'font-style:bold';\n        if (font.isUnderline) {\n            decorationText = font.isStrikeout ? 'text-decoration:word line-through' : 'text-decoration:word';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else if (font.isStrikeout) {\n            decorationText = 'text-decoration:line-through';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else {\n            if (font.isItalic) {\n                decorationText += italic;\n            }\n            else if (font.isBold) {\n                decorationText += bold;\n            }\n        }\n        if (decorationText !== '') {\n            textDecoration = '<span style = \"' + textAlignment + decorationText + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        else {\n            textDecoration = '<span style = \"' + textAlignment + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        this._dictionary.update('RC', body + textDecoration + '</p></body>');\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[2] + rectangle[0]), -rectangle[1], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            if (parameter.borderWidth > 0 && !this._isAllRotation) {\n                rectangle = parameter.bounds;\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, rectangle, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new PdfPath();\n        graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path.addRectangle((this.bounds.x + this._cropBoxValueX) - 2, ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x + this._cropBoxValueX,\n                ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)),\n                this.bounds.width,\n                this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX,\n                    (size[1] + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[1][1],\n            this.calloutLines[0][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        var isContent = this._dictionary.has('Contents');\n        if (isContent) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC') && !isContent && text === null) {\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                var rcAlignment = this._parsedXMLData[1];\n                textAlignment = rcAlignment;\n                hasAlignment = true;\n            }\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (!this._isLoaded) {\n            pointY = this._page.size[1] - pointY;\n        }\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics.drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        if (typeof this.text === 'string' && this.text !== null) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        this._updateStyle(this.font, this.textMarkUpColor, this._textAlignment);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    PdfFreeTextAnnotation.prototype._parseXMLData = function (rcContent) {\n        var _this = this;\n        var fontStyle = PdfFontStyle.regular;\n        var fontCollection = []; // eslint-disable-line\n        var brush = null;\n        var fontName = '';\n        var content = rcContent;\n        var contentText = this._dictionary.has('Contents') ? this._dictionary.get('Contents') : '';\n        var hasSymbol = false;\n        var xdocument; // eslint-disable-line\n        hasSymbol = contentText.split('').some(function (char) { return _this._isSymbol(char); });\n        if (!hasSymbol) {\n            if (content !== null && typeof content !== 'undefined') {\n                xdocument = (new DOMParser()).parseFromString(content, 'text/xml');\n                var root = xdocument.documentElement;\n                var nameSpaceURI = (root && root.namespaceURI) || '';\n                if (root) {\n                    var styleMap = this._collectStyles(root);\n                    if (styleMap.size > 0) {\n                        var input = this._extractStylesToInput(styleMap);\n                        var fontDetails = this._getFontDetails(input, this.font.size, this.textAlignment, fontStyle, brush); // eslint-disable-line\n                        var _a = this._updateFontProperties(fontDetails, fontName, fontStyle, brush), updatedFontName = _a.fontName, updatedFontStyle = _a.fontStyle, updatedBrush = _a.brush;\n                        var obtainFont = _mapFont(updatedFontName, this.font._size, updatedFontStyle, this);\n                        fontCollection = this._fontCollection(fontCollection, obtainFont, nameSpaceURI, this._textAlignment, updatedBrush);\n                    }\n                }\n            }\n        }\n        this._parsedXMLData = fontCollection;\n        return fontCollection;\n    };\n    PdfFreeTextAnnotation.prototype._collectStyles = function (root, styleMap) {\n        if (styleMap === void 0) { styleMap = new Map(); }\n        if (!root) {\n            return styleMap;\n        }\n        var nodeStyle = null;\n        try {\n            nodeStyle = window.getComputedStyle(root);\n        }\n        catch (error) {\n            return styleMap;\n        }\n        styleMap.set(root.tagName.toLowerCase(), nodeStyle);\n        var childNode = root.firstElementChild;\n        while (childNode) {\n            this._collectStyles(childNode, styleMap);\n            childNode = childNode.nextElementSibling;\n        }\n        return styleMap;\n    };\n    PdfFreeTextAnnotation.prototype._extractStylesToInput = function (styleMap) {\n        var input = [];\n        styleMap.forEach(function (styleValue) {\n            if (styleValue && styleValue.length > 0) { // Check if styleValue is valid\n                for (var i = 0; i < styleValue.length; i++) {\n                    var propertyName = styleValue.item(Number.parseInt(i.toString(), 10));\n                    if (propertyName !== null && propertyName !== undefined) {\n                        var propertyValue = styleValue.getPropertyValue(propertyName);\n                        input.push(propertyName + \": \" + propertyValue);\n                    }\n                }\n            }\n        });\n        return input;\n    };\n    PdfFreeTextAnnotation.prototype._isSymbol = function (char) {\n        var code = char.charCodeAt(0);\n        if (char === '_' || char === '+' || char === '-' || char === '*' || char === '=') {\n            return false;\n        }\n        return ((code >= 0x20A0 && code <= 0x20CF) ||\n            (code >= 0x2200 && code <= 0x22FF) ||\n            (code >= 0x2A00 && code <= 0x2AFF) ||\n            (code >= 0x2100 && code <= 0x214F) ||\n            (code >= 0x2300 && code <= 0x23FF) ||\n            (code === 0x2B50));\n    };\n    PdfFreeTextAnnotation.prototype._updateFontProperties = function (fontDetails, fontName, fontStyle, brush) {\n        var _this = this;\n        fontDetails.forEach(function (value, property) {\n            switch (property) {\n                case 'font-family':\n                    fontName = value;\n                    break;\n                case 'font-size':\n                    _this.font._size = parseFloat(value);\n                    break;\n                case 'font-style':\n                case 'font-weight':\n                case 'text-decoration':\n                    fontStyle = _this._obtainFontStyle(value, property);\n                    break;\n                case 'text-align':\n                    _this._textAlignment = _this._parseTextAlignment(value);\n                    break;\n                case 'color':\n                    brush = value;\n                    break;\n                case 'xfa-spacerun':\n                    _this._rcText = value;\n                    break;\n            }\n        });\n        return { fontName: fontName, fontStyle: fontStyle, brush: brush };\n    };\n    PdfFreeTextAnnotation.prototype._obtainFontStyle = function (value, property) {\n        var styleValue = parseFloat(value);\n        switch (property) {\n            case 'font-style':\n                return styleValue === 0 ? PdfFontStyle.regular :\n                    styleValue === 1 ? PdfFontStyle.bold :\n                        styleValue === 2 ? PdfFontStyle.italic :\n                            styleValue === 8 ? PdfFontStyle.strikeout :\n                                styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            case 'font-weight':\n                return styleValue === 1 ? PdfFontStyle.bold : PdfFontStyle.regular;\n            case 'text-decoration':\n                return styleValue === 8 ? PdfFontStyle.strikeout :\n                    styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            default:\n                return PdfFontStyle.regular;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlignment = function (value) {\n        var alignmentValue = parseFloat(value);\n        switch (alignmentValue) {\n            case 0: return PdfTextAlignment.left;\n            case 1: return PdfTextAlignment.center;\n            case 2: return PdfTextAlignment.right;\n            case 3: return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getFontDetails = function (input, fontSize, textAlignment, fontStyle, brush) {\n        var _this = this;\n        var fontDetails = new Map(); // eslint-disable-line\n        input.forEach(function (element) {\n            var _a = element.split(':').map(function (item) { return item.trim(); }), property = _a[0], value = _a[1];\n            if (property && value) {\n                switch (property.toLowerCase()) {\n                    case 'font':\n                        _this._parseFont(value, fontDetails);\n                        break;\n                    case 'font-size':\n                        fontSize = _this._parseFontSize(value);\n                        fontDetails.set('font-size', fontSize);\n                        break;\n                    case 'font-weight':\n                        fontStyle = _this._parseFontWeight(value, fontStyle);\n                        fontDetails.set('font-weight', fontStyle);\n                        break;\n                    case 'font-family':\n                        fontDetails.set('font-family', _this._parseFontFamily(value));\n                        break;\n                    case 'color':\n                        brush = new PdfBrush(_this._rgbStringToArray(value));\n                        fontDetails.set('color', brush);\n                        break;\n                    case 'font-style':\n                        fontStyle = _this._parseFontStyle(value, fontStyle);\n                        fontDetails.set('font-style', fontStyle);\n                        break;\n                    case 'text-decoration':\n                        fontStyle = _this._parseTextDecoration(value, fontStyle);\n                        fontDetails.set('text-decoration', fontStyle);\n                        break;\n                    case 'text-align':\n                        textAlignment = _this._parseTextAlign(value);\n                        fontDetails.set('text-align', textAlignment);\n                        break;\n                    case 'xfa-spacerun':\n                        _this._rcText = value.length > 1 && value.includes('yes') ? _this._rcText + ' ' : _this._rcText;\n                        fontDetails.set('xfa-spacerun', _this._rcText);\n                        break;\n                }\n            }\n        });\n        return fontDetails;\n    };\n    PdfFreeTextAnnotation.prototype._parseFont = function (value, fontDetails) {\n        var fontParts = value.split(' ').map(function (item) { return item.trim(); });\n        var fontName = '';\n        fontParts.forEach(function (part) {\n            if (part && !part.endsWith('pt')) {\n                fontName += part + ' ';\n            }\n            else if (part.endsWith('pt')) {\n                fontDetails.set('font-size', parseFloat(part.replace('pt', '').replace(',', '.').trim()));\n            }\n        });\n        fontDetails.set('font-family', fontName.trim().replace(/['\",]/g, ''));\n    };\n    PdfFreeTextAnnotation.prototype._parseFontSize = function (value) {\n        if (value.endsWith('pt')) {\n            return parseFloat(value.replace('pt', '').replace(',', '.').trim());\n        }\n        return 0;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontWeight = function (value, fontStyle) {\n        if (value.includes('bold')) {\n            fontStyle |= PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontFamily = function (value) {\n        return value.replace(/^'+|'+$/g, '').trim();\n    };\n    PdfFreeTextAnnotation.prototype._parseFontStyle = function (value, fontStyle) {\n        if (value.includes('normal') || value.includes('regular')) {\n            return PdfFontStyle.regular;\n        }\n        if (value.includes('underline')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('strikeout')) {\n            return PdfFontStyle.strikeout;\n        }\n        if (value.includes('italic')) {\n            return PdfFontStyle.italic;\n        }\n        if (value.includes('bold')) {\n            return PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextDecoration = function (value, fontStyle) {\n        if (value.includes('word')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('line-through')) {\n            return PdfFontStyle.strikeout;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlign = function (value) {\n        switch (value.trim().toLowerCase()) {\n            case 'left': return PdfTextAlignment.left;\n            case 'right': return PdfTextAlignment.right;\n            case 'center': return PdfTextAlignment.center;\n            case 'justify': return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._rgbStringToArray = function (rgbString) {\n        var regex = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n        var match = rgbString.match(regex);\n        if (match) {\n            var r = parseInt(match[1], 10);\n            var g = parseInt(match[2], 10);\n            var b = parseInt(match[3], 10);\n            return [r, g, b];\n        }\n        else {\n            throw new Error('Invalid RGB string format');\n        }\n    };\n    PdfFreeTextAnnotation.prototype._fontCollection = function (fontCollection, font, nameSpaceURI, alignment, brush) {\n        return fontCollection.concat([font, alignment, nameSpaceURI, brush]);\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._page.annotations.remove(this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                if (appearance && appearance instanceof _PdfDictionary) {\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    _removeDuplicateReference(appearance, this._crossReference, 'R');\n                }\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && _isNullOrUndefined(this.overlayText) && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.top);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, this.bounds.width - this.border.width, this.bounds.height - this.border.width];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, format);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isTransparentBorderColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor();\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            if (this._page && this._page._isNew && this._page._pageSettings) {\n                this._dictionary.update('Rect', _updateBounds(this));\n            }\n            else {\n                this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics.drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded && !this._page._isNew) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._parseBorderColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor)) {\n            if (typeof this._borderColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        this._borderColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            value = this._borderColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._updateBorderColor = function (value) {\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._field) {\n                    this._setCheckedStatus(value);\n                    this._field._setAppearance = true;\n                }\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._setCheckedStatus = function (value) {\n        var check = value;\n        var fieldValue = this._getItemValue(this._dictionary);\n        this._unCheckOthers(this, fieldValue, value);\n        if (check) {\n            if (!fieldValue) {\n                fieldValue = 'Yes';\n            }\n            this._field._dictionary.update('V', fieldValue);\n            this._dictionary.update('AS', _PdfName.get(fieldValue));\n            this._dictionary.update('V', _PdfName.get(fieldValue));\n        }\n        else if (this._field._dictionary) {\n            if (this._field._dictionary.has('V')) {\n                var v = this._field._dictionary.get('V');\n                if (v && v.name === fieldValue) {\n                    delete this._field._dictionary._map.V;\n                }\n            }\n            this._field._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    PdfStateItem.prototype._unCheckOthers = function (child, value, isChecked) {\n        if (!this._field._isUpdating) {\n            this._field._isUpdating = true;\n            var count = this._field.itemsCount;\n            for (var i = 0; i < count; ++i) {\n                var item = this._field.itemAt(i);\n                if (item) {\n                    if (item !== child) {\n                        item.checked = ((this._getItemValue(item._dictionary) === value) && isChecked);\n                    }\n                    else if (!item.checked) {\n                        item.checked = true;\n                    }\n                }\n            }\n        }\n    };\n    PdfStateItem.prototype._getItemValue = function (dictionary) {\n        var itemValue = '';\n        if (dictionary && dictionary.has('AS')) {\n            var asValue = dictionary.get('AS');\n            if (asValue && asValue.name !== 'Off') {\n                itemValue = 'Off';\n            }\n        }\n        if (itemValue === '') {\n            if (dictionary && dictionary.has('AP')) {\n                var apDictionary = dictionary.get('AP');\n                if (apDictionary && apDictionary.has('N')) {\n                    var normalAppearance = apDictionary.get('N');\n                    var keyList_1 = [];\n                    normalAppearance.forEach(function (key, value) {\n                        keyList_1.push(key);\n                    });\n                    if (keyList_1.length > 0) {\n                        for (var i = 0; i < keyList_1.length; i++) {\n                            var key = keyList_1[Number.parseInt(i.toString(), 10)];\n                            if (key && key !== 'Off') {\n                                itemValue = key;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return itemValue;\n    };\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics.drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview, _isNullOrUndefined } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        if (_isNullOrUndefined(array)) {\n            this._annotations = array;\n        }\n        else {\n            this._annotations = [];\n        }\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (dictionary && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (dictionary && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page && this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation && annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation && annotation._ref) {\n            var index = this._annotations.lastIndexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation && annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary && dictionary.has('Subtype') && this._page !== null && typeof this._page !== 'undefined') {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (this._page) {\n            if (dictionary && dictionary.has('A')) {\n                var remote = dictionary.get('A');\n                if (remote && remote.has('S')) {\n                    var link = remote.get('S');\n                    if (link && link.name === 'GoToR' && remote.has('F')) {\n                        annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                    }\n                    else if (link && link.name === 'URI') {\n                        annot = PdfUriAnnotation._load(this._page, dictionary);\n                    }\n                }\n            }\n            else {\n                annot = PdfUriAnnotation._load(this._page, dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary && annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        if (annotation) {\n            this._annotation = annotation;\n        }\n        this._isReview = isReview;\n        if (annotation && this._annotation._isLoaded || annotation._page) {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _isNullOrUndefined, _obtainDestination, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmarkBase.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('Count')) {\n                return (this._dictionary.get('Count') >= 0);\n            }\n            else {\n                return this._isExpanded;\n            }\n        },\n        /**\n         * Sets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @param {boolean} value whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the boolean flag indicating whether the bookmark is expanded or not\n         * bookmark.isExpanded = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isExpanded = value;\n            if (this.count > 0 && this._dictionary) {\n                this._dictionary.update('Count', value ? this._bookMarkList.length : (-this._bookMarkList.length));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (_isNullOrUndefined(this._bookMarkList) && this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype.add = function (title, index) {\n        var bookmark;\n        if (this._dictionary) {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.update('Parent', this._reference);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, dictionary);\n            bookmark = new PdfBookmark(dictionary, this._crossReference);\n            bookmark._reference = reference;\n            bookmark.title = title;\n            if (typeof index === 'undefined') {\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                }\n                else {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                }\n                this._bookMarkList.push(bookmark);\n            }\n            else {\n                if (index < 0 || index > this.count) {\n                    throw new Error('Index out of range');\n                }\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === this.count) {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === 0) {\n                    var first = this.at(0);\n                    this._dictionary.update('First', reference);\n                    if (first && first._reference) {\n                        dictionary.update('Next', first._reference);\n                        first._dictionary.update('Prev', reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n                else {\n                    var next = this.at(index);\n                    var prev = this.at(index - 1);\n                    if (prev && prev._reference && next && next._reference) {\n                        dictionary.update('Prev', prev._reference);\n                        prev._dictionary.update('Next', reference);\n                        next._dictionary.update('Prev', reference);\n                        dictionary.update('Next', next._reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n            }\n            this._updateCount();\n        }\n        return bookmark;\n    };\n    PdfBookmarkBase.prototype.remove = function (value) {\n        if (typeof value === 'string') {\n            for (var i = this._bookMarkList.length - 1; i >= 0; i--) {\n                var bookmark = this.at(i);\n                if (bookmark.title === value) {\n                    this.remove(i);\n                }\n                else if (bookmark.count > 0) {\n                    bookmark.remove(value);\n                }\n            }\n        }\n        else {\n            if (value >= 0 && value < this.count) {\n                if (this.count === 1) {\n                    this._removeFirst(this._dictionary);\n                    this._removeLast(this._dictionary);\n                    this._removeCount(this._dictionary);\n                    this._bookMarkList = [];\n                }\n                else {\n                    if (value === 0) {\n                        var next = this.at(value + 1);\n                        if (this._dictionary && next && next._reference) {\n                            this._removePrevious(next._dictionary);\n                            this._dictionary.update('First', next._reference);\n                        }\n                    }\n                    else if (value === this.count - 1) {\n                        var prev = this.at(value - 1);\n                        if (this._dictionary && prev && prev._reference) {\n                            this._removeNext(prev._dictionary);\n                            this._dictionary.update('Last', prev._reference);\n                        }\n                    }\n                    else {\n                        var prev = this.at(value - 1);\n                        var next = this.at(value + 1);\n                        if (prev && prev._reference && next && next._reference) {\n                            prev._dictionary.update('Next', next._reference);\n                            next._dictionary.update('Prev', prev._reference);\n                        }\n                    }\n                    this._updateBookmarkList(value);\n                    if (this._dictionary) {\n                        this._updateCount();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Removes all the bookmark from the collection.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Remove all the bookmark from the collection.\n     * bookmarks.clear();\n     * // Get count after removal of all outlines.\n     * let count: number = bookmarks.count;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.clear = function () {\n        this._removeFirst(this._dictionary);\n        this._removeLast(this._dictionary);\n        this._removeCount(this._dictionary);\n        this._bookMarkList = [];\n    };\n    PdfBookmarkBase.prototype._removeFirst = function (dictionary) {\n        if (dictionary && dictionary.has('First')) {\n            delete dictionary._map.First;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeLast = function (dictionary) {\n        if (dictionary && dictionary.has('Last')) {\n            delete dictionary._map.Last;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeNext = function (dictionary) {\n        if (dictionary && dictionary.has('Next')) {\n            delete dictionary._map.Next;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removePrevious = function (dictionary) {\n        if (dictionary && dictionary.has('Prev')) {\n            delete dictionary._map.Prev;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeCount = function (dictionary) {\n        if (dictionary && dictionary.has('Count')) {\n            delete dictionary._map.Count;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._updateBookmarkList = function (index, bookmark) {\n        var updatedList = [];\n        if (typeof bookmark === 'undefined') {\n            for (var i = 0; i < this.count; i++) {\n                var entry = this._bookMarkList[Number.parseInt(i.toString(), 10)];\n                if (i !== index) {\n                    updatedList.push(entry);\n                }\n                else {\n                    var reference = entry._reference;\n                    if (reference && this._crossReference._cacheMap.has(reference)) {\n                        this._crossReference._cacheMap.get(reference)._updated = false;\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < this.count; i++) {\n                if (i === index) {\n                    updatedList.push(bookmark);\n                }\n                updatedList.push(this._bookMarkList[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this._bookMarkList = updatedList;\n    };\n    PdfBookmarkBase.prototype._updateCount = function () {\n        if (this.isExpanded || !this._dictionary.has('Count')) {\n            this._dictionary.update('Count', this._bookMarkList.length);\n        }\n        else {\n            this._dictionary.update('Count', -this._bookMarkList.length);\n        }\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var firstBookmark = this._getBookmark(this);\n        var isBookmark = (firstBookmark) ? true : false;\n        while (isBookmark && firstBookmark._dictionary) {\n            this._bookMarkList.push(firstBookmark);\n            firstBookmark = firstBookmark._next;\n            isBookmark = (firstBookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getBookmark = function (bookmarkBase, isFirst) {\n        if (isFirst === void 0) { isFirst = true; }\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has(isFirst ? 'First' : 'Last')) {\n            var reference = bookmarkBaseDictionary._get(isFirst ? 'First' : 'Last');\n            if (_isNullOrUndefined(reference)) {\n                var bookMarkDictionary = this._crossReference._fetch(reference);\n                if (bookMarkDictionary) {\n                    bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n                    bookMark._reference = reference;\n                }\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (_this._dictionary && !_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._destination) {\n                var namedDestination = this._obtainNamedDestination();\n                if (namedDestination === null || typeof namedDestination === 'undefined') {\n                    this._destination = _obtainDestination(this._dictionary, 'Dest');\n                }\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Set the destination\n         * bookmark.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination.\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        /**\n         * Sets the named destination.\n         *\n         * @param {PdfNamedDestination} value Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._namedDestination !== value && this._dictionary) {\n                this._namedDestination = value;\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('D', value.title);\n                dictionary.update('S', _PdfName.get('GoTo'));\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._dictionary.update('A', reference);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title.\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                if (this._dictionary && this._dictionary.has('Title')) {\n                    this._title = this._dictionary.get('Title');\n                }\n                else {\n                    this._title = '';\n                }\n            }\n            return this._title;\n        },\n        /**\n         * Sets the bookmark title.\n         *\n         * @param {string} value Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark title\n         * bookmark.title = 'Syncfusion';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._title = value;\n            if (this._dictionary) {\n                this._dictionary.update('Title', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color.\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary && this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        /**\n         * Sets the bookmark color.\n         *\n         * @param {number[]} value Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark color\n         * bookmark.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._color = value;\n            if (this._dictionary) {\n                this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                    Number.parseFloat((value[1] / 255).toFixed(7)),\n                    Number.parseFloat((value[2] / 255).toFixed(7))]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the text style.\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        /**\n         * Sets the text style.\n         *\n         * @param {PdfTextStyle} value Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the textStyle\n         * bookmark.textStyle = PdfTextStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textStyle = value;\n            this._updateTextStyle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary && this._dictionary.has('Next')) {\n                var reference = this._dictionary._get('Next');\n                if (_isNullOrUndefined(reference)) {\n                    var dictionary = this._crossReference._fetch(reference);\n                    if (dictionary) {\n                        nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                        nextBookmark._reference = reference;\n                    }\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._updateTextStyle = function (value) {\n        if (value === PdfTextStyle.regular) {\n            if (this._dictionary && this._dictionary.has('F')) {\n                delete this._dictionary._map.F;\n            }\n        }\n        else if (this._dictionary) {\n            this._dictionary.update('F', value);\n        }\n    };\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary && this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary) {\n                if (dictionary.has('A')) {\n                    var action = dictionary.get('A');\n                    if (action && action.has('D')) {\n                        destination = action.get('D');\n                    }\n                }\n                else if (dictionary.has('Dest')) {\n                    destination = dictionary.get('Dest');\n                }\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    function PdfNamedDestination(element, crossReference) {\n        if (typeof element === 'string') {\n            this._initialize();\n            this.title = element;\n        }\n        else {\n            this._dictionary = element;\n            this._crossReference = crossReference;\n        }\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title && this._dictionary) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfNamedDestination.prototype._initialize = function () {\n        this._dictionary = new _PdfDictionary();\n        this._dictionary.update('S', _PdfName.get('GoTo'));\n    };\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        this._findDestination(destinationArray[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._findDestination = function (destination) {\n        if (destination) {\n            if (destination.has('Names')) {\n                this._addCollection(destination);\n            }\n            else if (destination.has('Kids')) {\n                var kids = destination.getArray('Kids'); // eslint-disable-line\n                if (kids && Array.isArray(kids) && kids.length > 0) {\n                    for (var i = 0; i < kids.length; i++) {\n                        this._findDestination(kids[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    };\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements && elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference && reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (reference_1 && destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty, _isNullOrUndefined } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfTemplate } from './graphics/pdf-template';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._isNew = false;\n        this._isDuplicate = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                        var widgets_1;\n                        if (this._crossReference._document._catalog._catalogDictionary.has('AcroForm')) {\n                            widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        }\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n                var cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n                var width = 0;\n                var height = 0;\n                var rotate = this._pageDictionary && this._pageDictionary.has('Rotate')\n                    ? _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent')\n                    : 0;\n                if (cBox && rotate !== null && typeof rotate !== 'undefined') {\n                    width = cBox[2] - cBox[0];\n                    height = cBox[3] - cBox[1];\n                    var isValidCropBox = !(mBox && (mBox[2] - mBox[0]) < width);\n                    if (!(((rotate === 0 || rotate === 180) && (width < height)) ||\n                        ((rotate === 90 || rotate === 270) && (width > height) || isValidCropBox)) && (rotate === 0 && mBox)) {\n                        width = mBox[2] - mBox[0];\n                        height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                    }\n                }\n                else if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                else {\n                    this._pageDictionary.update('MediaBox', [0, 0, 612, 792]);\n                    width = 612;\n                    height = 792;\n                }\n                this._size = [Math.abs(width), Math.abs(height)];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n                if (angle < 0) {\n                    angle += 360;\n                }\n                this._rotation = (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n            }\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the rotation angle of the PDF page\n         * page.rotate = PdfRotationAngle.angle90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isNew) {\n                this._rotation = value;\n                var rotate = Math.floor(this._rotation) * 90;\n                if (rotate >= 360) {\n                    rotate = rotate % 360;\n                }\n                this._pageDictionary.update('Rotate', rotate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            var annotsRef = this._pageDictionary.getRaw('Annots'); // eslint-disable-line\n            annots = this._getProperty('Annots');\n            if (annotsRef && annotsRef instanceof _PdfReference) {\n                delete this._pageDictionary._map.Annots;\n                this._pageDictionary.update('Annots', annots);\n            }\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        if (!this._isNew) {\n            var rotation = this.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._pageDictionary.has('Rotate')) {\n                    rotate = this._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._g._clipBounds;\n                if (rotate === 90) {\n                    this._g.translateTransform(0, size[1]);\n                    this._g.rotateTransform(-90);\n                    this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._g.translateTransform(size[0], size[1]);\n                    this._g.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._g.translateTransform(size[0], 0);\n                    this._g.rotateTransform(-270);\n                    this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._isNew && this._pageSettings) {\n            var clipBounds = this._getActualBounds(this._pageSettings);\n            this._g._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._getActualBounds = function (pageSettings) {\n        var actualSize = pageSettings._getActualSize();\n        return [pageSettings.margins.left, pageSettings.margins.top, actualSize[0], actualSize[1]];\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj && obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary) {\n            if (this._pageDictionary.has('CropBox')) {\n                box = this._pageDictionary.getArray('CropBox');\n            }\n            else if (this._pageDictionary.has('MediaBox')) {\n                box = this._pageDictionary.getArray('MediaBox');\n            }\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary && this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    Object.defineProperty(PdfPage.prototype, \"_contentTemplate\", {\n        get: function () {\n            this._loadContents();\n            this._fetchResources();\n            var array;\n            var list = [];\n            var count = this._contents.length;\n            list.push(new Uint8Array([32, 113, 32, 10]));\n            for (var i = 0; i < count; i++) {\n                var reference = this._contents[Number.parseInt(i.toString(), 10)];\n                var base = this._crossReference._fetch(reference); // eslint-disable-line\n                if (base) {\n                    if (base instanceof _PdfContentStream) {\n                        array = new Uint8Array(base._bytes);\n                    }\n                    else if (base instanceof _PdfBaseStream) {\n                        array = base.getBytes();\n                    }\n                    if (array) {\n                        list.push(array);\n                        list.push(new Uint8Array([13, 10]));\n                    }\n                }\n            }\n            list.push(new Uint8Array([32, 81, 32, 10]));\n            list.push(new Uint8Array([13, 10]));\n            var targetArray = this._combineIntoSingleArray(list);\n            var targetStream = new _PdfContentStream(Array.from(targetArray));\n            var template = new PdfTemplate(targetStream, this._crossReference);\n            template._content.dictionary.set('Resources', this._resourceObject);\n            if (this.cropBox[0] > 0 || this.cropBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.cropBox);\n                template._size = [this.cropBox[0], this.cropBox[1]];\n            }\n            else if (this.mediaBox[0] > 0 || this.mediaBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.mediaBox);\n                template._size = [this.mediaBox[0], this.mediaBox[1]];\n            }\n            else {\n                template._content.dictionary.set('BBox', [0, 0, this.size[0], this.size[1]]);\n                template._size = [this.size[0], this.size[1]];\n            }\n            return template;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._combineIntoSingleArray = function (arrays) {\n        var totalLength = arrays.reduce(function (length, arr) { return length + arr.length; }, 0);\n        var targetArray = new Uint8Array(totalLength);\n        var offset = 0;\n        arrays.forEach(function (sourceArray) {\n            targetArray.set(sourceArray, offset);\n            offset += sourceArray.length;\n        });\n        return targetArray;\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        if (page && page._pageDictionary) {\n            var element = page._pageDictionary;\n            if (typeof element !== 'undefined' && element !== null) {\n                this._array.push(this._page._ref);\n            }\n            switch (this._destinationMode) {\n                case PdfDestinationMode.location:\n                    this._array.push(_PdfName.get('XYZ'));\n                    if (typeof page !== 'undefined' && page !== null) {\n                        this._array.push(this._location[0]);\n                        this._array.push(this._page.graphics._size[1] - this._location[1]);\n                    }\n                    else {\n                        this._array.push(0);\n                        this._array.push(0);\n                    }\n                    this._array.push(this._zoom);\n                    break;\n                case PdfDestinationMode.fitToPage:\n                    this._array.push(_PdfName.get('Fit'));\n                    break;\n                case PdfDestinationMode.fitR:\n                    this._array.push(_PdfName.get('FitR'));\n                    this._array.push(this._destinationBounds[0]);\n                    this._array.push(this._destinationBounds[1]);\n                    this._array.push(this._destinationBounds[2]);\n                    this._array.push(this._destinationBounds[3]);\n                    break;\n                case PdfDestinationMode.fitH:\n                    this._array.push(_PdfName.get('FitH'));\n                    this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                    break;\n            }\n            if (this._parent) {\n                this._parent._dictionary.set(this._parent instanceof PdfNamedDestination ? 'D' : 'Dest', this._array);\n                this._parent._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    function _ImageDecoder() {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n    }\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count, stream) {\n        if (stream && Array.isArray(stream)) {\n            var result = 0;\n            if (count <= stream.length && stream.length - offset >= count) {\n                for (var i = 0; i < count; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = stream[Number.parseInt(offset.toString(), 10)];\n                    offset++;\n                    result++;\n                }\n            }\n            return { 'outputBuffer': buffer, 'offset': offset, 'length': result };\n        }\n        else {\n            for (var index = offset; index < count; index++) {\n                var position = this._position;\n                buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n                this._position++;\n            }\n        }\n    };\n    _ImageDecoder.prototype._readString = function (length) {\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += String.fromCharCode(this._readByte());\n        }\n        return result;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._readUnsigned32 = function (offset) {\n        var i1 = this._getBuffer(offset + 3);\n        var i2 = this._getBuffer(offset + 2);\n        var i3 = this._getBuffer(offset + 1);\n        var i4 = this._getBuffer(offset);\n        return i1 | (i2 << 8) | (i3 << 16) | (i4 << 24);\n    };\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _JpegDecoder = /** @class */ (function (_super) {\n    __extends(_JpegDecoder, _super);\n    /**\n     * Initializes a new instance of the `_JpegDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _JpegDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._initialize();\n        return _this;\n    }\n    Object.defineProperty(_JpegDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _JpegDecoder.prototype._initialize = function () {\n        this._format = _ImageFormat.jpeg;\n        this._readHeader();\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _JpegDecoder.prototype._readHeader = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _JpegDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _JpegDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _JpegDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _JpegDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _JpegDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _JpegDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    return _JpegDecoder;\n}(_ImageDecoder));\nexport { _JpegDecoder };\n","export var _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nexport var _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n","import { _copyRange } from './../utils';\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                _copyRange(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            _copyRange(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        _copyRange(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\nexport { _DecompressedOutput };\n","import { _toUnsigned } from './../utils';\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return (_toUnsigned(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = _toUnsigned(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\nexport { _InBuffer };\n","import { _toUnsigned, _toSigned16 } from './../utils';\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = _toSigned16(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = _toSigned16(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = _toSigned16(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = _toSigned16(-avail);\n                            value = _toSigned16(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = _toSigned16(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = _toUnsigned((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\nexport { _HuffmanTree };\n","import { _InflaterState, _BlockType } from './enum';\nimport { _DecompressedOutput } from './decompressed-output';\nimport { _InBuffer } from './in-buffer';\nimport { _HuffmanTree } from './huffman-tree';\nimport { _toUnsigned, _copyRange } from './../utils';\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _DecompressedOutput();\n        this._input = new _InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_HuffmanTree._maxLengthTree + _HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _InflaterState.done || this._inflaterState === _InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _InflaterState.readingBType;\n        }\n        if (this._inflaterState === _InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _BlockType.dynamicType) {\n                this._inflaterState = _InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _BlockType.staticType) {\n                this._llTree = new _HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _InflaterState.decodeTop;\n            }\n            else if (this._blockType === _BlockType.unCompressedType) {\n                this._inflaterState = _InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.unCompressedByte1:\n                case _InflaterState.unCompressedByte2:\n                case _InflaterState.unCompressedByte3:\n                case _InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = _toUnsigned(bits, 8);\n        if (this._inflaterState === _InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if (_toUnsigned(this._bLength, 16) !== _toUnsigned((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write(_toUnsigned(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingTcBefore:\n            case _InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_HuffmanTree._maxLengthTree).fill(0);\n        _copyRange(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_HuffmanTree._maxDepthTree).fill(0);\n        _copyRange(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = _toUnsigned(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = _toUnsigned(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = _toUnsigned(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _BlockType.unCompressedType) {\n            return _BlockType.unCompressedType;\n        }\n        else if (type === _BlockType.staticType) {\n            return _BlockType.staticType;\n        }\n        else {\n            return _BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _InflaterState.readingHeader;\n            case 2:\n                return _InflaterState.readingBFinal;\n            case 3:\n                return _InflaterState.readingBType;\n            case 4:\n                return _InflaterState.readingNlCodes;\n            case 5:\n                return _InflaterState.readingNdCodes;\n            case 6:\n                return _InflaterState.readingCodes;\n            case 7:\n                return _InflaterState.readingClCodes;\n            case 8:\n                return _InflaterState.readingTcBefore;\n            case 9:\n                return _InflaterState.readingTcAfter;\n            case 10:\n                return _InflaterState.decodeTop;\n            case 11:\n                return _InflaterState.iLength;\n            case 12:\n                return _InflaterState.fLength;\n            case 13:\n                return _InflaterState.dCode;\n            case 15:\n                return _InflaterState.unCompressedAligning;\n            case 16:\n                return _InflaterState.unCompressedByte1;\n            case 17:\n                return _InflaterState.unCompressedByte2;\n            case 18:\n                return _InflaterState.unCompressedByte3;\n            case 19:\n                return _InflaterState.unCompressedByte4;\n            case 20:\n                return _InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _InflaterState.srFooter;\n            case 22:\n                return _InflaterState.rFooter;\n            case 23:\n                return _InflaterState.vFooter;\n            case 24:\n                return _InflaterState.done;\n            default:\n                return _InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _InflaterState.readingHeader:\n                return 0;\n            case _InflaterState.readingBFinal:\n                return 2;\n            case _InflaterState.readingBType:\n                return 3;\n            case _InflaterState.readingNlCodes:\n                return 4;\n            case _InflaterState.readingNdCodes:\n                return 5;\n            case _InflaterState.readingCodes:\n                return 6;\n            case _InflaterState.readingClCodes:\n                return 7;\n            case _InflaterState.readingTcBefore:\n                return 8;\n            case _InflaterState.readingTcAfter:\n                return 9;\n            case _InflaterState.decodeTop:\n                return 10;\n            case _InflaterState.iLength:\n                return 11;\n            case _InflaterState.fLength:\n                return 12;\n            case _InflaterState.dCode:\n                return 13;\n            case _InflaterState.unCompressedAligning:\n                return 15;\n            case _InflaterState.unCompressedByte1:\n                return 16;\n            case _InflaterState.unCompressedByte2:\n                return 17;\n            case _InflaterState.unCompressedByte3:\n                return 18;\n            case _InflaterState.unCompressedByte4:\n                return 19;\n            case _InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _InflaterState.srFooter:\n                return 21;\n            case _InflaterState.rFooter:\n                return 22;\n            case _InflaterState.vFooter:\n                return 23;\n            case _InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\nexport { _Inflater };\n","import { _isNullOrUndefined } from '../utils';\nimport { _Inflater } from './inflater';\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        if (_isNullOrUndefined(data)) {\n            this._data = data;\n        }\n        else {\n            this._data = [];\n        }\n        if (_isNullOrUndefined(leaveOpen)) {\n            this._leaveOpen = leaveOpen;\n        }\n        this._offset = offset;\n        this._inflater = new _Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if (_isNullOrUndefined(this._offset) && this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\nexport { _DeflateStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nimport { _bytesToString, _toUnsigned, _toSigned32 } from './../../utils';\nimport { _DeflateStream } from './../../compression/deflate-stream';\n/* eslint-disable */\nvar _PngDecoder = /** @class */ (function (_super) {\n    __extends(_PngDecoder, _super);\n    /**\n     * Initializes a new instance of the `_PngDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _PngDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._format = _ImageFormat.png;\n        _this._isRedGreenBlue = false;\n        _this._isDecode = false;\n        _this._shades = false;\n        _this._ideateDecode = true;\n        _this._colors = 0;\n        _this._bitsPerPixel = 0;\n        _this._idatLength = 0;\n        _this._inputBands = 0;\n        _this._position = 8;\n        _this._initialize();\n        return _this;\n    }\n    _PngDecoder.prototype._initialize = function () {\n        var header;\n        var result = this._hasValidChunkType(header);\n        while (result.hasValidChunk) {\n            header = result.type;\n            switch (header) {\n                case _PngChunkTypes.iHDR:\n                    this._readHeader();\n                    break;\n                case _PngChunkTypes.iDAT:\n                    this._readImageData();\n                    break;\n                case _PngChunkTypes.sRGB:\n                    this._isRedGreenBlue = true;\n                    this._ignoreChunk();\n                    break;\n                case _PngChunkTypes.pLTE:\n                    this._readPhotoPlate();\n                    break;\n                case _PngChunkTypes.iEND:\n                    this._decodeImageData();\n                    break;\n                case _PngChunkTypes.tRNS:\n                    this._readTransparency();\n                    break;\n                case _PngChunkTypes.tEXt:\n                case _PngChunkTypes.iTXt:\n                case _PngChunkTypes.zTXt:\n                case _PngChunkTypes.hIST:\n                case _PngChunkTypes.sBIT:\n                case _PngChunkTypes.iCCP:\n                case _PngChunkTypes.pHYs:\n                case _PngChunkTypes.tIME:\n                case _PngChunkTypes.bKGD:\n                case _PngChunkTypes.gAMA:\n                case _PngChunkTypes.cHRM:\n                case _PngChunkTypes.unknown:\n                    this._ignoreChunk();\n                    break;\n                default:\n                    break;\n            }\n            result = this._hasValidChunkType(header);\n        }\n    };\n    _PngDecoder.prototype._hasValidChunkType = function (type) {\n        type = _PngChunkTypes.unknown;\n        if (this._position + 8 <= this._stream.byteLength) {\n            this._currentChunkLength = this._readUnsigned32(this._position);\n            this._seek(4);\n            var chunk = this._readString(4);\n            var header = this._getChunkType(chunk);\n            if (typeof header !== 'undefined' && header !== null) {\n                type = header;\n                return { 'type': type, 'hasValidChunk': true };\n            }\n            if (this._stream.byteLength === this._position) {\n                return { 'type': type, 'hasValidChunk': false };\n            }\n            else {\n                return { 'type': type, 'hasValidChunk': true };\n            }\n        }\n        else {\n            return { 'type': type, 'hasValidChunk': false };\n        }\n    };\n    _PngDecoder.prototype._ignoreChunk = function () {\n        if (this._currentChunkLength > 0) {\n            this._seek(this._currentChunkLength + 4);\n        }\n    };\n    _PngDecoder.prototype._readHeader = function () {\n        this._header = new _PngHeader();\n        this._header._width = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._height = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._bitDepth = this._readByte();\n        this._header._colorType = this._readByte();\n        this._header._compression = this._readByte();\n        this._header._filter = this._getFilterType(this._readByte());\n        this._header._interlace = this._readByte();\n        this._colors = (this._header._colorType === 3 || (this._header._colorType & 2) === 0) ? 1 : 3;\n        this._width = this._header._width;\n        this._height = this._header._height;\n        this._bitsPerComponent = this._header._bitDepth;\n        this._setBitsPerPixel();\n        this._seek(4);\n    };\n    _PngDecoder.prototype._setBitsPerPixel = function () {\n        this._bitsPerPixel = this._header._bitDepth === 16 ? 2 : 1;\n        if (this._header._colorType === 0) {\n            this._idatLength = Number.parseInt(((this._bitsPerComponent * this._width + 7) / 8).toString(), 10) * this._height;\n            this._inputBands = 1;\n        }\n        else if (this._header._colorType === 2) {\n            this._idatLength = this._width * this._height * 3;\n            this._inputBands = 3;\n            this._bitsPerPixel *= 3;\n        }\n        else if (this._header._colorType === 3) {\n            if (this._header._interlace === 1 || this._header._interlace === 0) {\n                this._idatLength = Number.parseInt(((this._header._bitDepth * this._width + 7) / 8).toString(), 10) * this._height;\n            }\n            this._inputBands = 1;\n            this._bitsPerPixel = 1;\n        }\n        else if (this._header._colorType === 4) {\n            this._idatLength = this._width * this._height;\n            this._inputBands = 2;\n            this._bitsPerPixel *= 2;\n        }\n        else if (this._header._colorType === 6) {\n            this._idatLength = this._width * 3 * this._height;\n            this._inputBands = 4;\n            this._bitsPerPixel *= 4;\n        }\n    };\n    _PngDecoder.prototype._readImageData = function () {\n        if (!this._encodedStream || this._encodedStream.length === 0) {\n            this._encodedStream = [];\n        }\n        if (this._currentChunkLength <= this._stream.byteLength && this._stream.byteLength - this._position >= this._currentChunkLength) {\n            for (var i = 0; i < this._currentChunkLength; i++) {\n                this._encodedStream.push(this._readByte());\n            }\n        }\n        this._seek(4);\n    };\n    _PngDecoder.prototype._readPhotoPlate = function () {\n        if (this._header._colorType === 3) {\n            this._colorSpace = [];\n            this._colorSpace.push(_PdfName.get('Indexed'));\n            this._colorSpace.push(this._getPngColorSpace());\n            this._colorSpace.push(this._currentChunkLength / 3 - 1);\n            var buffer = new Uint8Array(this._currentChunkLength);\n            this._read(buffer, 0, this._currentChunkLength);\n            this._colorSpace.push(_bytesToString(buffer));\n            this._seek(4);\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._readTransparency = function () {\n        if (this._header._colorType === 3) {\n            var alpha = new Uint8Array(this._currentChunkLength);\n            this._read(alpha, 0, this._currentChunkLength);\n            this._seek(4);\n            this._alpha = [];\n            for (var i = 0; i < alpha.length; i++) {\n                this._alpha.push(alpha[Number.parseInt(i.toString(), 10)]);\n                var sh = alpha[Number.parseInt(i.toString(), 10)] & 0xff;\n                if (sh !== 0 && sh !== 255) {\n                    this._shades = true;\n                }\n            }\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._getPngColorSpace = function () {\n        if (!this._isRedGreenBlue) {\n            if ((this._header._colorType & 2) === 0) {\n                return _PdfName.get('DeviceGray');\n            }\n            else {\n                return _PdfName.get('DeviceRGB');\n            }\n        }\n        else {\n            var colorspace = [];\n            var calRGB = new _PdfDictionary();\n            var whitePoint = [1, 1, 1];\n            var gammaArray = [2.2, 2.2, 2.2];\n            calRGB.set('Gamma', gammaArray);\n            if (this._isRedGreenBlue) {\n                var wpX = 0.3127;\n                var wpY = 0.329;\n                var redX = 0.64;\n                var redY = 0.33;\n                var greenX = 0.3;\n                var greenY = 0.6;\n                var bX = 0.15;\n                var bY = 0.06;\n                var t = wpY * ((greenX - bX) * redY - (redX - bX) * greenY + (redX - greenX) * bY);\n                var alphaY = redY * ((greenX - bX) * wpY - (wpX - bX) * greenY + (wpX - greenX) * bY) / t;\n                var alphaX = alphaY * redX / redY;\n                var alphaZ = alphaY * ((1 - redX) / redY - 1);\n                var blueY = -greenY * ((redX - bX) * wpY - (wpX - bX) * redY + (wpX - redX) * bY) / t;\n                var blueX = blueY * greenX / greenY;\n                var blueZ = blueY * ((1 - greenX) / greenY - 1);\n                var colorY = bY * ((redX - greenX) * wpY - (wpX - greenX) * wpY + (wpX - redX) * greenY) / t;\n                var colorX = colorY * bX / bY;\n                var colorZ = colorY * ((1 - bX) / bY - 1);\n                var whiteX = alphaX + blueX + colorX;\n                var whiteY = 1;\n                var whiteZ = alphaZ + blueZ + colorZ;\n                whitePoint = [whiteX, whiteY, whiteZ];\n                calRGB.set('Matrix', [alphaX, alphaY, alphaZ, blueX, blueY, blueZ, colorX, colorY, colorZ]);\n            }\n            calRGB.set('WhitePoint', whitePoint);\n            colorspace.push(_PdfName.get('CalRGB'));\n            colorspace.push(calRGB);\n            return colorspace;\n        }\n    };\n    _PngDecoder.prototype._decodeImageData = function () {\n        var header = this._header;\n        this._isDecode = (header._interlace === 1) || (header._bitDepth === 16) || ((header._colorType & 4) !== 0) || this._shades;\n        if (this._isDecode) {\n            if ((header._colorType & 4) !== 0 || this._shades) {\n                this._maskData = Array(this._width * this._height).fill(0);\n            }\n            if (this._encodedStream) {\n                this._dataStream = this._getDeflatedData(this._encodedStream);\n                this._dataStreamOffset = 0;\n            }\n            if (this._idatLength > 0) {\n                this._decodedImageData = Array(this._idatLength).fill(0);\n            }\n            this._readDecodeData();\n            if (this._decodedImageData && this._decodedImageData.length === 0 && this._shades) {\n                this._ideateDecode = false;\n                this._decodedImageData = this._encodedStream;\n            }\n        }\n        else {\n            this._ideateDecode = false;\n            this._decodedImageData = this._encodedStream;\n        }\n    };\n    _PngDecoder.prototype._getDeflatedData = function (data) {\n        var idatData = data.slice(2, data.length - 4);\n        var deflateStream = new _DeflateStream(idatData, 0, true);\n        var buffer = Array(4096).fill(0);\n        var numRead = 0;\n        var outputData = [];\n        do {\n            var result = deflateStream._read(buffer, 0, buffer.length);\n            numRead = result.count;\n            buffer = result.data;\n            for (var i = 0; i < numRead; i++) {\n                outputData.push(buffer[Number.parseInt(i.toString(), 10)]);\n            }\n        } while (numRead > 0);\n        return outputData;\n    };\n    _PngDecoder.prototype._readDecodeData = function () {\n        if (this._header._interlace !== 1) {\n            this._decodeData(0, 0, 1, 1, this._width, this._height);\n        }\n        else {\n            this._decodeData(0, 0, 8, 8, Math.floor((this._width + 7) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(4, 0, 8, 8, Math.floor((this._width + 3) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(0, 4, 4, 8, Math.floor((this._width + 3) / 4), Math.floor((this._height + 3) / 8));\n            this._decodeData(2, 0, 4, 4, Math.floor((this._width + 1) / 4), Math.floor((this._height + 3) / 4));\n            this._decodeData(0, 2, 2, 4, Math.floor((this._width + 1) / 2), Math.floor((this._height + 1) / 4));\n            this._decodeData(1, 0, 2, 2, Math.floor(this._width / 2), Math.floor((this._height + 1) / 2));\n            this._decodeData(0, 1, 1, 2, this._width, Math.floor(this._height / 2));\n        }\n    };\n    _PngDecoder.prototype._decodeData = function (xOffset, yOffset, xStep, yStep, width, height) {\n        if ((width === 0) || (height === 0)) {\n            return;\n        }\n        else {\n            var bytesPerRow = Math.floor((this._inputBands * width * this._header._bitDepth + 7) / 8);\n            var current = Array(bytesPerRow).fill(0);\n            var prior = Array(bytesPerRow).fill(0);\n            for (var sourceY = 0, destinationY = yOffset; sourceY < height; sourceY++, destinationY += yStep) {\n                var filter = this._dataStream[this._dataStreamOffset];\n                this._dataStreamOffset = this._dataStreamOffset + 1;\n                this._dataStreamOffset = this._readStream(this._dataStream, this._dataStreamOffset, current, bytesPerRow);\n                switch (this._getFilterType(filter)) {\n                    case _PngFilterTypes.none:\n                        break;\n                    case _PngFilterTypes.sub:\n                        this._decompressSub(current, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.up:\n                        this._decompressUp(current, prior, bytesPerRow);\n                        break;\n                    case _PngFilterTypes.average:\n                        this._decompressAverage(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.paeth:\n                        this._decompressPaeth(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    default:\n                        throw new Error('Unknown PNG filter');\n                }\n                this._processPixels(current, xOffset, xStep, destinationY, width);\n                var tmp = prior;\n                prior = current;\n                current = tmp;\n            }\n        }\n    };\n    _PngDecoder.prototype._readStream = function (stream, streamOffset, data, count) {\n        var result = this._read(data, streamOffset, count, stream);\n        data = result.outputBuffer;\n        streamOffset = result.offset;\n        var n = result.length;\n        if (n <= 0) {\n            throw new Error('Insufficient data');\n        }\n        return streamOffset;\n    };\n    _PngDecoder.prototype._decompressSub = function (data, count, bitsPerPixel) {\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (data[i - bitsPerPixel] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressUp = function (data, pData, count) {\n        for (var i = 0; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressAverage = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val) + pr / 2), 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val + Math.floor((pp + pr) / 2))), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressPaeth = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        var prp;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(val + pr, 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            prp = pData[i - bitsPerPixel] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((val + this._paethPredictor(pp, pr, prp)), 8);\n        }\n    };\n    _PngDecoder.prototype._paethPredictor = function (a, b, c) {\n        var p = a + b - c;\n        var pa = Math.abs(p - a);\n        var pb = Math.abs(p - b);\n        var pc = Math.abs(p - c);\n        if ((pa <= pb) && (pa <= pc)) {\n            return a;\n        }\n        else if (pb <= pc) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    };\n    _PngDecoder.prototype._processPixels = function (data, x, step, y, width) {\n        var sourceX = 0;\n        var destX = 0;\n        var size = 0;\n        var pixel = this._getPixel(data);\n        if (this._header._colorType === 0 || this._header._colorType === 3 || this._header._colorType === 4) {\n            size = 1;\n        }\n        else if (this._header._colorType === 2 || this._header._colorType === 6) {\n            size = 3;\n        }\n        if (this._decodedImageData && this._decodedImageData.length > 0) {\n            destX = x;\n            var depth = (this._header._bitDepth === 16) ? 8 : this._header._bitDepth;\n            var yStep = Math.floor((size * width * depth + 7) / 8);\n            for (sourceX = 0; sourceX < width; sourceX++) {\n                this._decodedImageData = this._setPixel(this._decodedImageData, pixel, this._inputBands * sourceX, size, destX, y, this._header._bitDepth, yStep);\n                destX += step;\n            }\n        }\n        var shades = (this._header._colorType & 4) !== 0 || this._shades;\n        if (shades) {\n            if ((this._header._colorType & 4) !== 0) {\n                if (this._header._bitDepth === 16) {\n                    for (var i = 0; i < width; ++i) {\n                        var temp = i * this._inputBands + size;\n                        var unsigned = _toUnsigned(pixel[Number.parseInt(temp.toString(), 10)], 32);\n                        pixel[Number.parseInt(temp.toString(), 10)] = _toSigned32(unsigned >> 8);\n                    }\n                }\n                var yStep = width;\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    this._maskData = this._setPixel(this._maskData, pixel, this._inputBands * sourceX + size, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n            else {\n                var yStep = width;\n                var dt = [0];\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    var index = pixel[Number.parseInt(sourceX.toString(), 10)];\n                    if (index < this._alpha.length) {\n                        dt[0] = this._alpha[Number.parseInt(index.toString(), 10)];\n                    }\n                    else {\n                        dt[0] = 255;\n                    }\n                    this._maskData = this._setPixel(this._maskData, dt, 0, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n        }\n    };\n    _PngDecoder.prototype._getPixel = function (data) {\n        if (this._header._bitDepth === 8) {\n            var pixel = Array(data.length).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            }\n            return pixel;\n        }\n        else if (this._header._bitDepth === 16) {\n            var pixel = Array(Math.floor(data.length / 2)).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = ((data[i * 2] & 0xff) << 8) + (data[i * 2 + 1] & 0xff);\n            }\n            return pixel;\n        }\n        else {\n            var pixel = Array(Math.floor((data.length * 8) / this._header._bitDepth)).fill(0);\n            var index = 0;\n            var p = Math.floor(8 / this._header._bitDepth);\n            var mask = (1 << this._header._bitDepth) - 1;\n            for (var n = 0; n < data.length; ++n) {\n                for (var i = p - 1; i >= 0; --i) {\n                    var hb = this._header._bitDepth * i;\n                    var d = data[Number.parseInt(n.toString(), 10)];\n                    pixel[index++] = ((hb < 1) ? d : _toSigned32(_toUnsigned(d, 32) >> hb)) & mask;\n                }\n            }\n            return pixel;\n        }\n    };\n    _PngDecoder.prototype._setPixel = function (imageData, data, offset, size, x, y, bitDepth, bpr) {\n        if (bitDepth === 8) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned(data[i + offset], 8);\n            }\n        }\n        else if (bitDepth === 16) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned((data[i + offset] >> 8), 8);\n            }\n        }\n        else {\n            var position = Math.floor((bpr * y + x) / (8 / bitDepth));\n            var t = data[Number.parseInt(offset.toString(), 10)]\n                << Number.parseInt((8 - bitDepth * (x % (8 / bitDepth)) - bitDepth).toString(), 10);\n            imageData[Number.parseInt(position.toString(), 10)] = imageData[Number.parseInt(position.toString(), 10)] | _toUnsigned(t, 8);\n        }\n        return imageData;\n    };\n    _PngDecoder.prototype._getImageDictionary = function () {\n        var data = [];\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var decodedString = '';\n        for (var i = 0; i < this._decodedImageData.length; i++) {\n            decodedString += String.fromCharCode(this._decodedImageData[Number.parseInt(i.toString(), 10)]);\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = this._isDecode && this._ideateDecode;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        if (this._bitsPerComponent === 16) {\n            dictionary.set('BitsPerComponent', 8);\n        }\n        else {\n            dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        }\n        if (!this._isDecode || !this._ideateDecode) {\n            dictionary.set('Filter', new _PdfName('FlateDecode'));\n        }\n        if ((this._header._colorType & 2) === 0) {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n        }\n        else {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceRGB'));\n        }\n        if (!this._isDecode || this._shades && !this._ideateDecode) {\n            dictionary.set('DecodeParms', this._getDecodeParams());\n        }\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        this._setMask();\n        return this._imageStream;\n    };\n    _PngDecoder.prototype._setMask = function () {\n        if (this._maskData && this._maskData.length > 0) {\n            this._maskStream = new _PdfStream(this._maskData, new _PdfDictionary());\n            this._maskStream._isCompress = this._isDecode && this._ideateDecode;\n            var dictionary = new _PdfDictionary();\n            dictionary.set('Type', new _PdfName('XObject'));\n            dictionary.set('Subtype', new _PdfName('Image'));\n            dictionary.set('Width', this._width);\n            dictionary.set('Height', this._height);\n            if (this._bitsPerComponent === 16) {\n                dictionary.set('BitsPerComponent', 8);\n            }\n            else {\n                dictionary.set('BitsPerComponent', this._bitsPerComponent);\n            }\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n            this._maskStream.dictionary = dictionary;\n            this._maskStream.bytes = new Uint8Array(this._maskData);\n            this._maskStream.end = this._maskStream.bytes.length;\n            this._maskStream.dictionary._updated = true;\n        }\n    };\n    _PngDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('Colors', this._colors);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _PngDecoder.prototype._getChunkType = function (chunk) {\n        switch (chunk) {\n            case 'IHDR':\n                return _PngChunkTypes.iHDR;\n            case 'PLTE':\n                return _PngChunkTypes.pLTE;\n            case 'IDAT':\n                return _PngChunkTypes.iDAT;\n            case 'IEND':\n                return _PngChunkTypes.iEND;\n            case 'bKGD':\n                return _PngChunkTypes.bKGD;\n            case 'cHRM':\n                return _PngChunkTypes.cHRM;\n            case 'gAMA':\n                return _PngChunkTypes.gAMA;\n            case 'hIST':\n                return _PngChunkTypes.hIST;\n            case 'pHYs':\n                return _PngChunkTypes.pHYs;\n            case 'sBIT':\n                return _PngChunkTypes.sBIT;\n            case 'tEXt':\n                return _PngChunkTypes.tEXt;\n            case 'tIME':\n                return _PngChunkTypes.tIME;\n            case 'tRNS':\n                return _PngChunkTypes.tRNS;\n            case 'zTXt':\n                return _PngChunkTypes.zTXt;\n            case 'sRGB':\n                return _PngChunkTypes.sRGB;\n            case 'iCCP':\n                return _PngChunkTypes.iCCP;\n            case 'iTXt':\n                return _PngChunkTypes.iTXt;\n            case 'Unknown':\n                return _PngChunkTypes.unknown;\n            default:\n                return null;\n        }\n    };\n    _PngDecoder.prototype._getFilterType = function (type) {\n        switch (type) {\n            case 1:\n                return _PngFilterTypes.sub;\n            case 2:\n                return _PngFilterTypes.up;\n            case 3:\n                return _PngFilterTypes.average;\n            case 4:\n                return _PngFilterTypes.paeth;\n            default:\n                return _PngFilterTypes.none;\n        }\n    };\n    return _PngDecoder;\n}(_ImageDecoder));\nexport { _PngDecoder };\nvar _PngHeader = /** @class */ (function () {\n    function _PngHeader() {\n        this._width = 0;\n        this._height = 0;\n        this._colorType = 0;\n        this._compression = 0;\n        this._bitDepth = 0;\n        this._interlace = 0;\n        this._filter = _PngFilterTypes.none;\n    }\n    return _PngHeader;\n}());\nvar _PngChunkTypes;\n(function (_PngChunkTypes) {\n    _PngChunkTypes[_PngChunkTypes[\"iHDR\"] = 0] = \"iHDR\";\n    _PngChunkTypes[_PngChunkTypes[\"pLTE\"] = 1] = \"pLTE\";\n    _PngChunkTypes[_PngChunkTypes[\"iDAT\"] = 2] = \"iDAT\";\n    _PngChunkTypes[_PngChunkTypes[\"iEND\"] = 3] = \"iEND\";\n    _PngChunkTypes[_PngChunkTypes[\"bKGD\"] = 4] = \"bKGD\";\n    _PngChunkTypes[_PngChunkTypes[\"cHRM\"] = 5] = \"cHRM\";\n    _PngChunkTypes[_PngChunkTypes[\"gAMA\"] = 6] = \"gAMA\";\n    _PngChunkTypes[_PngChunkTypes[\"hIST\"] = 7] = \"hIST\";\n    _PngChunkTypes[_PngChunkTypes[\"pHYs\"] = 8] = \"pHYs\";\n    _PngChunkTypes[_PngChunkTypes[\"sBIT\"] = 9] = \"sBIT\";\n    _PngChunkTypes[_PngChunkTypes[\"tEXt\"] = 10] = \"tEXt\";\n    _PngChunkTypes[_PngChunkTypes[\"tIME\"] = 11] = \"tIME\";\n    _PngChunkTypes[_PngChunkTypes[\"tRNS\"] = 12] = \"tRNS\";\n    _PngChunkTypes[_PngChunkTypes[\"zTXt\"] = 13] = \"zTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"sRGB\"] = 14] = \"sRGB\";\n    _PngChunkTypes[_PngChunkTypes[\"iCCP\"] = 15] = \"iCCP\";\n    _PngChunkTypes[_PngChunkTypes[\"iTXt\"] = 16] = \"iTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"unknown\"] = 17] = \"unknown\";\n})(_PngChunkTypes || (_PngChunkTypes = {}));\nvar _PngFilterTypes;\n(function (_PngFilterTypes) {\n    _PngFilterTypes[_PngFilterTypes[\"none\"] = 0] = \"none\";\n    _PngFilterTypes[_PngFilterTypes[\"sub\"] = 1] = \"sub\";\n    _PngFilterTypes[_PngFilterTypes[\"up\"] = 2] = \"up\";\n    _PngFilterTypes[_PngFilterTypes[\"average\"] = 3] = \"average\";\n    _PngFilterTypes[_PngFilterTypes[\"paeth\"] = 4] = \"paeth\";\n})(_PngFilterTypes || (_PngFilterTypes = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfDestination } from './pdf-page';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType, PdfDestinationMode, PdfNumberStyle } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation, PdfLineAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\nimport { _JpegDecoder } from './graphics/images/jpeg-decoder';\nimport { _PngDecoder } from './graphics/images/png-decoder';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * Gets the unsigned value.\n *\n * @param {number} value input value.\n * @param {number} bits bits to process.\n * @returns {number} unsigned value.\n */\nexport function _toUnsigned(value, bits) {\n    return (value & ((Math.pow(2, bits)) - 1));\n}\n/**\n * Gets the signed 16 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned16(value) {\n    return (value << 16) >> 16;\n}\n/**\n * Gets the signed 32 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned32(value) {\n    return (value << 0);\n}\n/**\n * Copy values from one array to another.\n *\n * @param {number[]} target destination array.\n * @param {number} at target index.\n * @param {number[]} source source array.\n * @param {number} start start index.\n * @param {number} end end index.\n * @returns {void} Returns nothing.\n */\nexport function _copyRange(target, at, source, start, end) {\n    if (start === null || typeof start === 'undefined') {\n        start = 0;\n    }\n    end = (typeof end === 'undefined') ? source.length : end;\n    start = Math.max(0, Math.min(source.length, start));\n    end = Math.max(0, Math.min(source.length, end));\n    if (at + (end - start) > target.length) {\n        target.length = at + (end - start);\n    }\n    for (var i = start, j = at; i < end; i++, j++) {\n        target[Number.parseInt(j.toString(), 10)] = source[Number.parseInt(i.toString(), 10)];\n    }\n}\n/**\n * Checks the type of the image using header bytes.\n *\n * @param {Uint8Array} imageData image data.\n * @param {number[]} header header bytes.\n * @returns {boolean} Header matched or not.\n */\nexport function _checkType(imageData, header) {\n    for (var i = 0; i < header.length; i++) {\n        if (header[Number.parseInt(i.toString(), 10)] !== imageData[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the image decoder.\n *\n * @param {Uint8Array} imageData image data.\n * @returns {_ImageDecoder} Image decoder.\n */\nexport function _getDecoder(imageData) {\n    var decoder;\n    if (_checkType(imageData, [255, 216])) {\n        decoder = new _JpegDecoder(imageData);\n    }\n    else if (_checkType(imageData, [137, 80, 78, 71, 13, 10, 26, 10])) {\n        decoder = new _PngDecoder(imageData);\n    }\n    else {\n        throw new Error('Unsupported image format');\n    }\n    return decoder;\n}\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (typeof value === 'string' && value.length > 0 && value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return a number[] or Uint8Array.\n * @param {boolean} isPassword Whether the string is a password.\n * @param {number[]} destination Destination array.\n * @returns {number[] | Uint8Array} Byte array\n */\nexport function _stringToBytes(value, isDirect, isPassword, destination) {\n    if (isDirect === void 0) { isDirect = false; }\n    if (isPassword === void 0) { isPassword = false; }\n    var bytes = [];\n    if (destination) {\n        bytes = destination;\n    }\n    if (isPassword) {\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n    }\n    else {\n        for (var i = 0; i < value.length; i++) {\n            var charCode = value.charCodeAt(i);\n            if (charCode < 0x80) {\n                bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                bytes.push((charCode >> 6) | 0xC0);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else if (charCode < 0xD800 || charCode >= 0xE000) {\n                bytes.push((charCode >> 12) | 0xE0);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3FF) << 10) | (value.charCodeAt(i) & 0x3FF));\n                bytes.push((charCode >> 18) | 0xF0);\n                bytes.push(((charCode >> 12) & 0x3F) | 0x80);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n        }\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @param {boolean} isJson Whether is json or xfdf.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes, isJson) {\n    if (isJson === void 0) { isJson = false; }\n    var length = bytes.length;\n    var max = 8192;\n    var stringBuffer = [];\n    if (length < max) {\n        return (isJson ? _decodeUnicodeBytes(bytes) : String.fromCharCode.apply(null, bytes));\n    }\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(isJson ? _decodeUnicodeBytes(chunk) : String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Decode unicode string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _decodeUnicodeBytes(bytes) {\n    var result = '';\n    var i = 0;\n    while (i < bytes.length) {\n        var byte = bytes[i++];\n        if (byte < 0x80) {\n            result += String.fromCharCode(byte);\n        }\n        else if (byte < 0xE0) {\n            result += String.fromCharCode(((byte & 0x1F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else if (byte < 0xF0) {\n            result += String.fromCharCode(((byte & 0x0F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else {\n            var codePoint = ((byte & 0x07) << 18) | ((bytes[i++] & 0x3F) << 12) |\n                ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F) - 0x10000;\n            result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & 0x03FF) + 0xDC00);\n        }\n    }\n    return result;\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode a chunk of base64 string into Uint8Array.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @returns {Uint8Array} Decoded bytes as Uint8Array.\n */\nfunction _decodeChunk(input) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return new Uint8Array(output);\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var chunkSize = 3000000;\n    if (input.length >= chunkSize) {\n        input = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        var outputChunks = [];\n        var totalLength = 0;\n        for (var i = 0; i < input.length; i += chunkSize) {\n            var chunk = input.substring(i, i + chunkSize);\n            var decodedChunk = _decodeChunk(chunk);\n            outputChunks.push(decodedChunk);\n            totalLength += decodedChunk.length;\n        }\n        var output = new Uint8Array(totalLength);\n        var offset = 0;\n        for (var _i = 0, outputChunks_1 = outputChunks; _i < outputChunks_1.length; _i++) {\n            var chunk = outputChunks_1[_i];\n            output.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return isDirect ? Array.from(output) : output;\n    }\n    else {\n        var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1 = void 0;\n        var chr2 = void 0;\n        var chr3 = void 0;\n        var enc1 = void 0;\n        var enc2 = void 0;\n        var enc3 = void 0;\n        var enc4 = void 0;\n        var i = 0;\n        var resultIndex = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === key.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = key.indexOf(input.charAt(i++));\n            enc2 = key.indexOf(input.charAt(i++));\n            enc3 = key.indexOf(input.charAt(i++));\n            enc4 = key.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr1;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr2;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return isDirect ? output : new Uint8Array(output);\n    }\n}\n/**\n * Encode a chunk of bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @param {boolean} isLastChunk Defines a last chunk of bytes.\n * @returns {string} Decoded string.\n */\nfunction _encodeChunk(bytes, isLastChunk) {\n    if (isLastChunk === void 0) { isLastChunk = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = [];\n    var length = bytes.length;\n    var i = 0;\n    while (i < length) {\n        var byte1 = bytes[i++];\n        var byte2 = i < length ? bytes[i++] : 0;\n        var byte3 = i < length ? bytes[i++] : 0;\n        var value1 = byte1 >> 2;\n        var value2 = ((byte1 & 3) << 4) | (byte2 >> 4);\n        var value3 = ((byte2 & 15) << 2) | (byte3 >> 6);\n        var value4 = byte3 & 63;\n        output.push(key[Number.parseInt(value1.toString(), 10)], key[Number.parseInt(value2.toString(), 10)], i - 1 > length ? '=' : key[Number.parseInt(value3.toString(), 10)], i > length ? '=' : key[Number.parseInt(value4.toString(), 10)]);\n    }\n    if (isLastChunk) {\n        if (length % 3 === 1) {\n            output[output.length - 1] = '=';\n            output[output.length - 2] = '=';\n        }\n        else if (length % 3 === 2) {\n            output[output.length - 1] = '=';\n        }\n    }\n    return output.join('');\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var chunkSize = 3000000;\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var length = bytes.length;\n    if (length >= chunkSize) {\n        var output = [];\n        if (length > chunkSize) {\n            for (var start = 0; start < length; start += chunkSize) {\n                var chunk = bytes.subarray(start, Math.min(start + chunkSize, length));\n                if ((start + chunkSize) >= length) {\n                    output.push(_encodeChunk(chunk, true));\n                }\n                else {\n                    output.push(_encodeChunk(chunk));\n                }\n            }\n        }\n        else {\n            output.push(_encodeChunk(bytes, true));\n        }\n        return output.join('');\n    }\n    else {\n        var output = '';\n        var currentChar = 0;\n        for (var i = 0; i < bytes.length; i++) {\n            if (i % 3 === 0) {\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n            }\n            else if (i % 3 === 1) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n            }\n            else if (i % 3 === 2) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n            }\n        }\n        if (bytes.length % 3 === 1) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n        }\n        if (bytes.length % 3 === 2) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n        }\n        return output;\n    }\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            if (angle === 90) {\n                matrix._translate(box[3], -box[0]);\n            }\n            else if (angle === 180) {\n                matrix._translate(box[2], box[3]);\n            }\n            else if (angle === 270) {\n                matrix._translate(-box[1], box[2]);\n            }\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n        case 'SBApproved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n        case 'SBAsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n        case 'SBCompleted':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n        case 'SBConfidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n        case 'SBDepartmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n        case 'SBDraft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n        case 'SBExperimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n        case 'SBExpired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n        case 'SBFinal':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n        case 'SBForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n        case 'SBForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n        case 'SBInformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n        case 'SBNotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n        case 'SBNotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n        case 'SBPreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n        case 'SBSold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n        case 'SBTopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n        case 'SBVoid':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = [];\n    if ((style & PdfFontStyle.bold) > 0) {\n        value.push('Bold');\n    }\n    if ((style & PdfFontStyle.italic) > 0) {\n        value.push('Italic');\n    }\n    if ((style & PdfFontStyle.underline) > 0) {\n        value.push('Underline');\n    }\n    if ((style & PdfFontStyle.strikeout) > 0) {\n        value.push('Strikeout');\n    }\n    if (value.length === 0) {\n        return 'Regular';\n    }\n    return value.join(', ');\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    if (typeof size === 'undefined' && annotation instanceof PdfLineAnnotation && annotation._isLoaded) {\n        size = 10;\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helv':\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Cour':\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symb':\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TiRo':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZaDb':\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance instanceof _PdfDictionary && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the Destination.\n *\n * @param {_PdfDictionary} dictionary widget dictionary.\n * @param {string} key bookmark or action dictionary key.\n * @returns {PdfDestination} destination.\n */\nexport function _obtainDestination(dictionary, key) {\n    var page;\n    var destination;\n    if (dictionary) {\n        var destinationArray = void 0; // eslint-disable-line\n        if (dictionary.has(key)) {\n            destinationArray = dictionary.getArray(key);\n        }\n        var loadedDocument = dictionary._crossReference._document;\n        var mode = void 0;\n        if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            var value = destinationArray[0]; // eslint-disable-line\n            var left = void 0;\n            var height = void 0;\n            var bottom = void 0;\n            var right = void 0;\n            var zoom = void 0;\n            if (typeof value === 'number') {\n                var pageNumber = destinationArray[0];\n                if (pageNumber >= 0) {\n                    var document_1 = dictionary._crossReference._document;\n                    if (document_1 && document_1.pageCount > pageNumber) {\n                        page = document_1.getPage(pageNumber);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode && mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = pageNumber;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value instanceof _PdfDictionary) {\n                var pageDictionary = value;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                    index = _getPageIndex(loadedDocument, pageDictionary);\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    page = loadedDocument.getPage(index);\n                }\n                if (destinationArray.length > 1) {\n                    mode = destinationArray[1];\n                }\n                if (mode) {\n                    if (mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                topValue = _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = index;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                    else {\n                        if (mode.name === 'FitR') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                bottom = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                right = destinationArray[4];\n                            }\n                            if (destinationArray.length > 5) {\n                                height = destinationArray[5];\n                            }\n                            if (page) {\n                                left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                destination = new PdfDestination(page, [left, bottom, right, height]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitR;\n                            }\n                        }\n                        else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                            if (destinationArray.length >= 3) {\n                                height = destinationArray[2];\n                            }\n                            if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                page = loadedDocument.getPage(index);\n                            }\n                            if (page && page.size) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                destination = new PdfDestination(page, [0, topValue]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitH;\n                                if (height === null || typeof height === 'undefined') {\n                                    destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                destination = new PdfDestination(page);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return destination;\n}\n/**\n * Update the annotation bounds.\n *\n * @param {PdfAnnotation} annotation annotation.\n * @param {number[]} bounds annotation bounds.\n * @returns {number[]} bounds.\n */\nexport function _updateBounds(annotation, bounds) {\n    if (bounds) {\n        annotation._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n    }\n    var rect;\n    if (annotation._page && annotation.bounds) {\n        rect = [annotation.bounds.x, annotation.bounds.y + annotation.bounds.height,\n            annotation.bounds.width, annotation.bounds.height];\n        if (annotation._page._isNew && annotation._page._pageSettings) {\n            var pageSettings = annotation._page._pageSettings;\n            var pageBounds = [pageSettings.margins.left, pageSettings.margins.top, pageSettings.size[0] -\n                    (pageSettings.margins.left + pageSettings.margins.right),\n                pageSettings.size[1] - (pageSettings.margins.top + pageSettings.margins.bottom)];\n            rect[0] += pageBounds[0];\n            rect[1] = pageSettings.size[1] - (pageBounds[1] + rect[1]);\n        }\n        else {\n            var size = annotation._page.size;\n            rect[1] = size[1] - (annotation.bounds.y + annotation.bounds.height);\n            var cropBoxOrMediaBox = annotation._getCropOrMediaBox();\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]];\n    }\n    return rect;\n}\n/**\n * Decode text.\n *\n * @param {string} text Text to decode.\n * @param {boolean} isColorSpace Color space or not\n * @param {boolean} isPassword Password or not\n * @returns {string} Decoded text.\n */\nexport function _decodeText(text, isColorSpace, isPassword) {\n    if (text && typeof text === 'string' && !isColorSpace && !isPassword) {\n        if (text.startsWith('þÿ')) {\n            text = text.substring(2);\n            if (text.endsWith('ÿý')) {\n                text = text.substring(0, text.length - 2);\n            }\n            var bytes = _stringToBytes(text, false, true);\n            var result = '';\n            for (var i = 0; i < bytes.length; i += 2) {\n                var x = bytes[Number.parseInt(i.toString(), 10)] << 8;\n                var y = bytes[Number.parseInt((i + 1).toString(), 10)];\n                var codeUnit = x | y;\n                result += String.fromCharCode(codeUnit);\n            }\n            text = result;\n        }\n    }\n    return text;\n}\n/**\n * Number of bytes required to save the number.\n *\n * @param {number} input number.\n * @returns {number} number of bytes.\n */\nexport function _getSize(input) {\n    var size = 0;\n    var uintMaxValue = 0xFFFFFFFF;\n    var ushortMaxValue = 0xFFFF;\n    var byteMaxValue = 0xFF;\n    if (input <= uintMaxValue) {\n        if (input <= ushortMaxValue) {\n            if (input <= byteMaxValue) {\n                size = 1;\n            }\n            else {\n                size = 2;\n            }\n        }\n        else {\n            if (input <= (ushortMaxValue | (ushortMaxValue << 8))) {\n                size = 3;\n            }\n            else {\n                size = 4;\n            }\n        }\n    }\n    else {\n        size = 8;\n    }\n    return size;\n}\n/**\n * Convert the string to big endian bytes.\n *\n * @param {string} input string.\n * @returns {number[]} bytes.\n */\nexport function _stringToBigEndianBytes(input) {\n    var bytes = [];\n    for (var i = 0; i < input.length; i++) {\n        var charCode = input.charCodeAt(Number.parseInt(i.toString(), 10));\n        if (charCode <= 0xFFFF) {\n            bytes.push((charCode >> 8) & 0xFF);\n            bytes.push(charCode & 0xFF);\n        }\n    }\n    return bytes;\n}\n/**\n * Convert number respect to ordered list number style.\n *\n * @param {number} intArabic Input value.\n * @param {PdfNumberStyle} numberStyle Number style.\n * @returns {string} String value.\n */\nexport function _convertNumber(intArabic, numberStyle) {\n    switch (numberStyle) {\n        case PdfNumberStyle.none:\n            return '';\n        case PdfNumberStyle.numeric:\n            return intArabic.toString();\n        case PdfNumberStyle.lowerLatin:\n            return _arabicToLetter(intArabic).toLowerCase();\n        case PdfNumberStyle.lowerRoman:\n            return _arabicToRoman(intArabic).toLowerCase();\n        case PdfNumberStyle.upperLatin:\n            return _arabicToLetter(intArabic);\n        case PdfNumberStyle.upperRoman:\n            return _arabicToRoman(intArabic);\n    }\n}\n/**\n * Convert arabic numbers to roman style.\n *\n * @param {number} intArabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToRoman(intArabic) {\n    var retval = '';\n    var romanNumerals = [\n        [1000, 'M'], [900, 'CM'], [500, 'D'], [400, 'CD'],\n        [100, 'C'], [90, 'XC'], [50, 'L'], [40, 'XL'],\n        [10, 'X'], [9, 'IX'], [5, 'V'], [4, 'IV'], [1, 'I']\n    ];\n    for (var _i = 0, romanNumerals_1 = romanNumerals; _i < romanNumerals_1.length; _i++) {\n        var _a = romanNumerals_1[_i], value = _a[0], numeral = _a[1];\n        while (intArabic >= value) {\n            retval += numeral;\n            intArabic -= value;\n        }\n    }\n    return retval;\n}\n/**\n * Convert arabic numbers to alphabet.\n *\n * @param {number} arabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToLetter(arabic) {\n    var result = '';\n    while (arabic > 0) {\n        var remainder = arabic % 26;\n        arabic = Math.floor(arabic / 26);\n        if (remainder === 0) {\n            arabic--;\n            remainder = 26;\n        }\n        result = _appendChar(remainder) + result;\n    }\n    return result;\n}\n/**\n * Convert character code to string.\n *\n * @param {number} value Input value.\n * @returns {string} String value.\n */\nexport function _appendChar(value) {\n    if (value <= 0 || value > 26) {\n        throw new Error('Value can not be less 0 and greater 26');\n    }\n    return String.fromCharCode(64 + value);\n}\n/**\n * Check whether the value is null or undefined.\n *\n * @param {any} value Input value.\n * @returns {boolean} Return true if the value is null or undefined; otherwise, return false\n */\nexport function _isNullOrUndefined(value) {\n    if (value !== null && typeof value !== 'undefined') {\n        return true;\n    }\n    return false;\n}\n/**\n * Compresses the content of a PDFBaseStream\n *\n * @param {_PdfBaseStream} stream - Base stream to compress.\n * @param {boolean} isExport - Denotes compress the stream as a hex-encoded string.\n * @returns {boolean} compressed string.\n */\nexport function _compressStream(stream, isExport) {\n    if (isExport === void 0) { isExport = false; }\n    var value = stream.getString();\n    var byteArray = [];\n    for (var i = 0; i < value.length; i++) {\n        byteArray.push(value.charCodeAt(i));\n    }\n    var dataArray = new Uint8Array(byteArray);\n    var sw = new CompressedStreamWriter();\n    sw.write(dataArray, 0, dataArray.length);\n    sw.close();\n    value = sw.getCompressedString;\n    stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n    if (isExport) {\n        var buffer = [];\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n        return _byteArrayToHexString(new Uint8Array(buffer));\n    }\n    return value;\n}\n/**\n * Base64 encoded string representing an empty PDF document.\n */\nexport var _emptyPdfData = 'JVBERi0xLjQNCiWDkvr+DQoxIDAgb2JqDQo8PA0KL1R5cGUgL0NhdGFsb2cNCi9QYWdlcyAyIDAgUg0KL0Fjcm9Gb3JtIDMgMCBSDQo+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PA0KL1R5cGUgL1BhZ2VzDQovS2lkcyBbNCAwIFJdDQovQ291bnQgMQ0KL1Jlc291cmNlcyA8PD4+DQoNCi9NZWRpYUJveCBbLjAwIC4wMCA1OTUuMDAgODQyLjAwXQ0KL1JvdGF0ZSAwDQo+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PA0KL0ZpZWxkcyBbXQ0KPj4NCmVuZG9iag0KNCAwIG9iag0KPDwNCi9Db3VudCAxDQovVHlwZSAvUGFnZXMNCi9LaWRzIFs1IDAgUl0NCi9QYXJlbnQgMiAwIFINCj4+DQplbmRvYmoNCjUgMCBvYmoNCjw8DQovVHlwZSAvUGFnZQ0KL1BhcmVudCA0IDAgUg0KPj4NCmVuZG9iag0KeHJlZg0KMCA2DQowMDAwMDAwMDAwIDY1NTM1IGYNCjAwMDAwMDAwMTcgMDAwMDAgbg0KMDAwMDAwMDA4OSAwMDAwMCBuDQowMDAwMDAwMjE4IDAwMDAwIG4NCjAwMDAwMDAyNTUgMDAwMDAgbg0KMDAwMDAwMDMzNCAwMDAwMCBuDQp0cmFpbGVyDQo8PA0KL1Jvb3QgMSAwIFINCi9TaXplIDYNCj4+DQoNCnN0YXJ0eHJlZg0KMzg3DQolJUVPRg0K';\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString, _bytesToString, _isNullOrUndefined } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n        this._isImage = false;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex, bytes) {\n        if (isHex === void 0) { isHex = false; }\n        if (typeof bytes === 'undefined' || bytes === null) {\n            bytes = this.getBytes();\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            return _bytesToString(bytes);\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        if (_isNullOrUndefined(bytes)) {\n            _this._bytes = bytes;\n        }\n        else {\n            _this._bytes = [];\n        }\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        this._crossReference._allowCatalog = true;\n        form._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef && pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj && obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O'), false, true).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U'), false, true).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id, false, true);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password, false, true);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'), false, true);\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'), false, true);\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'), false, true);\n            var userEncryption = _stringToBytes(dictionary.get('UE'), false, true);\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        var stringBytes = _stringToBytes(s, false, true);\n        var decryptedBytes = this._stringCipher._decryptBlock(stringBytes, true);\n        return _bytesToString(decryptedBytes);\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s, false, true), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s, false, true)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference, _isName } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException, _decodeText } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nimport { _CipherTransform } from './security/encryptor';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode, encryptor) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this._isColorSpace = false;\n        this._isPassword = false;\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this._encryptor = encryptor;\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (arguement1, arguement2, arguement3) {\n        var cipherTransform;\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                        return this.makeInlineImage(arguement1, arguement2, arguement3);\n                    }\n                    else if (arguement1 instanceof _CipherTransform) {\n                        return this.makeInlineImage(arguement1);\n                    }\n                    else {\n                        return this.makeInlineImage();\n                    }\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        var entry = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            entry = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            cipherTransform = arguement1;\n                            entry = this.getObject(arguement1);\n                        }\n                        else {\n                            entry = this.getObject(arguement1);\n                        }\n                        if (array.length === 0 && _isName(entry, 'Indexed')) {\n                            this._isColorSpace = true;\n                        }\n                        entry = _decodeText(entry, this._isColorSpace, this._isPassword);\n                        array.push(entry);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this._isColorSpace = false;\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        if (key === 'U' || key === 'O' || key === 'ID') {\n                            this._isPassword = true;\n                        }\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                        }\n                        var value = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            value = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            value = this.getObject(arguement1);\n                        }\n                        else {\n                            value = this.getObject();\n                        }\n                        value = _decodeText(value, this._isColorSpace, this._isPassword);\n                        this._isPassword = false;\n                        dictionary.set(key, value);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            if (arguement1 instanceof _CipherTransform) {\n                                cipherTransform = arguement1;\n                            }\n                            else if (arguement3 && typeof arguement2 === 'number') {\n                                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            }\n                            if (typeof arguement2 === 'boolean' && arguement2) {\n                                return this.makeStream(dictionary, cipherTransform, arguement2);\n                            }\n                            else {\n                                return this.makeStream(dictionary, cipherTransform);\n                            }\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (arguement1, arguement2, arguement3) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        var cipherTransform;\n        if (arguement3) {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n        }\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            if (arguement1 instanceof _CipherTransform) {\n                dictionary.set(key, this.getObject(arguement1));\n            }\n            else {\n                dictionary.set(key, this.getObject(arguement1, arguement2, arguement3));\n            }\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform, makeFilter) {\n        if (makeFilter === void 0) { makeFilter = false; }\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (!makeFilter) {\n            if (cipherTransform) {\n                stream = cipherTransform.createStream(stream, length);\n            }\n            stream = this.filter(stream, dictionary, length);\n        }\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString, _stringToBigEndianBytes, _getSize, _compressStream } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._offsetReference = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n        this._offsets = [];\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n        if (typeof this._prevXRefOffset === 'undefined' || this._prevXRefOffset === null) {\n            this._prevXRefOffset = startXRef;\n        }\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        var entrySize = trailerDictionary.get('Size');\n        if (this._entries.length < entrySize || this._entries.length === entrySize) {\n            this._nextReferenceNumber = entrySize;\n        }\n        else if (this._entries.length > entrySize) {\n            this._nextReferenceNumber = this._entries.length > 0 ? this._entries.length : 1;\n        }\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._document.fileStructure.isIncrementalUpdate) {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n            }\n            else {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.table;\n            }\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, makeFilter) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, false, this._encrypt);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !makeFilter) {\n            entry = parser.getObject(reference.objectNumber, reference.generationNumber, true);\n        }\n        else {\n            entry = parser.getObject(null, makeFilter);\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var buffer = [37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        if (!this._document.fileStructure.isIncrementalUpdate) {\n            this._currentLength = 0;\n            var objectCollection = new _PdfMainObjectCollection(this);\n            this._writeObjectCollection(objectCollection._mainObjectCollection, buffer);\n            var stream = new _PdfStream(buffer);\n            this._stream = stream;\n            this._document._stream = stream;\n            var array = new Uint8Array(this._stream.length);\n            array.set(this._stream.bytes);\n            array.set(buffer, 0);\n            return array;\n        }\n        else {\n            this._currentLength = this._stream.length;\n            var buffer_1 = [37, 80, 68, 70, 45];\n            this._writeString(\"\" + this._version + this._newLine, buffer_1);\n            buffer_1.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n            this._writeString(this._newLine, buffer_1);\n            if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                this._saveAsStream(this._currentLength, buffer_1);\n            }\n            else {\n                this._saveAsTable(this._currentLength, buffer_1);\n            }\n            var array = new Uint8Array(this._stream.length + buffer_1.length);\n            array.set(this._stream.bytes);\n            array.set(buffer_1, this._stream.length);\n            return array;\n        }\n    };\n    _PdfCrossReference.prototype._saveAsStream = function (currentLength, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var cipher = void 0;\n                if (_this._encrypt) {\n                    cipher = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                }\n                _this._updatedDictionary(currentLength, key, buffer, value, cipher);\n            }\n        });\n        this._cacheMap.forEach(function (value, key) {\n            if (value instanceof _PdfDictionary) {\n                if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                    _this._writeArchieveStream(objectStreamCollection, key, value);\n                }\n            }\n            else if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    _this._updatedDictionary(currentLength, key, buffer, value);\n                }\n            }\n        });\n        this._objectStream = undefined;\n        this._objectStreamCollection = objectStreamCollection;\n        this._writeXrefStream(buffer);\n    };\n    _PdfCrossReference.prototype._updatedDictionary = function (currentLength, key, buffer, value, // eslint-disable-line\n    cipher) {\n        this._indexes.push(key.objectNumber, 1);\n        this._offsets.push(currentLength + buffer.length);\n        this._writeObject(value, buffer, key, cipher);\n        value._updated = false;\n    };\n    _PdfCrossReference.prototype._writeXrefStream = function (buffer) {\n        var _this = this;\n        this._objectStreamCollection.forEach(function (value, key) {\n            value._save(buffer, _this._currentLength);\n            for (var i = 0; i < value._collection.length; i++) {\n                _this._indexes.push(value._collection[Number.parseInt(i.toString(), 10)]);\n            }\n            _this._indexes.push(key.objectNumber, 1);\n        });\n        var formatValue = Math.max(_getSize(this._currentLength + buffer.length), _getSize(this._nextReferenceNumber));\n        var newRef = this._getNextReference();\n        this._indexes.push(newRef.objectNumber, 1);\n        var newStartXref = this._currentLength + buffer.length;\n        var newXref = new _PdfDictionary(this);\n        newXref.set('Type', _PdfName.get('XRef'));\n        newXref.set('Index', this._indexes);\n        newXref.set('W', [1, formatValue, 1]);\n        this._copyTrailer(newXref);\n        if (this._ids && this._ids.length > 0) {\n            newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n        }\n        var newXrefData = [];\n        this._writeLong(0, 1, newXrefData);\n        this._writeLong(0, formatValue, newXrefData);\n        this._writeLong(-1, 1, newXrefData);\n        if (this._offsets.length > 0) {\n            for (var index = 0; index < this._offsets.length; index++) {\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(this._offsets[index], formatValue, newXrefData); // eslint-disable-line\n                this._writeLong(0, 1, newXrefData);\n            }\n        }\n        if (this._objectStreamCollection.size > 0) {\n            this._objectStreamCollection.forEach(function (value, key) {\n                for (var index = 0; index < value._length; index++) {\n                    _this._writeLong(2, 1, newXrefData);\n                    _this._writeLong(key.objectNumber, formatValue, newXrefData);\n                    _this._writeLong(index, 1, newXrefData);\n                }\n                _this._writeLong(1, 1, newXrefData);\n                _this._writeLong(value._archiveOffset, formatValue, newXrefData);\n                _this._writeLong(0, 1, newXrefData);\n            });\n        }\n        this._writeLong(1, 1, newXrefData);\n        this._writeLong(newStartXref, formatValue, newXrefData);\n        this._writeLong(0, 1, newXrefData);\n        newXref.set('Length', newXrefData.length);\n        var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n        var cipher;\n        if (this._encrypt) {\n            cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n        }\n        this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._saveAsTable = function (currentLength, buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfDictionary) {\n                dictionary = value;\n            }\n            else if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var offsetString = _this._processString((currentLength + buffer.length).toString(), 10);\n                var genString = _this._processString(key.generationNumber.toString(), 5);\n                tempBuffer += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                _this._writeObject(value, buffer, key);\n            }\n        });\n        var newStartXref = buffer.length + currentLength;\n        this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._writeXref = function (buffer, tempBuffer, newStartXref) {\n        this._writeString(tempBuffer, buffer);\n        this._writeString(\"trailer\" + this._newLine, buffer);\n        var newXref = new _PdfDictionary(this);\n        this._copyTrailer(newXref);\n        this._writeDictionary(newXref, buffer, this._newLine);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeXrefTable = function (buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        var collection = this._getSortedReferences(this._offsetReference); // eslint-disable-line\n        collection.forEach(function (value, key) {\n            var offsetString = _this._processString(value.toString(), 10);\n            var genString = _this._processString(key.generationNumber ? '0' : '', 5);\n            if (value !== 0) {\n                tempBuffer += offsetString + \" \" + genString + \" n\" + _this._newLine;\n            }\n            else {\n                tempBuffer += offsetString + \" \" + genString + \" f\" + _this._newLine;\n            }\n        });\n        var newStartXref = buffer.length;\n        var xrefHeader = \"xref\" + this._newLine;\n        var xrefEntry = \"0 \" + (collection.size + 1) + this._newLine;\n        var initialEntry = \"0000000000 65535 f\" + this._newLine;\n        this._writeString(xrefHeader + xrefEntry + initialEntry, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._processString = function (value, length) {\n        while (value.length < length) {\n            value = '0' + value;\n        }\n        return value;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        var reference = this._getNextReference();\n        newXref.set('Size', reference.objectNumber);\n        if (this._document.fileStructure.isIncrementalUpdate) {\n            newXref.set('Prev', this._prevXRefOffset);\n        }\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, // eslint-disable-line\n    buffer, reference, transform, isCrossReference) {\n        var _this = this;\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        else if (Array.isArray(obj) && obj.length > 0) {\n            this._writeString('[ ', buffer);\n            obj.forEach(function (value, index) {\n                if (value instanceof _PdfReference) {\n                    _this._writeString(value.objectNumber + \" \" + value.generationNumber + \" R\", buffer);\n                }\n                else if (Array.isArray(value)) {\n                    _this._writeString('[ ', buffer);\n                    value.forEach(function (nestedValue) {\n                        if (nestedValue instanceof _PdfReference) {\n                            _this._writeString(nestedValue.objectNumber + \" \" + nestedValue.generationNumber + \" R\", buffer);\n                        }\n                        else if (nestedValue instanceof _PdfName) {\n                            _this._writeString(\"/\" + nestedValue.name, buffer);\n                        }\n                        else {\n                            _this._writeString(nestedValue + \" \", buffer);\n                        }\n                    });\n                    _this._writeString(']', buffer);\n                }\n                else if (value instanceof _PdfName) {\n                    _this._writeString(\"/\" + value.name, buffer);\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, buffer, _this._newLine, transform, isCrossReference);\n                }\n                else {\n                    _this._writeString(value + \"\\n\", buffer);\n                }\n                if (index < obj.length - 1) {\n                    _this._writeString(' ', buffer);\n                }\n            });\n            this._writeString(']', buffer);\n            this._writeString('\\n', buffer);\n        }\n        else if (typeof obj === 'number') {\n            this._writeString(obj + \"\\n\", buffer);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var value;\n        var streamBuffer = [];\n        if (!isCrossReference) {\n            if (stream._isCompress && !stream._isImage) {\n                value = _compressStream(stream);\n            }\n            else {\n                value = stream.getString();\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        else {\n            value = stream.getString();\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            if (value.name.indexOf(' ') !== -1) {\n                value.name = value.name.replace(/ /g, '#20'); // eslint-disable-line\n            }\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            var isUnicode = false;\n            for (var i = 0; i < value.length; i++) {\n                if (value.charCodeAt([i]) > 255) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            if (isUnicode) {\n                this._writeUnicodeString(value, buffer);\n            }\n            else {\n                this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeUnicodeString = function (value, buffer) {\n        var byteValues = _stringToBigEndianBytes(value);\n        byteValues.unshift(254, 255);\n        var data = [];\n        for (var i = 0; i < byteValues.length; i++) {\n            var byte = byteValues[Number.parseInt(i.toString(), 10)];\n            switch (byte) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                default:\n                    data.push(byte);\n                    break;\n            }\n        }\n        buffer.push('('.charCodeAt(0) & 0xff);\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[Number.parseInt(i.toString(), 10)] & 0xff);\n        }\n        buffer.push(')'.charCodeAt(0) & 0xff);\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        if (this._pendingRefs) {\n            this._pendingRefs.clear();\n            this._pendingRefs = undefined;\n        }\n        if (this._cacheMap) {\n            this._cacheMap.clear();\n        }\n        if (this._offsetReference) {\n            this._offsetReference.clear();\n        }\n        if (this._objectStreamCollection) {\n            this._objectStreamCollection.clear();\n        }\n        this._offsets = [];\n        this._startXRefQueue = [];\n        this._root = undefined;\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    _PdfCrossReference.prototype._writeObjectCollection = function (objectCollection, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        objectCollection.forEach(function (value, key) {\n            _this._writeObjectToBuffer(key, value, buffer, objectStreamCollection);\n        });\n        if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            this._objectStream = undefined;\n            this._objectStreamCollection = objectStreamCollection;\n            this._writeXrefStream(buffer);\n        }\n        else {\n            this._writeXrefTable(buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeArchieveStream = function (objectStreamCollection, key, value) {\n        if (typeof this._objectStream === 'undefined' || this._objectStream._length === 100) {\n            var archiveObj = new _PdfArchievedStream(this);\n            objectStreamCollection.set(archiveObj._reference, archiveObj);\n            this._objectStream = archiveObj;\n        }\n        this._objectStream._writeObject(key, value);\n    };\n    _PdfCrossReference.prototype._writeObjectToBuffer = function (key, value, buffer, // eslint-disable-line\n    objectStreamCollection) {\n        var cipher;\n        if (value instanceof _PdfDictionary && value.isCatalog) {\n            this._writeToBuffer(buffer, key, value);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var type = value.get('Filter');\n            var typeIsFilter = type && type.name === 'Standard';\n            if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                if (!typeIsFilter) {\n                    this._writeArchieveStream(objectStreamCollection, key, value);\n                }\n                else {\n                    this._writeToBuffer(buffer, key, value);\n                }\n            }\n            else {\n                this._offsetReference.set(key, buffer.length);\n                this._indexes.push(key.objectNumber, 1);\n                this._writeObject(value, buffer, key);\n            }\n        }\n        else {\n            if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && !dictionary.isCatalog) {\n                    if (this._encrypt) {\n                        cipher = this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    dictionary._updated = false;\n                }\n            }\n            else if ((!Array.isArray(value) || value.length === 0) && typeof value !== 'number') {\n                return;\n            }\n            this._writeToBuffer(buffer, key, value, cipher);\n        }\n    };\n    _PdfCrossReference.prototype._writeToBuffer = function (buffer, key, value, cipher) {\n        this._offsets.push(buffer.length);\n        this._offsetReference.set(key, buffer.length);\n        this._indexes.push(key.objectNumber, 1);\n        this._writeObject(value, buffer, key, cipher);\n    };\n    _PdfCrossReference.prototype._getSortedReferences = function (collection) {\n        var entriesArray = []; // eslint-disable-line\n        collection.forEach(function (value, key) {\n            entriesArray.push([key, value]);\n        });\n        entriesArray.sort(function (a, b) {\n            return a[0].objectNumber - b[0].objectNumber;\n        });\n        var sortedCollection = new Map(); // eslint-disable-line\n        var lastObjectNumber = 1;\n        for (var _i = 0, entriesArray_1 = entriesArray; _i < entriesArray_1.length; _i++) {\n            var _a = entriesArray_1[_i], key = _a[0], value = _a[1];\n            var currentObjectNumber = key.objectNumber;\n            while (lastObjectNumber < currentObjectNumber) {\n                sortedCollection.set({ objectNumber: lastObjectNumber }, 0);\n                lastObjectNumber++;\n            }\n            sortedCollection.set(key, value);\n            lastObjectNumber = currentObjectNumber + 1;\n        }\n        return sortedCollection;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\nvar _PdfArchievedStream = /** @class */ (function () {\n    function _PdfArchievedStream(crossReference) {\n        this._indexes = '';\n        this._length = 0;\n        this._crossReference = crossReference;\n        this._reference = crossReference._getNextReference();\n        this._archiveXRef = '';\n        this._updatedStream = [];\n        this._collection = [];\n    }\n    _PdfArchievedStream.prototype._writeObject = function (key, value) {\n        this._archiveXRef += key.objectNumber + \" \" + this._updatedStream.length + this._crossReference._newLine;\n        this._collection.push(key.objectNumber, 1);\n        this._crossReference._writeObject(value, this._updatedStream);\n        this._length++;\n    };\n    _PdfArchievedStream.prototype._save = function (buffer, currentLength) {\n        var data = [];\n        this._crossReference._writeString(this._archiveXRef, data);\n        this._crossReference._writeBytes(this._updatedStream, data);\n        var newDict = new _PdfDictionary(this._crossReference);\n        newDict.set('Type', _PdfName.get('ObjStm'));\n        newDict.set('N', this._length);\n        newDict.set('First', this._archiveXRef.length);\n        newDict.set('Length', data.length);\n        var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n        this._archiveOffset = currentLength + buffer.length;\n        var cipher;\n        if (this._crossReference._encrypt) {\n            cipher = this._crossReference._encrypt._createCipherTransform(this._reference.objectNumber, this._reference.generationNumber);\n        }\n        this._crossReference._writeObject(archiveStream, buffer, this._reference, cipher);\n    };\n    return _PdfArchievedStream;\n}());\nvar _PdfMainObjectCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_PdfMainObjectCollection` class.\n     *\n     * @private\n     * @param { _PdfCrossReference } collection - The cross-reference collection containing the PDF objects.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Create a new object collection instance\n     * let mainObjectCollection = new _PdfMainObjectCollection(document._crossReference);\n     * // Access the main object collection\n     * let objects = mainObjectCollection._mainObjectCollection;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function _PdfMainObjectCollection(collection) {\n        var _this = this;\n        this._pointer = 0;\n        if (!(collection._cacheMap instanceof Map)) {\n            throw new Error('Expected _cacheMap to be a Map.');\n        }\n        this._reference = [];\n        this._cache = collection._cacheMap;\n        this._mainObjectCollection = new Map(); // eslint-disable-line\n        var foundCatalog = false;\n        this._crossReference = collection;\n        this._cache.forEach(function (value, key) {\n            if (!foundCatalog && value instanceof _PdfDictionary && value.isCatalog) {\n                _this._addToMainObjectCollection(key, value);\n                foundCatalog = true;\n            }\n        });\n        this._parseObjectCollection();\n    }\n    _PdfMainObjectCollection.prototype._parseObjectCollection = function () {\n        var _this = this;\n        var _loop_1 = function () {\n            var collection = new Map(); // eslint-disable-line\n            var currentIndex = 0;\n            this_1._mainObjectCollection.forEach(function (value, key) {\n                if (currentIndex === _this._pointer) {\n                    collection.set(key, value);\n                    _this._parse(key, value);\n                }\n                currentIndex++;\n            });\n            this_1._pointer++;\n        };\n        var this_1 = this;\n        while (this._pointer < this._mainObjectCollection.size) {\n            _loop_1();\n        }\n        this._addReferencesToMainCollection();\n        return this._mainObjectCollection;\n    };\n    _PdfMainObjectCollection.prototype._addToMainObjectCollection = function (key, value) {\n        this._reference.push(key);\n        this._mainObjectCollection.set(key, value);\n    };\n    _PdfMainObjectCollection.prototype._parseFetchValue = function (reference) {\n        var fetchvalue = this._crossReference._fetch(reference); // eslint-disable-line\n        this._parse(reference, fetchvalue);\n    };\n    _PdfMainObjectCollection.prototype._parse = function (key, value) {\n        var _this = this;\n        if (value instanceof _PdfDictionary) {\n            this._parseDictionary(value);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._parseStream(key, value);\n        }\n        else if (value instanceof _PdfReference) {\n            this._parseFetchValue(value);\n        }\n        else if (Array.isArray(value) && value.length > 0) {\n            var isPdfReferenceArray = value.every(function (value) { return value instanceof _PdfReference; }); // eslint-disable-line\n            if (isPdfReferenceArray) {\n                value.forEach(function (ref) { return _this._parseFetchValue(ref); }); // eslint-disable-line\n            }\n            else {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        _this._parseFetchValue(item);\n                    }\n                });\n                if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                    this._addToMainObjectCollection(key, value);\n                }\n            }\n        }\n        else if (typeof value === 'number') {\n            if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                this._addToMainObjectCollection(key, value);\n            }\n        }\n    };\n    _PdfMainObjectCollection.prototype._addReferencesToMainCollection = function () {\n        var _this = this;\n        var objectsToWrite = []; // eslint-disable-line\n        this._cache.forEach(function (value, key) {\n            if (!_this._mainObjectCollection.has(key)) {\n                objectsToWrite.push({ key: key, value: value });\n            }\n        });\n        objectsToWrite.forEach(function (_a) {\n            var key = _a.key, value = _a.value;\n            _this._addToMainObjectCollection(key, value);\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseDictionary = function (element) {\n        var _this = this;\n        element.forEach(function (key, value) {\n            var processReference = function (ref) {\n                if (!_this._mainObjectCollection.has(ref) && _this._reference.indexOf(ref) === -1) {\n                    var fetchValue = _this._crossReference._fetch(ref); // eslint-disable-line\n                    if (fetchValue instanceof _PdfReference) {\n                        fetchValue = _this._crossReference._fetch(fetchValue);\n                    }\n                    if (fetchValue instanceof _PdfBaseStream) {\n                        _this._parseStream(ref, fetchValue);\n                    }\n                    else {\n                        _this._addToMainObjectCollection(ref, fetchValue);\n                    }\n                }\n            };\n            if (value instanceof _PdfReference) {\n                processReference(value);\n            }\n            else if (Array.isArray(value)) {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        processReference(item);\n                    }\n                    else if (item instanceof _PdfDictionary) {\n                        _this._parseDictionary(item);\n                    }\n                });\n            }\n            else if (value instanceof _PdfDictionary) {\n                _this._parseDictionary(value);\n            }\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseStream = function (key, element) {\n        this._parseDictionary(element.dictionary);\n        if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n            var type = element.dictionary.get('Type');\n            var subtype = element.dictionary.get('Subtype');\n            var isUpdated = element.dictionary._updated;\n            var uncompressedValue = void 0;\n            if (isUpdated || (type && (type.name === 'XObject' || type.name === 'Metadata') &&\n                (subtype.name === 'Form' || subtype.name === 'XML'))) {\n                uncompressedValue = this._crossReference._fetch(key);\n            }\n            else {\n                uncompressedValue = this._crossReference._fetch(key, true);\n                uncompressedValue._isCompress = false;\n            }\n            this._addToMainObjectCollection(key, uncompressedValue);\n        }\n    };\n    return _PdfMainObjectCollection;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex, _isNullOrUndefined } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfWidgetAnnotation } from './../annotations/annotation';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._isDefaultAppearance = false;\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._isNeedAppearances = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n            this._isNeedAppearances = true;\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                field = this._parseFields(dictionary, ref);\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    PdfForm.prototype._parseFields = function (dictionary, reference) {\n        var field;\n        if (dictionary) {\n            var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n            var fieldFlags = 0;\n            var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n            if (typeof flag !== 'undefined') {\n                fieldFlags = flag;\n            }\n            if (key) {\n                switch (key.name.toLowerCase()) {\n                    case 'tx':\n                        field = PdfTextBoxField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                    case 'btn':\n                        if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                            field = PdfButtonField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                            field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfCheckBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'ch':\n                        if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                            field = PdfComboBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfListBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'sig':\n                        field = PdfSignatureField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._root._updated = true;\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        this._isNeedAppearances = true;\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = void 0;\n                    if (item) {\n                        page = item._getPage();\n                        if (page) {\n                            page._removeAnnotation(item._ref);\n                        }\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n            this._reorderParsedAnnotations(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    PdfForm.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedFields.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedFields = result;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._isDefaultAppearance = value;\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (_isNullOrUndefined(this._fieldCollection) && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var hasNoKids = false;\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(fieldDictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                hasNoKids = true;\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (fieldDictionary) {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        if (hasNoKids && (fieldFlags & _FieldFlag.radio) !== 0) {\n                            continue;\n                        }\n                        else {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (_isNullOrUndefined(kids) && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (_isNullOrUndefined(entry)) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (dictionary && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference && kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference && kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (kidDictionary && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten, pageToImport) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field && !field._isLoaded && typeof field._tabIndex !== 'undefined' && field._tabIndex >= 0) {\n                var page = field._page;\n                if (page &&\n                    page._pageDictionary.has('Annots') &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual || this._tabOrder === PdfFormFieldsTabOrder.manual)) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    for (var i_1 = 0; i_1 < field.itemsCount; i_1++) {\n                        var item = field.itemAt(i_1);\n                        if (item && item instanceof PdfWidgetAnnotation) {\n                            var index = annots.indexOf(item._ref);\n                            if (index < 0) {\n                                index = field._annotationIndex;\n                            }\n                            if (index >= 0) {\n                                var annotations = page.annotations._reArrange(field._ref, field._tabIndex, index);\n                                page._pageDictionary.update('Annots', annotations);\n                                page._pageDictionary._updated = true;\n                            }\n                        }\n                    }\n                }\n            }\n            if (field && ((pageToImport && field.page === pageToImport) || !pageToImport)) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten || (isFlatten && pageToImport && field.page === pageToImport)) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && !page1._isNew && page1 instanceof PdfPage && page2 && !page2._isNew && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none ||\n                        this._tabOrder === PdfFormFieldsTabOrder.structure ||\n                        this._tabOrder === PdfFormFieldsTabOrder.widget) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary && dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (_isNullOrUndefined(kids) && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (_isNullOrUndefined(this._annotationObjects) && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (_isNullOrUndefined(this._table) && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary) {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    if (annotations._comments && annotations._comments.length > 0) {\n                                        annotations._comments = [];\n                                    }\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (this._groupHolders && this._groupHolders.length > 0) {\n                for (var i = 0; i < this._groupHolders.length; i++) {\n                    var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                    if (dictionary && dictionary.has('IRT')) {\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo) {\n                            if (this._groupReferences && this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n            }\n            this._groupHolders = [];\n            this._groupReferences = new Map();\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (_this._crossReference && _this._crossReference._fetch && primitive) {\n                            var inReplyToDictionary = _this._crossReference._fetch(primitive);\n                            if (inReplyToDictionary && inReplyToDictionary.has('NM')) {\n                                var input = inReplyToDictionary.get('NM');\n                                if (input !== null && typeof input !== 'undefined') {\n                                    _this.fdfString += '(' + _this._getFormattedString(input) + ')';\n                                }\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (_isNullOrUndefined(array) && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n        this._incrementalUpdate = true;\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFileStructure.prototype, \"isIncrementalUpdate\", {\n        /**\n         * Gets the boolean flag indicating whether the update is incremental.\n         *\n         * @returns { boolean } - Returns true if the PDF document supports incremental updates, otherwise false\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the incremental update\n         * let incrementalUpdate: boolean = fileStructure.isIncrementalUpdate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._incrementalUpdate;\n        },\n        /**\n         * Sets the boolean flag indicating whether the update is incremental.\n         *\n         * @param {boolean} value - If `true`, enables incremental updates for the PDF document; otherwise, disables it.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the incremental updates\n         * fileStructure.isIncrementalUpdate = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._incrementalUpdate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","/**\n * `PdfPageImportOptions` class represents to customize the support of import PDF pages\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Options to customize the support of import PDF pages.\n * let options: PdfPageImportOptions = new PdfPageImportOptions();\n * // Sets the target page index to import\n * options.targetIndex = 1;\n * // Sets the rotation angle of the page to import\n * options.rotation = PdfRotationAngle.angle180;\n * // Sets the boolean value indicating whether the optimize resources while import pages or not\n * options.optimizeResources = true;\n * // Copy the first page and add it as second page with page rotation\n * document.importPage(0, options);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageImportOptions = /** @class */ (function () {\n    function PdfPageImportOptions() {\n        this._optimizeResources = true;\n        this._groupFormFields = false;\n    }\n    Object.defineProperty(PdfPageImportOptions.prototype, \"targetIndex\", {\n        /**\n         * Gets the target page index to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the target page index to import\n         * let targetIndex: number = options.targetIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._targetIndex;\n        },\n        /**\n         * Sets the target page index to import\n         *\n         * @param {number} value Target page index to import.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the target page index to import\n         * options.targetIndex = 1;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._targetIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the rotation angle of the page to import\n         * let rotation: PdfRotationAngle = options.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the page to import\n         *\n         * @param {PdfRotationAngle} value Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the rotation angle of the page to import\n         * options.rotation = PdfRotationAngle.angle270;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"optimizeResources\", {\n        /**\n         * Gets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @returns {boolean} Indicates resource optimization.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the optimize resources while import pages or not\n         * let resource: optimizeResources = options.optimizeResources;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._optimizeResources;\n        },\n        /**\n         * Sets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @param {boolean} value Indicates resource optimization.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the optimize resources while import pages or not\n         * options.optimizeResources = true;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._optimizeResources = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"groupFormFields\", {\n        /**\n         * Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @returns {boolean} value Indicates form fields grouping.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * let groupFormfields: number = options.groupFormFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._groupFormFields;\n        },\n        /**\n         * Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @param {boolean} value Indicates form fields grouping\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * options.groupFormFields = true;\n         * // Copy the first page and add it as second page.\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._groupFormFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageImportOptions;\n}());\nexport { PdfPageImportOptions };\n","import { PdfWidgetAnnotation } from './annotations/annotation';\nimport { PdfPageOrientation } from './enumerator';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfButtonField, PdfCheckBoxField, PdfComboBoxField, PdfListField, PdfRadioButtonListField, PdfSignatureField, PdfTextBoxField } from './form/field';\nimport { PdfPageSettings } from './pdf-document';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfDestination } from './pdf-page';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _getItemValue } from './utils';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './base-stream';\nvar _PdfMergeHelper = /** @class */ (function () {\n    function _PdfMergeHelper(crossReference, destination, source, pageReference, options) {\n        this._namedDestinations = []; // eslint-disable-line\n        this._bookmarks = []; // eslint-disable-line\n        this._fields = []; // eslint-disable-line\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference = new Map();\n        this._destination = []; // eslint-disable-line\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._isLayersPresent = false;\n        this._fieldNames = [];\n        this._options = new PdfPageImportOptions();\n        this._kidsReference = []; // eslint-disable-line\n        this._formFieldsCollection = new Map();\n        this._formFields = [];\n        this._isDuplicatePage = false;\n        this._fieldCount = 0;\n        this._crossReference = crossReference;\n        this._destinationDocument = destination;\n        this._sourceDocument = source;\n        this._pageReference = pageReference;\n        if (typeof options !== 'undefined') {\n            this._options = options;\n        }\n        this._copier = new _PdfCopier(this._crossReference, this._sourceDocument._crossReference);\n    }\n    _PdfMergeHelper.prototype._importPages = function (page, index, layers, isCopiedPage, options, isSplitDocument) {\n        var _this = this;\n        var template;\n        var newPage;\n        var pageDictionary = page._pageDictionary;\n        this._isDuplicatePage = isCopiedPage;\n        if (!options) {\n            this._options.rotation = page.rotation;\n        }\n        else {\n            this._options.rotation = options.rotation;\n        }\n        if (typeof index === 'number') {\n            newPage = this._insertNewPage(page, index);\n        }\n        else if (this._isDuplicatePage) {\n            newPage = this._insertNewPage(page, page._pageIndex + 1);\n        }\n        else {\n            newPage = this._insertNewPage(page);\n        }\n        if ((isCopiedPage || isSplitDocument) && this._options.optimizeResources) {\n            var newContents_1 = []; // eslint-disable-line\n            pageDictionary.forEach(function (key, value) {\n                if (key === 'Contents' && newContents_1.length === 0) {\n                    var contents = value; // eslint-disable-line\n                    if (contents instanceof _PdfReference) {\n                        var pageContent = isSplitDocument ? _this._copier._copy(contents) : contents; // eslint-disable-line\n                        newPage._pageDictionary.update(key, pageContent);\n                    }\n                    else if (contents instanceof Array) {\n                        for (var i = 0; i < contents.length; i++) {\n                            var newContent = isSplitDocument ? (_this._copier._copy(contents[Number.parseInt(i.toString(), 10)])) : // eslint-disable-line\n                                contents[Number.parseInt(i.toString(), 10)];\n                            newContents_1.push(newContent);\n                        }\n                        newPage._pageDictionary.update(key, newContents_1);\n                    }\n                }\n                else if (key === 'Resources' && value) {\n                    var resourceValue = isSplitDocument ? _this._copier._copy(value) : value; // eslint-disable-line\n                    if (resourceValue) {\n                        newPage._pageDictionary.update(key, resourceValue);\n                    }\n                }\n                else if (key !== 'Resources' && key !== 'MediaBox' && key !== 'CropBox' && key !== 'Parent' && key !== 'Annots'\n                    && key !== 'Contents' && key !== 'Rotate') {\n                    newPage._pageDictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            template = page._contentTemplate;\n            newPage.graphics.drawTemplate(template, { x: 0, y: 0, width: template._size[0], height: template._size[1] });\n            template._content.dictionary.update('Resources', this._copier._copy(pageDictionary.getRaw('Resources')));\n            this._pageReference.set(pageDictionary, newPage);\n            if (!isCopiedPage) {\n                this._bookmarksPageLinkReference.set(page._ref, newPage._pageIndex);\n            }\n        }\n        if (pageDictionary.has('Annots')) {\n            this._importAnnotation(page, newPage);\n            if (typeof this._options !== 'undefined' && this._options.groupFormFields && this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._formFieldsGroupingSupport(this._sourceDocument.form, page, newPage);\n            }\n            else if (this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._importFormField(page, this._sourceDocument.form, newPage, this._sourceDocument._crossReference);\n            }\n        }\n        if (!isCopiedPage) {\n            var bookMarkMap = this._sourceDocument._parseBookmarkDestination();\n            if (bookMarkMap && bookMarkMap.has(page)) {\n                var bookmarks = bookMarkMap.get(page);\n                for (var i = 0; i < bookmarks.length; i++) {\n                    this._bookmarks.push(bookmarks[Number.parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if ((!isCopiedPage && layers) || !this._options.optimizeResources) {\n            this._mergeLayer(newPage._pageDictionary, pageDictionary, this._sourceDocument._crossReference);\n        }\n        newPage._pageDictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importAnnotation = function (page, newPage) {\n        var array = []; // eslint-disable-line\n        var dest; // eslint-disable-line\n        var isDestination = false;\n        var oldCollection = page.annotations;\n        var count = oldCollection.count;\n        for (var i = 0; i < count; i++) {\n            var annotationReference = oldCollection._annotations[Number.parseInt(i.toString(), 10)];\n            if (annotationReference) {\n                var annotationDictionary = this._sourceDocument._crossReference._fetch(annotationReference);\n                if (annotationDictionary) {\n                    if (annotationDictionary.has('Dest')) {\n                        dest = [];\n                        var destinationArray = annotationDictionary.get('Dest'); // eslint-disable-line\n                        var destination = annotationDictionary._get('Dest'); // eslint-disable-line\n                        if (destinationArray instanceof Array) {\n                            var destArray = destinationArray; // eslint-disable-line\n                            for (var j = 0; j < destArray.length; j++) {\n                                dest.push(destArray[Number.parseInt(j.toString(), 10)]);\n                            }\n                            isDestination = true;\n                        }\n                        else if (destination instanceof _PdfReference) {\n                            dest.push(destination);\n                        }\n                    }\n                    if (dest && dest.length > 0) {\n                        this._destination.push(dest);\n                    }\n                    if (annotationDictionary.has('OC')) {\n                        var reference = annotationDictionary.getRaw('OC'); // eslint-disable-line\n                        if (reference instanceof _PdfReference) {\n                            this._annotationLayer.set(i, reference);\n                        }\n                    }\n                    var copiedAnnotationReference = this._copier._copy(annotationReference);\n                    var copiedAnnotationDictionary = this._destinationDocument._crossReference.\n                        _fetch(copiedAnnotationReference);\n                    if (isDestination) {\n                        copiedAnnotationDictionary.update('Dest', dest);\n                    }\n                    copiedAnnotationDictionary.update('P', newPage._ref);\n                    this._crossReference._cacheMap.set(copiedAnnotationReference, copiedAnnotationDictionary);\n                    array.push(copiedAnnotationReference);\n                }\n            }\n            isDestination = false;\n            dest = [];\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._formFieldsGroupingSupport = function (form, oldPage, newPage) {\n        var array = [];\n        var fieldNames = [];\n        var kidsArray = [];\n        var formFields;\n        var drEntry = form._dictionary.get('DR');\n        if (form._dictionary.has('DR')) {\n            drEntry = form._dictionary.get('DR');\n        }\n        if (newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        if (oldPage._pageDictionary.has('Annots')) {\n            kidsArray = oldPage._pageDictionary.get('Annots');\n        }\n        if (!this._isDuplicatePage) {\n            formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                fieldNames.push(formFields.fieldAt(k).name);\n            }\n        }\n        for (var i = 0; i < form.count; i++) {\n            var field = form.fieldAt(i);\n            var formField = void 0;\n            var destinationKids = [];\n            var sourceKids = field._dictionary.get('Kids');\n            if (fieldNames.indexOf(field.name) !== -1 || this._isDuplicatePage) {\n                if (!this._isDuplicatePage) {\n                    formField = formFields.fieldAt(fieldNames.indexOf(field.name));\n                    if (formField._dictionary.get('Kids')) {\n                        destinationKids = formField._dictionary.get('Kids');\n                    }\n                }\n                else {\n                    formField = field;\n                    destinationKids = sourceKids;\n                }\n                field._isDuplicatePage = true;\n                if ((field instanceof PdfSignatureField && formField instanceof PdfSignatureField) || !(field instanceof\n                    PdfSignatureField)) {\n                    if (sourceKids !== undefined && sourceKids.length > 0) {\n                        for (var j = 0; j < sourceKids.length; j++) {\n                            var fieldItem = field.itemAt(j); // eslint-disable-line\n                            if (fieldItem.page === oldPage) {\n                                formField._page = newPage;\n                                array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, j, i, drEntry, fieldItem);\n                            }\n                        }\n                    }\n                    else {\n                        array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, 0, i, drEntry);\n                    }\n                }\n            }\n            else {\n                array = this._insertFormFields(i, form._crossReference, field, form, newPage._ref, array, kidsArray);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._groupFormFieldsKids = function (destinationField, field, kidsArray, destKids, oldKids, ref, array, index, fieldIndex, drEntry, widget) {\n        if (field._dictionary.has('Kids') && destinationField._dictionary.has('Kids')) {\n            if (kidsArray.indexOf(oldKids[Number.parseInt(index.toString(), 10)]) !== -1) {\n                var oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n                var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n                dictionary.update('P', ref);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                array.push(reference);\n                dictionary.update('Parent', destinationField._ref);\n                destKids.push(reference);\n                dictionary._updated = true;\n                destinationField._dictionary._updated = true;\n                if (!this._isDuplicatePage) {\n                    if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n                        delete dictionary._map.AS;\n                    }\n                    this._createAppearance(destinationField, field, oldDictionary, dictionary, drEntry, widget);\n                }\n            }\n        }\n        else if (field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids') || this._isDuplicatePage) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary, !this._isDuplicatePage);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, destinationField._dictionary);\n        }\n        else if ((!field._dictionary.has('Kids') && destinationField._dictionary.has('Kids'))) {\n            var fieldDict = this._copier._copyDictionary(field._dictionary);\n            this._updateFieldDictionary(fieldDict, ref, destinationField._ref);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, fieldDict);\n            destKids.push(reference);\n            array.push(reference);\n            destinationField._dictionary._updated = true;\n            this._createAppearance(destinationField, field, field._dictionary, fieldDict, drEntry, widget);\n        }\n        else if (!field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids')) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary);\n            var formFieldDict = this._copier._copyDictionary(field._dictionary, !this._isDuplicatePage);\n            this._removeFieldDictionary(formFieldDict, ['Parent', 'FT', 'T', 'Ff']);\n            formFieldDict.update('P', ref);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDict);\n        }\n        return array;\n    };\n    _PdfMergeHelper.prototype._updateFieldsWithKids = function (destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDictionary) {\n        var newFieldReference = this._crossReference._getNextReference();\n        var newFieldDict = this._createNewFieldDictionary(fieldDictionary, destinationField._dictionary);\n        newFieldDict.objId = newFieldReference.toString();\n        this._crossReference._cacheMap.set(newFieldReference, newFieldDict);\n        var newField = this._destinationDocument.form._parseFields(newFieldDict, newFieldReference);\n        destinationField._dictionary.update('Parent', newFieldReference);\n        newField._dictionary._updated = true;\n        this._updateFieldDictionary(fieldDictionary, ref, newFieldReference);\n        this._destinationDocument.form._dictionary._updated = true;\n        var oldDictionary;\n        if (oldKids !== undefined && oldKids.length > 0) {\n            oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n        }\n        else {\n            oldDictionary = formFieldDictionary;\n        }\n        var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n        if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n            delete dictionary._map.AS;\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, dictionary);\n        dictionary.update('P', ref);\n        array.push(reference);\n        dictionary.update('Parent', newField._ref);\n        var kidsElement = [];\n        kidsElement.push(destinationField._ref);\n        kidsElement.push(reference);\n        dictionary._updated = true;\n        destinationField._dictionary._updated = true;\n        newFieldDict.update('Kids', kidsElement);\n        newField._kids = kidsElement;\n        this._formFieldsCollection.set(fieldIndex, newFieldReference);\n        this._destinationDocument.form._parsedFields.set(fieldIndex, newField);\n        if (!this._isDuplicatePage) {\n            this._createAppearance(newField, field, oldDictionary, dictionary, drEntry);\n        }\n        newFieldDict._updated = true;\n    };\n    _PdfMergeHelper.prototype._removeFieldDictionary = function (dictionary, keys) {\n        keys.forEach(function (key) {\n            if (dictionary.has(key)) {\n                delete dictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return dictionary;\n    };\n    _PdfMergeHelper.prototype._updateFieldDictionary = function (dictionary, pageRef, parentRef) {\n        dictionary = this._removeFieldDictionary(dictionary, ['Parent', 'FT', 'T', 'Ff']);\n        dictionary.update('P', pageRef);\n        dictionary.update('Parent', parentRef);\n        dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._createNewFieldDictionary = function (fieldDictionary, destDictionary) {\n        var newFieldDict = new _PdfDictionary(this._crossReference);\n        ['Parent', 'FT', 'T', 'V', 'Ff', 'TU', 'Opt', 'I'].forEach(function (key) {\n            if (fieldDictionary.has(key)) {\n                newFieldDict.update(key, fieldDictionary.get(key));\n                delete fieldDictionary._map[key]; // eslint-disable-line\n                delete destDictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return newFieldDict;\n    };\n    _PdfMergeHelper.prototype._getItemStyle = function (item, field) {\n        var mkDictionary = item._dictionary.get('MK');\n        if (mkDictionary && mkDictionary.has('CA')) {\n            item._styleText = mkDictionary.get('CA').charAt(0);\n        }\n        else {\n            item._styleText = (field instanceof PdfRadioButtonListField) ? 'l' : '4';\n        }\n    };\n    _PdfMergeHelper.prototype._createAppearance = function (destinationField, field, oldDictionary, dictionary, drEntry, widget) {\n        var previousIndex = destinationField._kidsCount - 1;\n        var itemValue;\n        if (destinationField instanceof PdfCheckBoxField) {\n            var item = destinationField.itemAt(previousIndex);\n            item._enableGrouping = true;\n            this._getItemStyle(item, destinationField);\n            if (field instanceof PdfRadioButtonListField) {\n                item._dictionary.update('AS', _PdfName.get('Off'));\n                itemValue = _getItemValue(oldDictionary);\n            }\n            else {\n                item._postProcess(destinationField.checked ? 'Yes' : 'Off');\n            }\n            destinationField._drawAppearance(item, itemValue);\n        }\n        else if (destinationField instanceof PdfRadioButtonListField) {\n            var item = destinationField.itemAt(previousIndex);\n            this._getItemStyle(item, destinationField);\n            if (item._dictionary.has('AS')) {\n                item._postProcess(item._dictionary.get('AS').name);\n            }\n            else {\n                item._postProcess('Off');\n            }\n            item._enableGrouping = true;\n            destinationField._enableGrouping = true;\n            destinationField._drawAppearance(item);\n        }\n        else if (destinationField instanceof PdfListField) {\n            var item = destinationField.itemAt(previousIndex);\n            if (typeof widget !== 'undefined') {\n                item.rotationAngle = widget.rotationAngle;\n            }\n            if (item && !destinationField._checkFieldFlag(item._dictionary)) {\n                item._enableGrouping = true;\n                var template = destinationField._createAppearance(item);\n                destinationField._addAppearance(item._dictionary, template, 'N');\n                item._dictionary._updated = true;\n            }\n        }\n        else if (destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof\n            PdfSignatureField) {\n            var widgetAnnotation = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n            if (typeof widget !== 'undefined' && widget !== null && destinationField instanceof PdfSignatureField) {\n                destinationField._createAppearance(widget, false);\n            }\n            else {\n                widgetAnnotation.setAppearance(true);\n                widgetAnnotation._enableGrouping = true;\n                var pdfFont = void 0;\n                if (typeof widget !== 'undefined' && widget !== null) {\n                    pdfFont = this._obtainFont(widget._dictionary, drEntry);\n                }\n                else {\n                    pdfFont = this._obtainFont(dictionary, drEntry);\n                }\n                widgetAnnotation._pdfFont = pdfFont;\n                if (destinationField instanceof PdfSignatureField) {\n                    destinationField._createAppearance(widgetAnnotation, false);\n                }\n                else {\n                    destinationField._postProcess(false, widgetAnnotation);\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._obtainFont = function (item, formDictionary) {\n        var fontFamily = '';\n        var fontSize = 8;\n        var pdfFont;\n        if (item && (item.has('DS') || item.has('DA'))) {\n            if (item.has('DS')) {\n                var collection = item.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    if (fontSize === 0) {\n                        fontSize = 8;\n                    }\n                }\n            }\n        }\n        fontFamily = fontFamily.trim();\n        var fontStyle = PdfFontStyle.regular;\n        var baseFontName;\n        if (typeof formDictionary != 'undefined' && formDictionary.has('Font')) {\n            var dictionary = formDictionary.get('Font').get(fontFamily);\n            if (typeof dictionary !== 'undefined') {\n                baseFontName = dictionary.get('BaseFont').name;\n                fontStyle = this._getFontStyle(baseFontName);\n            }\n        }\n        switch (fontFamily) {\n            case 'Helv':\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n            case 'Courier':\n            case 'Cour':\n                pdfFont = new PdfStandardFont(PdfFontFamily.courier, fontSize, fontStyle);\n                break;\n            case 'Symb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.symbol, fontSize, fontStyle);\n                break;\n            case 'TiRo':\n            case 'TiIt':\n                pdfFont = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, fontStyle);\n                break;\n            case 'ZaDb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, fontStyle);\n                break;\n            default:\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n        }\n        return pdfFont;\n    };\n    _PdfMergeHelper.prototype._getFontStyle = function (fontStyle) {\n        var style = PdfFontStyle.regular;\n        if (fontStyle.includes('Bold')) {\n            style = PdfFontStyle.bold;\n        }\n        else if (fontStyle.includes('Italic')) {\n            style = PdfFontStyle.italic;\n        }\n        return style;\n    };\n    _PdfMergeHelper.prototype._importFormField = function (page, pdfForm, newPage, crossReference) {\n        var form = this._destinationDocument.form;\n        var array = [];\n        if (newPage && newPage._pageDictionary && newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        var kidsArray = [];\n        var widgetArray = [];\n        if (this._destinationDocument.form._dictionary.has('Fields')) {\n            var formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                var name_2 = formFields.fieldAt(k).name;\n                this._fieldNames.push(name_2);\n            }\n        }\n        if (page._pageDictionary.has('Annots')) {\n            widgetArray = page._pageDictionary.get('Annots');\n        }\n        var count = pdfForm.count;\n        for (var i = 0; i < count; ++i) {\n            var pdfField = pdfForm.fieldAt(i);\n            if (pdfField._dictionary.has('Kids')) {\n                kidsArray = pdfField._dictionary.get('Kids');\n                if (kidsArray.length > 1) {\n                    for (var j = 0; j < kidsArray.length; j++) {\n                        var fieldItem = pdfField.itemAt(j); // eslint-disable-line\n                        if (fieldItem.page === page) {\n                            array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                            break;\n                        }\n                    }\n                }\n                else if (kidsArray.length === 1) {\n                    if (pdfField.page === page) {\n                        array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                    }\n                }\n            }\n            else {\n                if (pdfField.page === page) {\n                    array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                }\n            }\n        }\n        if (pdfForm._dictionary.has('DR')) {\n            var dr = pdfForm._dictionary.get('DR');\n            var drDictionary = this._copier._copyDictionary(dr); // eslint-disable-line\n            var font = void 0; // eslint-disable-line\n            if (drDictionary.has('Font')) {\n                font = drDictionary.get('Font');\n            }\n            if (this._destinationDocument.form._dictionary.has('DR')) {\n                var curreneDR = this._destinationDocument.form._dictionary.get('DR');\n                if (curreneDR.has('Font')) {\n                    var currentFont_1 = curreneDR.get('Font'); // eslint-disable-line\n                    if (font) {\n                        font.forEach(function (key, value) {\n                            currentFont_1.set(key, value);\n                        });\n                    }\n                    currentFont_1._updated = true;\n                }\n            }\n            else {\n                this._destinationDocument.form._dictionary.update('DR', drDictionary);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._insertFormFields = function (index, crossReference, pdfField, form, ref, array, kidsArray) {\n        var dictionary = new _PdfDictionary();\n        if (pdfField._dictionary.has('Kids')) {\n            pdfField._dictionary.forEach(function (key, value) {\n                if (key !== 'Kids') {\n                    dictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            dictionary = this._copier._copyDictionary(pdfField._dictionary);\n        }\n        var newReference = this._crossReference._getNextReference();\n        dictionary.objId = newReference.toString();\n        var field = form._parseFields(dictionary, ref);\n        this._crossReference._cacheMap.set(newReference, field._dictionary);\n        if (pdfField._dictionary.has('Kids')) {\n            var oldKids = pdfField._dictionary.get('Kids');\n            var kids = [];\n            for (var j = 0; j < oldKids.length; j++) {\n                if ((kidsArray.indexOf(oldKids[Number.parseInt(j.toString(), 10)]) !== -1)) {\n                    var oldDictionary = pdfField._crossReference._fetch(oldKids[Number.parseInt(j.toString(), 10)]);\n                    var dict = this._copier._copyDictionary(oldDictionary);\n                    dict.update('P', ref);\n                    dict.update('Parent', newReference);\n                    dict._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, dict);\n                    array.push(reference);\n                    kids.push(reference);\n                }\n            }\n            dictionary.update('Kids', kids);\n            field._kids = kids;\n        }\n        else {\n            field._dictionary.update('P', ref);\n            array.push(newReference);\n        }\n        field._dictionary._updated = true;\n        var i = 0;\n        var fieldName = field.name;\n        var modified = false;\n        while (this._fieldNames.indexOf(fieldName) !== -1) {\n            fieldName = field.name + i;\n            modified = true;\n            ++i;\n        }\n        if (modified) {\n            field._dictionary.update('T', fieldName);\n            field._name = fieldName;\n        }\n        field._dictionary._updated = true;\n        if (this._fieldCount > 0) {\n            this._destinationDocument.form._parsedFields.set(this._fieldCount, field);\n            field._annotationIndex = this._fieldCount;\n            this._fieldCount++;\n        }\n        else {\n            this._destinationDocument.form._parsedFields.set(index, field);\n            field._annotationIndex = index;\n        }\n        this._destinationDocument.form._fields.push(newReference);\n        return array;\n    };\n    _PdfMergeHelper.prototype._mergeFormFieldsWithDocument = function () {\n        var pdfFields;\n        if (this._formFieldsCollection.size > 0) {\n            pdfFields = this._destinationDocument.form._dictionary.get('Fields');\n            this._formFieldsCollection.forEach(function (value, key) {\n                pdfFields[Number.parseInt(key.toString(), 10)] = value;\n            });\n        }\n        else {\n            pdfFields = this._destinationDocument.form._fields;\n        }\n        if (this._destinationDocument.form._dictionary.get('NeedAppearances')) {\n            this._destinationDocument.form._dictionary.set('NeedAppearances', false);\n        }\n        this._destinationDocument.form._dictionary.set('Fields', pdfFields);\n        this._destinationDocument.form._fields = pdfFields;\n        this._destinationDocument.form._dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importLayers = function (ocProperties, layers) {\n        this._isLayersPresent = layers;\n        if (this._isLayersPresent && this._destinationDocument._catalog._catalogDictionary.has('OCProperties')) {\n            var destinationOCProperties = this._destinationDocument._catalog._catalogDictionary.get('OCProperties');\n            var currentOCProperties = ocProperties.get('OCProperties');\n            if (destinationOCProperties.has('OCGs')) {\n                var ocgs = destinationOCProperties.get('OCGs'); // eslint-disable-line\n                var Cocgs = currentOCProperties.get('OCGs'); // eslint-disable-line\n                if (ocgs.length > 0) {\n                    for (var i = 0; i < Cocgs.length; i++) {\n                        ocgs.push(Cocgs[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            destinationOCProperties._updated = true;\n            if (destinationOCProperties.has('D') && currentOCProperties.has('D')) {\n                var curreneDefaultView = destinationOCProperties.get('D');\n                var existingDefaultView = currentOCProperties.get('D');\n                if (curreneDefaultView && existingDefaultView) {\n                    if (curreneDefaultView.has('Order') && existingDefaultView.has('Order')) {\n                        var order = curreneDefaultView.get('Order'); // eslint-disable-line\n                        var existingOrder = existingDefaultView.get('Order'); // eslint-disable-line\n                        if (order.length > 0 && existingOrder.length > 0) {\n                            for (var i = 0; i < existingOrder.length; i++) {\n                                order.push(existingOrder[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('Order')) {\n                        curreneDefaultView.set('Order', existingDefaultView.get('Order'));\n                    }\n                    if (curreneDefaultView.has('RBGroups') && existingDefaultView.has('RBGroups')) {\n                        var groups = curreneDefaultView.get('RBGroups'); // eslint-disable-line\n                        var existingRBGroups = existingDefaultView.get('RBGroups'); // eslint-disable-line\n                        if (groups.length > 0 && existingRBGroups.length > 0) {\n                            for (var i = 0; i < existingRBGroups.length; i++) {\n                                groups.push(existingRBGroups[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('RBGroups')) {\n                        curreneDefaultView.set('RBGroups', existingDefaultView.get('RBGroups'));\n                        curreneDefaultView._updated = true;\n                    }\n                    if (curreneDefaultView.has('ON') && existingDefaultView.has('ON')) {\n                        var on = curreneDefaultView.get('ON'); // eslint-disable-line\n                        var existingON = existingDefaultView.get('ON'); // eslint-disable-line\n                        if (on.length > 0 && existingON.length > 0) {\n                            for (var i = 0; i < existingON.length; i++) {\n                                on.push(existingON[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('ON')) {\n                        curreneDefaultView.set('ON', existingDefaultView.get('ON'));\n                    }\n                    if (curreneDefaultView.has('AS') && existingDefaultView.has('AS')) {\n                        var elements = curreneDefaultView.get('AS'); // eslint-disable-line\n                        var existingElements = existingDefaultView.get('AS'); // eslint-disable-line\n                        if (elements.length > 0 && existingElements.length > 0) {\n                            var asDictionary = existingElements[0];\n                            var currentASDictionary = elements[0];\n                            if (asDictionary instanceof _PdfReference && currentASDictionary instanceof _PdfReference) {\n                                asDictionary = this._crossReference._fetch(asDictionary);\n                                currentASDictionary = this._crossReference._fetch(currentASDictionary);\n                            }\n                            if (asDictionary.has('OCGs') && currentASDictionary.has('OCGs')) {\n                                var usageGroup = asDictionary.get('OCGs'); // eslint-disable-line\n                                var currentUsageGroup = currentASDictionary.get('OCGs'); // eslint-disable-line\n                                if (usageGroup.length > 0 && currentUsageGroup.length > 0) {\n                                    for (var i = 0; i < usageGroup.length; i++) {\n                                        currentUsageGroup.push(usageGroup[Number.parseInt(i.toString(), 10)]);\n                                    }\n                                }\n                            }\n                            for (var i = 0; i < existingElements.length; i++) {\n                                elements.push(existingElements[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('AS')) {\n                        curreneDefaultView.set('AS', existingDefaultView.get('AS'));\n                    }\n                    if (curreneDefaultView.has('OFF') && existingDefaultView.has('OFF')) {\n                        var off = curreneDefaultView.get('OFF'); // eslint-disable-line\n                        var existingOff = existingDefaultView.get('OFF'); // eslint-disable-line\n                        if (off.length > 0 && existingOff.length > 0) {\n                            for (var i = 0; i < existingOff.length; i++) {\n                                off.push(existingOff[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('OFF')) {\n                        curreneDefaultView.set('OFF', existingDefaultView.get('OFF'));\n                    }\n                }\n                if (curreneDefaultView.has('Locked') && existingDefaultView.has('Locked')) {\n                    var locked = curreneDefaultView.get('Locked'); // eslint-disable-line\n                    var existingLocked = existingDefaultView.get('Locked'); // eslint-disable-line\n                    if (locked.length > 0 && existingLocked.length > 0) {\n                        for (var i = 0; i < existingLocked.length; i++) {\n                            locked.push(existingLocked[Number.parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                else if (existingDefaultView.has('Locked')) {\n                    curreneDefaultView.set('Locked', existingDefaultView.get('Locked'));\n                }\n            }\n            else if (currentOCProperties.has('D')) {\n                destinationOCProperties.set('D', currentOCProperties.get('D'));\n            }\n            destinationOCProperties._updated = true;\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n        else if (this._isLayersPresent) {\n            this._destinationDocument._catalog._catalogDictionary.update('OCProperties', ocProperties.get('OCProperties'));\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._mergeLayer = function (newPageDictionary, oldPageDictionary, crossReference) {\n        var _this = this;\n        var res = newPageDictionary.get('Resources');\n        var xobject = res.get('XObject');\n        var xobjdict; // eslint-disable-line\n        if (xobject) {\n            xobject.forEach(function (key, value) {\n                xobjdict = _this._crossReference._fetch(value);\n            });\n        }\n        var resource;\n        if (xobjdict) {\n            resource = xobjdict.dictionary.get('Resources');\n        }\n        var XObject; // eslint-disable-line\n        var oldPageList = new Map();\n        var oldPageResource = oldPageDictionary.get('Resources');\n        var layerDictionary; // eslint-disable-line\n        var dict; // eslint-disable-line\n        if (oldPageResource.has('Properties')) {\n            layerDictionary = oldPageResource.get('Properties');\n            layerDictionary.forEach(function (key, value) {\n                oldPageList.set(key, value);\n            });\n            var properties_1 = new _PdfDictionary(this._crossReference);\n            oldPageList.forEach(function (value, key) {\n                _this._newList.forEach(function (layerValue, layerkey) {\n                    if (value === layerkey) {\n                        properties_1.set(key, layerValue);\n                    }\n                });\n            });\n            resource.set('Properties', properties_1);\n            resource._updated = true;\n            properties_1._updated = true;\n        }\n        else if (oldPageResource.has('XObject')) {\n            XObject = resource.get('XObject');\n            layerDictionary = oldPageResource.get('XObject');\n            layerDictionary.forEach(function (key, value) {\n                if (value instanceof _PdfReference) {\n                    dict = crossReference._fetch(value);\n                    dict.dictionary.forEach(function (annotationKey, annotationValue) {\n                        if (annotationKey === 'OC') {\n                            _this._newList.forEach(function (layerValue, layerKey) {\n                                if (layerKey === annotationValue) {\n                                    if (XObject.has(key)) {\n                                        var xobjDictionary = XObject.get(key); // eslint-disable-line\n                                        xobjDictionary.dictionary.set(annotationKey, layerValue);\n                                        xobjDictionary._updated = true;\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        if (this._annotationLayer.size > 0) {\n            var annotations_1 = newPageDictionary._get('Annots'); // eslint-disable-line\n            this._annotationLayer.forEach(function (reference, index) {\n                var pdfAnnotation = annotations_1[Number.parseInt(index.toString(), 10)]; // eslint-disable-line\n                var annotDictionary = _this._crossReference._fetch(pdfAnnotation);\n                _this._newList.forEach(function (value, oldReference) {\n                    if (reference === oldReference) {\n                        annotDictionary.set('OC', value);\n                    }\n                });\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._exportBookmarks = function (document, pageCount) {\n        var _this = this;\n        if (this._bookmarks.length > 0) {\n            var bookmark = this._bookmarks;\n            var currentBase = this._destinationDocument.bookmarks;\n            var current = document.bookmarks;\n            var bkCollection = void 0; // eslint-disable-line\n            if (current) {\n                var stack = [];\n                var nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                if (document.pageCount !== pageCount) {\n                    nodeInformation = { index: 0, base: currentBase, kids: bookmark };\n                    bkCollection = [];\n                }\n                do {\n                    var _loop_1 = function () {\n                        current = nodeInformation.kids[nodeInformation.index];\n                        if (bookmark.indexOf(current) !== -1 && typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1) {\n                            var bm = current;\n                            var newBm = currentBase.add(bm.title);\n                            var dest = bm.destination;\n                            newBm.color = bm.color;\n                            newBm.textStyle = bm.textStyle;\n                            var newDest = null;\n                            var newPage_1 = null;\n                            var page_1 = null;\n                            var nDest = bm.namedDestination;\n                            if (nDest) {\n                                if (nDest.destination) {\n                                    page_1 = nDest.destination.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_1._ref === key) {\n                                            newPage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newPage_1) {\n                                        var newNameddest = this_1._getNamedDestination(nDest, newPage_1);\n                                        newBm.namedDestination = newNameddest;\n                                        delete newBm._dictionary._map.C;\n                                        this_1._namedDestinations.push(newNameddest._title);\n                                        var reference_1 = this_1._crossReference._getNextReference();\n                                        this_1._crossReference._cacheMap.set(reference_1, newNameddest._dictionary);\n                                        this_1._namedDestinations.push(reference_1);\n                                    }\n                                }\n                            }\n                            else if (dest) {\n                                page_1 = dest.page;\n                                this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                    if (page_1._ref === key) {\n                                        newPage_1 = _this._destinationDocument.getPage(value);\n                                    }\n                                });\n                                if (newPage_1) {\n                                    newDest = new PdfDestination(newPage_1, dest.location);\n                                    newDest.mode = dest.mode;\n                                    newDest.zoom = dest.zoom;\n                                    newDest.location = dest.location;\n                                    newBm.destination = newDest;\n                                }\n                            }\n                            currentBase = newBm;\n                            bkCollection.push(newBm.title);\n                        }\n                        else if (typeof bkCollection === 'undefined' || (typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1)) {\n                            var bm = current;\n                            var dest = bm.destination;\n                            var newDest = null;\n                            var newpage_1 = null;\n                            var page_2 = null;\n                            var nDest = bm.namedDestination;\n                            if (document.pageCount === pageCount) {\n                                var newBm = currentBase.add(bm.title);\n                                if (bm._dictionary.has('A')) {\n                                    newBm._dictionary.update('A', bm._dictionary.get('A'));\n                                }\n                                newBm.textStyle = bm.textStyle;\n                                newBm.color = bm.color;\n                                if (nDest) {\n                                    if (nDest._destination) {\n                                        page_2 = nDest.destination.page;\n                                        this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                            if (page_2._ref === key) {\n                                                newpage_1 = _this._destinationDocument.getPage(value);\n                                            }\n                                        });\n                                        if (newpage_1) {\n                                            var newNameddest = this_1._getNamedDestination(nDest, newpage_1);\n                                            newBm.namedDestination = newNameddest;\n                                            delete newBm._dictionary._map.C;\n                                            this_1._namedDestinations.push(newNameddest._title);\n                                            var reference_2 = this_1._crossReference._getNextReference();\n                                            this_1._crossReference._cacheMap.set(reference_2, newNameddest._dictionary);\n                                            this_1._namedDestinations.push(reference_2);\n                                        }\n                                    }\n                                }\n                                else if (dest) {\n                                    page_2 = dest.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_2._ref === key) {\n                                            newpage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newpage_1) {\n                                        newDest = new PdfDestination(newpage_1, dest.location);\n                                        newDest.mode = dest.mode;\n                                        newDest.zoom = dest.zoom;\n                                        newDest.location = dest.location;\n                                        newBm.destination = newDest;\n                                    }\n                                }\n                                currentBase = newBm;\n                            }\n                        }\n                        nodeInformation.index += 1;\n                        if (current.count > 0) {\n                            stack.push(nodeInformation);\n                            nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                        }\n                        else {\n                            currentBase = nodeInformation.base;\n                        }\n                    };\n                    var this_1 = this;\n                    for (; nodeInformation.index < nodeInformation.kids.length;) {\n                        _loop_1();\n                    }\n                    if (stack.length > 0) {\n                        nodeInformation = stack.pop();\n                        while ((nodeInformation.index === nodeInformation.kids.length) && (stack.length > 0)) {\n                            nodeInformation = stack.pop();\n                        }\n                        currentBase = nodeInformation.base;\n                    }\n                } while (nodeInformation.index < nodeInformation.kids.length);\n            }\n            var reference = void 0;\n            if (this._namedDestinations.length > 0) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Names', this._namedDestinations);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Dests', reference);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._destinationDocument._catalog._catalogDictionary.set('Names', reference);\n            }\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._destinationDocument._catalog._catalogDictionary.isCatalog = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._getNamedDestination = function (nDest, page) {\n        var newNamedDest = new PdfNamedDestination(nDest.title); // eslint-disable-line\n        newNamedDest.destination = this._getDestination(page, nDest.destination);\n        return newNamedDest;\n    };\n    _PdfMergeHelper.prototype._getDestination = function (page, dest) {\n        var newDest = new PdfDestination(page, dest.location);\n        newDest._location = dest._location;\n        newDest.mode = dest.mode;\n        newDest.zoom = dest.zoom;\n        newDest.location = dest.location;\n        return newDest;\n    };\n    _PdfMergeHelper.prototype._writeObject = function (document, table, value, dictionary, key, array, ref) {\n        if (value instanceof _PdfName || typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            this._writeDictionary(value, table, key, array, ref, null);\n        }\n        else if (Array.isArray(value)) {\n            var list = []; // eslint-disable-line\n            this._writeArray(document, list, value, dictionary);\n            this._writeDictionary(null, table, key, array, ref, list);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new _PdfDictionary(this._crossReference);\n            this._writePropertiesDictionary(document, subTable, value);\n            this._writeDictionary(null, table, key, array, ref, subTable);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(document, table, document._crossReference._fetch(value), dictionary, key, array, value);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeDictionary('null', table, key, array, ref, null);\n        }\n    };\n    _PdfMergeHelper.prototype._writeDictionary = function (value, table, key, array, ref, list) {\n        if (key && value) {\n            table.set(key, value);\n        }\n        else if (key && list) {\n            table.set(key, list);\n        }\n        else if (list && !ref) {\n            array.push(list);\n        }\n        else if (value) {\n            array.push(value);\n        }\n        else if (ref) {\n            var reference_3;\n            if (this._newList && this._newList.size > 0) {\n                this._newList.forEach(function (value, key) {\n                    if (key === ref) {\n                        reference_3 = value;\n                    }\n                });\n            }\n            if (reference_3) {\n                array.push(reference_3);\n            }\n            else {\n                var layerList = list;\n                reference_3 = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference_3, layerList);\n                layerList._updated = true;\n                array.push(reference_3);\n                this._newList.set(ref, reference_3);\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._writeArray = function (document, array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(document, null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _PdfMergeHelper.prototype._writePropertiesDictionary = function (document, table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(document, table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._fixDestinations = function (document) {\n        var pageLinkReference = this._pageReference;\n        if (this._destination.length > 0) {\n            for (var i = 0; i < this._destination.length; i++) {\n                var dest = this._destination[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (dest instanceof Array) {\n                    var destination = dest; // eslint-disable-line\n                    if (destination.length > 0 && destination[0] && destination[0] instanceof _PdfReference) {\n                        var ref = document._crossReference._fetch(destination[0]); // eslint-disable-line\n                        var index = pageLinkReference.get(ref);\n                        if (ref && pageLinkReference.has(ref) && index !== null) {\n                            destination[0] = index._ref;\n                        }\n                        if (ref && pageLinkReference.has(ref) && index === null) {\n                            destination[0] = null;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._insertNewPage = function (page, index) {\n        var newPage;\n        var pagesettings = new PdfPageSettings();\n        pagesettings.size = page.size;\n        pagesettings.margins.left = 0;\n        pagesettings.margins.top = 0;\n        pagesettings.margins.right = 0;\n        pagesettings.margins.bottom = 0;\n        if (typeof this._options !== 'undefined' && typeof this._options.rotation !== 'undefined') {\n            pagesettings.rotation = this._options.rotation;\n        }\n        else {\n            pagesettings.rotation = page.rotation;\n        }\n        pagesettings.orientation = (page.size[0] > page.size[1]) ? PdfPageOrientation.landscape : PdfPageOrientation.portrait;\n        if (typeof index !== 'undefined') {\n            newPage = this._destinationDocument.addPage(index, pagesettings);\n        }\n        else {\n            newPage = this._destinationDocument.addPage(pagesettings);\n        }\n        var pageDictionary = page._pageDictionary;\n        if (pageDictionary._get('MediaBox')) {\n            var mBox = pageDictionary._get('MediaBox'); // eslint-disable-line\n            newPage._pageDictionary.update('MediaBox', mBox);\n        }\n        if (pageDictionary._get('CropBox')) {\n            var cBox = pageDictionary._get('CropBox'); // eslint-disable-line\n            newPage._pageDictionary.update('CropBox', cBox);\n        }\n        if (typeof this._options.rotation !== 'undefined' || page._pageDictionary.has('Rotate')) {\n            var rotate = void 0;\n            if (typeof this._options.rotation !== 'undefined') {\n                rotate = Math.floor(this._options.rotation) * 90;\n            }\n            else {\n                rotate = Math.floor(page.rotation) * 90;\n            }\n            rotate = rotate >= 360 ? rotate % 360 : rotate;\n            newPage._pageDictionary.update('Rotate', rotate);\n        }\n        return newPage;\n    };\n    _PdfMergeHelper.prototype._objectDispose = function () {\n        this._bookmarkHashTable = new Map();\n        this._namedDestinations = [];\n        this._bookmarks = [];\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference.clear();\n        this._destination = [];\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._fieldNames = [];\n        if (this._destinationDocument && this._destinationDocument._form && this._destinationDocument._form._widgetReferences) {\n            this._destinationDocument._form._widgetReferences = [];\n        }\n    };\n    return _PdfMergeHelper;\n}());\nexport { _PdfMergeHelper };\nvar _PdfCopier = /** @class */ (function () {\n    function _PdfCopier(targetCrossReference, sourceCrossReference) {\n        this._traversedObjects = new Map();\n        this._isGroupingSupport = false;\n        this._targetCrossReference = targetCrossReference;\n        this._sourceCrossReference = sourceCrossReference;\n    }\n    _PdfCopier.prototype._copy = function (object) {\n        var clonedObject; // eslint-disable-line\n        if (object instanceof _PdfDictionary) {\n            clonedObject = this._copyDictionary(object);\n        }\n        else if (Array.isArray(object)) {\n            clonedObject = this._copyArray(object);\n        }\n        else if (object instanceof _PdfBaseStream) {\n            clonedObject = this._copyStream(object);\n        }\n        else if (object instanceof _PdfReference) {\n            clonedObject = this._copyReference(object);\n        }\n        else if (object instanceof _PdfName || typeof object === 'number' ||\n            typeof object === 'string' || typeof object === 'boolean') {\n            clonedObject = object;\n        }\n        return clonedObject;\n    };\n    _PdfCopier.prototype._copyDictionary = function (element, copiedPage) {\n        var _this = this;\n        var clonedDictionary = new _PdfDictionary(this._targetCrossReference);\n        if (element && element.size > 0) {\n            element.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && copiedPage))) {\n                    var copiedValue = _this._copy(value); // eslint-disable-line\n                    if (copiedValue !== null && typeof copiedValue !== 'undefined') {\n                        clonedDictionary.update(key, copiedValue);\n                    }\n                }\n            });\n        }\n        clonedDictionary._updated = true;\n        return clonedDictionary;\n    };\n    _PdfCopier.prototype._copyArray = function (originalArray) {\n        var newArray = []; // eslint-disable-line \n        for (var i = 0; i < originalArray.length; i++) {\n            newArray.push(this._copy(originalArray[Number.parseInt(i.toString(), 10)]));\n        }\n        return newArray;\n    };\n    _PdfCopier.prototype._copyStream = function (originalStream) {\n        var bytes;\n        var imageStream = false;\n        var baseStream = originalStream; // eslint-disable-line\n        if (originalStream.dictionary.has('Subtype') && originalStream.dictionary.get('Subtype').name === 'Image') {\n            imageStream = true;\n            if (originalStream instanceof _PdfStream) {\n                bytes = originalStream.getByteRange(originalStream.offset, originalStream.end);\n            }\n            else if (originalStream && baseStream.stream && baseStream.stream instanceof _PdfStream) {\n                if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                    var streamLength = baseStream.stream.end - baseStream.stream.start;\n                    baseStream.getBytes(streamLength);\n                    bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                }\n                else {\n                    var stream = baseStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n            }\n            else if (baseStream.stream && baseStream.stream.stream) {\n                var flateStream = baseStream.stream; // eslint-disable-line\n                if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                    var streamLength = flateStream.stream.end - flateStream.stream.start;\n                    flateStream.getBytes(streamLength);\n                    bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                }\n                else if (flateStream.stream && flateStream.stream instanceof _PdfStream) {\n                    var stream = flateStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n                else {\n                    bytes = [];\n                }\n            }\n            else {\n                bytes = originalStream.getBytes();\n                if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                    bytes = originalStream._bytes;\n                }\n            }\n        }\n        else {\n            bytes = originalStream.getBytes();\n            if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                bytes = originalStream._bytes;\n            }\n        }\n        var content = new _PdfContentStream(Array.from(bytes));\n        content._isImage = imageStream;\n        content.dictionary = this._copyDictionary(originalStream.dictionary);\n        content.dictionary._updated = true;\n        return content;\n    };\n    _PdfCopier.prototype._copyReference = function (element) {\n        if (this._traversedObjects.has(element)) {\n            return this._traversedObjects.get(element);\n        }\n        else {\n            this._traversedObjects.set(element, null);\n            var dereferencedValue = this._sourceCrossReference._fetch(element); // eslint-disable-line\n            var copyValue = this._copy(dereferencedValue); // eslint-disable-line\n            if (copyValue instanceof _PdfDictionary || copyValue instanceof _PdfBaseStream) {\n                var newRef = this._addToDestination(copyValue);\n                this._traversedObjects.set(element, newRef);\n                return newRef;\n            }\n            else {\n                this._traversedObjects.set(element, copyValue);\n                return copyValue;\n            }\n        }\n    };\n    _PdfCopier.prototype._addToDestination = function (element) {\n        var newRef = this._targetCrossReference._getNextReference();\n        this._targetCrossReference._cacheMap.set(newRef, element);\n        element.objId = newRef.objectNumber + \" \" + newRef.generationNumber;\n        return newRef;\n    };\n    return _PdfCopier;\n}());\nexport { _PdfCopier };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode, _emptyPdfData, _getNewGuidString, _isNullOrUndefined } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _PdfName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment, PdfPageOrientation, PdfRotationAngle } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\nimport { _PdfMergeHelper } from './pdf-merge';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        this._isDuplicatePage = false;\n        this._isSplitDocument = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog) {\n                if (catalog._catalogDictionary.has('Outlines')) {\n                    var reference = catalog._catalogDictionary._get('Outlines');\n                    var outlines = catalog._catalogDictionary.get('Outlines');\n                    if (outlines) {\n                        this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                        this._bookmarkBase._reference = reference;\n                        if (outlines.has('First')) {\n                            this._bookmarkBase._reproduceTree();\n                        }\n                    }\n                }\n                else {\n                    var outlines = new _PdfDictionary(this._crossReference);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, outlines);\n                    catalog._catalogDictionary.update('Outlines', reference);\n                    this._crossReference._allowCatalog = true;\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    this._bookmarkBase._reference = reference;\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        if (pageIndex < 0 || pageIndex >= this.pageCount) {\n            throw new Error('Invalid page index');\n        }\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.addPage = function (arg1, arg2) {\n        var settings;\n        var pageIndex;\n        if (typeof arg2 !== 'undefined') {\n            settings = arg2;\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        else if (typeof arg1 === 'undefined') {\n            settings = new PdfPageSettings();\n            pageIndex = this.pageCount;\n        }\n        else if (arg1 instanceof PdfPageSettings) {\n            settings = arg1;\n            pageIndex = this.pageCount;\n        }\n        else {\n            settings = new PdfPageSettings();\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        sectionDictionary.update('Count', 1);\n        this._updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', sectionReference);\n        sectionDictionary.update('Kids', [pageReference]);\n        if (this.pageCount === 0) {\n            var parentReference = this._catalog._catalogDictionary._get('Pages');\n            if (parentReference && this._catalog._topPagesDictionary) {\n                this._catalog._topPagesDictionary.update('Kids', [sectionReference]);\n                sectionDictionary.update('Parent', parentReference);\n            }\n            else {\n                this._catalog._catalogDictionary.update('Pages', sectionReference);\n            }\n            this._pages = new Map();\n            this._pageCount = 1;\n        }\n        else {\n            var lastPage_1 = this.getPage(pageIndex === this.pageCount ? (pageIndex - 1) : pageIndex);\n            if (lastPage_1 && lastPage_1._pageDictionary) {\n                var parentReference = lastPage_1._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        if (pageIndex === this.pageCount) {\n                            kids.push(sectionReference);\n                        }\n                        else {\n                            var newKids_1 = [];\n                            kids.forEach(function (entry) {\n                                if (entry === lastPage_1._ref) {\n                                    newKids_1.push(sectionReference);\n                                }\n                                newKids_1.push(entry);\n                            });\n                            kids = newKids_1;\n                            this._updatePageCache(pageIndex);\n                        }\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                        this._updatePageCount(parentDictionary, 1);\n                        this._pageCount = this.pageCount + 1;\n                    }\n                }\n            }\n        }\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = settings;\n        result._isNew = true;\n        this._pages.set(pageIndex, result);\n        return result;\n    };\n    PdfDocument.prototype.removePage = function (argument) {\n        var targetPage = (argument instanceof PdfPage) ? argument : this.getPage(argument);\n        this._removePage(targetPage);\n    };\n    PdfDocument.prototype._checkPageNumber = function (index) {\n        if (index < 0 || index > this.pageCount) {\n            throw new Error('Index out of range');\n        }\n    };\n    PdfDocument.prototype._updatePageCount = function (dictionary, valueToIncrement) {\n        dictionary.update('Count', dictionary.get('Count') + valueToIncrement);\n        if (dictionary.has('Parent')) {\n            var parentDictionary = dictionary.get('Parent');\n            if (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                this._updatePageCount(parentDictionary, valueToIncrement);\n            }\n        }\n    };\n    PdfDocument.prototype._updatePageSettings = function (dictionary, settings) {\n        var bounds = [0, 0, settings.size[0], settings.size[1]];\n        dictionary.update('MediaBox', bounds);\n        dictionary.update('CropBox', bounds);\n        var rotate = Math.floor(settings.rotation) * 90;\n        if (rotate >= 360) {\n            rotate = rotate % 360;\n        }\n        dictionary.update('Rotate', rotate);\n    };\n    PdfDocument.prototype._updatePageCache = function (index, isIncrement) {\n        if (isIncrement === void 0) { isIncrement = true; }\n        var updatedData = new Map();\n        for (var i = this.pageCount - 1; i >= 0; i--) {\n            var page = this.getPage(i);\n            if (isIncrement) {\n                if (i >= index) {\n                    updatedData.set(i + 1, page);\n                    page._pageIndex = i + 1;\n                }\n                else {\n                    updatedData.set(i, page);\n                }\n            }\n            else {\n                if (i > index) {\n                    updatedData.set(i - 1, page);\n                    page._pageIndex = i - 1;\n                }\n                else if (i !== index) {\n                    updatedData.set(i, page);\n                }\n            }\n        }\n        this._pages = updatedData;\n        if (!isIncrement) {\n            this._pageCount = this._pages.size;\n        }\n    };\n    PdfDocument.prototype._removePage = function (pageToRemove) {\n        var bookMarkMap = this._parseBookmarkDestination();\n        if (bookMarkMap && bookMarkMap.has(pageToRemove)) {\n            var bookmarks = bookMarkMap.get(pageToRemove);\n            if (bookmarks) {\n                for (var i = 0; i < bookmarks.length; i++) {\n                    var bookmark = bookmarks[Number.parseInt(i.toString(), 10)];\n                    if (bookmark) {\n                        var bookmarkDictionary = bookmark._dictionary;\n                        if (bookmarkDictionary) {\n                            if (bookmarkDictionary.has('A')) {\n                                bookmarkDictionary.update('A', null);\n                            }\n                            bookmarkDictionary.update('Dest', null);\n                        }\n                    }\n                }\n            }\n        }\n        this._removePageTemplates(pageToRemove);\n        for (var i = this.form.count - 1; i >= 0; --i) {\n            var field = this.form.fieldAt(i);\n            if (field && field.page === pageToRemove) {\n                this.form.removeFieldAt(i);\n            }\n        }\n        this._updatePageCache(pageToRemove._pageIndex, false);\n        this._removeParent(pageToRemove._ref, pageToRemove._pageDictionary);\n        if (this._crossReference._cacheMap.has(pageToRemove._ref)) {\n            pageToRemove._pageDictionary._updated = false;\n        }\n    };\n    PdfDocument.prototype._removeParent = function (referenceToRemove, dictionary) {\n        if (dictionary.has('Parent')) {\n            var parentReference = dictionary._get('Parent');\n            var parentDictionary = this._crossReference._fetch(parentReference);\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                if (_isNullOrUndefined(kids) && kids.length === 1 && parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                    this._removeParent(parentReference, parentDictionary);\n                }\n                else {\n                    kids = kids.filter(function (item) { return item !== referenceToRemove; });\n                    parentDictionary.update('Kids', kids);\n                    this._updatePageCount(parentDictionary, -1);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._parseBookmarkDestination = function () {\n        var current = this.bookmarks;\n        if (typeof this._bookmarkHashTable === 'undefined' && current) {\n            this._bookmarkHashTable = new Map();\n            var stack = [];\n            var nodeInformation = { index: 0, kids: current._bookMarkList };\n            do {\n                for (; nodeInformation.index < nodeInformation.kids.length;) {\n                    current = nodeInformation.kids[nodeInformation.index];\n                    var namedDestination = current.namedDestination;\n                    if (namedDestination) {\n                        if (namedDestination.destination) {\n                            var page = namedDestination.destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    else {\n                        var destination = current.destination;\n                        if (destination) {\n                            var page = destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    nodeInformation.index += 1;\n                    if (current.count > 0) {\n                        stack.push(nodeInformation);\n                        nodeInformation = { index: 0, kids: current._bookMarkList };\n                        continue;\n                    }\n                }\n                if (stack.length > 0) {\n                    nodeInformation = stack.pop();\n                    while (nodeInformation.index === nodeInformation.kids.length && stack.length > 0) {\n                        nodeInformation = stack.pop();\n                    }\n                }\n            } while (nodeInformation.index < nodeInformation.kids.length);\n        }\n        return this._bookmarkHashTable;\n    };\n    PdfDocument.prototype._removePageTemplates = function (page) {\n        var dictionary;\n        if (this._catalog._catalogDictionary.has('Names')) {\n            dictionary = this._catalog._catalogDictionary.get('Names');\n            if (dictionary) {\n                this._removeInternalTemplates(dictionary, 'Pages', page);\n                this._removeInternalTemplates(dictionary, 'Templates', page);\n            }\n        }\n    };\n    PdfDocument.prototype._removeInternalTemplates = function (dictionary, key, page) {\n        if (dictionary.has(key)) {\n            var namedObject = dictionary.get(key);\n            if (namedObject && namedObject.has('Names')) {\n                var nameCollection = namedObject.getArray('Names');\n                if (nameCollection && nameCollection.length > 0) {\n                    var namedPageCollection = this._getUpdatedPageTemplates(nameCollection, page);\n                    var namedPageDictionary = new _PdfDictionary(this._crossReference);\n                    namedPageDictionary.update('Names', namedPageCollection);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, namedPageDictionary);\n                    namedPageDictionary.objId = reference.toString();\n                    dictionary.update(key, reference);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._getUpdatedPageTemplates = function (namedPages, page) {\n        if (namedPages.length > 0) {\n            for (var i = 1; i <= namedPages.length; i = i + 2) {\n                var pageDictionary = namedPages[Number.parseInt(i.toString(), 10)];\n                if (pageDictionary && page._pageDictionary === pageDictionary) {\n                    namedPages.pop();\n                    namedPages.pop();\n                    return namedPages;\n                }\n            }\n        }\n        return namedPages;\n    };\n    /**\n     * Reorders the pages in the PDF document.\n     *\n     * @param {number[]} orderArray The page sequence to arrange the pages.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Reorders the pages in the PDF document\n     * document.reorderPages([3, 2, 1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.reorderPages = function (orderArray) {\n        var _this = this;\n        orderArray.forEach(function (pageNumber) {\n            _this._checkPageNumber(pageNumber);\n        });\n        var sortedArray = this._sortedArray(orderArray);\n        var ascendingOrder = orderArray.slice().sort(function (a, b) { return a - b; });\n        var inputArray = Array.from({ length: this.pageCount }, function (_, i) { return i; });\n        var pagesToRemove = inputArray.filter(function (element) { return sortedArray.indexOf(element) === -1; });\n        for (var i = pagesToRemove.length - 1; i >= 0; i--) {\n            this.removePage(pagesToRemove[Number.parseInt(i.toString(), 10)]);\n        }\n        var newkids = [];\n        var newPages = new Map();\n        var parentReference = this._catalog._catalogDictionary._get('Pages');\n        var _loop_1 = function (i) {\n            var indexPage = this_1.getPage(ascendingOrder.indexOf(sortedArray[Number.parseInt(i.toString(), 10)]));\n            indexPage._pageIndex = i;\n            newPages.set(i, indexPage);\n            var sectionDictionary = new _PdfDictionary(this_1._crossReference);\n            sectionDictionary.update('Type', _PdfName.get('Pages'));\n            sectionDictionary.update('Count', 1);\n            sectionDictionary.update('Parent', parentReference);\n            var sectionReference = this_1._crossReference._getNextReference();\n            sectionDictionary.objId = sectionReference.toString();\n            sectionDictionary.update('Kids', [indexPage._ref]);\n            newkids.push(sectionReference);\n            var parentDictionary = indexPage._pageDictionary.get('Parent');\n            while (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                parentDictionary.forEach(function (key, value) {\n                    switch (key) {\n                        case 'Parent':\n                        case 'Kids':\n                        case 'Type':\n                        case 'Count':\n                            break;\n                        case 'Resources':\n                            _this._cloneResources(parentDictionary.get('Resources'), sectionDictionary);\n                            break;\n                        default:\n                            if (!sectionDictionary.has(key)) {\n                                sectionDictionary.update(key, value);\n                            }\n                            break;\n                    }\n                });\n                if (parentDictionary.has('Parent')) {\n                    parentDictionary = parentDictionary.get('Parent');\n                }\n                else {\n                    break;\n                }\n            }\n            this_1._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n            var pageSection = this_1._crossReference._fetch(indexPage._ref);\n            pageSection.update('Parent', sectionReference);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedArray.length; i++) {\n            _loop_1(i);\n        }\n        this._pages = newPages;\n        if (this._catalog) {\n            var parentDictionary = this._catalog._topPagesDictionary;\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                kids = newkids;\n                parentDictionary.update('Kids', kids);\n            }\n        }\n    };\n    PdfDocument.prototype._sortedArray = function (order) {\n        var sortedArray = [];\n        order.forEach(function (num) {\n            if (sortedArray.indexOf(num) === -1) {\n                sortedArray.push(num);\n            }\n        });\n        return sortedArray;\n    };\n    PdfDocument.prototype._cloneResources = function (source, target) {\n        var _this = this;\n        if (!target.has('Resources')) {\n            target.update('Resources', source);\n        }\n        else {\n            var resourceDictionary_1 = target.get('Resources');\n            source.forEach(function (key, value) {\n                if (resourceDictionary_1.has(key)) {\n                    _this._cloneInnerResources(key, value, resourceDictionary_1);\n                }\n                else {\n                    resourceDictionary_1.update(key, value);\n                }\n            });\n        }\n    };\n    PdfDocument.prototype._cloneInnerResources = function (key, value, resourceDictionary) {\n        if (value instanceof _PdfDictionary) {\n            var oldObject_1 = resourceDictionary.get(key);\n            if (oldObject_1) {\n                var hasNew_1 = false;\n                oldObject_1.forEach(function (innerKey, innerValue) {\n                    if (!oldObject_1.has(innerKey)) {\n                        oldObject_1.update(innerKey, innerValue);\n                        hasNew_1 = true;\n                    }\n                });\n                if (hasNew_1) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n        else if (Array.isArray(value)) {\n            var oldArray_1 = resourceDictionary.get(key); // eslint-disable-line\n            if (oldArray_1) {\n                var hasNew_2 = false;\n                value.forEach(function (entry) {\n                    if (oldArray_1.indexOf(entry) === -1) {\n                        oldArray_1.push(entry);\n                        hasNew_2 = true;\n                    }\n                });\n                if (hasNew_2) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        if (this._pages) {\n            this._pages.clear();\n            this._pages = undefined;\n        }\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n        if (this._mergeHelperCache) {\n            if (this._mergeHelperCache.size > 0) {\n                this._mergeHelperCache.forEach(function (value) {\n                    if (value) {\n                        value._objectDispose();\n                    }\n                });\n            }\n            this._mergeHelperCache.clear();\n            this._mergeHelperCache = undefined;\n        }\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._catalog._catalogDictionary.has('AcroForm')) {\n            this.form._doPostProcess(isFlatten);\n            if (isFlatten) {\n                var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary._updated = true;\n                if (formObject instanceof _PdfReference) {\n                    this._crossReference._cacheMap.set(formObject, dictionary);\n                }\n                else {\n                    this.form._dictionary = dictionary;\n                    this._crossReference._allowCatalog = true;\n                }\n                this.form._clear();\n            }\n            if (this.form._isDefaultAppearance) {\n                this.form._dictionary.update('NeedAppearances', this.form._isDefaultAppearance);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances') && this.form._isNeedAppearances) {\n                this.form._dictionary.update('NeedAppearances', false);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances')) {\n                this.form._dictionary.update('NeedAppearances', this.form.needAppearances);\n            }\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    PdfDocument.prototype.importPageRange = function (sourceDocument, startIndex, endIndex, options) {\n        if (startIndex > endIndex || startIndex >= sourceDocument.pageCount) {\n            throw new Error('The start index is greater then the end index, which might indicate the error in the program.');\n        }\n        this._importPages(sourceDocument, startIndex, endIndex, options);\n    };\n    PdfDocument.prototype._importPages = function (sourceDocument, startIndex, endIndex, options) {\n        var sourceOCProperties;\n        var correspondancePagecount = 0;\n        var ocProperties;\n        if (typeof options !== 'undefined' && typeof options.targetIndex === 'number') {\n            if (options.targetIndex > this.pageCount) {\n                throw new Error('The target index is out of range.');\n            }\n            this._targetIndex = options.targetIndex;\n        }\n        var pageReference = new Map();\n        if (!this._isDuplicatePage) {\n            for (var index = 0; index < sourceDocument.pageCount; index++) {\n                var sourcepage = sourceDocument.getPage(index);\n                pageReference.set(sourcepage._pageDictionary, null);\n            }\n        }\n        var helper;\n        if (!this._mergeHelperCache) {\n            this._mergeHelperCache = new Map();\n        }\n        if (!sourceDocument._uniqueID) {\n            sourceDocument._uniqueID = _getNewGuidString();\n        }\n        if (this._mergeHelperCache.has(sourceDocument._uniqueID)) {\n            helper = this._mergeHelperCache.get(sourceDocument._uniqueID);\n        }\n        else {\n            helper = new _PdfMergeHelper(this._crossReference, this, sourceDocument, pageReference, options);\n            this._mergeHelperCache.set(sourceDocument._uniqueID, helper);\n        }\n        var isLayersPresent = false;\n        if ((!this._isDuplicatePage && sourceDocument._catalog._catalogDictionary.has('OCProperties')) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            isLayersPresent = true;\n            sourceOCProperties = sourceDocument._catalog._catalogDictionary.get('OCProperties');\n            ocProperties = new _PdfDictionary(this._crossReference);\n            helper._writeObject(sourceDocument, ocProperties, sourceOCProperties, sourceOCProperties, 'OCProperties', null, null);\n            ocProperties._updated = true;\n        }\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = sourceDocument.getPage(i);\n            sourceDocument.form._doPostProcess(sourceDocument.flatten, page);\n            if (page.annotations.count > 0) {\n                page.annotations._doPostProcess(sourceDocument.flatten);\n                if (sourceDocument.flatten) {\n                    if (page._pageDictionary.has('Annots')) {\n                        delete page._pageDictionary._map.Annots;\n                        page._pageDictionary._updated = true;\n                    }\n                    page.annotations._clear();\n                }\n            }\n            if (sourceDocument._isSplitDocument) {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options, sourceDocument._isSplitDocument);\n            }\n            else {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options);\n            }\n            correspondancePagecount++;\n            if (typeof this._targetIndex === 'number') {\n                ++this._targetIndex;\n            }\n        }\n        if (!this._isDuplicatePage) {\n            helper._fixDestinations(sourceDocument);\n        }\n        helper._exportBookmarks(sourceDocument, correspondancePagecount);\n        helper._mergeFormFieldsWithDocument();\n        if ((isLayersPresent && !this._isDuplicatePage) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            helper._importLayers(ocProperties, true);\n        }\n        helper._objectDispose();\n        this._isDuplicatePage = false;\n    };\n    PdfDocument.prototype.importPage = function (arg1, arg2, options) {\n        if (typeof arg1 === 'number') {\n            this._isDuplicatePage = true;\n            if (arg2 instanceof PdfPageImportOptions) {\n                this._importPages(this, arg1, arg1, arg2);\n            }\n            else {\n                this._importPages(this, arg1, arg1);\n            }\n        }\n        else if (arg1 instanceof PdfPage && arg2 instanceof PdfDocument) {\n            var index = arg1._pageIndex;\n            this.importPageRange(arg2, index, index, options);\n        }\n    };\n    /**\n     * Splitting a PDF file into individual pages.\n     *\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document into individual pages\n     * document.split();\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.split = function () {\n        this.splitByFixedNumber(1);\n    };\n    /**\n     * Splits the PDF document into parts, each containing a maximum number of pages specified.\n     *\n     * @param {number} fixedNumber specifies the maximum number of pages in each split PDF. The default value is 1.\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByFixedNumber = function (fixedNumber) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent && pageCount >= fixedNumber && fixedNumber > 0) {\n            var splitIndex = 0;\n            for (var tempValue = 0; tempValue < pageCount; tempValue += fixedNumber) {\n                var endIndex = Math.min(tempValue + fixedNumber - 1, pageCount - 1);\n                var pdfData = this._importDocumentPages(tempValue, endIndex);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n        else {\n            throw new Error('Invalid split number. Split number should be greater than zero and less than or equal to page count.');\n        }\n    };\n    /**\n     * Splits the PDF document into multiple parts based on the specified page ranges.\n     *\n     * @param {Array<number[]>} ranges The two dimensional number array specified for start and end page indexes to split PDF documents.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by page ranges specified\n     * document.splitByPageRanges([[0, 4], [5, 9]]);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByPageRanges = function (ranges) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent) {\n            var splitIndex = 0;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[Number.parseInt(i.toString(), 10)];\n                if (Array.isArray(range) && range.length < 2) {\n                    throw new Error('Invalid page range. Start and end page indexes should be specified.');\n                }\n                var start = range[0];\n                var end = range[1];\n                if (start < 0 || end < 0 || start >= pageCount || end >= pageCount || start > end) {\n                    throw new Error('Invalid page range: start (${start}) and end (${end}).');\n                }\n                var pdfData = this._importDocumentPages(start, end);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n    };\n    PdfDocument.prototype._importDocumentPages = function (startIndex, endIndex) {\n        this._isSplitDocument = true;\n        var document = new PdfDocument(_emptyPdfData);\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = this.getPage(i);\n            document.importPage(page, this);\n        }\n        document.removePage(0);\n        var result = document.save();\n        document.destroy();\n        return result;\n    };\n    PdfDocument.prototype._invokeSplitEvent = function (splitIndex, pdfData) {\n        var args = new PdfDocumentSplitEventArgs(splitIndex, pdfData);\n        this.splitEvent(this, args);\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n/**\n * The class provides various settings related to PDF pages.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageSettings = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPageSettings` class\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Create a new PDF page settings instance\n     * let pageSettings: PdfPageSettings = new PdfPageSettings();\n     * // Sets the margins\n     * pageSettings.margins = new PdfMargins(40);\n     * // Sets the page size\n     * pageSettings.size = [595, 842];\n     * // Sets the page orientation\n     * pageSettings.orientation = PdfPageOrientation.landscape;\n     * // Add a new PDF page with page settings\n     * page = document.addPage(pageSettings);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPageSettings() {\n        this._size = [595, 842];\n        this._isOrientation = false;\n        this._orientation = PdfPageOrientation.portrait;\n        this._size = [595, 842];\n        this._margins = new PdfMargins();\n        this._rotation = PdfRotationAngle.angle0;\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page.\n         *\n         * @returns {PdfPageOrientation} The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [842, 595];\n         * // Gets the page orientation\n         * let orientation: PdfPageOrientation = pageSettings.orientation;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._orientation;\n        },\n        /**\n         * Sets the orientation of the page.\n         *\n         * @param {PdfPageOrientation} value The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isOrientation = true;\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this._updateSize(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        /**\n         * Gets the size of the page.\n         *\n         * @returns {number[]} The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        /**\n         * Sets the width and height of the page.\n         *\n         * @param {number[]} value The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isOrientation) {\n                this._updateSize(value);\n            }\n            else {\n                this._size = value;\n                this._updateOrientation();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets the margin value of the page.\n         *\n         * @returns {PdfMargins} PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the margins\n         * let margins: PdfMargins = pageSettings.margins;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._margins;\n        },\n        /**\n         * Sets the margin value of the page.\n         *\n         * @param {PdfMargins} value PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * pageSettings.margins = new PdfMargins(40);\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._margins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the PDF page.\n         *\n         * @returns {PdfRotationAngle} PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the rotation angle\n         * let rotation: PdfRotationAngle = pageSettings.rotation;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page.\n         *\n         * @param {PdfRotationAngle} value PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the rotation angle\n         * pageSettings.rotation = PdfRotationAngle.angle90;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n            if (value >= 4) {\n                this._rotation = (value % 4);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPageSettings.prototype._updateSize = function (value) {\n        var pageOrientation;\n        var pageSize;\n        if (Array.isArray(value)) {\n            pageOrientation = this.orientation;\n            pageSize = value;\n        }\n        else {\n            pageOrientation = value;\n            pageSize = this._size;\n        }\n        if (pageOrientation === PdfPageOrientation.portrait) {\n            this._size = [Math.min(pageSize[0], pageSize[1]), Math.max(pageSize[0], pageSize[1])];\n        }\n        else {\n            this._size = [Math.max(pageSize[0], pageSize[1]), Math.min(pageSize[0], pageSize[1])];\n        }\n    };\n    PdfPageSettings.prototype._updateOrientation = function () {\n        this._orientation = (this._size[1] >= this._size[0]) ? PdfPageOrientation.portrait : PdfPageOrientation.landscape;\n    };\n    PdfPageSettings.prototype._getActualSize = function () {\n        var width = this._size[0] - (this._margins._left + this._margins._right);\n        var height = this._size[1] - (this._margins._top + this._margins._bottom);\n        return [width, height];\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n/**\n * A class representing PDF page margins.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfMargins = /** @class */ (function () {\n    function PdfMargins(all) {\n        if (typeof all === 'undefined') {\n            this._left = this._right = this._top = this._bottom = 40;\n        }\n        else {\n            this._left = this._right = this._top = this._bottom = all;\n        }\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        /**\n         * Gets the left margin value of the page.\n         *\n         * @returns {number} Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the left margin\n         * let left: number = pageSettings.margins.left;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._left;\n        },\n        /**\n         * Sets the left margin value of the page.\n         *\n         * @param {number} value Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._left = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets the right margin value of the page.\n         *\n         * @returns {number} Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the right margin\n         * let right: number = pageSettings.margins.right;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._right;\n        },\n        /**\n         * Sets the right margin value of the page.\n         *\n         * @param {number} value - Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._right = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets the top margin value of the page.\n         *\n         * @returns {number} Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the top margin\n         * let top: number = pageSettings.margins.top;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._top;\n        },\n        /**\n         *Sets the top margin value of the page.\n         *\n         * @param {number} value Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._top = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Get the bottom margin value of the page.\n         *\n         * @returns {number} Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the bottom margin\n         * let bottom: number = pageSettings.margins.bottom;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bottom;\n        },\n        /**\n         * Sets the bottom margin value of the page.\n         *\n         * @param {number} value Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._bottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfMargins;\n}());\nexport { PdfMargins };\n/**\n * Public class to provide data for the document split event, including the split index and PDF data.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * document.splitEvent = documentSplitEvent;\n * // Split PDF document by fixed number of pages\n * document.splitByFixedNumber(1);\n * // Event to invoke while splitting PDF document data\n * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n * }\n * // Destroy the document\n * document.destroy();\n */\nvar PdfDocumentSplitEventArgs = /** @class */ (function () {\n    /*\n     * Initializes a new instance of the `PdfDocumentSplitEventArgs` class.\n     *\n     * @param {number} splitIndex The fixed number to split PDF document pages. The default value is 1.\n     * @param {Uint8Array} pdfData The byte array of the split PDF document data.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfDocumentSplitEventArgs(splitIndex, pdfData) {\n        this._index = splitIndex;\n        this._pdfData = pdfData;\n    }\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"pdfData\", {\n        /*\n         * Gets the byte array of the PDF document data.\n         *\n         * @returns {Uint8Array} The byte array of the PDF document data.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._pdfData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"index\", {\n        /*\n         * Gets the split index of the PDF document.\n         *\n         * @returns {Uint8Array} The index that defines the number of event calls during the PDF document split.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDocumentSplitEventArgs;\n}());\nexport { PdfDocumentSplitEventArgs };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","import { PdfLayoutType, PdfLayoutBreakType } from '../enumerator';\n/**\n * Represent the layout format class for pagination\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create an instance for PDF layout format\n * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set the layout format\n * layout.break = PdfLayoutBreakType.fitPage;\n * layout.layout = pdfLayoutType.paginate;\n * // Draw the items using specified bounds and layout format\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfLayoutFormat = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutFormat` class.\n     *\n     * @param {PdfLayoutFormat}  format Format for pagination.\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page of document\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create an instance of ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Create an instance for layout format for drawing\n     * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n     * // Set the layout format\n     * layout.break = PdfLayoutBreakType.fitPage;\n     * layout.layout = pdfLayoutType.paginate;\n     * // Draw the items using specified bounds and layout format\n     * list.draw(page, 0, 20, layout);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfLayoutFormat(format) {\n        this._boundSet = false;\n        this._paginateBounds = [];\n        if (format) {\n            this.break = format.break;\n            this.layout = format.layout;\n            this.paginateBounds = format.paginateBounds;\n            this._boundSet = format._boundSet;\n        }\n        else {\n            this.layout = PdfLayoutType.paginate;\n            this.break = PdfLayoutBreakType.fitPage;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        /**\n         * Gets the layout type of the page.\n         *\n         * @returns {PdfLayoutType} The layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Retrieve the layout type applied to the page layout format\n         * let layoutType: PdfLayoutType = pageLayout.layout;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._layout;\n        },\n        /**\n         * Sets the layout type of the page.\n         *\n         * @param {PdfLayoutType} value the  layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Initialize an array of string items\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout type to paginate for the page layout format\n         * pageLayout.layout = PdfLayoutType.paginate;\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._layout = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets the layout break type of the page.\n         *\n         * @returns {PdfLayoutBreakType} The layout break type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define an array of products\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the layout break type of the list\n         * let layoutType: PdfLayoutBreakType = pageLayout.break;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._break;\n        },\n        /**\n         * Sets the layout break type for the page.\n         *\n         * @param {PdfLayoutBreakType} value The layout break type to set for the page.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout break type for the page\n         * pageLayout.break = PdfLayoutBreakType.fitPage;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._break = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets the paginate bounds of the page.\n         *\n         * @returns {number[]} Array containing the paginate bounds.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the paginate bounds\n         * let layoutType: paginateBounds = pageLayout.paginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._paginateBounds;\n        },\n        /**\n         * Sets the paginate bounds for the page.\n         *\n         * @param {number[]} value Array representing the paginate bounds to set for the page.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for page layout settings\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the paginate bounds for the page\n         * pageLayout.paginateBounds = [0, 0, 500, 700];\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._paginateBounds = value;\n            this._boundSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets whether to use paginate bounds for pagination.\n         *\n         * @returns {boolean} Whether pagination bounds are used.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get whether paginate bounds are used\n         * let usePaginate:  boolean = pageLayout.usePaginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._boundSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\n/**\n * Represents a class for layout result in PDF generation.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list and access the layout result\n * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLayoutResult = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutResult` class.\n     * Remarks: Internal constructor used to create a new instance of a PDF layout result.\n     *\n     * @param {PdfPage} page The page where the circle annotation is to be placed.\n     * @param {number[]} bounds The bounds within which the list has been drawn.\n     * ```typescript\n     * // Load an existing document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create a new ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list and access the layout result\n     * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfLayoutResult(page, bounds) {\n        this._page = page;\n        this._bounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"Page\", {\n        /**\n         * Gets the page associated with the layout result.\n         *\n         * @returns {PdfPage} value of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the page from the layout result\n         * let resultPage: PdfPage = result.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the bounds associated with the layout result.\n         *\n         * @returns {number[]} The bounds of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the bounds associated with layout result\n         * let bounds: number[] = result.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\nvar _PageLayoutResult = /** @class */ (function () {\n    function _PageLayoutResult() {\n        this.markerWrote = false;\n        this.markerWidth = 0;\n        this.markerX = 0;\n    }\n    return _PageLayoutResult;\n}());\nexport { _PageLayoutResult };\nvar _PdfLayoutParameters = /** @class */ (function () {\n    function _PdfLayoutParameters() {\n    }\n    return _PdfLayoutParameters;\n}());\nexport { _PdfLayoutParameters };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfImage } from './pdf-image';\nimport { _PdfName } from './../../pdf-primitives';\nimport { _decode, _getDecoder } from './../../utils';\nimport { _PdfColorSpace } from './../../enumerator';\nimport { _PngDecoder } from './png-decoder';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = _getDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n        if (this._decoder && this._decoder instanceof _PngDecoder) {\n            var decoder = this._decoder;\n            this._maskStream = decoder._maskStream;\n            if (decoder._isDecode) {\n                if (decoder._colorSpace) {\n                    this._setColorSpace();\n                }\n            }\n            else {\n                this._setColorSpace();\n            }\n        }\n        else {\n            this._setColorSpace();\n        }\n    };\n    PdfBitmap.prototype._setColorSpace = function () {\n        var stream = this._imageStream;\n        var dictionary = stream.dictionary;\n        var color = dictionary.get('ColorSpace');\n        var colorSpace;\n        if (color.name === 'DeviceCMYK') {\n            colorSpace = _PdfColorSpace.cmyk;\n        }\n        else if (color.name === 'DeviceGray') {\n            colorSpace = _PdfColorSpace.grayScale;\n        }\n        if (this._decoder instanceof _PngDecoder) {\n            var cs = this._decoder._colorSpace; // eslint-disable-line\n            if (typeof cs !== 'undefined' && cs !== null) {\n                colorSpace = _PdfColorSpace.indexed;\n            }\n        }\n        switch (colorSpace) {\n            case _PdfColorSpace.cmyk:\n                dictionary.update('Decode', [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceCMYK'));\n                break;\n            case _PdfColorSpace.grayScale:\n                dictionary.update('Decode', [0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceGray'));\n                break;\n            case _PdfColorSpace.rgb:\n                dictionary.update('Decode', [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceRGB'));\n                break;\n            case _PdfColorSpace.indexed:\n                dictionary.update('ColorSpace', this._decoder._colorSpace);\n                break;\n            default:\n                break;\n        }\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * Represents the items of the list.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new list item and add into the collection\n * items.add(new PdfListItem('PDF'));\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItem = /** @class */ (function () {\n    /**\n     * Creates a new `PdfListItem` instance with the specified text and optional settings for font, format, pen, and brush.\n     *\n     * @param {string} text The text content for the list item.\n     * @param {object} [settings] Optional settings for the list item.\n     * @param {PdfFont} [settings.font] The font used for rendering the text.\n     * @param {PdfStringFormat} [settings.format] The string format used for text layout.\n     * @param {PdfBrush} [settings.brush] The brush used for filling shapes or text.\n     * @param {PdfPen} [settings.pen] The pen used for drawing outlines.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create an instance of list item collection by passing the string array\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n     * // Create a new list item\n     * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n     * // Add the list item into the collection\n     * items.add(item);\n     * // Create a new PDF ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list items\n     * list.draw(page, 0, 20);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfListItem(text, settings) {\n        this._textIndent = 0;\n        if (text === null || typeof text === 'undefined') {\n            throw new Error('Text cannot be null or undenfied.');\n        }\n        this._text = text;\n        if (settings) {\n            if (settings.font) {\n                this._font = settings.font;\n            }\n            if (settings.format) {\n                this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                this._brush = settings.brush;\n            }\n        }\n    }\n    Object.defineProperty(PdfListItem.prototype, \"brush\", {\n        /**\n         * Gets the brush associated with the list item.\n         *\n         * @returns {PdfBrush} The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the brush from the list item\n         * let brush: PdfBrush = item.brush;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the brush associated with the list item.\n         *\n         * @param {PdfBrush} value The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the fill color\n         * item.brush = new PdfBrush([255, 0, 0]);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list item.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfPen([255, 0, 0], 1)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the pen from the list item\n         * let pen: PdfPen = item.pen;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `Pdfpen` object associated with the list item.\n         *\n         * @param {PdfPen} value `PdfPen` object used to specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the stroke color\n         * item.pen = new PdfPen([255, 0, 0], 1);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"font\", {\n        /**\n         * Get the `PdfFont` object associated with the list item.\n         *\n         * @returns {PdfFont} The `PdfFont` object used for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfStandardFont(PdfFontFamily.timesRoman, 12)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the font from the list item\n         * let font: PdfFont = item.font;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list item.\n         *\n         * @param {PdfFont} value The `PdfFont` object to be set for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"stringFormat\", {\n        /**\n         * Gets the `PdfStringFormat` object associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object used to specify text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {format: new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the string format from the list item\n         * let format: PdfStringFormat = item.stringFormat;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the `PdfStringFormat` object associated with the list item.\n         *\n         * @param {PdfStringFormat} value The`PdfStringFormat` object to be set for text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"text\", {\n        /**\n         * Gets the text content of the list item.\n         *\n         * @returns {string} The text content of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item1);\n         * // Get the text content of the item\n         * let text: string = item.text;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._text;\n        },\n        /**\n         * Sets string format of the list item.\n         *\n         * @param {string} value The text content to be set.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('Word');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text of the list item\n         * item.text = 'PDF';\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Get the text indent of the item\n         * let textIndent: number = item.textIndent;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list item.\n         *\n         * @param {number} value he text indent value to be set.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Set the text indent for the item\n         * item.textIndent = 30;\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Draw the list items on the specified page at position (10, 50)\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"subList\", {\n        /**\n         * Get the sub-list associated with the current list item.\n         *\n         * @returns {PdfList} The `PdfList` object representing the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('Sub Item 1'));\n         * subList.items.add(new PdfListItem('Sub Item 2'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Get the sublist\n         * let sublist: PdfList = list.items._listitem[0].sublist;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._subList;\n        },\n        /**\n         * Sets the sub-list associated with the current list item.\n         *\n         * @param {PdfList} value The `PdfList` object to be set as the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('PDF'));\n         * subList.items.add(new PdfListItem('Word'));\n         * subList.items.add(new PdfListItem('PPT'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._subList = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfListItem;\n}());\nexport { PdfListItem };\n/**\n * Represents a collection of list items that can be drawn on a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItemCollection = /** @class */ (function () {\n    function PdfListItemCollection(items) {\n        var _this = this;\n        if (!this._listItems) {\n            this._listItems = [];\n        }\n        if (items) {\n            items.forEach(function (item) {\n                _this.add(new PdfListItem(item));\n            });\n        }\n    }\n    Object.defineProperty(PdfListItemCollection.prototype, \"count\", {\n        /**\n         * Gets the count of the list item collection.\n         *\n         * @returns {number} The count of the list items.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Initialize an array of string items\n         * let products: string[] = ['Word', 'Excel', 'PDF', 'Power Point'];\n         * // Add the items to list item collection by passing the array of products\n         * list.items = new PdfListCollection(products);\n         * / Draw the list on the page at specified bounds\n         * list.draw(page,0, 10, 500, 700);\n         * // Get the count of items from the list\n         * let count: number = list.items.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._listItems.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListItemCollection.prototype.add = function (item, itemIndent) {\n        if (item) {\n            this._listItems.push(item);\n            if (itemIndent) {\n                item.textIndent = itemIndent;\n            }\n        }\n        else {\n            throw new Error('item should not be null');\n        }\n    };\n    /**\n     * Retrieves the `PdfListItem` at the specified index in the collection.\n     *\n     * @param {number} index The zero-based index of the item to retrieve.\n     * @returns {PdfListItem} The `PdfListItem` at the specified index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Accessing the first page of the document\n     * let page: PdfPage = document.getpage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = ['Excel', 'Power Point', 'Word', 'Windows', 'MAUI'];\n     * // Add the items to list item collection by passing the array of products\n     * let itemCollection: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Retrieve a specific item from the list collection at a particular index\n     * let item: PdflistItem = list.itemCollection.itemAt(1);\n     * // Draw the list items on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 50, 500, 700);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.at = function (index) {\n        if (index === null) {\n            throw new Error('index should not be null');\n        }\n        var item = this._listItems[Number.parseInt(index.toString(), 10)];\n        return item;\n    };\n    /**\n     * Removes a `PdfListItem` from the collection.\n     *\n     * @param {PdfListItem} item The list item to be removed from the collection.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection\n     * let itemToRemove: PdfListItem = list.items.at(0);\n     * list.items.remove(itemToRemove);\n     * // Draw the list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.remove = function (item) {\n        if (!item) {\n            throw new Error('item should not be null');\n        }\n        var found = false;\n        for (var i = 0; i < this._listItems.length; i++) {\n            if (this._listItems[Number.parseInt(i.toString(), 10)] === item) {\n                found = true;\n                this._listItems.splice(Number.parseInt(i.toString(), 10), 1);\n                break;\n            }\n        }\n        if (!found) {\n            throw new Error('item collection does not contain the given content');\n        }\n    };\n    /**\n     * Removes a `PdfListItem` at the specified index from the collection.\n     *\n     * @param {number} index The zero-based index of the item to remove.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection by its index\n     * list.items.removeAt(1);\n     * // Draw the modified list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._listItems.length) {\n            throw new Error('The index should be less than items count or equal to 0');\n        }\n        this._listItems.splice(index, 1);\n    };\n    /**\n     * Clear the list item collection.\n     *\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Draw the initial list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Clear the list item collection\n     * list.items.clear();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.clear = function () {\n        this._listItems = [];\n    };\n    /**\n     * Inserts a `PdfListItem` into the collection at the specified index.\n     *\n     * @param {number} index The zero-based index at which the item should be inserted.\n     * @param {PdfListItem} item The list item to be inserted into the collection.\n     * @param {number} itemIndent The indent of the list item.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Create a new PdfListItem instance with some text\n     * let item: PdfListItem = new PdfListItem('text');\n     * // Insert the new item into the list at index 1 with an indent of 40\n     * list.items.insert(1, item, 40);\n     * // Draw the updated list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.insert = function (index, item, itemIndent) {\n        if (index < 0 || index > this._listItems.length) {\n            throw new Error('Index should be within the range of items count (inclusive).');\n        }\n        if (!item) {\n            throw new Error('Item cannot be null.');\n        }\n        if (itemIndent) {\n            item.textIndent = itemIndent;\n        }\n        this._listItems.splice(index, 0, item);\n    };\n    /**\n     * Finds the index of a `PdfListItem` in the collection.\n     *\n     * @param {PdfListItem} item The list item to find in the collection.\n     * @returns {number} The zero-based index of the item in the collection, or -1 if not found.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Retrieve the first item from the collection\n     * let item: PdfListItem = item._listItems[0];\n     * // Find the index of the first item in the collection\n     * let index: number = list.items.indexOf(item);\n     * // Draw the list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.indexOf = function (item) {\n        if (!item) {\n            throw new Error('Item should be defined.');\n        }\n        return this._listItems.indexOf(item);\n    };\n    return PdfListItemCollection;\n}());\nexport { PdfListItemCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfListMarkerAlignment, PdfLayoutType, PdfNumberStyle, PdfTextAlignment, PdfUnorderedListStyle } from '../enumerator';\nimport { PdfFontFamily, PdfStandardFont, PdfStringFormat, _PdfStringLayouter } from '../fonts';\nimport { PdfBrush } from '../graphics/pdf-graphics';\nimport { PdfTemplate } from '../graphics/pdf-template';\nimport { PdfLayoutResult, PdfLayoutFormat, _PdfLayoutParameters, _PageLayoutResult } from '../graphics';\nimport { PdfPage } from '../pdf-page';\nimport { PdfListItemCollection } from './pdf-list-item';\nimport { _convertNumber } from './../utils';\n/**\n * Represents base class for lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Initialize a new brush\n * let brush: PdfBrush =  new PdfBrush([0, 255, 255])\n * // Add an item to item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new instance of ordered list\n * let list: PdfList = new PdfOrderedList(items);\n * // Draw the ordered list with specified items\n * list.draw(page, 0, 20, 500, 700);\n * // Get the brush associated with the ordered list\n * let listBrush: PdfBrush = list.brush;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfList = /** @class */ (function () {\n    function PdfList() {\n        this._textIndent = 5;\n        this._indent = 10;\n        this._alignment = PdfListMarkerAlignment.left;\n        this._delimiter = '.';\n        this._suffix = '.';\n        this._enableHierarchy = false;\n        this._currentIndex = 0;\n        this._size = [0, 0];\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n    }\n    Object.defineProperty(PdfList.prototype, \"brush\", {\n        /**\n         * Gets the `PdfBrush` object associated with the list.\n         *\n         * @returns {PdfBrush} The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Initialize a new brush\n         * let brush: PdfBrush =  new PdfBrush([0, 255, 255]);\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the brush associated with the ordered list\n         * let listBrush: PdfBrush = list.brush;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the `PdfBrush` object associated with the list.\n         *\n         * @param {PdfBrush} value The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new Ordered list and set the brush\n         * let list: PdfOrderedList = new PdfOrderedList(items, {brush: new PdfBrush([255, 0, 0])});\n         * // Set fill color to the list\n         * list.brush = brush;\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify stroke properties for text rendering.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // create a new ordered list and draw the list\n         * let list: PdfOrderedList = new PdfOrderedList(items, {pen: new PdfPen([0, 255, 255], 1)});\n         * list.draw(page, 0, 20, 500, 700);\n         * // Retrieve the pen associated with the ordered list\n         * let itemPen: PdfPen = list.pen;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `PdfPen` object associated with the list.\n         *\n         * @param {PdfPen} value The `PdfPen` object to specify fill text rendering mode.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new pen\n         * let pen: PdfPen =  new PdfPen([0, 255, 255], 1);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the pen for the ordered list\n         * list.pen = pen;\n         * // Draw the list associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"font\", {\n        /**\n         * Gets the font of the list item.\n         *\n         * @returns {PdfFont} The font used for the list items.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * /// Retrieve the font used for the list items\n         * let itemPen: PdfFont = list.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list.\n         *\n         * @param {PdfFont} value The `PdfPen` object to to set for the list items.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new font for list\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Create a new ordered list with items and font\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * list.font = font;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"stringFormat\", {\n        /**\n         * Gets the text layout format associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to  listitem collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list with items\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Getting the text layout format used by the list items\n         * let itemFormat: PdfStringFormat = list.stringFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the text layout format of the list item.\n         *\n         * @param {PdfStringFormat} value The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new  format with alignment settings for list\n         * let itemFormat: PdfStringFormat =  new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(items);\n         * // Create a ordered list with the item collection\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Set the text layout format for the list\n         * list.stringFormat = itemFormat;\n         * // Draw the items on the page with the updated format\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"indent\", {\n        /**\n         * Gets the indent of the list.\n         *\n         * @returns {number} The indent value of the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current indent value used by the list\n         * let itemIndent: number = list.indent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._indent;\n        },\n        /**\n         * Sets the indent of the list.\n         *\n         * @param {number} value The indent value to set for the list.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the indent value for the list\n         * list.indent = 40;\n         * // Draw the items on the page with the specified indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._indent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current text indent value of the list\n         * let textIndent: number = list.textIndent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list.\n         *\n         * @param {number} value The text indent value to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text indent value for the list\n         * list.textIndent = 40;\n         * // Draw the items on the page with the updated text indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"delimiter\", {\n        /**\n         * Gets the delimiter string used to separate items in the list.\n         *\n         * @returns {string} The delimiter string used in the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of PdfListItemCollection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the delimiter used in the list\n         * let delimiter: string = list.delimiter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._delimiter;\n        },\n        /**\n         * Sets the delimiter string used to separate items in the list.\n         *\n         * @param {string} value The delimiter string to be set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the delimiter for the list\n         * list.delimiter = ')';\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._delimiter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"suffix\", {\n        get: function () {\n            return this._suffix;\n        },\n        set: function (value) {\n            this._suffix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"enableHierarchy\", {\n        /**\n         * Gets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @returns {boolean} `true` if hierarchical structure is enabled; otherwise, `false`.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items associated with the items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the hierarchical structure status\n         * let enableHierarchy: boolean = list.enableHierarchy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._enableHierarchy;\n        },\n        /**\n         * Sets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @param {boolean} value The boolean flag to enable or disable hierarchical structure.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the hierarchical structure status\n         * list.enableHierarchy = true;\n         * / Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._enableHierarchy = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"alignment\", {\n        /**\n         * Gets the text alignment of the list.\n         *\n         * @returns {PdfTextAlignment} The text alignment.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the alignment of the list\n         * let listAlignment: PdfTextAlignment = list.alignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._alignment;\n        },\n        /**\n         * Sets the text alignment of the list.\n         *\n         * @param {PdfTextAlignment} value The text alignment to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the alignment for the list\n         * list.alignment = PdfTextAlignment.left;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._alignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"items\", {\n        /**\n         * Gets the item collection of the list.\n         *\n         * @returns {PdfListItemCollection} The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the item collection\n         * let collection: PdfListItemCollection = list.items;\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._itemCollection;\n        },\n        /**\n         * Sets the item collection of the list.\n         *\n         * @param {PdfListItemCollection} value The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Sets the item collection\n         * list.items = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._itemCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"_markerRightToLeft\", {\n        get: function () {\n            return this._alignment === PdfListMarkerAlignment.right;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfList.prototype.draw = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPage) {\n            if (arg1._isNew) {\n                return this._drawInternal(arg1, arg2, arg3, arg4, arg5, arg6);\n            }\n            else {\n                (new _PdfListLayouter(this)).layout(arg1.graphics, [arg2, arg3, 0, 0]);\n            }\n        }\n        else {\n            (new _PdfListLayouter(this)).layout(arg1, [arg2, arg3, 0, 0]);\n        }\n    };\n    PdfList.prototype._drawInternal = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        var parameter = new _PdfLayoutParameters();\n        parameter._page = arg1;\n        if (arg4 === null || typeof arg4 === 'undefined') {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = new PdfLayoutFormat();\n        }\n        else if (typeof arg4 === 'number') {\n            parameter._bounds = [arg2, arg3, arg4, arg5];\n            if (arg6) {\n                parameter._format = arg6;\n            }\n            else {\n                parameter._format = new PdfLayoutFormat();\n            }\n        }\n        else if (arg4 instanceof PdfLayoutFormat) {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = arg4;\n        }\n        return this._layout(parameter);\n    };\n    PdfList.prototype._layout = function (parameter) {\n        return (new _PdfListLayouter(this)).layoutInternal(parameter);\n    };\n    return PdfList;\n}());\nexport { PdfList };\n/**\n * Represents an ordered list in a PDF document.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define an array of strings representing items to be added\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the ordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfOrderedList = /** @class */ (function (_super) {\n    __extends(PdfOrderedList, _super);\n    function PdfOrderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        _this._startNumber = 1;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfNumberStyle.numeric;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfNumberStyle.numeric;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfOrderedList.prototype, \"style\", {\n        /**\n         * Gets the numbering style used for the ordered list.\n         *\n         * @returns {PdfNumberStyle} The numbering style used for the ordered list.\n         *  ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the numbering style used for the ordered list\n         * let style: PdfNumberStyle = list.style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the numbering style used for the ordered list.\n         *\n         * @param {PdfNumberStyle} value The numbering style used for the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         *  // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Define a style for the list\n         * let style: PdfNumberStyle = PdfNumberStyle.lowerLatin;\n         * // Set the numbering style for the list items\n         * list.style = style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfOrderedList.prototype, \"startNumber\", {\n        /**\n         * Gets the starting number used for the ordered list.\n         *\n         * @returns {number} The starting number of the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the starting number used for the ordered list\n         * let startnumber: number = list.startNumber;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._startNumber;\n        },\n        /**\n         * Sets the starting number to be used for the ordered list.\n         *\n         * @param {number} value The starting number to set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the starting number for the ordered list\n         * list.startNumber = 5;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('Start number should be greater than 0.');\n            }\n            this._startNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfOrderedList.prototype._getNumber = function () {\n        return _convertNumber(this._startNumber + this._currentIndex, this._style);\n    };\n    return PdfOrderedList;\n}(PdfList));\nexport { PdfOrderedList };\n/**\n * Represents the Unordered lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define the items in the unordered list\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Create an instance of PdfListItemCollection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of PdfUnorderedList\n * let list: PdfUnorderedList = new PdfUnorderedList();\n * // Draw the unordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfUnorderedList = /** @class */ (function (_super) {\n    __extends(PdfUnorderedList, _super);\n    function PdfUnorderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfUnorderedListStyle.disk;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfUnorderedListStyle.disk;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUnorderedList.prototype, \"style\", {\n        /**\n         * Gets the style used for the unordered list.\n         *\n         * @returns {PdfUnorderedListStyle} The style used for the unordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Get the style used for the unordered list\n         * let style: PdfUnorderedListStyle = list.style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style used for the unordered list.\n         *\n         * @param {PdfUnorderedListStyle} value The style to set for the unordered list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Initialize a style for the unordered list\n         * let style: PdfUnorderedListStyle = PdfUnorderedListStyle.circle;\n         * // Set the style for the unordered list items\n         * list.style = style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUnorderedList.prototype._getStyledText = function () {\n        switch (this._style) {\n            case PdfUnorderedListStyle.disk:\n                return '\\x6C';\n            case PdfUnorderedListStyle.square:\n                return '\\x6E';\n            case PdfUnorderedListStyle.asterisk:\n                return '\\x5D';\n            case PdfUnorderedListStyle.circle:\n                return '\\x6D';\n            default:\n                return '';\n        }\n    };\n    PdfUnorderedList.prototype._draw = function (graphics, x, y, brush, pen) {\n        var template = new PdfTemplate([0, 0, this._size[0], this._size[1]], graphics._crossReference);\n        var bounds = [0, 0, 0, 0];\n        if (pen) {\n            bounds[0] = bounds[0] + pen._width;\n            bounds[1] = bounds[1] + pen._width;\n        }\n        template.graphics.drawString(this._getStyledText(), this._unicodeFont, bounds, pen, brush);\n        graphics.drawTemplate(template, { x: x, y: y, width: template.size[0], height: template.size[1] });\n    };\n    return PdfUnorderedList;\n}(PdfList));\nexport { PdfUnorderedList };\nvar _PdfListInfo = /** @class */ (function () {\n    function _PdfListInfo(list, index, number) {\n        this._list = list;\n        this._index = index;\n        this._number = number;\n    }\n    return _PdfListInfo;\n}());\nexport { _PdfListInfo };\nvar _PdfListLayouter = /** @class */ (function () {\n    function _PdfListLayouter(element) {\n        this._indent = 0;\n        this._information = [];\n        this._markerMaxWidth = 0;\n        this._finish = false;\n        this._usePaginateBounds = true;\n        this._resultHeight = 0;\n        this._size = [0, 0];\n        this._index = 0;\n        this._element = element;\n    }\n    _PdfListLayouter.prototype.layout = function (graphics, bounds) {\n        this._graphics = graphics;\n        var parameter = new _PdfLayoutParameters();\n        parameter._bounds = bounds;\n        parameter._format = new PdfLayoutFormat();\n        parameter._format.layout = PdfLayoutType.onePage;\n        this.layoutInternal(parameter);\n    };\n    _PdfListLayouter.prototype.layoutInternal = function (parameter) {\n        this._currentPage = parameter._page;\n        this._bounds = parameter._bounds.slice();\n        if (this._currentPage) {\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            this._graphics = this._currentPage.graphics;\n        }\n        var pageResult = new _PageLayoutResult();\n        pageResult.broken = false;\n        pageResult.y = this._bounds[1];\n        this._curList = this._element;\n        this._indent = this._curList.indent;\n        this._setCurrentParameters(this._curList);\n        if (!this._curList.brush) {\n            this._currentBrush = new PdfBrush([0, 0, 0]);\n        }\n        if (!this._curList.font) {\n            this._currentFont = this._curList._defaultFont;\n        }\n        if (this._curList instanceof PdfOrderedList) {\n            this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n        }\n        var useOnPage = parameter._format.layout === PdfLayoutType.onePage;\n        while (!this._finish) {\n            pageResult.y = this._bounds[1];\n            pageResult = this._layoutOnPage(pageResult);\n            if (useOnPage) {\n                break;\n            }\n            if (this._currentPage && !this._finish) {\n                this._currentPage = this._getNextPage(this._currentPage);\n            }\n            this._graphics = this._currentPage.graphics;\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            if (parameter._format && parameter._format.usePaginateBounds && this._usePaginateBounds) {\n                this._bounds = parameter._format._paginateBounds;\n            }\n        }\n        this._information = [];\n        var finalBounds = [this._bounds[0], pageResult.y, this._bounds[2], this._resultHeight];\n        var result = new PdfLayoutResult(this._currentPage, finalBounds);\n        if (this._currentFormat) {\n            this._currentFormat._isList = false;\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._layoutOnPage = function (pageResult) {\n        var height = 0;\n        var resultantHeight = 0;\n        var y = this._bounds[1];\n        var x = this._bounds[0];\n        this._size = [this._bounds[2] - this._indent, this._bounds[3]];\n        while (true) { // eslint-disable-line\n            for (; this._index < this._curList.items.count; ++this._index) {\n                var item = this._curList.items.at(this._index);\n                var result = this._drawItem(pageResult, x, this._curList, this._index, this._indent, this._information, item, height, y);\n                pageResult = result.pageResult;\n                height = result.height;\n                y = result.y;\n                resultantHeight += height;\n                if (pageResult.broken) {\n                    return pageResult;\n                }\n                pageResult.markerWrote = false;\n                if (item.subList && item.subList.items.count > 0) {\n                    if (this._curList instanceof PdfOrderedList) {\n                        var oList = this._curList;\n                        oList._currentIndex = this._index;\n                        var info = new _PdfListInfo(this._curList, this._index, oList._getNumber());\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        info._markerWidth = this._markerMaxWidth;\n                        this._information.push(info);\n                    }\n                    else {\n                        var info = new _PdfListInfo(this._curList, this._index);\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        this._information.push(info);\n                    }\n                    this._curList = item.subList;\n                    if (this._curList instanceof PdfOrderedList) {\n                        this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n                    }\n                    this._index = -1;\n                    this._indent += this._curList.indent;\n                    this._size[0] = this._size[0] - this._curList.indent;\n                    this._setCurrentParameters(item);\n                    this._setCurrentParameters(this._curList);\n                }\n            }\n            if (this._information.length === 0) {\n                this._resultHeight = resultantHeight;\n                this._finish = true;\n                break;\n            }\n            var listInfo = this._information.pop();\n            this._index = listInfo._index + 1;\n            this._indent -= this._curList.indent;\n            this._size[0] = this._size[0] + this._curList.indent;\n            this._markerMaxWidth = listInfo._markerWidth;\n            this._currentBrush = listInfo._brush;\n            this._currentPen = listInfo._pen;\n            this._currentFont = listInfo._font;\n            this._currentFormat = listInfo._format;\n            this._curList = listInfo._list;\n        }\n        return pageResult;\n    };\n    _PdfListLayouter.prototype._drawItem = function (pageResult, x, curList, index, indent, info, item, height, y) {\n        var layouter = new _PdfStringLayouter();\n        var result;\n        var textIndent = curList.textIndent;\n        var posY = height + y;\n        var posX = indent + x;\n        var itemHeight = 0;\n        var itemSize = this._size;\n        var text = item.text;\n        var markerText;\n        var itemBrush = this._currentBrush;\n        var markerHeight = 0;\n        if (item.brush) {\n            itemBrush = item.brush;\n        }\n        var itemPen = this._currentPen;\n        if (item.pen) {\n            itemPen = item.pen;\n        }\n        var itemFont = this._currentFont;\n        if (item.font) {\n            itemFont = item.font;\n        }\n        var itemFormat = this._currentFormat;\n        if (item.stringFormat) {\n            itemFormat = item.stringFormat;\n        }\n        if ((this._size[0] <= 0 || this._size[0] < itemFont.size) && this._currentPage) {\n            throw new Error('There is not enough space to layout list.');\n        }\n        this._size[1] = this._size[1] - height;\n        if (pageResult.broken) {\n            text = pageResult.itemText;\n            markerText = pageResult.markerText;\n        }\n        var canDrawMarker = true;\n        var markerResult = this._createMarkerResult(index, curList, info, item);\n        if (markerResult) {\n            if (curList instanceof PdfOrderedList) {\n                posX += this._markerMaxWidth;\n                pageResult.markerWidth = this._markerMaxWidth;\n            }\n            else {\n                posX += markerResult._actualSize[0];\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            markerHeight = markerResult._actualSize[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n            if (markerResult._empty) {\n                canDrawMarker = false;\n            }\n        }\n        else {\n            posX += curList._size[0];\n            pageResult.markerWidth = curList._size[0];\n            markerHeight = curList._size[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n        }\n        if (!markerText || markerText === '') {\n            canDrawMarker = true;\n        }\n        if (text && canDrawMarker) {\n            itemSize = this._size;\n            itemSize[0] = itemSize[0] - pageResult.markerWidth;\n            if (item.textIndent === 0) {\n                itemSize[0] = itemSize[0] - textIndent;\n            }\n            else {\n                itemSize[0] = itemSize[0] - item.textIndent;\n            }\n            if ((itemSize[0] <= 0 || itemSize[0] < itemFont.size) && this._currentPage) {\n                throw new Error('Not enough space to layout the text. The marker is too long or there is not enough space to draw it.');\n            }\n            var itemX = posX;\n            if (!curList._markerRightToLeft) {\n                if (item.textIndent === 0) {\n                    itemX += textIndent;\n                }\n                else {\n                    itemX += item.textIndent;\n                }\n            }\n            else {\n                itemX -= pageResult.markerWidth;\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    itemX -= indent;\n                }\n            }\n            if (!this._currentPage && itemFormat) {\n                itemFormat = Object.assign({}, itemFormat);\n                itemFormat.alignment = PdfTextAlignment.left;\n            }\n            result = layouter._layout(text, itemFont, itemFormat, itemSize);\n            var rect = [itemX, posY, itemSize[0], itemSize[1]];\n            this._graphics._drawStringLayoutResult(result, itemFont, itemPen, itemBrush, rect, itemFormat);\n            y = posY;\n            itemHeight = result._actualSize[1];\n        }\n        height = (itemHeight < markerHeight) ? markerHeight : itemHeight;\n        if ((result && result._remainder && result._remainder !== '') ||\n            (markerResult && markerResult._remainder && markerResult._remainder !== '') ||\n            !canDrawMarker) {\n            y = 0;\n            height = 0;\n            if (result) {\n                pageResult.itemText = result._remainder;\n                if (result._remainder === item.text) {\n                    canDrawMarker = false;\n                }\n            }\n            else {\n                if (canDrawMarker) {\n                    pageResult.itemText = undefined;\n                }\n                else {\n                    pageResult.itemText = item.text;\n                }\n            }\n            if (markerResult) {\n                pageResult.markerText = markerResult._remainder;\n            }\n            else {\n                pageResult.markerText = undefined;\n            }\n            pageResult.broken = true;\n            pageResult.y = 0;\n            this._bounds[1] = 0;\n        }\n        else {\n            pageResult.broken = false;\n        }\n        if (result) {\n            pageResult.markerX = posX;\n            if (itemFormat) {\n                switch (itemFormat.alignment) {\n                    case PdfTextAlignment.right:\n                        pageResult.markerX = posX + itemSize[0] - result._actualSize[0];\n                        break;\n                    case PdfTextAlignment.center:\n                        pageResult.markerX = posX + (itemSize[0] / 2) - (result._actualSize[0] / 2);\n                        break;\n                }\n            }\n            if (curList._markerRightToLeft) {\n                pageResult.markerX += result._actualSize[0];\n                if (item.textIndent === 0) {\n                    pageResult.markerX += textIndent;\n                }\n                else {\n                    pageResult.markerX += item.textIndent;\n                }\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    pageResult.markerX -= indent;\n                }\n            }\n        }\n        if (canDrawMarker && !pageResult.markerWrote) {\n            pageResult.markerWrote = this._drawMarker(curList, item, markerResult, posY, pageResult.markerX);\n            if (curList instanceof PdfOrderedList) {\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            else {\n                pageResult.markerWidth = curList._size[0];\n            }\n        }\n        return { pageResult: pageResult, height: height, y: y };\n    };\n    _PdfListLayouter.prototype._createMarkerResult = function (index, curList, info, item) {\n        if (curList instanceof PdfOrderedList) {\n            return this._createOrderedMarkerResult(curList, item, index, info, false);\n        }\n        else {\n            return this._createUnorderedMarkerResult(curList, item);\n        }\n    };\n    _PdfListLayouter.prototype._drawMarker = function (curList, item, markerResult, posY, posX) {\n        if (curList instanceof PdfOrderedList) {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n                this._drawOrderedMarker(curList, markerResult, item, posX, posY);\n            }\n        }\n        else {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n            }\n            this._drawUnorderedMarker(curList, markerResult, item, posX, posY);\n        }\n        return true;\n    };\n    _PdfListLayouter.prototype._drawUnorderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        if (markerResult) {\n            curList._size = markerResult._actualSize;\n            curList._unicodeFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n            curList._draw(this._graphics, posX - markerResult._actualSize[0], posY, markerBrush, markerPen);\n        }\n        else {\n            curList._size = [markerFont.size, markerFont.size];\n            curList._draw(this._graphics, posX - markerFont.size, posY, markerBrush, markerPen);\n        }\n    };\n    _PdfListLayouter.prototype._drawOrderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        var rect = [posX - this._markerMaxWidth, posY, this._markerMaxWidth, markerResult._actualSize[1]];\n        var markerFormat = this._setMarkerStringFormat(curList, this._getMarkerFormat(curList, item));\n        this._graphics._drawStringLayoutResult(markerResult, markerFont, markerPen, markerBrush, rect, markerFormat);\n    };\n    _PdfListLayouter.prototype._setCurrentParameters = function (element) {\n        if (element.brush) {\n            this._currentBrush = element.brush;\n        }\n        if (element.pen) {\n            this._currentPen = element.pen;\n        }\n        if (element.font) {\n            this._currentFont = element.font;\n        }\n        if (element.stringFormat) {\n            this._currentFormat = element.stringFormat;\n            if (element instanceof PdfList) {\n                this._currentFormat._isList = true;\n            }\n        }\n    };\n    _PdfListLayouter.prototype._getMarkerMaxWidth = function (list, infromation) {\n        var width = -1;\n        for (var i = 0; i < list.items.count; i++) {\n            var result = this._createOrderedMarkerResult(list, list.items.at(i), i + list.startNumber, infromation, true);\n            if (width < result._actualSize[0]) {\n                width = result._actualSize[0];\n            }\n        }\n        return width;\n    };\n    _PdfListLayouter.prototype._createUnorderedMarkerResult = function (list, item) {\n        var markerFont = this._getMarkerFont(list, item);\n        var layouter = new _PdfStringLayouter();\n        var uFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n        var result = layouter._layout(list._getStyledText(), uFont, null, this._size);\n        list._size = result._actualSize;\n        if (list.pen) {\n            result._size = [result._actualSize[0] + 2 * list.pen._width, result._actualSize[1] + 2 * list.pen._width];\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._createOrderedMarkerResult = function (list, item, index, infromation, findMaxWidth) {\n        list._currentIndex = index;\n        var text = '';\n        if (list.style !== PdfNumberStyle.none) {\n            text = list._getNumber() + list.suffix;\n        }\n        if (list.enableHierarchy) {\n            var collection = infromation.slice();\n            for (var i = 0; i < collection.length; i++) {\n                var listInfo = collection[Number.parseInt(i.toString(), 10)];\n                var orderedList = listInfo._list;\n                if (!(orderedList && orderedList instanceof PdfOrderedList && orderedList.style !== PdfNumberStyle.none)) {\n                    break;\n                }\n                text = listInfo._number + orderedList.delimiter + text;\n                if (!orderedList.enableHierarchy) {\n                    break;\n                }\n            }\n        }\n        var layouter = new _PdfStringLayouter();\n        var font = this._getMarkerFont(list, item);\n        var format = this._getMarkerFormat(list, item);\n        var markerSize = [0, 0];\n        if (!findMaxWidth) {\n            markerSize[0] = this._markerMaxWidth;\n            format = this._setMarkerStringFormat(list, format);\n        }\n        return layouter._layout(text, font, format, markerSize);\n    };\n    _PdfListLayouter.prototype._setMarkerStringFormat = function (list, format) {\n        if (format) {\n            format = Object.assign({}, format);\n        }\n        else {\n            format = new PdfStringFormat();\n        }\n        if (!list.stringFormat) {\n            format.alignment = PdfTextAlignment.right;\n            if (list._markerRightToLeft) {\n                format.alignment = PdfTextAlignment.left;\n            }\n        }\n        if (!this._currentPage && format) {\n            format = Object.assign({}, format);\n            format.alignment = PdfTextAlignment.left;\n        }\n        return format;\n    };\n    _PdfListLayouter.prototype._getMarkerFont = function (list, item) {\n        var markerFont = list.font;\n        if (!markerFont) {\n            markerFont = item.font;\n            if (!markerFont) {\n                markerFont = this._currentFont;\n            }\n        }\n        list.font = markerFont;\n        return markerFont;\n    };\n    _PdfListLayouter.prototype._getMarkerFormat = function (list, item) {\n        var markerFormat = list.stringFormat;\n        if (!markerFormat) {\n            markerFormat = item.stringFormat;\n            if (!markerFormat) {\n                markerFormat = this._currentFormat;\n            }\n        }\n        return markerFormat;\n    };\n    _PdfListLayouter.prototype._getMarkerPen = function (list, item) {\n        var markerPen = list.pen;\n        if (!markerPen) {\n            markerPen = item.pen;\n            if (!markerPen) {\n                markerPen = this._currentPen;\n            }\n        }\n        return markerPen;\n    };\n    _PdfListLayouter.prototype._getMarkerBrush = function (list, item) {\n        var markerBrush = list.brush;\n        if (!markerBrush) {\n            markerBrush = item.brush;\n            if (!markerBrush) {\n                markerBrush = this._currentBrush;\n            }\n        }\n        return markerBrush;\n    };\n    _PdfListLayouter.prototype._getNextPage = function (page) {\n        var document = page._crossReference._document;\n        if (page._pageIndex < document.pageCount - 1) {\n            return document.getPage(page._pageIndex + 1);\n        }\n        else {\n            return document.addPage();\n        }\n    };\n    return _PdfListLayouter;\n}());\nexport { _PdfListLayouter };\n"],"names":["PdfAnnotationFlag","PdfLineEndingStyle","PdfLineIntent","PathPointType","PdfLineCaptionType","PdfBorderStyle","PdfBorderEffectStyle","PdfRotationAngle","PdfCrossReferenceType","PdfHighlightMode","PdfTextAlignment","PdfFormFieldVisibility","PdfMeasurementUnit","PdfCircleMeasurementType","PdfRubberStampAnnotationIcon","PdfCheckBoxStyle","PdfTextMarkupAnnotationType","PdfPopupIcon","PdfAnnotationState","PdfAnnotationStateModel","PdfAttachmentIcon","PdfAnnotationIntent","PdfDestinationMode","DataFormat","PdfFormFieldsTabOrder","_PdfAnnotationType","_PdfGraphicsUnit","_FieldFlag","_SignatureFlag","_PdfCheckFieldState","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfBlendMode","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","_PdfColorSpace","PdfNumberStyle","PdfUnorderedListStyle","PdfLayoutType","PdfLayoutBreakType","PdfListMarkerAlignment","_PdfStreamWriter","prototype","_writeOperator","value","this","_stream","write","_newLine","_saveGraphicsState","_restoreGraphicsState","_writeComment","comment","length","_setGraphicsState","_escapePdfName","name","_modifyCtm","matrix","_toString","_modifyTM","_setColorSpace","arg2","arg3","Array","isArray","colorSpaceName","rgb","cmyk","grayScale","_setColor","color","forStroking","toFixed","_appendRectangle","x","y","width","height","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","size","_setTextScaling","textScaling","_closePath","_startNextLine","_setLeading","leading","_write","_whiteSpace","_showText","text","_writeText","string","builder","result","data","_escapeSymbols","i","String","fromCharCode","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x1","y1","x2","y2","x3","y3","_setTextRenderingMode","renderingMode","toString","_setCharacterSpacing","charSpacing","_setWordSpacing","wordSpacing","_showNextLineText","unicode","_setLineDashPattern","pattern","patternOffset","tempPattern","index","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_beginMarkupSequence","_endMarkupSequence","_clear","_bytes","currentData","charCodeAt","push","stream","Object","defineProperty","PdfStringFormat","get","_internalParagraphIndent","set","firstLineIndent","enumerable","configurable","_pdfSubSuperScript","none","_wordWrapType","arg1","horizontalScalingFactor","rightToLeft","word","_isList","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","top","characterSpacing","lineSpacing","clipPath","measureTrailingSpaces","noClip","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","_PdfFontMetrics","_getAscent","format","_ascent","_getSize","_getDescent","_descent","_getLineGap","_lineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","Number","parseInt","_size","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","_itemAt","widths","Error","_toArray","_this","call","_CjkWidthTable","_defaultWidth","forEach","entry","_from","_to","array","_appendToArray","_add","defaultWidth","_CjkWidth","_CjkSameWidth","_widthFrom","_widthTo","_width","from","to","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","font","_initialize","_doLayout","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lines","line","_peekLine","lineIndent","_getLineIndent","lineResult","_layoutLine","returnedValue","_copyToResult","success","numSymbolsInserted","flag","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","Math","min","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","round","_addToLineResult","newLineBreak","curLine","curIndent","reader","_peekWord","_length","_position","stringValue","curLineWidth","_getWrapType","wordOnly","_remainder","substring","_peek","_wordWrap","character","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","max","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","trim","_empty","text2","position","ch","count","_spaces","_tab","textValue","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_int32Size","_readInt32","setValue","_lowestPosition","_isFont","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","offset","getValue","shift","version","_isMacTtf","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","glyphWidth","_advanceWidth","_lsb","floor","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","encoding","_getCmapEncoding","unknown","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_index","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","segCount","_segCountX2","_searchRange","_entrySelector","_rangeShift","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","codeOffset","_glyphID","j","k","id","symbol","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","undefined","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","left","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","ceil","right","bottom","_fontBox","_stemV","_widthTable","_updateWidth","_contains","bytes","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","start","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","result1","_missedGlyphs","_updateGlyphChars","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","glyphSize","sort","a","glyphIndex","_offsets","glyphSizeAligned","_align","oldGlyphOffset","oldNextGlyphOffset","nextGlyphOffset","nextGlyphIndex","buffer","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_entrySelectors","_writeCheckSums","_writeGlyphs","tableNames","_tableNames","tableName","dictionary","charKeys","usedTablesSize","nextTableSize","checksum","_writeString","_calculateCheckSum","_writeUInt","pos","byte1","byte2","byte3","byte4","_writeBytes","buff","i_1","written","read","_fontData","_createInternals","charCode","code","obj1","_isMacFont","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","fontData","_buffer","_bufferLength","length_1","_internalPosition","_flush","capacity","int32Size","int16Size","int64Size","_UnicodeTrueTypeFont","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","update","_fontProgram","_updated","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_Initialize","byteArray","_decode","_fontString","_ttfReader","_ttfMetrics","_PdfDictionary","_PdfStream","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_fontSize","_isBold","random","_nameString","_PdfName","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","rect","abs","_generateCmap","_toHexString","isCaseChange","s","toUpperCase","first","last","middlePart","nextRange","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapEndRange","_cmapBeginRange","key","_cmapSuffix","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","italic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","base64String","_isEmbedFont","_ArabicShapeRenderer","_getCharacterShape","input","_hamza","_bwhb","_arabicMapTable","_lwawm","_lwa","_shape","c","_doShape","level","str","previous","_ArabicShape","present","shapeCount","next","_ligature","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_vowel","_shapeVowel","_fathatan","_hamzaBelow","_superalef","_shadda","_alef","_alefHamzaBelow","_lwawhb","_hamzaAbove","_alefHamza","_lwawh","_waw","_wawHamza","_yeh","_alefsura","_farsiYeh","_yehHamza","_madda","_alefMadda","_lam","_zeroWidthJoiner","_arabicCharTable","Map","_Bidirectional","_doMirrorShaping","_indexLevels","_mirroringShape","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","_indexes","sIndex","eIndex","odd","even","_reArrange","pstart","pend","temp","_update","_type","_getCharacterCode","_textOrder","lre","L","_doVisualOrder","_levels","characterCodes","_rtlCharacterTypes","_setDefaultLevels","_setLevels","_updateLevels","_result","R","_getEmbeddedCharactersLength","preview","preType","type","_checkEmbeddedCharacters","rle","lro","rlo","pdf","BN","startType","endType","charType","nsm","_checkEuropeanDigits","EN","AL","AN","_checkArabicCharacters","_checkEuropeanNumberSeparator","ES","CS","_checkEuropeanNumberTerminator","l","ET","_getLength","_checkOtherNeutrals","ON","_checkOtherCharacters","pst","_checkCharacters","validSet","t","WS","B","S","byte","lt","tt","rt","_charTypes","end","_RtlRenderer","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","split","_addCharacter","_bytesToString","_stringToUnicodeArray","_openBracket","_closeBracket","PdfFont","_style","style","PdfFontStyle","underline","strikeout","_fontMetrics","bold","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","indexOf","measureString","arg4","arg5","temparg2","temparg3","_applyFormatSettings","realWidth","PdfStandardFont","_checkStyle","PdfFontFamily","zapfDingbats","_getCharacterWidthInternal","_initializeInternals","_PdfStandardFontMetricsFactory","_getMetrics","_dictionary","fontFamily","regular","PdfCjkStandardFont","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","PdfCjkFontFamily","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","monotypeHeiMedium","monotypeSungLight","sinoTypeSongLight","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","PdfTrueTypeFont","_createFontInternal","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","helvetica","_getHelveticaMetrics","courier","_getCourierMetrics","timesRoman","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_helveticaAscent","_helveticaDescent","_helveticaName","_arialWidth","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_fixedWidth","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontDescriptor","fontMetrics","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","fontBox","_fromRectangle","PdfPath","_points","_pathTypes","_fillMode","mode","addPath","_addPath","pathPoints","pathTypes","slice","addLine","_addPoints","_addLines","linePoints","_addPoint","points","startIndex","endIndex","point","_isStart","_isRoundedRectangle","lastPoint","addArc","startAngle","sweepAngle","_getBezierArc","list","bezier","addRectangle","startFigure","closeFigure","addPolygon","newPoints","element","addEllipse","addBezier","startX","startY","firstX","firstY","secondX","secondY","endX","endY","_addBezierPoints","pointsCollection","inner1","inner2","addPie","closePath","closeAllFigures","pointType","_isXps","_getBounds","bounds","xmin","xmax","ymin","ymax","winding","_brush","_pen","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","graphics","needSave","state","save","translateTransform","drawImage","restore","horizontalResolution","ucY","ucX","_PdfUnitConvertor","_convertUnits","pixel","PdfGraphics","_clipBounds","_m","_PdfTransformationMatrix","_resourceMap","_resourceObject","has","fonts","_PdfReference","other","_transparencies","_setTransparencyData","PdfGraphicsState","_matrix","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_graphicsState","_sw","_doRestore","pop","_transformationMatrix","drawRectangle","second","_setPenBrush","_drawGraphicsPath","pen","brush","drawBezier","_stateControl","drawPie","_constructPiePath","drawPolygon","drawEllipse","_constructArcPath","drawArc","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","isNew","keyName","getRaw","_crossReference","_getNewGuidString","_updateImageResource","_source","_pendingResource","resource","source","_addProcSet","drawTemplate","template","scaleX","scaleY","scaleApplied","templateMatrix","templateBox","isReference","keyName_1","ref_1","_isExported","_isResourceExport","_importStream","needScale","trunc","mediaBox","cropBox","_page","_pageDictionary","needTransform","_translate","_origin","_isAnnotationTemplate","_needScale","_content","getArray","templateScaleX","parseFloat","_numberToString","templateScaleY","roundScaleX","roundScaleY","_scale","_fetch","_resources","base","reference","_getNextReference","_cacheMap","_hasResourceReference","_processResources","crossReference","PdfTemplate","_updatePendingResource","_PdfBaseStream","_reference","_updateFontResource","image","ref","_imageStream","_maskStream","_maskReference","internal","drawPath","path","_buildUpPath","fillMode","drawRoundedRectangle","radius","diameter","arc","sweep","_writePen","_dashPattern","setPattern","_dashOffset","_lineJoin","_lineCap","_miterLimit","_color","drawString","layouter","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_mediaBoxUpperRightBound","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","hasResource","PdfPen","PdfBrush","layoutRectangle","clipRegion","shouldClip","clipBounds","middle","setClip","isItalic","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_skewTransform","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","pageCount","_document","page","_pageIndex","getPage","addPage","tm","_TextRenderingMode","fill","setLineWidth","cs","fillStroke","stroke","isBoldFont","fontName","toLocaleLowerCase","includes","isBold","clipFlag","ws","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","blocks","useWordSpace","_justifyLine","ttfFont","rtlRender","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","token","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","center","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justify","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","drawLine","textSize","layoutedRectangle","needClosing","isBrush","isPen","alternate","_initializeCoordinates","location_1","needTransformation","cbox","mbox","_cropBox","scaleTransform","_multiply","rotateTransform","angle","_rotate","setTransparency","normal","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_reverseMapBlendMode","_key","tkey","_mapBlendMode","tdata","_clipTranslateMargins","angleX","angleY","_getSkewTransform","_skew","content","xref","PdfPage","_template","_elements","PI","cos","sin","_floatToString","tanA","tan","_degreeToRadians","tanB","skew","_Matrix","degreesX","_clone","_transform","_offsetX","_offsetY","arg6","_g","_dashStyle","solid","flat","miter","_updateProportions","_convertFromPixels","_convertToPixels","_proportions","_XmlWriter","_writeStartDocument","standalone","_currentState","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_elementStack","_writeEndElementInternal","_prefix","_localName","_namespaceStack","splice","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_bufferText","_destroy","Uint8Array","_stringToBytes","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_XmlElement","_set","_attributeStack","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_skipNamespace","_writeStartNamespaceDeclaration","inAttributeValue","replace","_kind","_namespaceUri","_addNamespace","ns","kind","_Namespace","_lookupNamespaceIndex","existingNsIndex","isValid","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","test","isAppearance","previousTop","_ExportHelper","_exportFormFieldsData","field","export","_getInheritableProperty","options","current","_getEncodedFontDictionary","fieldName","_getEncodedValue","selectedValue","_table","_exportEmptyFields","_getExportValue","PdfListBoxField","PdfComboBoxField","_obtainSelectedValue","values","radioButton","PdfRadioButtonListField","selectedIndex","isNaN","PdfCheckBoxField","_getAppearanceStateValue","itemAt","_defaultIndex","_exportFormFieldData","_asPerSpecification","_formKey","replaceValue","PdfTextBoxField","multiLine","PdfListField","_hexStringToString","_getAnnotationType","subtype","_getValue","primitive","isJson","_getValidString","colorArray","_getColor","r","g","appearance","kids","kid","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","form","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","fontDictionary","holder","updatedString","difference","_fontType","_baseFontEncoding","_fontEncoding","_fontName","item","_addReferenceToGroup","_groupReferences","_groupHolders","_handlePopup","annotations","annotationDictionary","pageDictionary","popupAnnotation","popupReference","popup","_parseAnnotation","_annotations","_parsedAnnotations","_importField","_fields","_richTextValues","richTextValue","_getFieldIndex","fieldAt","_importFieldData","readOnly","selectedValues_1","_xmlImport","indexes_1","options_1","_options","option","_map","AP","lowerCase","toLowerCase","_containsExportValue","checked","_kidsCount","_checkSelected","asEntry","normalTemplate","_dispose","exportAppearance","_skipBorderStyle","_fileName","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_jsonData","_richTextPrefix","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_XfdfDocument","_exportAnnotations","document","_exportFormFields","annotation","at","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","flag_1","elements","_getElements","_writeFieldName","endsWith","startsWith","hasId","_root","parentElements","newTable","pageIndex","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","_writeAnnotationData","hasAppearance","PdfAnnotation","borderEffect","_writeDictionary","defaultAppearance","defaultStyle","isBorderStyle","_writeAttribute","_getAppearanceString","_encode","_exportMeasureDictionary","sound","soundDictionary","_byteArrayToHexString","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","hexString","vertices","elementCount","_writeRawData","inkList","textWriter","_writeAppearanceDictionary","_writeObject","isNewReference","streamDictionary","_writePrefix","_writeArray","isInteger","getString","_compressStream","_isNew","_getFormatedString","isParsing","_writeColor","_annotationFlagsToString","attribute","isLowerCase","tag","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileName","fileNameElement","hasAttribute","getAttribute","fieldList","_importFormNodes","node","textName","name_1","skip","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_isImported","_ref","_comments","points_1","isValidType","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_convertToColor","_addInt","_addFloatPoints","_addFloat","annotFlag","default","flagType","_stringToAnnotationFlags","_allowImportCustomData","children","_loop_1","popupDictionary","vertices_1","verticesArray_1","childElement","this_1","innerValue","_addAppearanceData","inkListCollection","_loop_2","points_2","pointsArray_1","inkChild","inkChildElement","_addStreamData","parent","raw","_hexStringToByteArray","_addFileAttachment","_addSound","soundStream","_PdfContentStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","document_1","atob","rootNode","rootElement","_getAppearance","isImage","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getName","_getBoolean","_getData","_isCompress","Length","Filter","_addArrayElements","floatValue","intValue","name_3","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFont","fontEncoding","baseFontEncoding","differences","_getLatinCharacter","_getSpecialCharacter","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","isAnnotationAdded","_exportAnnotation","_convertToJson","clear","bytes_1","rcValue","rectArray","_writeInkList","_writeVertices","_isNullOrUndefined","styleTable","textStyle","vertice","json","details","parentTable","appearanceTable","_isGroupingSupport","isColorSpace","dataTable","streamTable","baseStream","streamLength","_writeTable","_isColorSpace","_convertToJsonArray","isTabSpace","_hasUnicodeCharacters","isImageStream","_initialized","_cipher","subarray","bufferLength","getByteRange","flateStream","map","unicodeRegex","some","char","exec","_parseJson","stringData","JSON","parse","_isImport","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","annotation_1","annotations_1","outColor","dataStream","color_1","styleKeys_1","style_1","count_1","convertString","_addLinePoints","_parseFloatPoints","_addBoolean","styleKey","styleValue","gestureKeys","gesture","interactionKeys","stringify","objId","objectNumber","generationNumber","dashes","dashArray","dash","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","unicodeData","byteString","dataKeys","_parseStreamElements","_pendingResources","_isReadOnly","_writeTransformation","_isTemplateGraphics","_templateOriginalSize","_exportStream","jsonDocument","resourceTable","_appearance","hasCrossReference","isResourceExport","resourceDictionary","_toRectangle","PdfAction","_next","PdfGoToAction","_destination","arg","PdfDestination","PdfFieldActions","_mouseEnter","_getPdfAction","_updateAction","_mouseLeave","_mouseUp","_mouseDown","_gotFocus","_lostFocus","action","destination","widget","_field","_destinationMode","location","zoom","fitR","fitH","fitToPage","_obtainDestination","PdfField","_kids","_form","names","join","_actualName","_mappingName","mappingName","_alternateName","toolTip","_isLoaded","visible","_hasFlags","visibleNotPrintable","flagValue","hidden","noView","print","hiddenPrintable","_visibility","visibility","_updateVisibility","_calculateBounds","_getUpdatedBounds","rotate","_defaultAppearance","_da","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","_parseBorderColor","_updateBorderColor","_fieldFlags","required","_visible","border","PdfInteractiveBorder","PdfButtonField","borderStyle","dashed","beveled","inset","_dash","_updateBorder","angle0","rotationAngle","noExport","annots","index1","_tabIndex","tabOrder","manual","_tabOrder","annotationCollection","PdfAnnotationCollection","_annotationIndex","widgetRef","_findPage","_flatten","_gray","_silver","_white","_black","mkDictionary","_mkDictionary","_isTransparentBackColor","_isTransparentBorderColor","hasTransparency","_hasBackColor","backColor","mkDict","bgArray","_parseColor","_hasBorderColor","borderColor","BG","BC","bsDictionary","W","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","parsedItems_1","itemsCount","_getPage","_removeAnnotation","delete","removeItem","da","bs","_mapBorderStyle","_checkFieldFlag","_initializeFont","fontDict","fontSize","widgetDictionary","_drawRectangularControl","parameter","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","_drawRadioButton","checkSymbol","outward","_enableGrouping","unchecked","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","foreBrush","_drawCheckBox","inflateValue","shadowColor","leftTop","rightBottom","rectangle","_blackBrush","state_1","size_1","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","angle90","angle180","angle270","z","_addToKid","currentIndex","_drawTemplate","rotation","_addToOptions","_listValues","_value","_pdfFont","_addAppearance","_removeDuplicateReference","_rotateTextBox","_checkIndex","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","_isDuplicatePage","_defaultFont","_appearanceFont","_defaultItemFont","_hasData","_circleCaptionFont","_isUpdating","_stringToPdfString","_defaultValue","defaultValue","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_mapHighlightMode","noHighlighting","_reverseMapHighlightMode","_maxLength","maxLength","_autoResizeText","_isAutoResize","_obtainFontDetails","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","appearanceStream","pdfFont","stringFormat","_setMatrix","_PaintParameter","backcolor","insertSpaces","enableGrouping","_drawTextBox","scrollable","multiline","scroll","startlocation","isAutoFontSize","_actions","_assignText","invert","fieldDictionary","pushButton","pressed","isPressed","isSizeZero","previousFont","font_1","currentFont","textWidth","_mapFont","_drawPressedButton","_drawButton","PdfStateItem","_checkField","_getItemValue","V","AS","check","_getStateTemplate","_drawAppearance","_styleText","_styleToString","itemValue","normalChecked","_removeReferences","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","_retrieveOptionValue","_selectedIndex","_obtainSelectedIndex","name_5","PdfRadioButtonListItem","add","_setField","parsedItems_2","radio","_optionValue","checkName","asName","actualValue","_bounds","values_1","values_2","indices_1","_tryGetIndex","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","textCollection","_getFontHeight","selectedIndexes","apply","arguments","acroForm","fontString","verticalAlignment","_drawComboBox","doubleBorderWidth","padding","itemTextBound","itemFont","widths_1","h","combo","_drawListBox","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","appearanceDictionary","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","_templateNormal","annot","author","_author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_isChanged","capType","_caption","PdfAnnotationCaption","_cap","inline","caption","cap","opacity","_opacity","_subject","subject","prevRotate","_isRotated","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getMediaOrCropBox","cropOrMediaBox","_getBoundsValue","_validateTemplateMatrix","templateY","box","isRotatedMatrix","isValidMatrix","templateX","locationY","locationX","annotationBounds","_locationDisplaced","remove","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","PdfLineAnnotation","measure","flatten","mBox","_needInitializeGraphics","rubberStampAnnotation","PdfAngleMeasurementAnnotation","_o","radians","_drawCloudStyle","overlap","_isClockWise","sortedPoints","previousPoint","circles","circleOverlap","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","intensity","cloudy","_createRectangleAppearance","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_isTransparentColor","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","midPoint3","_midPoint","midPoint2","_getAngle","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","startPoint","fourth","square","circle","openArrow","arraowAngle","closedArrow","rOpenArrow","rClosedArrow","slash","diamond","butt","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","unitString","graphicsUnit","inch","centimeter","millimeter","pica","_createMeasureDictionary","_colorToHex","col","_componentToHex","hex","_getRotatedBounds","rotateAngle","corners","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","boundsValue","titleRect","clientSize","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","_saveGraphics","hardLight","contentRect","_drawSubject","_popUpFont","_flattenLoadedPopUp","_getRectangleBoundsValue","trackingHeight","_authorBoldFont","blendMode","_getBorderColorString","date","timeZoneHour","timeZonMinute","year","month","day","hour","minute","dateFormat","Date","timeZone","signature","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","cropBoxOrMediaBox","_getCropOrMediaBox","_getPoints","polygonPoints","modifiedPoints","_isExport","_isAllRotation","_lineCaptionFont","PdfComment","PdfPopupAnnotationCollection","_reviewHistory","_linePoints","_areNotEqual","leaderExt","_leaderExt","leaderLine","_leaderLine","lineStyles","_lineEndingStyle","PdfAnnotationLineEndingStyle","_begin","_mapLineEndingStyle","lineEndingStyle","leaderOffset","_leaderOffset","lineIntent","_lineIntent","lineDimension","lineArrow","_measure","_unit","_unitString","_mapMeasurementUnit","rectangleBounds","boundsArray","updatedBounds","dot","_appearanceTemplate","_createLineMeasureAppearance","isUpdated","_obtainLineBounds","_pageSettings","_updateBounds","reference_1","flattenPopups","_isFlatten","_convertToUnit","linePoints1","_obtainLinePoints","centerPoint","captionPosition","rectPath","lineAngle","endPoint","centerWidth","lineDistance","pow","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","nativeRectangle1","ds","dic","_reverseMapEndingStyle","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","startingPoint","endingPoint","endLineLeader","endLinePoint","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","beginLineLeader","beginLinePoint","_getLinePoint","widthX","heightY","leaderLineValue","_drawLine","unit","lineAnnotation","PdfCircleAnnotation","_mapGraphicsUnit","_measureType","_createCircleMeasureAppearance","reference_2","fontsize","converter","circleAnnotation","PdfEllipseAnnotation","reference_3","ellipseAnnotation","PdfSquareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_mapBorderEffectStyle","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","squareAnnotation","PdfRectangleAnnotation","reference_5","_isValidTemplateMatrix","appearanceTemplate","pointF","rectangleAnnotation","PdfPolygonAnnotation","lineExt","_lineExtension","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","pageSize","pageHeight","pageWidth","polygonAnnotation","PdfPolyLineAnnotation","_beginLine","_endLine","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","polyLineAnnotation","_pointArray","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_firstIntersectionPoint","_secondIntersectionPoint","_startAngle","_sweepAngle","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","_findLineCircleIntersectionPoints","intersectionPoint1","intersectionPoint2","xDiff","yDiff","centerX","centerY","intersection1","intersection2","e","NaN","angleMeasurementAnnotation","PdfInkAnnotation","_inkPointsCollection","_isModified","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","removeAt","inkPoints","pathPointCont","_isEnableControlPoints","_getControlPoints","p1","controlP1","p2","controlP2","point_1","path1","path2","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","isEqual","_previousCollection","unshift","_checkInkPoints","containsCropOrMediaBox","modifiedInkList","_updateInkListCollection","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","inkAnnotation","PdfPopupAnnotation","_open","_icon","_mapPopupIcon","_obtainIconName","_stateModel","_mapAnnotationStateModel","_reverseMapAnnotationStateModel","_state","_mapAnnotationState","_reverseMapAnnotationState","_isReview","_checkReview","_isComment","_checkComment","_createPopupAppearance","icon","_comment","_commentSecondHalf","paragraph","_paragraph","_paragraphSecondHalf","help","_help","_helpSecondHalf","note","_note","insert","_insert","_keySecondHalf","newParagraph","_newParagraph","_newParagraphSecondHalf","_iconString","_action","actionDictionary","_addAction","nextAction","fileLinkAnnotation","linkDict","_uri","uri","uriAnnotation","_initializePrimitive","_addDocument","referenceArray","top_6","top_7","_getDestination","pageNumber","top_3","topValue","_setValidation","_getPageIndex","top_4","referenceValue","top_5","destinationArray","_getNamedDestination","catalog","_catalog","_catalogDictionary","_getNamedObjectFromTree","_extractDestination","found","currentDictionary","_getProperKid","_findName","destinationReference","lowerIndex","topIndex","half","cmp","_stringCompare","kidsArray","_checkLimits","lowCompare","lowerLimit","limits","higherLimit","highCompare","byteArray1","commonSize","resultValue","_array","documentLinkAnnotation","_url","linkSource","_get","_isActionAdded","_textWebLink","brushColor","penColor","penWidth","textWebLinkAnnotation","PdfAttachmentAnnotation","_mapAttachmentIcon","_addAttachment","fileSpecification","fileSpectDictionary","char1","toTimeString","char2","efileDictionary","fsReference","pushPin","graph","paperClip","fileAttachmentAnnotation","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkUpColor","_textMarkupType","_mapMarkupAnnotationType","_reverseMarkupAnnotationType","_boundsCollection","_quadPoints","isChanged","boundsCollection","yCrop","heightCrop","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","multiply","textMarkUpColor","defaultRect","pdfPen","w1","h1","textMarkupType","highlight","strikeOut","squiggly","_drawSquiggly","pathPointsCount","zigZag","margins","textQuadLocation","noofRect","margin","isContainscropOrMediaBox","cropOrMediaBoxX","cropOrMediaBoxY","textMarkupAnnotation","PdfWatermarkAnnotation","_createWatermarkAppearance","_rotateAngle","_watermarkText","dictionary_1","watermarkAnnotation","PdfRubberStampAnnotation","_mapRubberStampIcon","createTemplate","templateDictionary","mMatrix","_transformBBox","_createRubberStampAppearance","innerBounds","_obtainInnerBounds","_parseStampAppearance","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","_alterRotateBounds","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","rubberFont","_stampWidth","_stampAppearanceFont","_drawRubberStamp","approved","asIs","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","notApproved","notForPublicRelease","sold","topSecret","completed","void","informationOnly","preliminaryResults","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_calloutLines","_getCalloutLinePoints","_cropBoxValueX","_cropBoxValueY","_obtainLineEndingStyle","rcColor","collections","_parsedXMLData","_updateStyle","_isContentUpdated","rcAlignment","_markUpFont","_borderColor","_obtainColor","_annotationIntent","_mapAnnotationIntent","_obtainAnnotationIntent","_parseXMLData","_setPaddings","paddings","_paddings","_saveFreeTextDictionary","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","outerRectangle","calloutLines","_drawCallOuts","angle_1","_calculateRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","freeTextCallout","_intentString","freeTextTypeWriter","rcFont","alignmentText","_reverseMapPdfFontStyle","body","decorationText","textDecoration","_getXmlFormattedString","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","markUpText","isContent","_rcText","hasAlignment","pointY","pointX","annotationIntent","markupText","rcContent","nameSpaceURI","updatedFontStyle","fontCollection","namespaceURI","styleMap","_collectStyles","_extractStylesToInput","fontDetails","_getFontDetails","updatedFontName","_a","_updateFontProperties","updatedBrush","obtainFont","_fontCollection","nodeStyle","window","getComputedStyle","error","tagName","firstElementChild","nextElementSibling","propertyValue","propertyName","getPropertyValue","property","_obtainFontStyle","_parseTextAlignment","_parseFont","_parseFontSize","_parseFontWeight","_parseFontFamily","_rgbStringToArray","_parseFontStyle","_parseTextDecoration","_parseTextAlign","fontParts","part","rgbString","match","concat","freeTextAnnotation","PdfRedactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","redactionAnnotation","PdfRichMediaAnnotation","richMediaAnnotation","_rotationAngle","_highlightMode","textFontStyle","resources","_getFontStyle","_addWidget","recreateAppearance","reference_9","document_2","_backColor","widgetAnnotation","_setCheckedStatus","_stringToStyle","fieldValue","_unCheckOthers","isChecked","asValue","apDictionary","keyList_1","_initializeItem","_styleToEffect","_getBorderEffect","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","actualIndex","_getProperty","_reorderParsedAnnotations","_updateChildReference","comments","reviewHistory","childAnnotation","_collection","isTextWebLink","link","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","parentReference","_annotation","locked","nextAnnotation","_parseCommentsOrReview","_parseReview","_parseComments","remaining","isReview","_parentDictionary","PdfBookmarkBase","_isLoadedBookmark","_bookMarkList","_reproduceTree","_isExpanded","bookmark","contains","outline","title","PdfBookmark","prev","_updateBookmarkList","_updateCount","_removeFirst","_removeLast","_removeCount","_removePrevious","_removeNext","First","Last","Next","Prev","Count","updatedList","isExpanded","firstBookmark","_getBookmark","isBookmark","bookmarkBase","isFirst","bookMark","bookmarkBaseDictionary","bookMarkDictionary","namedDestination","_obtainNamedDestination","_parent","_namedDestination","_title","_textStyle","_obtainTextStyle","_updateTextStyle","nextBookmark","F","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_findDestination","_addCollection","loadedDocument","destinationObject","_location","_checkRotation","_zoom","_isValid","widgets_1","validAnnotations_1","_parseWidgetReferences","isValidCropBox","cBox","_rotation","_obtainTabOrder","tabs","column","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","annotsRef","Annots","merge","_loadContents","saveStream","saveReference","restoreStream","_contents","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","origin","cx","cy","crx","cry","sign","clip","_getActualBounds","pageSettings","actualSize","_getActualSize","_fetchResources","targetArray","_combineIntoSingleArray","targetStream","arrays","totalLength","reduce","arr","sourceArray","_isAnnotationParsed","_destinationBounds","_ImageDecoder","_reset","_getBuffer","outputBuffer","_seek","byteLength","_toUnsigned16","_readUnsigned32","_bitsPerComponent","_noOfComponents","_JpegDecoder","_imageData","jpeg","_readHeader","imgData","isLengthExceed","_readExceededJpegImage","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","skippedByte","marker","_InflaterState","_BlockType","_DecompressedOutput","_dOutSize","_usedBytes","_dOutput","_dOutMask","_writeLD","copyStart","_copyRange","_copyFrom","copied","tailLen","_copyTo","output","sourceStart","sourceStartIndex_1","_InBuffer","_bInBuffer","_needsInput","_availableBits","_bBuffer","_toUnsigned","_load16Bits","_getBitMask","_getBits","bitBuffer","avail","_setInput","_skipBits","_skipByteBoundary","_HuffmanTree","_clArray","_loadTree","isLengthTree","_getLengthTree","_getDepthTree","_maxLengthTree","_tBits","_tMask","_createTable","lTree","_maxDepthTree","_calculateHashCode","bit","bits","_bitReverse","newcode","codeArray","_toSigned16","ofBits","bitMask","_getNextSymbol","mask","codeLength","_nCLength","_Inflater","_inflaterState","done","vFooter","inputBytes","_input","_inflate","_output","_finished","eob","readingBFinal","_bfinal","readingBType","_blockType","_getBlockType","dynamicType","readingNlCodes","staticType","_llTree","_distanceTree","decodeTop","unCompressedType","unCompressedAligning","_getInflaterStateValue","_decodeDynamicBlockHeader","_decodeBlock","_decodeUncompressedBlock","endBlock","unCompressedByte1","_unCompressedByte","unCompressedByte2","unCompressedByte3","unCompressedByte4","decodeUnCompressedBytes","_bLength","_unusedBytes","inflaterstate","unCompressedByte","_blBuffer","_getInflaterState","fb","fLengthResult","inLengthResult","_extraBits","_extraLengthBits","_inLength","iLength","fLength","_fLength","dCode","dCodeResult","_dcode","_lengthBase","_distanceCode","_staticDistanceTreeTable","_distanceBasePosition","_llCodeCount","readingNdCodes","_readingNDCodes","readingCodes","_readingCodes","readingClCodes","_readingCLCodes","readingTcBefore","readingTcAfter","_readingTCBefore","literalTreeCodeLength","distanceTreeCodeLength","_codeList","_dCodeCount","_clCodeCount","_loopCounter","_cltcl","_codeOrder","_clTree","_caSize","_lengthCode","repeatCount","previousCode","readingHeader","srFooter","rFooter","_DeflateStream","cOffset","rCount","inflateResult","_inflater","leaveOpen","_leaveOpen","_PngDecoder","header","_hasValidChunkType","hasValidChunk","_PngChunkTypes","iHDR","iDAT","_readImageData","sRGB","_isRedGreenBlue","_ignoreChunk","pLTE","_readPhotoPlate","iEND","_decodeImageData","tRNS","_readTransparency","tEXt","iTXt","zTXt","hIST","sBIT","iCCP","pHYs","tIME","bKGD","gAMA","cHRM","_currentChunkLength","chunk","_getChunkType","_header","_PngHeader","_bitDepth","_colorType","_compression","_filter","_getFilterType","_interlace","_colors","_setBitsPerPixel","_bitsPerPixel","_idatLength","_inputBands","_encodedStream","_colorSpace","_getPngColorSpace","alpha","_alpha","sh","_shades","colorspace","calRGB","alphaY","alphaX","alphaZ","blueY","blueX","blueZ","colorY","colorX","colorZ","whitePoint","redY","wpY","bY","_isDecode","_maskData","_dataStream","_getDeflatedData","_dataStreamOffset","_decodedImageData","_readDecodeData","_ideateDecode","idatData","deflateStream","outputData","numRead","_decodeData","xStep","yStep","bytesPerRow","prior","sourceY","destinationY","filter","_readStream","_PngFilterTypes","sub","_decompressSub","_decompressUp","average","_decompressAverage","paeth","_decompressPaeth","_processPixels","tmp","streamOffset","bitsPerPixel","pData","pp","pr","prp","_paethPredictor","pa","pb","pc","step","sourceX","destX","_getPixel","depth","_setPixel","unsigned","dt","hb","imageData","bitDepth","bpr","_setMask","png","_toSigned32","target","_checkType","_getDecoder","decoder","invisible","noRotate","noZoom","toggleNoView","TextDecoder","fatal","decode","translateTable","charAt","isDirect","isPassword","_areArrayEqual","stringBuffer","_decodeUnicodeBytes","chunkEnd","codePoint","nextHexByte","_isWhiteSpace","outputChunks","decodedChunk","chr2","enc1","enc2","enc3","resultIndex","chr3","_i","outputChunks_1","_encodeChunk","isLastChunk","value1","value2","value3","value4","currentChar","stopWhenFound","parentKey","refSet","Set","hasParent","_parseRectangle","isWidget","colorString","_getColorValue","m","fBlack","screen","overlay","darken","lighten","colorDodge","colorBurn","softLight","exclusion","hue","saturation","luminosity","returnString","procset","extent","swap","firstAngle","secondAngle","zero","one","cosZero","cosOne","sinZero","sinOne","actual","itemDictionary","keys_1","colorName","cross","star","iconString","accepted","rejected","cancel","marked","unmarked","review","intentString","intent","DV","crossTable","oldAppearance","_removeDuplicateFromResources","firstKey","secondKey","normalElement","BaseException","message","FormatError","ParserEndOfFileException","_defaultToString","fontFamilyString","_tryParseFontStream","apperance","resourcesDictionary","descendant","descendantFont","fontFile","inkPointsCollection","previousCollection","pageBounds","_decodeText","_stringToBigEndianBytes","_convertNumber","intArabic","numberStyle","numeric","lowerLatin","_arabicToLetter","lowerRoman","_arabicToRoman","upperLatin","upperRoman","retval","romanNumerals_1","numeral","arabic","remainder","_appendChar","isExport","dataArray","sw","CompressedStreamWriter","close","getCompressedString","_emptyPdfData","nameCache","cmdCache","refCache","_PdfCommand","command","gen","_PdfReferenceSet","put","_PdfReferenceSetCache","pair","toStr","nElements","keysArray","namesOfKeys","pair1","toStringFunction","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_b","_c","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","_clearPrimitiveCaches","_isName","_isCommand","getByte","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","isHex","getBaseStreams","_isImage","dataStream2","strEnd","arrayBuffer","_PdfNullStream","_ContentParser","_readContent","_parseObject","eof","_recordCollection","tokenType","_getNextToken","number","_lexer","_operatorParams","_operands","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_ContentLexer","_moveToNextChar","_tokenType","_getComment","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","_consumeValue","_currentCharacter","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","_nextCharacter","operands","_operator","_PdfDecodeStream","ensureBuffer","requested","minBufferLength","buffer2","bufEnd","maybeMinBufferLength","_rawMinBufferLength","_PdfDecryptStream","_nextChunk","_chunkSize","hasMoreData","_decryptBlock","maybeLength","cipher","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","getBits","codeSize","codeBuffer","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","litCodeTable","distCodeTable","hdr","block","blockLen","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","cmf","flg","_PdfCatalog","_topPagesDictionary","_createForm","_allowCatalog","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","pageKidsCountCache","pageIndexCache","currentPageIndex","currentNode","_getCatalogObj","PdfPredictorStream","readBlockTiff","rowBytes","colors","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","columns","kk","readBlockPng","pixBytes","predictor","prevRow","upLeft","params","_PdfEncryptor","_messageDigest","_MD5","_createEncryptionKey","isUserKey","ownerKeySalt","uBytes","userKeySalt","ownerEncryption","userEncryption","algorithm","_getUserKey","_getOwnerKey","_prepareKeyData","ownerPassword","userPassword","revision","keyLength","encryptMetaData","hashData","_defaultPasswordBytes","hash","_md5","keyLengthInBytes","encryptionKey","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_decodeUserPassword","_createCipherTransform","streamCipher","_algorithm","stringCipher","_buildCipherConstructor","_cipherDictionary","_string","_encryptionKey","_CipherTransform","_buildObjectKey","cipherDictionary","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_filterName","cfDictionary","streamCryptoName","handlerDictionary","passwordBytes","algorithm_1","standardCryptFilter","event_1","fileIdBytes","encodeURIComponent","decodedPassword","ownerEncryptionKey","ownerValidationSalt","ownerValidationKey","userValidationKey","userValidationSalt","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_checkOwnerPassword","_eff","h0","h2","h3","paddedLength","padded","w","f","_k","_r","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","assign","rotateRight","xor","shiftRight","isMode384","_Word64","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","_inverseS","s0","_mix","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","ii","_expandKey","cipherKey","rcon","t3","t4","createStream","_streamCipher","decryptString","stringBytes","_stringCipher","encryptString","pad","repeat","crypto","getRandomValues","endOfFile","specialChars","_PdfLexicalOperator","nextChar","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","charBuffered","getName","_toHexDigit","previousCh","getHexString","firstDigit","secondDigit","isFirstHex","_hexStringNumber","getObject","nextCh","possibleCommand","beginInlineImagePosition","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","refill","lexicalOperator","tryShift","arguement1","arguement2","arguement3","cipherTransform","makeInlineImage","_encryptor","_isPassword","recoveryMode","_checkEnd","allowStreams","makeStream","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filterZero","imageStream","imageBytes","initialStreamPos","dictBytes","cacheEntry","cacheKey","_computeMaxNumber","imageCache","bytesLength","makeFilter","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","endOffset","encryptor","_Linearization","getInt","allowZeroValue","getHints","hints","hintsLength","hint","parser","obj2","obj3","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","_PdfCrossReference","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_prevXRefOffset","_parse","trailerDictionary","_indexObjects","_readXRef","entrySize","encrypt","_entries","_nextReferenceNumber","_trailer","hasRoot","_isEncrypted","_ids","_permissionFlags","fileId","fileStructure","isIncrementalUpdate","crossReferenceType","_getEntry","xrefEntry","free","_pendingRefs","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_fileStructure","_crossReferenceType","_processXRefTable","_topDictionary","_crossReferencePosition","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","streamParameters","streamState","_streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","_currentLength","buffer_1","_saveAsStream","_saveAsTable","objectCollection","_PdfMainObjectCollection","_writeObjectCollection","_mainObjectCollection","currentLength","objectStreamCollection","_updatedDictionary","_writeArchieveStream","_objectStream","_objectStreamCollection","_writeXrefStream","formatValue","newRef","newStartXref","newXref","newXrefData","_copyTrailer","_computeMessageDigest","_writeLong","_archiveOffset","newXrefStream","tempBuffer","offsetString","genString","_processString","_writeXref","_writeXrefTable","_getSortedReferences","_offsetReference","xrefHeader","initialEntry","now","crossReferenceInfo","transform","isCrossReference","_writeStream","nestedValue","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","value_1","_writeUnicodeString","_escapeString","byteValues","_writeObjectToBuffer","archiveObj","_PdfArchievedStream","_writeToBuffer","typeIsFilter","entriesArray","sortedCollection","lastObjectNumber","entriesArray_1","currentObjectNumber","_archiveXRef","_updatedStream","newDict","archiveStream","_parseObjectCollection","_pointer","_addReferencesToMainCollection","_addToMainObjectCollection","_parseFetchValue","fetchvalue","every","objectsToWrite","_cache","processReference","fetchValue","uncompressedValue","foundCatalog","PdfForm","_needAppearances","_signFlag","_parsedFields","_isNeedAppearances","_parseFields","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","_isDefaultAppearance","orderFormFields","tab","setTabOrder","fieldCollection","_tabCollection","_fieldCollection","_getFields","_sortItemByPageIndex","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","_createFields","hasNoKids","nodes","fieldKids","kidsDict","_isNode","_hasKids","isNode","_widgetReferences","fieldReference","kidReference","kidDictionary","pageToImport","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","nameIndex","field1","field2","secondHeight","xdiff","field2Index","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","_compare","field1Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_FdfDocument","objectID","objectArray","_specialCharacters","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","_annotationObjects","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","endObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","inReplyToDictionary","_appendElement","_XmlDocument","_checkXml","xmlDocument","PdfFileStructure","_incrementalUpdate","PdfPageImportOptions","_targetIndex","_optimizeResources","_groupFormFields","_PdfMergeHelper","_importPages","layers","isCopiedPage","isSplitDocument","newPage","newContents_1","_insertNewPage","optimizeResources","pageContent","_copier","_copy","newContent","resourceValue","_contentTemplate","_pageReference","_bookmarksPageLinkReference","_importAnnotation","groupFormFields","_sourceDocument","_formFieldsGroupingSupport","_importFormField","bookMarkMap","_parseBookmarkDestination","bookmarks","_bookmarks","_mergeLayer","isDestination","oldCollection","annotationReference","dest","destArray","_annotationLayer","copiedAnnotationReference","copiedAnnotationDictionary","_destinationDocument","oldPage","formFields","fieldNames","drEntry","_fieldCount","formField","destinationKids","sourceKids","_groupFormFieldsKids","_insertFormFields","destinationField","destKids","oldKids","formFieldDict","oldDictionary","_copyDictionary","_updateFieldsWithKids","fieldDict","_updateFieldDictionary","_removeFieldDictionary","formFieldDictionary","newFieldReference","newFieldDict","_createNewFieldDictionary","newField","kidsElement","_formFieldsCollection","pageRef","parentRef","destDictionary","_getItemStyle","previousIndex","formDictionary","baseFontName","pdfForm","widgetArray","drDictionary","curreneDR","currentFont_1","pdfField","dr","newReference","modified","_mergeFormFieldsWithDocument","pdfFields","_importLayers","ocProperties","_isLayersPresent","destinationOCProperties","currentOCProperties","ocgs","Cocgs","curreneDefaultView","existingDefaultView","order","existingOrder","groups","existingRBGroups","on","existingON","existingElements","asDictionary","currentASDictionary","usageGroup","currentUsageGroup","off","existingOff","existingLocked","newPageDictionary","oldPageDictionary","xobjdict","XObject","xobject","oldPageList","oldPageResource","_newList","layerValue","layerkey","annotationKey","annotationValue","layerKey","xobjDictionary","annotDictionary","oldReference","_exportBookmarks","currentBase","bkCollection","stack","nodeInformation","newPage_1","bm","newDest","newpage_1","nDest","newBm","newNameddest","page_2","C","newNamedDest","_writePropertiesDictionary","layerList","_fixDestinations","pageLinkReference","pagesettings","PdfPageSettings","orientation","_objectDispose","_bookmarkHashTable","pageReference","_kidsReference","_formFields","_PdfCopier","object","clonedObject","_copyArray","_copyStream","_copyReference","copiedPage","clonedDictionary","_targetCrossReference","copiedValue","originalArray","newArray","originalStream","copyValue","_traversedObjects","dereferencedValue","_sourceCrossReference","_addToDestination","targetCrossReference","sourceCrossReference","PdfDocument","_allowCustomData","_linear","err","_linearization","_find","_endObjSignature","startXRefLength","_startXrefSignature","_pageCount","_permissions","outlines","_bookmarkBase","promise","cachedPage","_pages","_getLinearizationPage","settings","_checkPageNumber","lastPage_1","parentDictionary","newKids_1","sectionDictionary","sectionReference","_updatePageSettings","_updatePageCache","_updatePageCount","removePage","argument","targetPage","_removePage","valueToIncrement","isIncrement","updatedData","pageToRemove","bookmarkDictionary","_removePageTemplates","_removeParent","referenceToRemove","_removeInternalTemplates","namedObject","nameCollection","namedPageCollection","_getUpdatedPageTemplates","namedPageDictionary","namedPages","reorderPages","orderArray","sortedArray","_sortedArray","ascendingOrder","pagesToRemove","_","newkids","newPages","indexPage","_cloneResources","num","resourceDictionary_1","_cloneInnerResources","oldObject_1","hasNew_1","oldArray_1","hasNew_2","innerKey","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_headerSignature","_mergeHelperCache","_namedDestinationCollection","reason","_checkHeader","backwards","signatureEnd","formObject","needAppearances","_addWatermarkText","importPageRange","sourceDocument","sourceOCProperties","correspondancePagecount","targetIndex","sourcepage","_uniqueID","isLayersPresent","_isSplitDocument","importPage","splitByFixedNumber","fixedNumber","splitEvent","splitIndex","tempValue","pdfData","_importDocumentPages","_invokeSplitEvent","splitByPageRanges","ranges","range","args","PdfDocumentSplitEventArgs","_startXRef","_exportAppearance","_exportName","_isOrientation","_updateSize","_updateOrientation","_margins","pageOrientation","PdfMargins","all","_pdfData","_PdfPaddings","PdfLayoutFormat","_break","_paginateBounds","_boundSet","break","layout","paginateBounds","paginate","fitPage","PdfLayoutResult","_PageLayoutResult","markerWrote","markerWidth","markerX","_PdfLayoutParameters","PdfBitmap","_initializeAsync","encodedString","_decoder","_imageStatus","colorSpace","indexed","PdfListItem","_textIndent","_subList","PdfListItemCollection","_listItems","itemIndent","textIndent","items","PdfList","_indent","_delimiter","_suffix","_enableHierarchy","_alignment","_itemCollection","_drawInternal","_PdfListLayouter","layoutInternal","_currentIndex","PdfOrderedList","_startNumber","indent","delimiter","suffix","PdfUnorderedList","_getStyledText","disk","asterisk","_draw","_unicodeFont","_PdfListInfo","_list","_number","_graphics","onePage","_currentPage","pageResult","useOnPage","broken","_curList","_element","_setCurrentParameters","_markerMaxWidth","_getMarkerMaxWidth","_information","_finish","_layoutOnPage","usePaginateBounds","_usePaginateBounds","finalBounds","_resultHeight","_currentFormat","resultantHeight","_drawItem","oList","_markerWidth","listInfo","curList","posY","posX","itemHeight","itemSize","itemBrush","markerHeight","itemPen","itemFormat","itemText","markerText","canDrawMarker","markerResult","_createMarkerResult","itemX","_markerRightToLeft","_drawMarker","_createOrderedMarkerResult","_createUnorderedMarkerResult","_drawOrderedMarker","_drawUnorderedMarker","markerFont","_getMarkerFont","markerPen","_getMarkerPen","markerBrush","_getMarkerBrush","markerFormat","_setMarkerStringFormat","_getMarkerFormat","infromation","startNumber","uFont","findMaxWidth","enableHierarchy","orderedList","markerSize"],"mappings":"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AS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,KAAK,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,KAAK,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,KAAK,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,KAAK,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,KAAK,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,KAAK,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,KAAM,IAAI,EACxC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAI,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAI,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAI,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAI,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAI,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAI,EACzC7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,IAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,KAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SAAS,MAAO,KAAK,EAC1C7T,KAAKwvB,gBAAgB3b,SA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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAETzC,EAA+BgE,YAAc,CACzC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3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AAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OA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,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,SAAU,EACvE,IAAIA,EAAQ,WAAY,SAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,SAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,UAAY,UAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,SAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,UAAY,SAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,UAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,SAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,SAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,UAAY,SAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,UAAY,UAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,UAAY,UAAU,EACvE,IAAIA,EAAQ,UAAY,UAAU,EAAG,IAAIA,EAAQ,WAAY,UAAU,EACvE,IAAIA,EAAQ,WAAY,UAAU,EAAG,IAAIA,EAAQ,WA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AC5D,UAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,UAAY,UAAY,SAAY,UAC5D,UAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,UAAY,UAAY,SAAY,UAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,UAAY,UAAY,UAC5D,WAAY,UAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,UAAY,UAAY,UAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,SAC5D,UAAY,UAAY,UAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,SAC5D,UAAY,UAAY,UAAY,UAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,UAAY,UAAY,UAC5D,UAAY,SAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WA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"}