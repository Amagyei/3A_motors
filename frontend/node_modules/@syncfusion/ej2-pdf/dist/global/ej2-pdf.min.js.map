{"version":3,"file":"ej2-pdf.min.js","sources":["../../src/pdf/core/utils.js","../../src/pdf/core/pdf-primitives.js","../../src/pdf/core/enumerator.js","../../src/pdf/core/graphics/pdf-stream-writer.js","../../src/pdf/core/fonts/pdf-string-format.js","../../src/pdf/core/fonts/pdf-font-metrics.js","../../src/pdf/core/fonts/string-layouter.js","../../src/pdf/core/fonts/ttf-table.js","../../src/pdf/core/fonts/ttf-reader.js","../../src/pdf/core/fonts/unicode-true-type-font.js","../../src/pdf/core/graphics/rightToLeft/text-shape.js","../../src/pdf/core/graphics/rightToLeft/bidirectional.js","../../src/pdf/core/graphics/rightToLeft/text-renderer.js","../../src/pdf/core/fonts/pdf-standard-font.js","../../src/pdf/core/graphics/pdf-path.js","../../src/pdf/core/graphics/images/pdf-image.js","../../src/pdf/core/graphics/pdf-graphics.js","../../src/pdf/core/import-export/xml-writer.js","../../src/pdf/core/import-export/xfdf-document.js","../../src/pdf/core/import-export/json-document.js","../../src/pdf/core/graphics/pdf-template.js","../../src/pdf/core/pdf-action.js","../../src/pdf/core/form/field.js","../../src/pdf/core/annotations/pdf-appearance.js","../../src/pdf/core/annotations/annotation.js","../../src/pdf/core/annotations/annotation-collection.js","../../src/pdf/core/pdf-outline.js","../../src/pdf/core/pdf-page.js","../../src/pdf/core/graphics/images/image-decoder.js","../../src/pdf/core/graphics/images/jpeg-decoder.js","../../src/pdf/core/compression/enum.js","../../src/pdf/core/graphics/images/png-decoder.js","../../src/pdf/core/compression/decompressed-output.js","../../src/pdf/core/compression/in-buffer.js","../../src/pdf/core/compression/huffman-tree.js","../../src/pdf/core/compression/inflater.js","../../src/pdf/core/compression/deflate-stream.js","../../src/pdf/core/base-stream.js","../../src/pdf/core/content-parser.js","../../src/pdf/core/decode-stream.js","../../src/pdf/core/decrypt-stream.js","../../src/pdf/core/flate-stream.js","../../src/pdf/core/pdf-catalog.js","../../src/pdf/core/predictor-stream.js","../../src/pdf/core/security/encryptor.js","../../src/pdf/core/pdf-parser.js","../../src/pdf/core/pdf-cross-reference.js","../../src/pdf/core/form/form.js","../../src/pdf/core/import-export/fdf-document.js","../../src/pdf/core/import-export/xml-document.js","../../src/pdf/core/pdf-file-structure.js","../../src/pdf/core/pdf-page-import-options.js","../../src/pdf/core/pdf-merge.js","../../src/pdf/core/pdf-document.js","../../src/pdf/core/annotations/pdf-paddings.js","../../src/pdf/core/graphics/pdf-layouter.js","../../src/pdf/core/graphics/images/pdf-bitmap.js","../../src/pdf/core/list/pdf-list-item.js","../../src/pdf/core/list/pdf-list.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfDestination } from './pdf-page';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType, PdfDestinationMode, PdfNumberStyle } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation, PdfLineAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\nimport { _JpegDecoder } from './graphics/images/jpeg-decoder';\nimport { _PngDecoder } from './graphics/images/png-decoder';\n/**\n * Gets the unsigned value.\n *\n * @param {number} value input value.\n * @param {number} bits bits to process.\n * @returns {number} unsigned value.\n */\nexport function _toUnsigned(value, bits) {\n    return (value & ((Math.pow(2, bits)) - 1));\n}\n/**\n * Gets the signed 16 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned16(value) {\n    return (value << 16) >> 16;\n}\n/**\n * Gets the signed 32 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned32(value) {\n    return (value << 0);\n}\n/**\n * Copy values from one array to another.\n *\n * @param {number[]} target destination array.\n * @param {number} at target index.\n * @param {number[]} source source array.\n * @param {number} start start index.\n * @param {number} end end index.\n * @returns {void} Returns nothing.\n */\nexport function _copyRange(target, at, source, start, end) {\n    if (start === null || typeof start === 'undefined') {\n        start = 0;\n    }\n    end = (typeof end === 'undefined') ? source.length : end;\n    start = Math.max(0, Math.min(source.length, start));\n    end = Math.max(0, Math.min(source.length, end));\n    if (at + (end - start) > target.length) {\n        target.length = at + (end - start);\n    }\n    for (var i = start, j = at; i < end; i++, j++) {\n        target[Number.parseInt(j.toString(), 10)] = source[Number.parseInt(i.toString(), 10)];\n    }\n}\n/**\n * Checks the type of the image using header bytes.\n *\n * @param {Uint8Array} imageData image data.\n * @param {number[]} header header bytes.\n * @returns {boolean} Header matched or not.\n */\nexport function _checkType(imageData, header) {\n    for (var i = 0; i < header.length; i++) {\n        if (header[Number.parseInt(i.toString(), 10)] !== imageData[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the image decoder.\n *\n * @param {Uint8Array} imageData image data.\n * @returns {_ImageDecoder} Image decoder.\n */\nexport function _getDecoder(imageData) {\n    var decoder;\n    if (_checkType(imageData, [255, 216])) {\n        decoder = new _JpegDecoder(imageData);\n    }\n    else if (_checkType(imageData, [137, 80, 78, 71, 13, 10, 26, 10])) {\n        decoder = new _PngDecoder(imageData);\n    }\n    else {\n        throw new Error('Unsupported image format');\n    }\n    return decoder;\n}\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (typeof value === 'string' && value.length > 0 && value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return a number[] or Uint8Array.\n * @param {boolean} isPassword Whether the string is a password.\n * @param {number[]} destination Destination array.\n * @returns {number[] | Uint8Array} Byte array\n */\nexport function _stringToBytes(value, isDirect, isPassword, destination) {\n    if (isDirect === void 0) { isDirect = false; }\n    if (isPassword === void 0) { isPassword = false; }\n    var bytes = [];\n    if (destination) {\n        bytes = destination;\n    }\n    if (isPassword) {\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n    }\n    else {\n        for (var i = 0; i < value.length; i++) {\n            var charCode = value.charCodeAt(i);\n            if (charCode < 0x80) {\n                bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                bytes.push((charCode >> 6) | 0xC0);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else if (charCode < 0xD800 || charCode >= 0xE000) {\n                bytes.push((charCode >> 12) | 0xE0);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3FF) << 10) | (value.charCodeAt(i) & 0x3FF));\n                bytes.push((charCode >> 18) | 0xF0);\n                bytes.push(((charCode >> 12) & 0x3F) | 0x80);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n        }\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @param {boolean} isJson Whether is json or xfdf.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes, isJson) {\n    if (isJson === void 0) { isJson = false; }\n    var length = bytes.length;\n    var max = 8192;\n    var stringBuffer = [];\n    if (length < max) {\n        return (isJson ? _decodeUnicodeBytes(bytes) : String.fromCharCode.apply(null, bytes));\n    }\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(isJson ? _decodeUnicodeBytes(chunk) : String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Decode unicode string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _decodeUnicodeBytes(bytes) {\n    var result = '';\n    var i = 0;\n    while (i < bytes.length) {\n        var byte = bytes[i++];\n        if (byte < 0x80) {\n            result += String.fromCharCode(byte);\n        }\n        else if (byte < 0xE0) {\n            result += String.fromCharCode(((byte & 0x1F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else if (byte < 0xF0) {\n            result += String.fromCharCode(((byte & 0x0F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else {\n            var codePoint = ((byte & 0x07) << 18) | ((bytes[i++] & 0x3F) << 12) |\n                ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F) - 0x10000;\n            result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & 0x03FF) + 0xDC00);\n        }\n    }\n    return result;\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode a chunk of base64 string into Uint8Array.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @returns {Uint8Array} Decoded bytes as Uint8Array.\n */\nfunction _decodeChunk(input) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return new Uint8Array(output);\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var chunkSize = 3000000;\n    if (input.length >= chunkSize) {\n        input = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        var outputChunks = [];\n        var totalLength = 0;\n        for (var i = 0; i < input.length; i += chunkSize) {\n            var chunk = input.substring(i, i + chunkSize);\n            var decodedChunk = _decodeChunk(chunk);\n            outputChunks.push(decodedChunk);\n            totalLength += decodedChunk.length;\n        }\n        var output = new Uint8Array(totalLength);\n        var offset = 0;\n        for (var _i = 0, outputChunks_1 = outputChunks; _i < outputChunks_1.length; _i++) {\n            var chunk = outputChunks_1[_i];\n            output.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return isDirect ? Array.from(output) : output;\n    }\n    else {\n        var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1 = void 0;\n        var chr2 = void 0;\n        var chr3 = void 0;\n        var enc1 = void 0;\n        var enc2 = void 0;\n        var enc3 = void 0;\n        var enc4 = void 0;\n        var i = 0;\n        var resultIndex = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === key.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = key.indexOf(input.charAt(i++));\n            enc2 = key.indexOf(input.charAt(i++));\n            enc3 = key.indexOf(input.charAt(i++));\n            enc4 = key.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr1;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr2;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return isDirect ? output : new Uint8Array(output);\n    }\n}\n/**\n * Encode a chunk of bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @param {boolean} isLastChunk Defines a last chunk of bytes.\n * @returns {string} Decoded string.\n */\nfunction _encodeChunk(bytes, isLastChunk) {\n    if (isLastChunk === void 0) { isLastChunk = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = [];\n    var length = bytes.length;\n    var i = 0;\n    while (i < length) {\n        var byte1 = bytes[i++];\n        var byte2 = i < length ? bytes[i++] : 0;\n        var byte3 = i < length ? bytes[i++] : 0;\n        var value1 = byte1 >> 2;\n        var value2 = ((byte1 & 3) << 4) | (byte2 >> 4);\n        var value3 = ((byte2 & 15) << 2) | (byte3 >> 6);\n        var value4 = byte3 & 63;\n        output.push(key[Number.parseInt(value1.toString(), 10)], key[Number.parseInt(value2.toString(), 10)], i - 1 > length ? '=' : key[Number.parseInt(value3.toString(), 10)], i > length ? '=' : key[Number.parseInt(value4.toString(), 10)]);\n    }\n    if (isLastChunk) {\n        if (length % 3 === 1) {\n            output[output.length - 1] = '=';\n            output[output.length - 2] = '=';\n        }\n        else if (length % 3 === 2) {\n            output[output.length - 1] = '=';\n        }\n    }\n    return output.join('');\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var chunkSize = 3000000;\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var length = bytes.length;\n    if (length >= chunkSize) {\n        var output = [];\n        if (length > chunkSize) {\n            for (var start = 0; start < length; start += chunkSize) {\n                var chunk = bytes.subarray(start, Math.min(start + chunkSize, length));\n                if ((start + chunkSize) >= length) {\n                    output.push(_encodeChunk(chunk, true));\n                }\n                else {\n                    output.push(_encodeChunk(chunk));\n                }\n            }\n        }\n        else {\n            output.push(_encodeChunk(bytes, true));\n        }\n        return output.join('');\n    }\n    else {\n        var output = '';\n        var currentChar = 0;\n        for (var i = 0; i < bytes.length; i++) {\n            if (i % 3 === 0) {\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n            }\n            else if (i % 3 === 1) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n            }\n            else if (i % 3 === 2) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n            }\n        }\n        if (bytes.length % 3 === 1) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n        }\n        if (bytes.length % 3 === 2) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n        }\n        return output;\n    }\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            if (angle === 90) {\n                matrix._translate(box[3], -box[0]);\n            }\n            else if (angle === 180) {\n                matrix._translate(box[2], box[3]);\n            }\n            else if (angle === 270) {\n                matrix._translate(-box[1], box[2]);\n            }\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n        case 'SBApproved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n        case 'SBAsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n        case 'SBCompleted':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n        case 'SBConfidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n        case 'SBDepartmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n        case 'SBDraft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n        case 'SBExperimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n        case 'SBExpired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n        case 'SBFinal':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n        case 'SBForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n        case 'SBForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n        case 'SBInformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n        case 'SBNotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n        case 'SBNotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n        case 'SBPreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n        case 'SBSold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n        case 'SBTopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n        case 'SBVoid':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = [];\n    if ((style & PdfFontStyle.bold) > 0) {\n        value.push('Bold');\n    }\n    if ((style & PdfFontStyle.italic) > 0) {\n        value.push('Italic');\n    }\n    if ((style & PdfFontStyle.underline) > 0) {\n        value.push('Underline');\n    }\n    if ((style & PdfFontStyle.strikeout) > 0) {\n        value.push('Strikeout');\n    }\n    if (value.length === 0) {\n        return 'Regular';\n    }\n    return value.join(', ');\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    if (typeof size === 'undefined' && annotation instanceof PdfLineAnnotation && annotation._isLoaded) {\n        size = 10;\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helv':\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Cour':\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symb':\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TiRo':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZaDb':\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance instanceof _PdfDictionary && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the Destination.\n *\n * @param {_PdfDictionary} dictionary widget dictionary.\n * @param {string} key bookmark or action dictionary key.\n * @returns {PdfDestination} destination.\n */\nexport function _obtainDestination(dictionary, key) {\n    var page;\n    var destination;\n    if (dictionary) {\n        var destinationArray = void 0; // eslint-disable-line\n        if (dictionary.has(key)) {\n            destinationArray = dictionary.getArray(key);\n        }\n        var loadedDocument = dictionary._crossReference._document;\n        var mode = void 0;\n        if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            var value = destinationArray[0]; // eslint-disable-line\n            var left = void 0;\n            var height = void 0;\n            var bottom = void 0;\n            var right = void 0;\n            var zoom = void 0;\n            if (typeof value === 'number') {\n                var pageNumber = destinationArray[0];\n                if (pageNumber >= 0) {\n                    var document_1 = dictionary._crossReference._document;\n                    if (document_1 && document_1.pageCount > pageNumber) {\n                        page = document_1.getPage(pageNumber);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode && mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = pageNumber;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value instanceof _PdfDictionary) {\n                var pageDictionary = value;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                    index = _getPageIndex(loadedDocument, pageDictionary);\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    page = loadedDocument.getPage(index);\n                }\n                if (destinationArray.length > 1) {\n                    mode = destinationArray[1];\n                }\n                if (mode) {\n                    if (mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                topValue = _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = index;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                    else {\n                        if (mode.name === 'FitR') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                bottom = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                right = destinationArray[4];\n                            }\n                            if (destinationArray.length > 5) {\n                                height = destinationArray[5];\n                            }\n                            if (page) {\n                                left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                destination = new PdfDestination(page, [left, bottom, right, height]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitR;\n                            }\n                        }\n                        else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                            if (destinationArray.length >= 3) {\n                                height = destinationArray[2];\n                            }\n                            if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                page = loadedDocument.getPage(index);\n                            }\n                            if (page && page.size) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                destination = new PdfDestination(page, [0, topValue]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitH;\n                                if (height === null || typeof height === 'undefined') {\n                                    destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                destination = new PdfDestination(page);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return destination;\n}\n/**\n * Update the annotation bounds.\n *\n * @param {PdfAnnotation} annotation annotation.\n * @param {number[]} bounds annotation bounds.\n * @returns {number[]} bounds.\n */\nexport function _updateBounds(annotation, bounds) {\n    if (bounds) {\n        annotation._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n    }\n    var rect;\n    if (annotation._page && annotation.bounds) {\n        rect = [annotation.bounds.x, annotation.bounds.y + annotation.bounds.height,\n            annotation.bounds.width, annotation.bounds.height];\n        if (annotation._page._isNew && annotation._page._pageSettings) {\n            var pageSettings = annotation._page._pageSettings;\n            var pageBounds = [pageSettings.margins.left, pageSettings.margins.top, pageSettings.size[0] -\n                    (pageSettings.margins.left + pageSettings.margins.right),\n                pageSettings.size[1] - (pageSettings.margins.top + pageSettings.margins.bottom)];\n            rect[0] += pageBounds[0];\n            rect[1] = pageSettings.size[1] - (pageBounds[1] + rect[1]);\n        }\n        else {\n            var size = annotation._page.size;\n            rect[1] = size[1] - (annotation.bounds.y + annotation.bounds.height);\n            var cropBoxOrMediaBox = annotation._getCropOrMediaBox();\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]];\n    }\n    return rect;\n}\n/**\n * Decode text.\n *\n * @param {string} text Text to decode.\n * @param {boolean} isColorSpace Color space or not\n * @param {boolean} isPassword Password or not\n * @returns {string} Decoded text.\n */\nexport function _decodeText(text, isColorSpace, isPassword) {\n    if (text && typeof text === 'string' && !isColorSpace && !isPassword) {\n        if (text.startsWith('þÿ')) {\n            text = text.substring(2);\n            if (text.endsWith('ÿý')) {\n                text = text.substring(0, text.length - 2);\n            }\n            var bytes = _stringToBytes(text, false, true);\n            var result = '';\n            for (var i = 0; i < bytes.length; i += 2) {\n                var x = bytes[Number.parseInt(i.toString(), 10)] << 8;\n                var y = bytes[Number.parseInt((i + 1).toString(), 10)];\n                var codeUnit = x | y;\n                result += String.fromCharCode(codeUnit);\n            }\n            text = result;\n        }\n    }\n    return text;\n}\n/**\n * Number of bytes required to save the number.\n *\n * @param {number} input number.\n * @returns {number} number of bytes.\n */\nexport function _getSize(input) {\n    var size = 0;\n    var uintMaxValue = 0xFFFFFFFF;\n    var ushortMaxValue = 0xFFFF;\n    var byteMaxValue = 0xFF;\n    if (input <= uintMaxValue) {\n        if (input <= ushortMaxValue) {\n            if (input <= byteMaxValue) {\n                size = 1;\n            }\n            else {\n                size = 2;\n            }\n        }\n        else {\n            if (input <= (ushortMaxValue | (ushortMaxValue << 8))) {\n                size = 3;\n            }\n            else {\n                size = 4;\n            }\n        }\n    }\n    else {\n        size = 8;\n    }\n    return size;\n}\n/**\n * Convert the string to big endian bytes.\n *\n * @param {string} input string.\n * @returns {number[]} bytes.\n */\nexport function _stringToBigEndianBytes(input) {\n    var bytes = [];\n    for (var i = 0; i < input.length; i++) {\n        var charCode = input.charCodeAt(Number.parseInt(i.toString(), 10));\n        if (charCode <= 0xFFFF) {\n            bytes.push((charCode >> 8) & 0xFF);\n            bytes.push(charCode & 0xFF);\n        }\n    }\n    return bytes;\n}\n/**\n * Convert number respect to ordered list number style.\n *\n * @param {number} intArabic Input value.\n * @param {PdfNumberStyle} numberStyle Number style.\n * @returns {string} String value.\n */\nexport function _convertNumber(intArabic, numberStyle) {\n    switch (numberStyle) {\n        case PdfNumberStyle.none:\n            return '';\n        case PdfNumberStyle.numeric:\n            return intArabic.toString();\n        case PdfNumberStyle.lowerLatin:\n            return _arabicToLetter(intArabic).toLowerCase();\n        case PdfNumberStyle.lowerRoman:\n            return _arabicToRoman(intArabic).toLowerCase();\n        case PdfNumberStyle.upperLatin:\n            return _arabicToLetter(intArabic);\n        case PdfNumberStyle.upperRoman:\n            return _arabicToRoman(intArabic);\n    }\n}\n/**\n * Convert arabic numbers to roman style.\n *\n * @param {number} intArabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToRoman(intArabic) {\n    var retval = '';\n    var romanNumerals = [\n        [1000, 'M'], [900, 'CM'], [500, 'D'], [400, 'CD'],\n        [100, 'C'], [90, 'XC'], [50, 'L'], [40, 'XL'],\n        [10, 'X'], [9, 'IX'], [5, 'V'], [4, 'IV'], [1, 'I']\n    ];\n    for (var _i = 0, romanNumerals_1 = romanNumerals; _i < romanNumerals_1.length; _i++) {\n        var _a = romanNumerals_1[_i], value = _a[0], numeral = _a[1];\n        while (intArabic >= value) {\n            retval += numeral;\n            intArabic -= value;\n        }\n    }\n    return retval;\n}\n/**\n * Convert arabic numbers to alphabet.\n *\n * @param {number} arabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToLetter(arabic) {\n    var result = '';\n    while (arabic > 0) {\n        var remainder = arabic % 26;\n        arabic = Math.floor(arabic / 26);\n        if (remainder === 0) {\n            arabic--;\n            remainder = 26;\n        }\n        result = _appendChar(remainder) + result;\n    }\n    return result;\n}\n/**\n * Convert character code to string.\n *\n * @param {number} value Input value.\n * @returns {string} String value.\n */\nexport function _appendChar(value) {\n    if (value <= 0 || value > 26) {\n        throw new Error('Value can not be less 0 and greater 26');\n    }\n    return String.fromCharCode(64 + value);\n}\n/**\n * Check whether the value is null or undefined.\n *\n * @param {any} value Input value.\n * @returns {boolean} Return true if the value is null or undefined; otherwise, return false\n */\nexport function _isNullOrUndefined(value) {\n    if (value !== null && typeof value !== 'undefined') {\n        return true;\n    }\n    return false;\n}\n/**\n * Base64 encoded string representing an empty PDF document.\n */\nexport var _emptyPdfData = 'JVBERi0xLjQNCiWDkvr+DQoxIDAgb2JqDQo8PA0KL1R5cGUgL0NhdGFsb2cNCi9QYWdlcyAyIDAgUg0KL0Fjcm9Gb3JtIDMgMCBSDQo+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PA0KL1R5cGUgL1BhZ2VzDQovS2lkcyBbNCAwIFJdDQovQ291bnQgMQ0KL1Jlc291cmNlcyA8PD4+DQoNCi9NZWRpYUJveCBbLjAwIC4wMCA1OTUuMDAgODQyLjAwXQ0KL1JvdGF0ZSAwDQo+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PA0KL0ZpZWxkcyBbXQ0KPj4NCmVuZG9iag0KNCAwIG9iag0KPDwNCi9Db3VudCAxDQovVHlwZSAvUGFnZXMNCi9LaWRzIFs1IDAgUl0NCi9QYXJlbnQgMiAwIFINCj4+DQplbmRvYmoNCjUgMCBvYmoNCjw8DQovVHlwZSAvUGFnZQ0KL1BhcmVudCA0IDAgUg0KPj4NCmVuZG9iag0KeHJlZg0KMCA2DQowMDAwMDAwMDAwIDY1NTM1IGYNCjAwMDAwMDAwMTcgMDAwMDAgbg0KMDAwMDAwMDA4OSAwMDAwMCBuDQowMDAwMDAwMjE4IDAwMDAwIG4NCjAwMDAwMDAyNTUgMDAwMDAgbg0KMDAwMDAwMDMzNCAwMDAwMCBuDQp0cmFpbGVyDQo8PA0KL1Jvb3QgMSAwIFINCi9TaXplIDYNCj4+DQoNCnN0YXJ0eHJlZg0KMzg3DQolJUVPRg0K';\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define the types of points and segments in a path.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Add path points\n * let pathPoints: Array<number[]> = [[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]];\n * // Add path types\n * let pathTypes: PathPointType[] = [0, 1, 1, 1, 1];\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath(pathPoints, pathTypes);\n * // Draw the path to the PDF page\n * page.graphics.drawPath(path, pen, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * The starting point of a path.\n     */\n    PathPointType[PathPointType[\"start\"] = 0] = \"start\";\n    /**\n     * A straight line segment.\n     */\n    PathPointType[PathPointType[\"line\"] = 1] = \"line\";\n    /**\n     * A Bezier curve segment.\n     */\n    PathPointType[PathPointType[\"bezier\"] = 3] = \"bezier\";\n    /**\n     * A mask for extracting the type of a point.\n     */\n    PathPointType[PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    /**\n     * Indicates that the segment has dashed line style.\n     */\n    PathPointType[PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    /**\n     * Indicates a marker point in the path.\n     */\n    PathPointType[PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    /**\n     * Closes the current path.\n     */\n    PathPointType[PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(PathPointType || (PathPointType = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\nexport var _PdfColorSpace;\n(function (_PdfColorSpace) {\n    _PdfColorSpace[_PdfColorSpace[\"rgb\"] = 0] = \"rgb\";\n    _PdfColorSpace[_PdfColorSpace[\"cmyk\"] = 1] = \"cmyk\";\n    _PdfColorSpace[_PdfColorSpace[\"grayScale\"] = 2] = \"grayScale\";\n    _PdfColorSpace[_PdfColorSpace[\"indexed\"] = 3] = \"indexed\";\n})(_PdfColorSpace || (_PdfColorSpace = {}));\n/**\n * Public enum type to represent the ordered list style\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the ordered list number style for the list items\n * list.style = PdfNumberStyle.lowerLatin;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * No numbering at all.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type '1'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"numeric\"] = 1] = \"numeric\";\n    /**\n     * Specifies the style 'a'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerLatin\"] = 2] = \"lowerLatin\";\n    /**\n     * Specifies the style 'i'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerRoman\"] = 3] = \"lowerRoman\";\n    /**\n     * Specifies the style 'A'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperLatin\"] = 4] = \"upperLatin\";\n    /**\n     * Specifies the style 'I'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperRoman\"] = 5] = \"upperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * Public enum to define the style used for unordered list.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a unordered list and pass the list item collection\n * let list: PdfUnorderedList = new PdfUnorderedList(items);\n * // Set the unordered list style for the list items\n * list.style = PdfUnorderedListStyle.circle;\n * // Draw the unordered list associated with items\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfUnorderedListStyle;\n(function (PdfUnorderedListStyle) {\n    /**\n     * No bulleting at all.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies disk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"disk\"] = 1] = \"disk\";\n    /**\n     * Specifies square style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"square\"] = 2] = \"square\";\n    /**\n     * Specifies asterisk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"asterisk\"] = 3] = \"asterisk\";\n    /**\n     * Specifies circle style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"circle\"] = 4] = \"circle\";\n})(PdfUnorderedListStyle || (PdfUnorderedListStyle = {}));\n/**\n * Public enum to define a layout type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to the list item collection by passing the array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout format for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Initialize layout type for drawing\n * pageLayout.layout = PdfLayoutType.paginate;\n * // Draw the list on the page along with the specified layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Get the layout type used to draw the list\n * let layoutType: PdfLayoutType = pageLayout.layout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies pagination across multiple pages based on the specified dimensions and layout options\n     */\n    PdfLayoutType[PdfLayoutType[\"paginate\"] = 0] = \"paginate\";\n    /**\n     * Specifies content to be laid out to fit within a single page, without pagination\n     */\n    PdfLayoutType[PdfLayoutType[\"onePage\"] = 1] = \"onePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * Public enum to define a layout Break type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the item to list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set  the layout break type for drawing\n * pageLayout.break = PdfLayoutBreakType.fitPage;\n * // Draw the list associated with items along with layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies that content should break to a new page to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitPage\"] = 0] = \"fitPage\";\n    /**\n     * Specifies that content should break to a new page or element to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitElement\"] = 1] = \"fitElement\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n/**\n * Public enum to define a list marker alignment\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the marker alignment\n * list.alignment = PdfListMarkerAlignment.left;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfListMarkerAlignment;\n(function (PdfListMarkerAlignment) {\n    /**\n     * Left alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Right alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"right\"] = 1] = \"right\";\n})(PdfListMarkerAlignment || (PdfListMarkerAlignment = {}));\n","import { _escapePdfName } from './../utils';\nimport { _PdfColorSpace } from '../enumerator';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, arg2, arg3) {\n        if (typeof value === 'string' && typeof arg2 === 'boolean') {\n            this._stream.write(\"/\" + value + \" \");\n            this._writeOperator(arg2 ? 'CS' : 'cs');\n        }\n        else if (Array.isArray(value) && typeof arg2 === 'number' && typeof arg3 === 'boolean') {\n            var colorSpaceName = void 0;\n            switch (arg2) {\n                case _PdfColorSpace.rgb:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n                case _PdfColorSpace.cmyk:\n                    colorSpaceName = 'DeviceCMYK';\n                    break;\n                case _PdfColorSpace.grayScale:\n                    colorSpaceName = 'DeviceGray';\n                    break;\n                default:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n            }\n            this._stream.write(\"/\" + colorSpaceName + \" \");\n            this._writeOperator(arg3 ? 'CS' : 'cs');\n            this._setColor(value, arg3);\n        }\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._setLeading = function (leading) {\n        this._write(leading.toFixed(3) + \" \");\n        this._write(this._whiteSpace);\n        this._writeOperator('TL');\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this._isList = false;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines === null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && typeof this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && typeof this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs !== null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs !== null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 !== null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (!internals) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 === null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        if (this._metrics._name === 'Helvetica' ||\n            this._metrics._name === 'Courier' ||\n            this._metrics._name === 'TimesRoman' ||\n            this._metrics._name === 'Symbol' ||\n            this._metrics._name === 'ZapfDingbats') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this.style = style;\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                metrics._name = 'Courier';\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                metrics._name = 'TimesRoman';\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                metrics._name = 'Symbol';\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                metrics._name = 'ZapfDingbats';\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode, PathPointType } from './../enumerator';\n/**\n * Implements graphics path, which is a sequence of primitive graphics elements.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics object of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath();\n * // Add a line to the Graphics path\n * path.addLine(10, 250, 200, 250);\n * // Draw the path on the PDF page\n * graphics.drawPath(path, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPath = /** @class */ (function () {\n    function PdfPath(points, pathTypes) {\n        this._points = [];\n        this._pathTypes = [];\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._isStart = true;\n        this._isXps = false;\n        this._brush = undefined;\n        this._pen = undefined;\n        if (points && pathTypes) {\n            if (Array.isArray(points) && Array.isArray(pathTypes)) {\n                this._points = points;\n                this._pathTypes = pathTypes;\n            }\n            else {\n                throw new Error('Invalid constructor arguments.');\n            }\n        }\n        else {\n            this._points = [];\n            this._pathTypes = [];\n        }\n    }\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last point of the path.\n         *\n         * @returns {number[]} The value of the last point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the last point of the path.\n         * let lastPoint: number[] = path.lastPoint;\n         * // Draw the path on the PDF page.\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[count - 1][0];\n                value[1] = this._points[count - 1][1];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the array of points that represent the x and y coordinates defining the path.\n         *\n         * @returns {Array<number[]>} An array of arrays of numbers, where each inner array represents a set of points.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path points of the path\n         * let pathPoints: Array<number[]> = path.pathPoints;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the types of the corresponding points in the path.\n         *\n         * @returns {PathPointType[]} An array of `PathPointType` objects representing the types of each path point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path types of the path\n         * let pathTypes: PathPointType[] = path.pathTypes;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        /**\n         * Gets the fill mode.\n         *\n         * @returns {PdfFillMode} The fill mode of the PDF path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the fill mode of the path\n         * let fillMode: PdfFillMode = path.fillMode;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fillMode;\n        },\n        /**\n         * Sets the fill mode.\n         *\n         * @param {PdfFillMode} mode The fill mode of the path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Set the fill mode of the path\n         * path.fillMode = PdfFillMode.alternate;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (mode) {\n            this._fillMode = mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this._addPath(arg1._points, arg1._pathTypes);\n        }\n        else if (Array.isArray(arg1) && Array.isArray(arg2)) {\n            this._addPath(arg1, arg2);\n        }\n    };\n    PdfPath.prototype._addPath = function (pathPoints, pathTypes) {\n        if (!pathPoints || pathPoints.length === 0) {\n            throw new Error('Path points cannot be null or undefined.');\n        }\n        if (!pathTypes || pathTypes.length === 0) {\n            throw new Error('Path types cannot be null or undefined.');\n        }\n        if (pathPoints.length !== pathTypes.length) {\n            throw new Error('The argument arrays should be of equal length.');\n        }\n        for (var i = 0; i < pathPoints.length; i++) {\n            if (i >= pathPoints.length || i < 0) {\n                throw new Error('Index' + i + 'is out of bounds.');\n            }\n            this._points.push(pathPoints[Number.parseInt(i.toString(), 10)].slice());\n            this._pathTypes.push(pathTypes[Number.parseInt(i.toString(), 10)]);\n        }\n    };\n    /**\n     * Adds a line segment to the path.\n     *\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a line segment to the path\n     * path.addLine(10, 250, 200, 250);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], PathPointType.line);\n    };\n    PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this.addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i += 2) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this.lastPoint[0] || point[1] !== this.lastPoint[1])) {\n                    this._addPoint(point, PathPointType.line);\n                }\n                else if (point[0] !== this.lastPoint[0] && point[1] !== this.lastPoint[1]) {\n                    this._addPoint(point, PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n        }\n    };\n    PdfPath.prototype._addPoint = function (point, type) {\n        this._points.push(point);\n        this._pathTypes.push(type);\n    };\n    /**\n     * Adds an arc within a bounding rectangle using the angles that define the start and sweep of the arc.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} width The width of the rectangular region.\n     * @param {number} height The height of the rectangular region.\n     * @param {number} startAngle The start angle of the arc.\n     * @param {number} sweepAngle The angle between start angle and the end of the arc.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('Empty.pdf'));\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(10, 100, 50, 150, 150, 150, 200, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, PathPointType.bezier);\n        }\n    };\n    /**\n     * Adds a rectangle to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangle.\n     * @param {number} width The width of the rectangle.\n     * @param {number} height The height of the rectangle.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a rectangle to the path\n     * path.addRectangle(10, 20, 50, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addRectangle = function (x, y, width, height) {\n        this.startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds a polygon to the path.\n     *\n     * @param {Array<number[]>} points The points of the polygon, where each point is an array of two numbers representing the x and y coordinates.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a polygon to the path\n     * path.addPolygon([[200, 10], [300, 100], [150, 100], [200, 10]]);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this.startFigure();\n        this._addPoints(newPoints, PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds an ellipse to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} width The width of the bounding rectangle for the ellipse.\n     * @param {number} height The height of the bounding rectangle for the ellipse.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add an ellipse to the path\n     * path.addEllipse(200, 200, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addEllipse = function (x, y, width, height) {\n        this.startFigure();\n        this.addArc(x, y, width, height, 0, 360);\n        this.closeFigure();\n    };\n    /**\n     * Adds a Bezier curve to the path using specified coordinates for the start point, two control points, and the end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(100, 100, 150, 150, 50, 250, 100, 300);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [startX, startY, firstX, firstY, secondX, secondY, endX, endY];\n        this._addPoints(points, PathPointType.bezier);\n    };\n    PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this.addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    /**\n     * Adds a pie slice to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} width The width of the bounding rectangle.\n     * @param {number} height The height of the bounding rectangle.\n     * @param {number} startAngle The angle in degrees measured clockwise from the x-axis to the start of the pie slice.\n     * @param {number} sweepAngle The angle in degrees measured clockwise from the startAngle parameter to the end of the pie slice.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a pie slice to the path\n     * path.addPie(0, 20, 100, 100, 270, 45);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPie = function (x, y, width, height, startAngle, sweepAngle) {\n        this.startFigure();\n        this.addArc(x, y, width, height, startAngle, sweepAngle);\n        this._addPoint([x + width / 2, y + height / 2], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Starts a new figure in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Start a new figure in the path\n     * path.startFigure();\n     * // Add some path points (optional)\n     * path.addLine(50, 50, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.startFigure = function () {\n        this._isStart = true;\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this.closeFigure(this._points.length - 1);\n            }\n            this.startFigure();\n        }\n    };\n    /**\n     * Closes all non-closed figures in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n     * // Close all non-closed figures\n     * path.closeAllFigures();\n     * // Draw the path on the PDF page\n     * page.graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        for (var i = 0; i < this._points.length; ++i) {\n            var pointType = this._pathTypes[Number.parseInt(i.toString(), 10)];\n            var flag = false;\n            if (i !== 0 && pointType === PathPointType.start) {\n                this.closeFigure(i - 1);\n                flag = true;\n            }\n            else if (i === this._pathTypes.length - 1 && !flag && this._isXps) {\n                if (this._points[0][0] === this._points[Number.parseInt(i.toString(), 10)][0] &&\n                    this._points[0][1] === this._points[Number.parseInt(i.toString(), 10)][1]) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return PdfPath;\n}());\nexport { PdfPath };\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _PdfBaseStream } from './../base-stream';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfFont, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PathPointType } from './../enumerator';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { PdfPath } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphics` class.\n     *\n     * @param {number[]} size The graphics client size.\n     * @param {_PdfContentStream} content Content stream.\n     * @param {_PdfCrossReference} xref Cross reference.\n     * @param {PdfPage | PdfTemplate} source Source object of the graphics.\n     * @private\n     */\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._isItalic = false;\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj) {\n                if (obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = xref._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the size of the canvas reduced by margins and page templates (Read only).\n         *\n         * @returns {number[]} The width and height of the client area as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics client size.\n         * let size: number[] = page.graphics.clientSize;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return [this._clipBounds[2], this._clipBounds[3]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject && this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(result.pen, result.brush);\n    };\n    /**\n     * Draws a Bezier curve using a specified pen and coordinates for the start point, two control points, and end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a Bezier curve on the page graphics\n     * graphics.drawBezier(50, 100, 200, 50, 100, 150, 150, 100, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY, pen) {\n        this._stateControl(pen, null, null);\n        this._sw._beginPath(startX, startY);\n        this._sw._appendBezierSegment(firstX, firstY, secondX, secondY, endX, endY);\n        this._drawGraphicsPath(pen);\n    };\n    PdfGraphics.prototype.drawPie = function (x, y, width, height, startAngle, sweepAngle, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._constructPiePath(x, y, x + width, y + height, startAngle, sweepAngle);\n        this._sw._appendLineSegment(x + width / 2, y + height / 2);\n        this._drawGraphicsPath(result.pen, result.brush, null, true);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var result = this._setPenBrush(first, second);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var result = this._setPenBrush(first, second);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} width Width of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} height Height of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} startAngle Angle measured in degrees clockwise from the x-axis to the first side of the arc shape.\n     * @param {number} sweepAngle Angle measured in degrees clockwise from the startAngle parameter to the second side of the arc shape.\n     * @param {PdfPen} pen Pen that determines the stroke color, width, and style of the arc.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw an arc on the page graphics\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    /**\n     * Draws a PDF template onto the page graphics.\n     *\n     * @param {PdfTemplate} template The PDF template to be drawn.\n     * @param {{x: number, y: number, width: number, height: number}} bounds The bounds of the template.\n     * @param {number} bounds.x The x-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.y The y-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.width The width of the area where the template will be drawn.\n     * @param {number} bounds.height The height of the area where the template will be drawn.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Get the appearance template of the annotation\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Get the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Draw the template on the page graphics within the specified bounds\n     * graphics.drawTemplate(template, { x: 10, y: 20, width: template.size[0], height: template.size[1] });\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawTemplate = function (template, bounds) {\n        var _this = this;\n        if (typeof template !== 'undefined') {\n            if (template._isExported || template._isResourceExport) {\n                if (this._crossReference) {\n                    template._crossReference = this._crossReference;\n                    template._importStream(true, template._isResourceExport);\n                }\n                else {\n                    template._importStream(false, template._isResourceExport);\n                    this._pendingResource.push(template);\n                }\n            }\n            var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n            var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n            var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n            var cropBox = void 0;\n            var mediaBox = void 0;\n            if (this._page) {\n                cropBox = this._page.cropBox;\n                mediaBox = this._page.mediaBox;\n                if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                    if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                        this.translateTransform(cropBox[0], -cropBox[1]);\n                        bounds.x = -cropBox[0];\n                        bounds.y = cropBox[1];\n                    }\n                }\n            }\n            var state = this.save();\n            var matrix = new _PdfTransformationMatrix();\n            if (this._page) {\n                var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                    this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                    cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                    (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n                matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n            }\n            else {\n                matrix._translate(bounds.x, -(bounds.y + bounds.height));\n            }\n            if (needScale) {\n                if (template._isAnnotationTemplate && template._needScale) {\n                    var scaleApplied = false;\n                    if (template._content && template._content.dictionary) {\n                        var dictionary = template._content.dictionary;\n                        if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                            var templateMatrix = dictionary.getArray('Matrix');\n                            var templateBox = dictionary.getArray('BBox');\n                            if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                                var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                                var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                                var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                                var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                                if (roundScaleX === templateScaleX &&\n                                    roundScaleY === templateScaleY &&\n                                    templateBox[2] === template._size[0] &&\n                                    templateBox[3] === template._size[1]) {\n                                    matrix = new _PdfTransformationMatrix();\n                                    matrix._translate(bounds.x - templateMatrix[4], -(bounds.y + templateMatrix[5]));\n                                    matrix._scale(1, 1);\n                                    scaleApplied = true;\n                                }\n                            }\n                        }\n                    }\n                    if (!scaleApplied) {\n                        matrix._scale(scaleX, scaleY);\n                    }\n                }\n                else {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var isReference = false;\n            var keyName_1;\n            var isNew = true;\n            var ref_1;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj) {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        sourceDictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        sourceDictionary = obj;\n                    }\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                    this._resources.forEach(function (value, key) {\n                        if (key && key instanceof _PdfReference) {\n                            var base = _this._crossReference._fetch(key);\n                            if (base && template && base === template._content) {\n                                keyName_1 = value;\n                                ref_1 = key;\n                            }\n                        }\n                    });\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName_1 === 'undefined') {\n                keyName_1 = _PdfName.get(_getNewGuidString());\n                if (template && template._content.reference) {\n                    ref_1 = template._content.reference;\n                }\n                else if (this._crossReference) {\n                    ref_1 = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': template._content, 'key': keyName_1, 'source': sourceDictionary });\n                }\n                if (ref_1 && this._crossReference) {\n                    if (!this._crossReference._cacheMap.has(ref_1) && template && template._content) {\n                        this._crossReference._cacheMap.set(ref_1, template._content);\n                    }\n                    sourceDictionary.update(keyName_1.name, ref_1);\n                    this._resources.set(ref_1, keyName_1);\n                }\n                this._resourceObject._updated = true;\n            }\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n            this._sw._executeObject(keyName_1);\n            this.restore(state);\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        this._crossReference = crossReference;\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry instanceof PdfTemplate) {\n                    entry._crossReference = crossReference;\n                    entry._updatePendingResource(crossReference);\n                }\n                else if (entry.resource instanceof _PdfBaseStream) {\n                    var reference = void 0;\n                    if (entry.resource._reference) {\n                        reference = entry.resource._reference;\n                    }\n                    else {\n                        reference = crossReference._getNextReference();\n                        entry.resource._reference = reference;\n                    }\n                    if (!crossReference._cacheMap.has(reference) && entry.resource) {\n                        crossReference._cacheMap.set(reference, entry.resource);\n                    }\n                    entry.source.update(entry.key.name, reference);\n                    this._resources.set(reference, entry.key);\n                }\n                else if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                else if (entry.resource instanceof PdfFont) {\n                    this._updateFontResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var reference;\n        if (image._reference) {\n            reference = image._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            image._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(reference, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n                if (image._maskStream && image._maskStream.dictionary) {\n                    var ref = void 0;\n                    if (image._maskReference) {\n                        ref = image._maskReference;\n                    }\n                    else {\n                        ref = crossReference._getNextReference();\n                        image._maskReference = ref;\n                    }\n                    crossReference._cacheMap.set(ref, image._maskStream);\n                    image._maskStream.dictionary._updated = true;\n                    image._imageStream.dictionary.set('SMask', ref);\n                }\n            }\n        }\n        source.update(keyName.name, reference);\n        this._resources.set(reference, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._updateFontResource = function (font, keyName, source, crossReference) {\n        var reference;\n        if (font._reference) {\n            reference = font._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            font._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (font._dictionary) {\n                crossReference._cacheMap.set(reference, font._dictionary);\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    crossReference._cacheMap.set(reference, internal._fontDictionary);\n                }\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (path, first, second) {\n        var result = this._setPenBrush(first, second);\n        if (result.pen || result.brush) {\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(result.pen, result.brush, path.fillMode, false);\n        }\n    };\n    /**\n     * Draws a rounded rectangle on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} width The width of the rounded rectangle.\n     * @param {number} height The height of the rounded rectangle.\n     * @param {number} radius The radius of the rounded corners of the rectangle.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the rectangle.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the rectangle.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * // Draw a rounded rectangle on the page graphics\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new PdfPath();\n        if (radius === 0) {\n            path.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this.drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path.closeFigure();\n            this.drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._constructPiePath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n            this._sw._beginPath(point[0], point[1]);\n            for (var i = 0; i < points.length; i = i + 8) {\n                point = [points[Number.parseInt(i.toString(), 10)],\n                    points[i + 1],\n                    points[i + 2],\n                    points[i + 3],\n                    points[i + 4],\n                    points[i + 5],\n                    points[i + 6],\n                    points[i + 7]];\n                this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n            }\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        var setPattern = [];\n        for (var i = 0; i < pattern.length; ++i) {\n            setPattern[i] = pattern[i] * pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(setPattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value The string to be drawn.\n     * @param {PdfFont} font The font used to draw the string.\n     * @param {number[]} bounds An array specifying the bounds [x, y, width, height] where the string will be drawn.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the string.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the string.\n     * @param {PdfStringFormat} format The format that specifies text layout information such as alignment, line spacing, and trimming.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 12);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        if (!format) {\n            format = new PdfStringFormat();\n        }\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & PathPointType.closePath) === PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        var hasResource = false;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n            }\n            if (typeof sourceDictionary !== 'undefined' && sourceDictionary !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (_this._crossReference) {\n                        if (key !== null && typeof key !== 'undefined') {\n                            var dictionary = _this._crossReference._fetch(key);\n                            if (dictionary && ((font instanceof PdfStandardFont && dictionary === font._dictionary) ||\n                                (font instanceof PdfTrueTypeFont && dictionary === font._fontInternal._fontDictionary))) {\n                                keyName = value;\n                                ref = key;\n                                hasResource = true;\n                            }\n                        }\n                    }\n                    else if (font._reference && font._reference === key) {\n                        keyName = value;\n                        ref = key;\n                        hasResource = true;\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                if (font._reference) {\n                    ref = font._reference;\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (this._crossReference) {\n                    ref = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': font, 'key': keyName, 'source': sourceDictionary });\n                }\n            }\n            if (ref && this._crossReference) {\n                if (!font._reference) {\n                    font._reference = ref;\n                }\n                if (font._dictionary) {\n                    this._crossReference._cacheMap.set(ref, font._dictionary);\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (font instanceof PdfTrueTypeFont) {\n                    var internal = font._fontInternal;\n                    if (internal && internal._fontDictionary) {\n                        this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                    }\n                    sourceDictionary.update(keyName.name, ref);\n                }\n            }\n            if (!hasResource) {\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._setPenBrush = function (first, second) {\n        var pen;\n        var brush;\n        if (first) {\n            if (first instanceof PdfPen) {\n                pen = first;\n            }\n            else {\n                brush = first;\n            }\n        }\n        if (second && second instanceof PdfBrush) {\n            brush = second;\n        }\n        this._stateControl(pen, brush, null);\n        return { pen: pen, brush: brush };\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            if (font && font instanceof PdfTrueTypeFont && font._fontInternal &&\n                font._fontInternal instanceof _UnicodeTrueTypeFont && font.isItalic) {\n                if (!font._fontInternal._ttfMetrics._isItalic) {\n                    state = this.save();\n                    this._isItalic = true;\n                }\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            if (this._isItalic) {\n                this.translateTransform(layoutRectangle[0] + font.size / 5, layoutRectangle[1] - shift + verticalAlignShift);\n                this._skewTransform(0, -11);\n            }\n            else {\n                matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                    verticalAlignShift);\n                this._sw._modifyTM(matrix);\n            }\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            if (this._isItalic) {\n                this._sw._startNextLine(0, 0);\n                this._sw._setLeading(+height);\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            if (this._isItalic) {\n                this.restore(state);\n            }\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex <= pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        else {\n            page = this._crossReference._document.addPage();\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        var setLineWidth = false;\n        if (pen && brush) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (font && font instanceof PdfTrueTypeFont && (font.isUnicode || (font._style & PdfFontStyle.bold) !== 0)) {\n            var fontName = font._fontInternal._metrics._postScriptName;\n            var isBoldFont = false;\n            if (fontName && fontName.toLocaleLowerCase().includes('bold')) {\n                isBoldFont = true;\n            }\n            if (font._fontInternal && font._fontInternal._metrics && font._fontInternal._metrics._isBold !==\n                font.isBold && font.isBold === true && !isBoldFont) {\n                if (!pen && brush) {\n                    pen = new PdfPen(brush._color, 1);\n                }\n                tm = _TextRenderingMode.fillStroke;\n                setLineWidth = true;\n            }\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n        if (font && setLineWidth) {\n            this._sw._setLineWidth(font.size / 30);\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && format.wordSpacing > 0);\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format !== null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draws a line on the page graphics.\n     *\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the line.\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a line on the page graphics\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply scale transform\n     * graphics.scaleTransform(0.5, 0.5);\n     * // Draw a string with the scaled transformation\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply translate transform\n     * graphics.translateTransform(100, 100);\n     * // Draw a string with the translation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply rotate transform\n     * graphics.rotateTransform(-90);\n     * // Draw a string with the rotation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region, specified as [x, y, width, height].\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set clipping region\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * // Draw a string within the clipping region\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Sets the transparency for the graphics.\n     *\n     * @param {number} stroke The transparency value for strokes.\n     * @param {number} fill The transparency value for fills.\n     * @param {PdfBlendMode} mode The blend mode to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set transparency\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * // Draw the string\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary) {\n            if (dictionary.has('CA')) {\n                stroke = dictionary.get('CA');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('BM')) {\n                mode = _mapBlendMode(dictionary.get('BM'));\n            }\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    PdfGraphics.prototype._clipTranslateMargins = function (clipBounds) {\n        this._clipBounds = clipBounds;\n        this._sw._writeComment('Clip margins.');\n        this._sw._appendRectangle(clipBounds[0], clipBounds[1], clipBounds[2], clipBounds[3]);\n        this._sw._closePath();\n        this._sw._clipPath(false);\n        this._sw._writeComment('Translate co-ordinate system.');\n        this.translateTransform(clipBounds[0], clipBounds[1]);\n    };\n    PdfGraphics.prototype._skewTransform = function (angleX, angleY) {\n        var matrix = new _PdfTransformationMatrix();\n        this._getSkewTransform(angleX, angleY, matrix);\n        this._sw._modifyCtm(matrix);\n        matrix._multiply(matrix);\n    };\n    PdfGraphics.prototype._getSkewTransform = function (angleX, angleY, input) {\n        input._skew(-angleX, -angleY);\n        return input;\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    _PdfTransformationMatrix.prototype._skew = function (angleX, angleY) {\n        var tanA = Math.tan(this._degreeToRadians(angleX));\n        var tanB = Math.tan(this._degreeToRadians(angleY));\n        var skew = new _Matrix(1, tanA, tanB, 1, 0, 0);\n        this._matrix._multiply(skew);\n    };\n    _PdfTransformationMatrix.prototype._degreeToRadians = function (degreesX) {\n        var degreeRadFactor = Math.PI / 180;\n        return degreeRadFactor * degreesX;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics state\n * let state: PdfGraphicsState = graphics.save();\n * // Set graphics translate transform\n * graphics.translateTransform(100, 100);\n * // Draw the string\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * // Restore the graphics state\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary && dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary && annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup && popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                if (dictionary.has(key)) {\n                    this._writeArray(writer, dictionary.getArray(key), dictionary);\n                }\n                else {\n                    this._writeArray(writer, primitive, dictionary);\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = primitive.getString(true);\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    data = data.replace(/</g, '&lt;');\n                    data = data.replace(/>/g, '&gt;');\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        var bytes;\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                    break;\n                case 'TextMarkupContent':\n                    bytes = _stringToBytes(primitive);\n                    this._writeAttributeString(writer, key.toLowerCase(), _byteArrayToHexString(bytes));\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data, true);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data, true), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                if (annotations._comments && annotations._comments.length > 0) {\n                                    annotations._comments = [];\n                                }\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _bytesToString, _hexStringToByteArray, _decode, _isNullOrUndefined } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._isImport = false;\n        _this._isColorSpace = false;\n        _this._isDuplicate = false;\n        _this._isGroupingSupport = false;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            _this._jsonData = _stringToBytes(key, true, false, _this._jsonData);\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                _this._jsonData = _stringToBytes(value, true, false, _this._jsonData);\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _stringToBytes(i.toString(), true, false, []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            var count = 0;\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    if (count !== 0) {\n                        this._jsonData.push(this._comma);\n                    }\n                    count++;\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _stringToBytes(this._convertToJson(this._table), true, false, this._jsonData);\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary && dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        var rcValue;\n        var bytes;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (_isNullOrUndefined(value)) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive) {\n                    var bytes_1 = _stringToBytes(primitive);\n                    var styleTable = new Map();\n                    styleTable.set('unicodeData', _byteArrayToHexString(bytes_1));\n                    this._table.set(key, this._convertToJson(styleTable));\n                }\n                break;\n            case 'RC':\n                rcValue = dictionary.get('RC');\n                if (typeof rcValue === 'string' && rcValue.includes('<body')) {\n                    var index = rcValue.indexOf('<body');\n                    if (index > 0) {\n                        rcValue = rcValue.substring(index);\n                    }\n                    this._writeAttributeString('contents-richtext', rcValue);\n                }\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n                break;\n            case 'TextMarkupContent':\n                bytes = _stringToBytes(primitive);\n                this._writeAttributeString(key, _byteArrayToHexString(bytes));\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                if (typeof primitive === 'string' && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (_isNullOrUndefined(vertices) && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('area', array[0]);\n                }\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('distance', array[0]);\n                }\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('xformat', array[0]);\n                }\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('tformat', array[0]);\n                }\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('vformat', array[0]);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails) {\n            if (measurementDetails.has('C')) {\n                details.set('c', this._getValue(measurementDetails.get('C'), true));\n            }\n            if (measurementDetails.has('F')) {\n                details.set('f', this._getValue(measurementDetails.get('F'), true));\n            }\n            if (measurementDetails.has('D')) {\n                details.set('d', this._getValue(measurementDetails.get('D'), true));\n            }\n            if (measurementDetails.has('RD')) {\n                details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n            }\n            if (measurementDetails.has('U')) {\n                details.set('u', this._getValue(measurementDetails.get('U'), true));\n            }\n            if (measurementDetails.has('RT')) {\n                details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n            }\n            if (measurementDetails.has('SS')) {\n                details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n            }\n            if (measurementDetails.has('FD')) {\n                details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n            }\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && _this._isGroupingSupport))) {\n                    _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n                }\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array, isColorSpace, isNewReference) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        if (isNewReference === void 0) { isNewReference = false; }\n        if (value instanceof _PdfName) {\n            value.name = this._getValidString(value.name);\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var list = [];\n            if (key === 'ColorSpace' || isColorSpace) {\n                this._writeArray(list, value, dictionary, true);\n            }\n            else {\n                this._writeArray(list, value, dictionary);\n            }\n            this._isColorSpace = false;\n            this._writeTable('array', this._convertToJsonArray(list), table, key, array);\n        }\n        else if (typeof value === 'string') {\n            var isTabSpace = false;\n            if (value.indexOf('\\t') !== -1) {\n                isTabSpace = true;\n            }\n            if (key !== 'AllowedInteractions') {\n                value = this._getValidString(value);\n            }\n            if (this._isColorSpace || key === 'AllowedInteractions' || this._hasUnicodeCharacters(value) || isTabSpace) {\n                var bytes = _stringToBytes(value);\n                this._writeTable('unicodeData', _byteArrayToHexString(bytes), table, key, array);\n                isTabSpace = false;\n            }\n            else {\n                this._writeTable('string', value, table, key, array);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = void 0;\n            var baseStream = value; // eslint-disable-line\n            var isImageStream = false;\n            if (streamDictionary.has('Subtype') && streamDictionary.get('Subtype').name === 'Image') {\n                isImageStream = true;\n            }\n            if (isNewReference) {\n                if (value.dictionary.has('Filter') && value.dictionary.get('Filter').name === 'DCTDecode') {\n                    data = value.getString(true);\n                }\n                else {\n                    data = value.getString();\n                    var byteArray = [];\n                    for (var i = 0; i < data.length; i++) {\n                        byteArray.push(data.charCodeAt(i));\n                    }\n                    var dataArray = new Uint8Array(byteArray);\n                    var sw = new CompressedStreamWriter();\n                    sw.write(dataArray, 0, dataArray.length);\n                    sw.close();\n                    value = sw.getCompressedString;\n                    var buffer = [];\n                    for (var i = 0; i < value.length; i++) {\n                        buffer.push(value.charCodeAt(i) & 0xff);\n                    }\n                    data = _byteArrayToHexString(new Uint8Array(buffer));\n                }\n                if (!streamDictionary.has('Filter')) {\n                    streamDictionary.update('Filter', _PdfName.get('FlateDecode'));\n                }\n                if (!streamDictionary.has('Length') && data && data !== '') {\n                    streamDictionary.update('Length', baseStream.length);\n                }\n            }\n            if (!isNewReference) {\n                if (isImageStream && baseStream.stream) {\n                    if (baseStream.stream instanceof _PdfStream) {\n                        if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                            var streamLength = baseStream.stream.end - baseStream.stream.start;\n                            baseStream.getBytes(streamLength);\n                            var bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                            data = baseStream.getString(true, bytes);\n                        }\n                        else {\n                            var stream = baseStream.stream;\n                            data = baseStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                        }\n                    }\n                    else if (baseStream.stream.stream) {\n                        var flateStream = baseStream.stream; // eslint-disable-line\n                        if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                            var streamLength = flateStream.stream.end - flateStream.stream.start;\n                            flateStream.getBytes(streamLength);\n                            var bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                            data = flateStream.getString(true, bytes);\n                        }\n                        else if (flateStream.stream instanceof _PdfStream) {\n                            var stream = flateStream.stream;\n                            data = flateStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                        }\n                    }\n                }\n                else {\n                    data = value.getString(true);\n                }\n                if (!streamDictionary.has('Length') && data && data !== '') {\n                    streamDictionary.update('Length', value.length);\n                }\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key, array, isColorSpace, value._isNew);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary, isColorSpace) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        for (var i = 0; i < value.length; i++) {\n            if (isColorSpace && typeof value[Number.parseInt(i.toString(), 10)] === 'string') {\n                this._isColorSpace = true;\n            }\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array, isColorSpace);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += \"\\\"\" + key + \"\\\":\" + value;\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._hasUnicodeCharacters = function (value) {\n        var unicodeRegex = /[^\\x00-\\x7F]/; // eslint-disable-line\n        return value.split('').some(function (char) { return unicodeRegex.exec(char) !== null; }); // eslint-disable-line\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data, true);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        this._isImport = true;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            if (annotations_1._comments && annotations_1._comments.length > 0) {\n                                                                annotations_1._comments = [];\n                                                            }\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'contents-richtext':\n                    if (typeof value === 'string') {\n                        _this._addString(dictionary, 'RC', value);\n                    }\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    if (value) {\n                        if (value && typeof value === 'string') {\n                            _this._addString(dictionary, 'AllowedInteractions', value);\n                        }\n                        else {\n                            var interactionKeys = Object.keys(value);\n                            if (interactionKeys && interactionKeys.length > 0 && interactionKeys.indexOf('unicodeData') !== -1) {\n                                var convertString = JSON.stringify(value['unicodeData']);\n                                convertString = convertString.substring(1, convertString.length - 1);\n                                value = _bytesToString(_hexStringToByteArray(convertString, false), true);\n                                _this._addString(dictionary, 'AllowedInteractions', value);\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, typeof value === 'string' ? value : JSON.stringify(value));\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            if (dictionary.size > 0) {\n                value = this._crossReference._getNextReference();\n                dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n                this._crossReference._cacheMap.set(value, dictionary);\n            }\n            else {\n                value = new _PdfDictionary(this._crossReference);\n            }\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else if (keys.indexOf('unicodeData') !== -1) {\n            value = _bytesToString(_hexStringToByteArray(element.unicodeData, false), true);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            if (this._crossReference) {\n                this._parseStreamElements(stream, element);\n            }\n            else {\n                stream._pendingResources = JSON.stringify(element);\n            }\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStreamElements = function (stream, element) {\n        if (typeof element === 'undefined' && stream._pendingResources) {\n            element = JSON.parse(stream._pendingResources);\n        }\n        if (element) {\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage || (this._isImport && stream._isCompress)) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n        }\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\nimport { _JsonDocument } from './../import-export/json-document';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._isExported = false;\n        this._isResourceExport = false;\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n                this._templateOriginalSize = this._size;\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            if (typeof value !== 'undefined') {\n                this._size = [value[2], value[3]];\n                this._content = new _PdfContentStream([]);\n                this._content.dictionary._crossReference = this._crossReference;\n                this._initialize();\n                this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n            }\n            else {\n                this._isReadOnly = true;\n            }\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template. (Read only)\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        /**\n         * Get the size of the PDF template. (Read only)\n         *\n         * @returns {number[]} Template width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array.\n         * let size: number[] = template.size;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"_originalSize\", {\n        /**\n         * Get the original size of the PDF template. (Read only)\n         *\n         * Remarks: The `_originalSize` property is internal and provides access to the original dimensions of the PDF template.\n         *\n         * @returns {number[]} Template original width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array\n         * let size: number[] = template._originalSize;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._templateOriginalSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    PdfTemplate.prototype._exportStream = function (dictionary, crossReference) {\n        var jsonDocument = new _JsonDocument();\n        jsonDocument._crossReference = crossReference;\n        jsonDocument._isAnnotationExport = true;\n        var resourceTable = new Map();\n        jsonDocument._writeObject(resourceTable, dictionary.get('N'), dictionary, 'normal');\n        this._appearance = jsonDocument._convertToJson(resourceTable);\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._importStream = function (hasCrossReference, isResourceExport) {\n        var jsonDocument = new _JsonDocument();\n        if (hasCrossReference) {\n            jsonDocument._crossReference = this._crossReference;\n        }\n        var json = JSON.parse(this._appearance); // eslint-disable-line    \n        if (json) {\n            var entryKey = isResourceExport ? 'resources' : 'normal'; // eslint-disable-line\n            var entry = json[entryKey]; // eslint-disable-line    \n            if (entry) {\n                if (isResourceExport) {\n                    var resourceDictionary = jsonDocument._parseDictionary(entry['dict']);\n                    if (hasCrossReference) {\n                        this._content.dictionary.update('Resources', resourceDictionary);\n                    }\n                }\n                else {\n                    this._content = jsonDocument._parseStream(entry['stream']);\n                    if (hasCrossReference) {\n                        this._content.dictionary._crossReference = this._crossReference;\n                        this._content.dictionary._updated = true;\n                    }\n                }\n            }\n        }\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._updatePendingResource = function (crossReference) {\n        if (this._content._pendingResources && this._content._pendingResources !== '') {\n            var jsonDocument = new _JsonDocument();\n            jsonDocument._crossReference = crossReference;\n            jsonDocument._parseStreamElements(this._content);\n            this._content._pendingResources = '';\n            jsonDocument._dispose();\n        }\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { _obtainDestination } from './utils';\n/**\n * Represents base class for all action types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the GoTo action to the mouse enter property of the button field\n * let pdfAction: PdfAction = field.actions.mouseEnter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfAction = /** @class */ (function () {\n    function PdfAction() {\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        /**\n         * Get the next action to be performed after the action represented by this instance.\n         *\n         * @returns {PdfAction} The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * // Create a PdfGoToAction for navigating to the specified page.\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._next;\n        },\n        /**\n         * Set the next action to be performed after the action represented by this instance.\n         *\n         * @param {PdfAction} value The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the third page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._next = value;\n            var reference = this._page._crossReference._getNextReference();\n            this._page._crossReference._cacheMap.set(reference, value._dictionary);\n            value._dictionary.objId = reference.toString();\n            this._dictionary.update('Next', reference);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n/**\n * Represents an action which goes to a destination in the current document.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Set the goto action to the button\n * field.actions.mouseEnter = gotoAction;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfGoToAction = /** @class */ (function (_super) {\n    __extends(PdfGoToAction, _super);\n    function PdfGoToAction(arg) {\n        var _this = _super.call(this) || this;\n        if (arg instanceof PdfDestination) {\n            _this._destination = arg;\n            _this._page = arg.page;\n        }\n        else {\n            _this._page = arg;\n            _this._destination = new PdfDestination(arg, [0, 0]);\n        }\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', new _PdfName('Action'));\n        _this._dictionary.update('S', new _PdfName('GoTo'));\n        return _this;\n    }\n    Object.defineProperty(PdfGoToAction.prototype, \"destination\", {\n        /**\n         * Get the destination to be navigated.\n         *\n         * @returns {PdfDestination} The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter.destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Set the destination to be navigated.\n         *\n         * @param {PdfDestination} value The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the goto action to the button\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._destination = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGoToAction;\n}(PdfAction));\nexport { PdfGoToAction };\n/**\n * Represents actions to be performed as response to field events.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the pdf field actions\n * let fieldActions: PdfFieldActions = field.actions;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfFieldActions = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfFieldActions` class.\n     *\n     * @private\n     * @param {PdfField} field field items.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access button field\n     * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n     * // Access the second page\n     * let secondPage: PdfPage = document.getPage(2);\n     * // Create a PdfDestination for the specified page\n     * let destination: PdfDestination = new PdfDestination(secondPage)\n     * // Creates a new PdfGoToAction with the specified destination\n     * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n     * // Set the goto action to the button\n     * field.actions.mouseEnter = gotoAction;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfFieldActions(field) {\n        this._field = field;\n    }\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseEnter\", {\n        /**\n         * Get the action to be performed when the mouse cursor enters the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse enters the field area\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseEnter) {\n                this._mouseEnter = this._getPdfAction('E');\n            }\n            return this._mouseEnter;\n        },\n        /**\n         * Set the action to be performed when the mouse cursor enters the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseEnter = value;\n                this._updateAction(this._mouseEnter, 'E');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseLeave\", {\n        /**\n         * Get the action to be performed when the cursor exits the fields area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse leave the field area.\n         * let action: PdfAction = field.actions.mouseLeave;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseLeave) {\n                this._mouseLeave = this._getPdfAction('X');\n            }\n            return this._mouseLeave;\n        },\n        /**\n         * Set the action to be performed when the cursor exits the fields area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse leave property of the button field\n         * field.actions.mouseLeave = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseLeave = value;\n                this._updateAction(this._mouseLeave, 'X');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseUp\", {\n        /**\n         * Get the action to be performed when the mouse button is released inside the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse up the field area.\n         * let action: PdfAction = field.actions.mouseUp;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseUp) {\n                this._mouseUp = this._getPdfAction('U');\n            }\n            return this._mouseUp;\n        },\n        /**\n         * Set the action to be performed when the mouse button is released inside the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse up property of the button field\n         * field.actions.mouseUp = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseUp = value;\n                this._updateAction(this._mouseUp, 'U');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseDown\", {\n        /**\n         * Get the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse down the field area.\n         * let action: PdfAction = field.actions.mouseDown;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseDown) {\n                this._mouseDown = this._getPdfAction('D');\n            }\n            return this._mouseDown;\n        },\n        /**\n         * Set the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse down property of the button field\n         * field.actions.mouseDown = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseDown = value;\n                this._updateAction(this._mouseDown, 'D');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"gotFocus\", {\n        /**\n         * Get the action to be performed when the field receives the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the got focus the field area.\n         * let action: PdfAction = field.actions.gotFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._gotFocus) {\n                this._gotFocus = this._getPdfAction('Fo');\n            }\n            return this._gotFocus;\n        },\n        /**\n         * Set the action to be performed when the field receives the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the got focus property of the button field\n         * field.actions.gotFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._gotFocus = value;\n                this._updateAction(this._gotFocus, 'Fo');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"lostFocus\", {\n        /**\n         * Get the action to be performed when the field loses the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the lost focus the field area.\n         * let action: PdfAction = field.actions.lostFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._lostFocus) {\n                this._lostFocus = this._getPdfAction('Bl');\n            }\n            return this._lostFocus;\n        },\n        /**\n         * Set the action to be performed when the field loses the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the lost focus property of the button field\n         * field.actions.lostFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._lostFocus = value;\n                this._updateAction(this._lostFocus, 'Bl');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFieldActions.prototype._updateAction = function (action, key) {\n        var widget;\n        if (this._field._kidsCount > 0) {\n            widget = this._field.itemAt(0);\n            if (widget && widget._dictionary && action instanceof PdfGoToAction) {\n                var dictionary = new _PdfDictionary();\n                var page = action._page;\n                var destination = action.destination;\n                if (destination._destinationMode === PdfDestinationMode.location) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('XYZ'), destination.location[0], page.size[1], destination.zoom]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitR) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitR'), 0, 0, 0, 0]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitH) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitH'), page.size[1]]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitToPage) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('Fit')]);\n                }\n                dictionary.set(key, action._dictionary);\n                dictionary._updated = true;\n                widget._dictionary.update('AA', dictionary);\n            }\n        }\n    };\n    PdfFieldActions.prototype._getPdfAction = function (key) {\n        var result;\n        var widget = this._field.itemAt(0);\n        if (widget && widget._dictionary && widget._dictionary.has('AA')) {\n            var action = widget._dictionary.get('AA');\n            if (action && action.has(key)) {\n                var dictionary = action.get(key);\n                if (dictionary && dictionary.has('S')) {\n                    var type = dictionary.get('S');\n                    if (type && type.name === 'GoTo' && dictionary.has('D')) {\n                        if (!dictionary._crossReference) {\n                            dictionary._crossReference = widget._crossReference;\n                        }\n                        result = new PdfGoToAction(_obtainDestination(dictionary, 'D'));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return PdfFieldActions;\n}());\nexport { PdfFieldActions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails, _isNullOrUndefined, _stringToPdfString, _mapFont } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\nimport { PdfFieldActions } from '../pdf-action';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._enableGrouping = false;\n        this._isDuplicatePage = false;\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._isTransparentBorderColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isUpdating = false;\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary && this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color && _isNullOrUndefined(value)) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var annots = void 0;\n                if (this.page._pageDictionary.has('Annots')) {\n                    annots = this.page._pageDictionary.get('Annots');\n                }\n                if (this._kids && this._kids.length > 0) {\n                    for (var i = 0; i < this._kids.length; i++) {\n                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                        if (reference) {\n                            if (this.page._pageDictionary.has('Annots')) {\n                                if (annots) {\n                                    var index1 = annots.indexOf(reference);\n                                    if (index1 !== -1) {\n                                        return index1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this._dictionary && this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                    if (this._ref) {\n                        if (annots) {\n                            var index1 = annots.indexOf(this._ref);\n                            if (index1 !== -1) {\n                                return index1;\n                            }\n                        }\n                    }\n                }\n                return -1;\n            }\n            else {\n                return this._tabIndex;\n            }\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            if (this._isLoaded) {\n                var page = this.page;\n                if (page &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual ||\n                        (this.form && this.form._tabOrder === PdfFormFieldsTabOrder.manual))) {\n                    if (page._pageDictionary.has('Annots')) {\n                        var annots = page._pageDictionary.get('Annots');\n                        var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                        page._annotations = annotationCollection;\n                        var index = annots.indexOf(this._ref);\n                        if (index < 0) {\n                            index = this._annotationIndex;\n                        }\n                        var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                        page._pageDictionary.update('Annots', annotations);\n                        page._pageDictionary._updated = true;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary && dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._parseBorderColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict.has('BC')) {\n                    var bgArray = mkDict.getArray('BC');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && _isNullOrUndefined(value) && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary && this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    PdfField.prototype._updateBorderColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.borderColor = value;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BC') || _parseColor(mkDictionary.getArray('BC')) !== value) {\n                    mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary && this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element !== null && typeof element !== 'undefined' && element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary && this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary && dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource && resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n                this._font._reference = reference;\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            var diameter = bounds[2];\n            if (this._enableGrouping) {\n                diameter = Math.min(bounds[2], bounds[3]);\n            }\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    diameter - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, (this._enableGrouping ?\n                Math.min(bounds[2], bounds[3]) : bounds[2]) - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen || parameter.backBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled || parameter.backBrush) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen || parameter.backBrush) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen || parameter.shadowBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        if (this._kids.indexOf(item._ref) === -1) {\n            var currentIndex = this._kidsCount;\n            item._index = currentIndex;\n            this._kids.push(item._ref);\n            this._parsedItems.set(currentIndex, item);\n        }\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[1], 0);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(0, graphics._size[0]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics.drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary && dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary && this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = _stringToPdfString(text);\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = _stringToPdfString(text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._createItem(bounds);\n        this._initializeFont(this._defaultFont);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        var pdfFont;\n        var stringFormat;\n        var enableGrouping = false;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        if (this.maxLength && text.length > this.maxLength) {\n            text = text.substring(0, this.maxLength);\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping && widget.font !== null && typeof widget.font !== 'undefined') {\n            pdfFont = widget.font;\n            if (pdfFont.size === 0) {\n                pdfFont._size = 8;\n                pdfFont._fontMetrics._size = 0;\n            }\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (enableGrouping && widget.textAlignment !== null && typeof widget.textAlignment !== 'undefined') {\n            stringFormat = stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        if (enableGrouping) {\n            this._drawTextBox(graphics, parameter, text, pdfFont, stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        else {\n            this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0 && this.borderColor) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        var stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        this._drawTextBox(g, parameter, text, font, stringFormat, multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n            var rotate = this.rotate;\n            if (rotate !== null && typeof rotate !== 'undefined' && rotate === 90) {\n                rectangle[1] = rectangle[2] / 2;\n            }\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                            parameter.stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"actions\", {\n        /**\n         * Gets the actions of the field. [Read-Only]\n         *\n         * @returns {PdfFieldActions} The actions.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._actions) {\n                this._actions = new PdfFieldActions(this);\n            }\n            return this._actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary && fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var text;\n        var font;\n        var stringFormat;\n        var enableGrouping = false;\n        var isSizeZero = false;\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping) {\n            if (widget._mkDictionary && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                text = widget._mkDictionary.get('CA');\n            }\n            else {\n                text = '';\n            }\n            if (typeof widget.font !== 'undefined' && widget.font.size !== null && widget.font.size !== 0) {\n                font = widget.font;\n            }\n            stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (this._isLoaded && widget instanceof PdfWidgetAnnotation &&\n            widget !== null && typeof widget !== 'undefined' && widget._defaultAppearance) {\n            var fontName = widget._defaultAppearance.fontName;\n            if (fontName === null || typeof fontName === 'undefined') {\n                fontName = 'Helvetica';\n            }\n            var fontSize = widget._defaultAppearance.fontSize;\n            if (fontSize === null || typeof fontSize === 'undefined') {\n                fontSize = this._defaultFont.size;\n            }\n            else if (fontSize === 0) {\n                isSizeZero = true;\n            }\n            var previousFont = void 0;\n            var currentFont = void 0;\n            var font_1;\n            this._stringFormat = new PdfStringFormat();\n            this._stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n            this._stringFormat.alignment = PdfTextAlignment.center;\n            if (fontSize !== null && typeof fontSize !== 'undefined' && fontName) {\n                font_1 = _mapFont(fontName, fontSize, PdfFontStyle.regular, widget);\n            }\n            if (font_1 !== null && typeof font_1 !== 'undefined') {\n                currentFont = font_1;\n            }\n            else {\n                currentFont = this._defaultFont;\n            }\n            var textWidth = currentFont.measureString(this.text, this._stringFormat);\n            if (isSizeZero && currentFont && currentFont instanceof PdfStandardFont) {\n                if (this._isLoaded && !widget._dictionary.has('AP')) {\n                    var width = widget.bounds.width - 8 * border.width;\n                    var height = widget.bounds.height - 8 * border.width;\n                    while (textWidth[0] < width || textWidth[1] < height) {\n                        previousFont = currentFont;\n                        currentFont = new PdfStandardFont(currentFont.fontFamily, currentFont._size + 1);\n                        textWidth = currentFont.measureString(this.text, this._stringFormat);\n                        if (textWidth[0] > width || textWidth[1] > height) {\n                            currentFont = previousFont;\n                            break;\n                        }\n                    }\n                    this._font = currentFont;\n                }\n            }\n        }\n        if (enableGrouping) {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, text, font, stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, text, font, stringFormat);\n            }\n        }\n        else {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n            if (this._isLoaded) {\n                this._setAppearance = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, item);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawCheckBox(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        }\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item, itemValue) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            normalDictionary.update(itemValue, normalCheckedReference);\n        }\n        else {\n            normalDictionary.update('Yes', normalCheckedReference);\n        }\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            pressedDictionary.update(itemValue, pressCheckedReference);\n        }\n        else {\n            pressedDictionary.update('Yes', pressCheckedReference);\n        }\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(!this._isLoaded);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, item);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                if (!this._isDuplicatePage) {\n                    item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                }\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else if (!this._isDuplicatePage) {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawRadioButton(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        }\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        var actualValue = item.value;\n        if (!actualValue && item._enableGrouping) {\n            actualValue = 'check' + item._index;\n        }\n        normalDictionary.update(actualValue, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(actualValue, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary && this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary && this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary && this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var width = itemFont.measureString((selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var text = (selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1];\n                var textSize = itemFont.measureString(text);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont = new PdfStandardFont(fontFamily, i);\n                        var size = itemFont.measureString(text);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont = new PdfStandardFont(fontFamily, fontSize);\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            var itemsCount = this._kidsCount;\n            var count = options.length <= itemsCount ? options.length : itemsCount;\n            this._listValues = new Array(count);\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                if (Array.isArray(index) && index.length > 0) {\n                    index = index[0];\n                    this._selectedIndex = index;\n                }\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (_isNullOrUndefined(index) && this._listValues !== null && typeof this._listValues !== 'undefined') {\n                            var value = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                            if (Array.isArray(value)) {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value[1];\n                            }\n                            else {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (i === index) {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                                this._selectedIndex = i;\n                            }\n                            else {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            item._text = '';\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            if (item._enableGrouping && typeof item.rotate === 'undefined') {\n                parameter.rotationAngle = 0;\n            }\n            else {\n                parameter.rotationAngle = item.rotate;\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (_isNullOrUndefined(this._listValues) && this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (isFlatten || needAppearance) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics.drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            template = signatureTemplate;\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics.drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary && dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _isNullOrUndefined } from '../utils';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        if (_isNullOrUndefined(bounds)) {\n            this._bounds = bounds;\n        }\n        else {\n            this._bounds = [];\n        }\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap, _PdfColorSpace } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints, _updateBounds, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont, PdfCjkStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isTransparentColor = false;\n        this._isRotated = false;\n        this._isChanged = false;\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary && this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary && this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && this._dictionary && this._dictionary.has('Border') || (width || vRadius || hRadius)) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary !== null && this._dictionary && this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary && this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary && this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary && this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' && this.subject !== value) {\n                this._dictionary.update('Subj', value);\n                this._subject = value;\n                if (this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._isRotated = true;\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary && this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary) {\n            if (this._dictionary.has('Rotate')) {\n                angle = this._dictionary.get('Rotate');\n            }\n            else if (this._dictionary.has('Rotation')) {\n                angle = this._dictionary.get('Rotation');\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getMediaOrCropBox = function (page) {\n        var cropOrMediaBox;\n        if (page && page._pageDictionary && page._pageDictionary.has('MediaBox')) {\n            cropOrMediaBox = page._pageDictionary.get('MediaBox');\n        }\n        else if (page && page._pageDictionary && page._pageDictionary.has('CropBox')) {\n            cropOrMediaBox = page._pageDictionary.get('CropBox');\n        }\n        return cropOrMediaBox;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = 0;\n        if (_isNullOrUndefined(linePoints)) {\n            count = linePoints.length;\n        }\n        var x = [];\n        var y = [];\n        if (count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary && this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (this._page && box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) ||\n                                    (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics.drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._page.annotations.remove(this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this instanceof PdfLineAnnotation && this._dictionary && !this._dictionary.has('AP')) {\n            if (this._isLoaded) {\n                currentBounds = this._bounds;\n            }\n            else {\n                if (this instanceof PdfLineAnnotation && !this.measure) {\n                    currentBounds = _toRectangle([this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height]);\n                }\n                else {\n                    if (this._setAppearance && this.flatten && !this.measure) {\n                        currentBounds = this._bounds;\n                    }\n                    else {\n                        currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                            this.bounds.width, this.bounds.height]);\n                    }\n                }\n            }\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    if (this instanceof PdfLineAnnotation && !this.measure && !this._isLoaded) {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        if (this._setAppearance && this.flatten && !this.measure) {\n                            currentBounds = this.bounds;\n                        }\n                        else if (!this._isLoaded) {\n                            currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                        }\n                    }\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary && this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            if (!template._content.dictionary.has('Matrix') && template._content.dictionary.has('BBox')) {\n                var box = template._content.dictionary.getArray('BBox');\n                bounds.x -= box[0];\n                bounds.y += box[1];\n            }\n            if (this instanceof PdfAngleMeasurementAnnotation && !this._isLoaded) {\n                bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            graphics.drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._page.annotations.remove(this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            page.annotations.remove(annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (_isNullOrUndefined(points) && this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint;\n        if (_isNullOrUndefined(points)) {\n            previousPoint = points[points.length - 1];\n        }\n        else {\n            points = [];\n        }\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path.closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (_isNullOrUndefined(brush)) {\n            graphics.drawPath(pdfpath, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path.closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics.drawPath(pdfpath, pen);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        if (_isNullOrUndefined(points)) {\n            for (var i = 0; i < points.length; i++) {\n                var first = points[Number.parseInt(i.toString(), 10)];\n                var second = points[(i + 1) % points.length];\n                sum += (second[0] - first[0]) * (second[1] + first[1]);\n            }\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect !== null && typeof borderEffect !== 'undefined' && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new PdfPath();\n        if (_isNullOrUndefined(rectangle) && rectangle.length === 4) {\n            graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        }\n        var radius = 0;\n        if (_isNullOrUndefined(intensity)) {\n            radius = intensity * 4.25;\n        }\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new PdfPath();\n            graphicsPath.addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        if (typeof this.color === 'undefined') {\n            this._isTransparentColor = true;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(axisPoint, (angle + 60), count);\n                second = this._getAxisValue(axisPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = [fontStyle];\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        entry = entry.trim();\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new PdfPath();\n            path.addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        if (_page && _page.size) {\n            clientSize = _page.size;\n        }\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._page.annotations.remove(this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox = this._getCropOrMediaBox();\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    PdfAnnotation.prototype._getPoints = function (polygonPoints) {\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var points = polygonPoints;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            var modifiedPoints = [];\n            for (var i = 0; i < points.length; i++) {\n                modifiedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            for (var j = 0; j < modifiedPoints.length; j = j + 2) {\n                var x = modifiedPoints[Number.parseInt(j.toString(), 10)];\n                var y = modifiedPoints[j + 1];\n                if (cropOrMediaBox) {\n                    points[Number.parseInt(j.toString(), 10)] = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        points[j + 1] = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        points[j + 1] = y + cropOrMediaBox[1];\n                    }\n                }\n            }\n        }\n        return points;\n    };\n    PdfAnnotation.prototype._getCropOrMediaBox = function () {\n        var cropOrMediaBox;\n        if (this._page) {\n            cropOrMediaBox = this._page.cropBox;\n            if (!cropOrMediaBox || cropOrMediaBox.length === 0) {\n                cropOrMediaBox = this._page.mediaBox;\n            }\n        }\n        if (cropOrMediaBox && cropOrMediaBox[3] < 0) {\n            var y = cropOrMediaBox[1];\n            var height = cropOrMediaBox[3];\n            cropOrMediaBox[3] = y;\n            cropOrMediaBox[1] = height;\n        }\n        return cropOrMediaBox;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (linePoints !== null && typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        else {\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (cropOrMediaBox && cropOrMediaBox.length > 3 && this.linePoints.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                this._linePoints[0] += cropOrMediaBox[0];\n                this._linePoints[1] += cropOrMediaBox[1];\n                this._linePoints[2] += cropOrMediaBox[0];\n                this._linePoints[3] += cropOrMediaBox[1];\n                this._dictionary.update('L', this._linePoints);\n            }\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this.border.dash === null || typeof this.border.dash === 'undefined') {\n            this.border.dash = [];\n            if (this.border.style === PdfBorderStyle.dashed) {\n                this.border.dash = [3, 1];\n            }\n            else if (this.border.style === PdfBorderStyle.dot) {\n                this.border.dash = [1, 1];\n            }\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            var isUpdated = false;\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n                if (this._page._isNew && !(this._flatten || flatten)) {\n                    var boundsArray = this._obtainLineBounds();\n                    var bounds = {\n                        x: boundsArray[0],\n                        y: boundsArray[1], width: boundsArray[2], height: boundsArray[3]\n                    };\n                    this._bounds = bounds;\n                    var updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                    this._dictionary.update('Rect', updatedBounds);\n                    isUpdated = true;\n                }\n            }\n            else {\n                var bounds = this._obtainLineBounds();\n                var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n                if (this._page._isNew && this._page._pageSettings && this._setAppearance && !this.flatten) {\n                    rectangleBounds = _updateBounds(this, bounds);\n                }\n                this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n                this._dictionary.update('Rect', rectangleBounds);\n                isUpdated = true;\n            }\n            if (this._dictionary.has('Measure') && !isUpdated) {\n                var boundsArray = this._obtainLineBounds();\n                var bounds = { x: boundsArray[0],\n                    y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n                this._bounds = bounds;\n                var updatedBounds = void 0;\n                if (this._page && this._page._isNew && this._page._pageSettings && !this._setAppearance && !this.flatten) {\n                    updatedBounds = _updateBounds(this);\n                }\n                else {\n                    updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                }\n                this._dictionary.update('Rect', updatedBounds);\n                if (this.flatten && !this.measure && this._page && this._page.size && Array.isArray(this._page.size) &&\n                    this._page.size.length >= 2) {\n                    this._bounds = { x: boundsArray[0], y: this._page.size[1] - (boundsArray[1] + boundsArray[3]),\n                        width: boundsArray[2], height: boundsArray[3] };\n                }\n            }\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, 0);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        if (this.border.style === PdfBorderStyle.dashed) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dash;\n            parameter.borderPen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dot;\n            parameter.borderPen._dashPattern = [1, 1];\n        }\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, 0);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n            pen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n            pen._dashPattern = [1, 1];\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush;\n        if (this.innerColor) {\n            brush = new PdfBrush(this._innerColor);\n        }\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = 0;\n        if (this.caption.cap) {\n            lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        }\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            var leaderLineValue = this.leaderLine;\n            if (leaderLineValue === null || typeof leaderLineValue === 'undefined') {\n                this._leaderLine = 0;\n                leaderLineValue = 0;\n            }\n            if (leaderLineValue < 0) {\n                leaderLine = -(leaderLineValue);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = leaderLineValue;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n            if ((!this.measure) && (!this._dictionary.has('Measure'))) {\n                this._dictionary.update('Rect', [rectangleBounds[0], rectangleBounds[1], rectangleBounds[2], rectangleBounds[3]]);\n            }\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var color = this.color ? this.color : [0, 0, 0];\n        var borderPen = new PdfPen(color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            if (this._page._isNew && this._page._pageSettings) {\n                nativeRectangle1 = _updateBounds(this);\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        this._points = this._getPoints(this._points);\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            this._points.push(this._points[0]);\n            this._points.push(this._points[1]);\n        }\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new PdfPath();\n                    graphicsPath.addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (_isNullOrUndefined(this.borderEffect) && _isNullOrUndefined(this.borderEffect.intensity) &&\n                this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new PdfPath();\n                graphicsPath.addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page && this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    if (this.flatten) {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                    }\n                    else {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], -points_1[j + 1]]);\n                    }\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        else {\n            _this._points = [];\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        var color = this.color ? this.color : [0, 0, 0];\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.border.width > 0) {\n                borderPen = new PdfPen(color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics.drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && color) {\n                parameter.borderPen = new PdfPen(color, this.border.width);\n            }\n            if (color) {\n                parameter.foreBrush = new PdfBrush(color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics.drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds && (!this._setAppearance || (this._setAppearance && this.flatten))) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            this._points = this._getPoints(this._points);\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new PdfPath();\n        graphicspath.addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new PdfPath()).addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        graphics.drawPath(path, pen);\n        path.addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._isEnableControlPoints = true;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                var box = template._content.dictionary.getArray('BBox');\n                var angle = this._getRotationAngle();\n                if (box && angle !== null && typeof angle !== 'undefined') {\n                    template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten && !this.flattenPopups && this._dictionary.has('Popup')) {\n            var reference = this._dictionary.getRaw('Popup');\n            if (this._page._pageDictionary.has('Annots')) {\n                var annots = this._page._pageDictionary.getRaw('Annots'); // eslint-disable-line\n                if (annots && Array.isArray(annots) && annots.length > 0) {\n                    var index = annots.indexOf(reference);\n                    if (index >= 0) {\n                        this._page.annotations.removeAt(index);\n                    }\n                }\n            }\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    if (this._isEnableControlPoints) {\n                        var p1 = [];\n                        var p2 = [];\n                        var value = this._getControlPoints(point, p1, p2);\n                        p1 = value.controlP1;\n                        p2 = value.controlP2;\n                        var index = 0;\n                        for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                            pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                            index++;\n                        }\n                    }\n                    else {\n                        if (count % 3 === 1) {\n                            pathPointCont = count;\n                            pathPoints = new Array(pathPointCont);\n                            pathPoints = point;\n                        }\n                        else if (count % 3 === 0) {\n                            pathPointCont = count + 1;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            pathPointCont = count + 2;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                            pathPoints[pathPointCont - 2] = point[point.length - 2];\n                        }\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1.addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (this._isLoaded) {\n                            borderPen._lineCap = PdfLineCap.round;\n                        }\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            graphics.drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics.drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)].slice();\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0 && (!isEqual || this._isModified)) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n                _this._isModified = false;\n            });\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var containsCropOrMediaBox = false;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            containsCropOrMediaBox = true;\n            for (var i = 0; i < inkCollection.length; i++) {\n                var inkList = inkCollection[Number.parseInt(i.toString(), 10)];\n                var modifiedInkList = inkList;\n                for (var j = 0; j < inkList.length; j = j + 2) {\n                    var x = inkList[Number.parseInt(j.toString(), 10)];\n                    var y = inkList[j + 1];\n                    x = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        y = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        y = y + cropOrMediaBox[1];\n                    }\n                    modifiedInkList[Number.parseInt(j.toString(), 10)] = x;\n                    modifiedInkList[j + 1] = y;\n                    inkCollection[Number.parseInt(i.toString(), 10)] = modifiedInkList;\n                }\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._isEnableControlPoints || containsCropOrMediaBox) {\n            return this._getInkBoundsValue(inkCollection);\n        }\n        else {\n            if (!this._isFlatten) {\n                this._updateInkListCollection(inkCollection);\n            }\n            return [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n    };\n    PdfInkAnnotation.prototype._updateInkListCollection = function (inkCollection) {\n        for (var i = 0; i < inkCollection.length; i++) {\n            var inkList = [];\n            for (var j = 0; j < inkCollection[Number.parseInt(i.toString(), 10)].length; j++) {\n                inkList.push(inkCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]);\n            }\n            this._inkPointsCollection[Number.parseInt(i.toString(), 10)] = inkList;\n        }\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function (inkCollection) {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else if (inkCollection) {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints, inkCollection);\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints, inkCollection) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            else if (cropOrMediaBox) {\n                xMax = xMax - xMin;\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            else if (cropOrMediaBox) {\n                yMax = yMax - yMin;\n            }\n            if (cropOrMediaBox) {\n                xMin = xMin + cropOrMediaBox[0];\n                yMin = yMin + cropOrMediaBox[1];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        if (!this._isFlatten && inkCollection) {\n            this._updateInkListCollection(inkCollection);\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n                if (list.length === innerList.length) {\n                    list = [];\n                }\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._comment = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 9 5.0908 cm 7.74 12.616 m -7.74 12.616 l -8.274 12.616 -8.707 12.184 -8.707 11.649 c h f Q 0 G ';\n        _this._commentSecondHalf = '0 i 0.60 w 4 M 1 j 0 J [0 100]1 d  1 0 0 1 9 5.0908 cm 4.1 1.71 m -0.54 -2.29 l  -0.54 1.71 l  -5.5 1.71 l  -5.5 14.42 l  10.5 14.42 l  10.5 1.71 l  4.1 1.71 l -2.33 9.66 m 7.34 9.66 l 7.34 8.83 l -2.33 8.83 l -2.33 9.66 l -2.33 7.28 m 5.88 7.28 l 5.88 6.46 l -2.33 6.46 l -2.33 7.28 l 14.9 23.1235 m -14.9 23.1235 l -14.9 -20.345 l 14.9 -20.345 l 14.9 23.1235 l b ';\n        _this._note = '0 G 0 i 0.61 w 4 M 0 j 0 J []0 d  q 1 0 0 1 16.959 1.3672 cm 0 0 m 0 -0.434 -0.352 -0.785 -0.784 -0.785 c -14.911 -0.785 l -15.345 -0.785 -15.696 -0.434 -15.696 0 c -15.696 17.266 l -15.696 17.699 -15.345 18.051 -14.911 18.051 c -0.784 18.051 l -0.352 18.051 0 17.699 0 17.266 c h b Q q 1 0 0 1 4.4023 13.9243 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4019 11.2207 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 8.5176 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 5.8135 cm 0 0 m 9.418 0 l S Q ';\n        _this._help = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 12.1465 10.5137 cm -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c h f Q ';\n        _this._helpSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  1 0 0 1 12.1465 10.5137 cm 0 0 m -0.682 -0.756 -0.958 -1.472 -0.938 -2.302 c -0.938 -2.632 l -3.385 -2.632 l -3.403 -2.154 l -3.459 -1.216 -3.147 -0.259 -2.316 0.716 c -1.729 1.433 -1.251 2.022 -1.251 2.647 c -1.251 3.291 -1.674 3.715 -2.594 3.751 c -3.202 3.751 -3.937 3.531 -4.417 3.2 c -5.041 5.205 l -4.361 5.591 -3.274 5.959 -1.968 5.959 c 0.46 5.959 1.563 4.616 1.563 3.089 c 1.563 1.691 0.699 0.771 0 0 c -2.227 -6.863 m -2.245 -6.863 l -3.202 -6.863 -3.864 -6.146 -3.864 -5.189 c -3.864 -4.196 -3.182 -3.516 -2.227 -3.516 c -1.233 -3.516 -0.589 -4.196 -0.57 -5.189 c -0.57 -6.146 -1.233 -6.863 -2.227 -6.863 c -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c b ';\n        _this._insert = ' 0 i 0.59 w 4 M 0 j 0 J []0 d  1 0 0 1 8.5386 19.8545 cm 0 0 m -8.39 -19.719 l 8.388 -19.719 l h B ';\n        _this._key = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 6.5 12.6729 cm 0.001 5.138 m -2.543 5.138 -4.604 3.077 -4.604 0.534 c -4.604 -1.368 -3.449 -3.001 -1.802 -3.702 c -1.802 -4.712 l -0.795 -5.719 l -1.896 -6.82 l -0.677 -8.039 l -1.595 -8.958 l -0.602 -9.949 l -1.479 -10.829 l -0.085 -12.483 l 1.728 -10.931 l 1.728 -3.732 l 1.737 -3.728 1.75 -3.724 1.76 -3.721 c 3.429 -3.03 4.604 -1.385 4.604 0.534 c 4.604 3.077 2.542 5.138 0.001 5.138 c f Q ';\n        _this._keySecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._newParagraph = '1 0.819611 0 rg 0 G 0 i 0.58 w 4 M 0 j 0 J []0 d ';\n        _this._newParagraphSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._paragraph = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h f Q ';\n        _this._paragraphSecondHalf = '0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h S Q q 1 0 0 1 11.6787 2.6582 cm 0 0 m -1.141 0 l -1.227 0 -1.244 0.052 -1.227 0.139 c -0.656 1.157 -0.52 2.505 -0.52 3.317 c -0.52 3.594 l -2.833 3.783 -5.441 4.838 -5.441 8.309 c -5.441 10.778 -3.714 12.626 -0.57 13.024 c -0.535 13.508 -0.381 14.129 -0.242 14.389 c -0.207 14.44 -0.174 14.475 -0.104 14.475 c 1.088 14.475 l 1.156 14.475 1.191 14.458 1.175 14.372 c 1.105 14.095 0.881 13.127 0.881 12.402 c 0.881 9.431 0.932 7.324 0.95 4.06 c 0.95 2.298 0.708 0.813 0.189 0.07 c 0.155 0.034 0.103 0 0 0 c b Q ';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics.drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (this.opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this.opacity);\n        }\n        switch (this.icon) {\n            case PdfPopupIcon.comment:\n                graphics._sw._write(this._comment);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._commentSecondHalf);\n                break;\n            case PdfPopupIcon.paragraph:\n                graphics._sw._write(this._paragraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._paragraphSecondHalf);\n                break;\n            case PdfPopupIcon.help:\n                graphics._sw._write(this._help);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._helpSecondHalf);\n                break;\n            case PdfPopupIcon.note:\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._note);\n                break;\n            case PdfPopupIcon.insert:\n                graphics._sw._write('0 G ');\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._insert);\n                break;\n            case PdfPopupIcon.key:\n                graphics._sw._write(this._key);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._keySecondHalf);\n                break;\n            case PdfPopupIcon.newParagraph:\n                graphics._sw._write(this._newParagraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._newParagraphSecondHalf);\n                break;\n        }\n        if (this.opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._destination) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._destination = value;\n                if (this._isLoaded) {\n                    this._destination._initializePrimitive();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (typeof array === 'string') {\n                array = this._getDestination(array);\n            }\n            if (array && array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && array && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                if (index >= 0) {\n                    var page = this._crossReference._document.getPage(index);\n                    if (page && array[1] instanceof _PdfName) {\n                        var mode = array[1];\n                        if (mode) {\n                            if (mode.name === 'XYZ') {\n                                var left = array[2];\n                                var top_4 = array[3];\n                                var zoom = array[4];\n                                var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                    || (typeof zoom === 'undefined' && zoom === null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._destination = new PdfDestination();\n                    var zoom = array[4];\n                    var mode = array[1];\n                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                        this._destination.zoom = zoom;\n                    }\n                    if (mode.name === 'Fit') {\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                    else if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var topValue = array[3];\n                        if ((typeof left === 'undefined' && left === null) || (typeof topValue === 'undefined' && topValue === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    this._destination._index = index;\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference && reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    else if (typeof reference === 'string') {\n                        referenceArray = this._getDestination(reference);\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._getDestination = function (name) {\n        var document = this._crossReference._document;\n        var destinationArray; // eslint-disable-line\n        if (document) {\n            destinationArray = this._getNamedDestination(document, name);\n        }\n        return destinationArray;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedDestination = function (document, result) {\n        var destination; // eslint-disable-line\n        var catalog = document._catalog;\n        if (catalog && catalog._catalogDictionary && catalog._catalogDictionary.has('Names')) {\n            var names = catalog._catalogDictionary.get('Names');\n            if (names && names.has('Dests')) {\n                var kids = names.get('Dests');\n                if (kids) {\n                    var ref = this._getNamedObjectFromTree(kids, result);\n                    destination = this._extractDestination(ref, document);\n                }\n            }\n        }\n        return destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._extractDestination = function (ref, document) {\n        var dict;\n        var destinationArray; // eslint-disable-line\n        if (ref && ref instanceof _PdfReference) {\n            dict = document._crossReference._fetch(ref);\n        }\n        if (dict && dict.has('D')) {\n            destinationArray = dict.getRaw('D');\n        }\n        return destinationArray ? destinationArray : ref;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedObjectFromTree = function (kids, name) {\n        var found = false;\n        var currentDictionary = kids;\n        var reference;\n        while (!found && currentDictionary) {\n            if (currentDictionary && currentDictionary.has('Kids')) {\n                currentDictionary = this._getProperKid(currentDictionary, name);\n            }\n            else if (currentDictionary && currentDictionary.has('Names')) {\n                reference = this._findName(currentDictionary, name);\n                found = true;\n            }\n        }\n        return reference;\n    };\n    PdfDocumentLinkAnnotation.prototype._findName = function (current, name) {\n        var names = current.get('Names'); // eslint-disable-line\n        var halfLength = names.length / 2;\n        var lowerIndex = 0;\n        var topIndex = halfLength - 1;\n        var half = 0;\n        var found = false;\n        var destinationReference;\n        while (!found) {\n            half = Math.floor((lowerIndex + topIndex) / 2);\n            if (lowerIndex > topIndex) {\n                break;\n            }\n            var result = names[Number.parseInt(half.toString(), 10) * 2]; // eslint-disable-line\n            if (result && result instanceof _PdfReference) {\n                result = current._crossReference._fetch(result);\n            }\n            var cmp = this._stringCompare(name, result);\n            if (cmp > 0) {\n                lowerIndex = half + 1;\n            }\n            else if (cmp < 0) {\n                topIndex = half - 1;\n            }\n            else {\n                found = true;\n                break;\n            }\n        }\n        if (found) {\n            destinationReference = names[half * 2 + 1];\n        }\n        return destinationReference;\n    };\n    PdfDocumentLinkAnnotation.prototype._getProperKid = function (kids, name) {\n        var kidsArray; // eslint-disable-line\n        var kid;\n        if (kids && kids.has('Kids')) {\n            kidsArray = kids.getRaw('Kids');\n        }\n        if (kidsArray && Array.isArray(kidsArray) && kidsArray.length !== 0) {\n            kidsArray = kids.getArray('Kids');\n            for (var i = 0; i < kidsArray.length; i++) {\n                kid = kidsArray[Number.parseInt(i.toString(), 10)];\n                if (this._checkLimits(kid, name)) {\n                    break;\n                }\n            }\n        }\n        return kid;\n    };\n    PdfDocumentLinkAnnotation.prototype._checkLimits = function (kid, result) {\n        var found = false;\n        if (kid && kid.has('Limits')) {\n            var limits = kid.get('Limits'); // eslint-disable-line\n            var lowerLimit = limits[0];\n            var higherLimit = limits[1];\n            var lowCompare = this._stringCompare(lowerLimit, result);\n            var highCompare = this._stringCompare(higherLimit, result);\n            if (lowCompare === 0 || highCompare === 0) {\n                found = true;\n            }\n            else if (lowCompare < 0 && highCompare > 0) {\n                found = true;\n            }\n        }\n        return found;\n    };\n    PdfDocumentLinkAnnotation.prototype._stringCompare = function (limits, result) {\n        var byteArray = _stringToBytes(limits);\n        var byteArray1 = _stringToBytes(result);\n        var commonSize = Math.min(byteArray.length, byteArray1.length);\n        var resultValue = 0;\n        for (var i = 0; i < commonSize; i++) {\n            var byte = byteArray[Number.parseInt(i.toString(), 10)];\n            var byte1 = byteArray1[Number.parseInt(i.toString(), 10)];\n            resultValue = byte - byte1;\n            if (resultValue !== 0) {\n                break;\n            }\n        }\n        if (resultValue === 0) {\n            resultValue = byteArray.length - byteArray1.length;\n        }\n        return resultValue;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        else if (this._destination) {\n            this._dictionary.update('Dest', this._destination._array);\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the text markup annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the text markup annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    var nativeRectangle = this._obtainNativeRectangle();\n                    this._dictionary.update('Rect', _fromRectangle({ x: nativeRectangle[0], y: nativeRectangle[1], width: nativeRectangle[2], height: nativeRectangle[3] }));\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (value.length > 0) {\n                    this._quadPoints = new Array((value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n                this._isChanged = true;\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._obtainNativeRectangle = function () {\n        var nativeRectangle = [this._bounds.x, this._bounds.y + this._bounds.height, this._bounds.width, this._bounds.height];\n        var cropOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            nativeRectangle[1] = size[1] - nativeRectangle[1];\n            cropOrMediaBox = this._getCropOrMediaBox();\n        }\n        if (cropOrMediaBox) {\n            if (cropOrMediaBox[3] < 0) {\n                var yCrop = cropOrMediaBox[1];\n                var heightCrop = cropOrMediaBox[3];\n                cropOrMediaBox[1] = heightCrop;\n                cropOrMediaBox[3] = yCrop;\n            }\n            if (cropOrMediaBox.length > 2 && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                nativeRectangle[0] += cropOrMediaBox[0];\n                if (this._page && this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[1] > 0 && cropOrMediaBox[3] === 0) {\n                    nativeRectangle[1] += cropOrMediaBox[3];\n                }\n                else {\n                    nativeRectangle[1] += cropOrMediaBox[1];\n                }\n            }\n        }\n        return nativeRectangle;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var size = this._page.size;\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        if (this._isChanged) {\n            this._setQuadPoints(size);\n            this._dictionary.update('Rect', _updateBounds(this));\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1 && this._isChanged) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n        this._isChanged = false;\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width = 0;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics.drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics.drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    var defaultRect = [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height];\n                    var rect = this._setAppearance ? _updateBounds(this) : defaultRect;\n                    this._dictionary.update('Rect', rect);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        var margins;\n        if (this._page && this._page._isNew && this._page._pageSettings && this._page._pageSettings.margins) {\n            var margin = this._page._pageSettings.margins;\n            margins = { left: margin.left, top: margin.top, right: margin.right, bottom: margin.bottom };\n        }\n        else {\n            margins = { left: 0, top: 0, right: 0, bottom: 0 };\n        }\n        if (this.bounds.x !== 0 && this.bounds.y !== 0 && this.bounds.width !== 0 && this.bounds.height !== 0) {\n            this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n        var noofRect = this._quadPoints.length / 8;\n        var cropOrMediaBox = this._getMediaOrCropBox(this._page);\n        var isContainscropOrMediaBox = false;\n        if (!this._isLoaded && cropOrMediaBox && cropOrMediaBox.length > 3 && !this.flatten) {\n            var cropOrMediaBoxX = cropOrMediaBox[0];\n            var cropOrMediaBoxY = cropOrMediaBox[1];\n            if (cropOrMediaBoxX !== 0 || cropOrMediaBoxY !== 0) {\n                for (var i = 0; i < noofRect; i++) {\n                    var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0] + margins.left + cropOrMediaBoxX;\n                    var locationY = cropOrMediaBoxY + margins.top;\n                    textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[1 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[3 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                    textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n                }\n                isContainscropOrMediaBox = true;\n            }\n        }\n        if (!isContainscropOrMediaBox) {\n            for (var i = 0; i < noofRect; i++) {\n                var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[1 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[3 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                    this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n            }\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || ((!this._isLoaded || (this._page && this._page._isDuplicate)) && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            var dictionary_1 = this._dictionary.get('AP'); // eslint-disable-line\n            if (dictionary_1 && dictionary_1 instanceof _PdfDictionary) {\n                _removeDuplicateReference(dictionary_1, this._crossReference, 'N');\n            }\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._alterRotateBounds = true;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an appearance template for a rubber stamp annotation.\n     *\n     * @returns {PdfTemplate} Returns the appearance template of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRubberStampAnnotation.prototype.createTemplate = function () {\n        var template;\n        if (this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        template = new PdfTemplate();\n                        template._isExported = true;\n                        var templateDictionary = appearanceStream.dictionary;\n                        var matrix = templateDictionary.getArray('Matrix');\n                        var bounds = templateDictionary.getArray('BBox');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (bounds && bounds.length > 3) {\n                                var rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                template._size = [rectangle[2], rectangle[3]];\n                                template._templateOriginalSize = [rect.width, rect.height];\n                            }\n                        }\n                        else if (bounds) {\n                            templateDictionary.update('Matrix', [1, 0, 0, 1, -bounds[0], -bounds[1]]);\n                            template._size = [bounds[2], bounds[3]];\n                        }\n                        template._exportStream(dictionary, this._crossReference);\n                    }\n                }\n            }\n            else {\n                template = this._createRubberStampAppearance();\n            }\n        }\n        return template;\n    };\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        if (this._dictionary.has('AP') && this._isLoaded && !this._isRotated) {\n            this._parseStampAppearance();\n        }\n        else {\n            this._appearanceTemplate = this._createRubberStampAppearance();\n        }\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance || this._isRotated) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                isTransformBBox = this._parseStampAppearance();\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._parseStampAppearance = function () {\n        var isTransformBBox = false;\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                var isStamp = false;\n                if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                    var isRotated = false;\n                    var size = void 0;\n                    var rect = void 0;\n                    if (appearanceStream) {\n                        isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                            this.rotationAngle === PdfRotationAngle.angle0);\n                        if (!isRotated) {\n                            isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                this.rotationAngle === PdfRotationAngle.angle0);\n                        }\n                    }\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    isStamp = true;\n                    isTransformBBox = isRotated ? true : false;\n                    if (isTransformBBox) {\n                        var matrix = appearanceStream.dictionary.getArray('Matrix');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            var bounds = appearanceStream.dictionary.getArray('BBox');\n                            if (bounds && bounds.length > 3) {\n                                rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                size = [rectangle[2], rectangle[3]];\n                                this._appearanceTemplate._size = size;\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                    }\n                    else if (rect) {\n                        size = [rect.width, rect.height];\n                    }\n                }\n                if (!isStamp) {\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return isTransformBBox;\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this.icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (this._alterRotateBounds && typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        else {\n            this.rotateAngle = this._getRotationAngle();\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        this._dictionary.update('Rect', _updateBounds(this));\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._isContentUpdated = false;\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        _this._parsedXMLData = [];\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._lineEndingStyle = this._obtainLineEndingStyle();\n            }\n            else if (typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = PdfLineEndingStyle.none;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    var rcBrush = void 0;\n                    var rcColor = [];\n                    if (this._parsedXMLData.length > 0 && this._parsedXMLData[3]) {\n                        rcBrush = this._parsedXMLData[3];\n                        rcColor = rcBrush._color;\n                        this._textMarkUpColor = rcColor;\n                    }\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                this._updateStyle(this.font, value, this.textAlignment);\n            }\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            else if (this._dictionary.has('RC')) {\n                var rcAlignment = void 0;\n                if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                    rcAlignment = this._parsedXMLData[1];\n                    this._textAlignment = rcAlignment;\n                }\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('RC')) {\n            annot._parsedXMLData = annot._parseXMLData(dictionary.get('RC'));\n        }\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            this._cropBoxValueX = cropOrMediaBox[0];\n            this._cropBoxValueY = cropOrMediaBox[1];\n        }\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            this._dictionary.update('Rect', _updateBounds(this));\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (this._dictionary.has('RC') && this._isContentUpdated) {\n            this._updateStyle(this.font, this._textMarkUpColor, this.textAlignment);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var box = template._content.dictionary.getArray('BBox');\n        var angle = this._getRotationAngle();\n        if (box && angle !== null && typeof angle !== 'undefined') {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle_1 = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle_1, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        if (text) {\n            this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        }\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        if (this.flatten) {\n            this._bounds = { x: bounds[0], y: (this._page.size[1] - (bounds[1] + bounds[3])), width: bounds[2], height: bounds[3] };\n        }\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            var rcFont = void 0;\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[0]) {\n                rcFont = this._parsedXMLData[0];\n            }\n            if (rcFont instanceof PdfStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n            else if (rcFont instanceof PdfCjkStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._updateStyle = function (font, color, alignment) {\n        var ds = 'font:' +\n            font._metrics._name +\n            ' ' +\n            font.size +\n            'pt;style:' + _reverseMapPdfFontStyle(font.style) +\n            ';color:' +\n            this._colorToHex(color);\n        this._dictionary.update('DS', ds);\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font:'\n            + font._metrics._name + ' ' + font.size + 'pt;font-weight:'\n            + (font.isBold ? 'bold' : 'normal') + ';color:' + this._colorToHex(color) + '\"><p dir=\"ltr\">';\n        var textAlignment;\n        var alignmentText;\n        if (alignment !== null && typeof alignment !== 'undefined') {\n            switch (alignment) {\n                case PdfTextAlignment.left:\n                    alignmentText = 'left';\n                    break;\n                case PdfTextAlignment.center:\n                    alignmentText = 'center';\n                    break;\n                case PdfTextAlignment.right:\n                    alignmentText = 'right';\n                    break;\n                case PdfTextAlignment.justify:\n                    alignmentText = 'justify';\n                    break;\n            }\n            if (alignmentText) {\n                textAlignment = 'text-align:' + alignmentText + ';';\n            }\n        }\n        var decorationText = '';\n        var textDecoration;\n        var italic = 'font-style:italic';\n        var bold = 'font-style:bold';\n        if (font.isUnderline) {\n            decorationText = font.isStrikeout ? 'text-decoration:word line-through' : 'text-decoration:word';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else if (font.isStrikeout) {\n            decorationText = 'text-decoration:line-through';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else {\n            if (font.isItalic) {\n                decorationText += italic;\n            }\n            else if (font.isBold) {\n                decorationText += bold;\n            }\n        }\n        if (decorationText !== '') {\n            textDecoration = '<span style = \"' + textAlignment + decorationText + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        else {\n            textDecoration = '<span style = \"' + textAlignment + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        this._dictionary.update('RC', body + textDecoration + '</p></body>');\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[2] + rectangle[0]), -rectangle[1], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            if (parameter.borderWidth > 0 && !this._isAllRotation) {\n                rectangle = parameter.bounds;\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, rectangle, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new PdfPath();\n        graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path.addRectangle((this.bounds.x + this._cropBoxValueX) - 2, ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x + this._cropBoxValueX,\n                ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)),\n                this.bounds.width,\n                this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX,\n                    (size[1] + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[1][1],\n            this.calloutLines[0][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        var isContent = this._dictionary.has('Contents');\n        if (isContent) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC') && !isContent && text === null) {\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                var rcAlignment = this._parsedXMLData[1];\n                textAlignment = rcAlignment;\n                hasAlignment = true;\n            }\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (!this._isLoaded) {\n            pointY = this._page.size[1] - pointY;\n        }\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics.drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        if (typeof this.text === 'string' && this.text !== null) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        this._updateStyle(this.font, this.textMarkUpColor, this._textAlignment);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    PdfFreeTextAnnotation.prototype._parseXMLData = function (rcContent) {\n        var _this = this;\n        var fontStyle = PdfFontStyle.regular;\n        var fontCollection = []; // eslint-disable-line\n        var brush = null;\n        var fontName = '';\n        var content = rcContent;\n        var contentText = this._dictionary.has('Contents') ? this._dictionary.get('Contents') : '';\n        var hasSymbol = false;\n        var xdocument; // eslint-disable-line\n        hasSymbol = contentText.split('').some(function (char) { return _this._isSymbol(char); });\n        if (!hasSymbol) {\n            if (content !== null && typeof content !== 'undefined') {\n                xdocument = (new DOMParser()).parseFromString(content, 'text/xml');\n                var root = xdocument.documentElement;\n                var nameSpaceURI = (root && root.namespaceURI) || '';\n                if (root) {\n                    var styleMap = this._collectStyles(root);\n                    if (styleMap.size > 0) {\n                        var input = this._extractStylesToInput(styleMap);\n                        var fontDetails = this._getFontDetails(input, this.font.size, this.textAlignment, fontStyle, brush); // eslint-disable-line\n                        var _a = this._updateFontProperties(fontDetails, fontName, fontStyle, brush), updatedFontName = _a.fontName, updatedFontStyle = _a.fontStyle, updatedBrush = _a.brush;\n                        var obtainFont = _mapFont(updatedFontName, this.font._size, updatedFontStyle, this);\n                        fontCollection = this._fontCollection(fontCollection, obtainFont, nameSpaceURI, this._textAlignment, updatedBrush);\n                    }\n                }\n            }\n        }\n        this._parsedXMLData = fontCollection;\n        return fontCollection;\n    };\n    PdfFreeTextAnnotation.prototype._collectStyles = function (root, styleMap) {\n        if (styleMap === void 0) { styleMap = new Map(); }\n        if (!root) {\n            return styleMap;\n        }\n        var nodeStyle = null;\n        try {\n            nodeStyle = window.getComputedStyle(root);\n        }\n        catch (error) {\n            return styleMap;\n        }\n        styleMap.set(root.tagName.toLowerCase(), nodeStyle);\n        var childNode = root.firstElementChild;\n        while (childNode) {\n            this._collectStyles(childNode, styleMap);\n            childNode = childNode.nextElementSibling;\n        }\n        return styleMap;\n    };\n    PdfFreeTextAnnotation.prototype._extractStylesToInput = function (styleMap) {\n        var input = [];\n        styleMap.forEach(function (styleValue) {\n            if (styleValue && styleValue.length > 0) { // Check if styleValue is valid\n                for (var i = 0; i < styleValue.length; i++) {\n                    var propertyName = styleValue.item(Number.parseInt(i.toString(), 10));\n                    if (propertyName !== null && propertyName !== undefined) {\n                        var propertyValue = styleValue.getPropertyValue(propertyName);\n                        input.push(propertyName + \": \" + propertyValue);\n                    }\n                }\n            }\n        });\n        return input;\n    };\n    PdfFreeTextAnnotation.prototype._isSymbol = function (char) {\n        var code = char.charCodeAt(0);\n        if (char === '_' || char === '+' || char === '-' || char === '*' || char === '=') {\n            return false;\n        }\n        return ((code >= 0x20A0 && code <= 0x20CF) ||\n            (code >= 0x2200 && code <= 0x22FF) ||\n            (code >= 0x2A00 && code <= 0x2AFF) ||\n            (code >= 0x2100 && code <= 0x214F) ||\n            (code >= 0x2300 && code <= 0x23FF) ||\n            (code === 0x2B50));\n    };\n    PdfFreeTextAnnotation.prototype._updateFontProperties = function (fontDetails, fontName, fontStyle, brush) {\n        var _this = this;\n        fontDetails.forEach(function (value, property) {\n            switch (property) {\n                case 'font-family':\n                    fontName = value;\n                    break;\n                case 'font-size':\n                    _this.font._size = parseFloat(value);\n                    break;\n                case 'font-style':\n                case 'font-weight':\n                case 'text-decoration':\n                    fontStyle = _this._obtainFontStyle(value, property);\n                    break;\n                case 'text-align':\n                    _this._textAlignment = _this._parseTextAlignment(value);\n                    break;\n                case 'color':\n                    brush = value;\n                    break;\n                case 'xfa-spacerun':\n                    _this._rcText = value;\n                    break;\n            }\n        });\n        return { fontName: fontName, fontStyle: fontStyle, brush: brush };\n    };\n    PdfFreeTextAnnotation.prototype._obtainFontStyle = function (value, property) {\n        var styleValue = parseFloat(value);\n        switch (property) {\n            case 'font-style':\n                return styleValue === 0 ? PdfFontStyle.regular :\n                    styleValue === 1 ? PdfFontStyle.bold :\n                        styleValue === 2 ? PdfFontStyle.italic :\n                            styleValue === 8 ? PdfFontStyle.strikeout :\n                                styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            case 'font-weight':\n                return styleValue === 1 ? PdfFontStyle.bold : PdfFontStyle.regular;\n            case 'text-decoration':\n                return styleValue === 8 ? PdfFontStyle.strikeout :\n                    styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            default:\n                return PdfFontStyle.regular;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlignment = function (value) {\n        var alignmentValue = parseFloat(value);\n        switch (alignmentValue) {\n            case 0: return PdfTextAlignment.left;\n            case 1: return PdfTextAlignment.center;\n            case 2: return PdfTextAlignment.right;\n            case 3: return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getFontDetails = function (input, fontSize, textAlignment, fontStyle, brush) {\n        var _this = this;\n        var fontDetails = new Map(); // eslint-disable-line\n        input.forEach(function (element) {\n            var _a = element.split(':').map(function (item) { return item.trim(); }), property = _a[0], value = _a[1];\n            if (property && value) {\n                switch (property.toLowerCase()) {\n                    case 'font':\n                        _this._parseFont(value, fontDetails);\n                        break;\n                    case 'font-size':\n                        fontSize = _this._parseFontSize(value);\n                        fontDetails.set('font-size', fontSize);\n                        break;\n                    case 'font-weight':\n                        fontStyle = _this._parseFontWeight(value, fontStyle);\n                        fontDetails.set('font-weight', fontStyle);\n                        break;\n                    case 'font-family':\n                        fontDetails.set('font-family', _this._parseFontFamily(value));\n                        break;\n                    case 'color':\n                        brush = new PdfBrush(_this._rgbStringToArray(value));\n                        fontDetails.set('color', brush);\n                        break;\n                    case 'font-style':\n                        fontStyle = _this._parseFontStyle(value, fontStyle);\n                        fontDetails.set('font-style', fontStyle);\n                        break;\n                    case 'text-decoration':\n                        fontStyle = _this._parseTextDecoration(value, fontStyle);\n                        fontDetails.set('text-decoration', fontStyle);\n                        break;\n                    case 'text-align':\n                        textAlignment = _this._parseTextAlign(value);\n                        fontDetails.set('text-align', textAlignment);\n                        break;\n                    case 'xfa-spacerun':\n                        _this._rcText = value.length > 1 && value.includes('yes') ? _this._rcText + ' ' : _this._rcText;\n                        fontDetails.set('xfa-spacerun', _this._rcText);\n                        break;\n                }\n            }\n        });\n        return fontDetails;\n    };\n    PdfFreeTextAnnotation.prototype._parseFont = function (value, fontDetails) {\n        var fontParts = value.split(' ').map(function (item) { return item.trim(); });\n        var fontName = '';\n        fontParts.forEach(function (part) {\n            if (part && !part.endsWith('pt')) {\n                fontName += part + ' ';\n            }\n            else if (part.endsWith('pt')) {\n                fontDetails.set('font-size', parseFloat(part.replace('pt', '').replace(',', '.').trim()));\n            }\n        });\n        fontDetails.set('font-family', fontName.trim().replace(/['\",]/g, ''));\n    };\n    PdfFreeTextAnnotation.prototype._parseFontSize = function (value) {\n        if (value.endsWith('pt')) {\n            return parseFloat(value.replace('pt', '').replace(',', '.').trim());\n        }\n        return 0;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontWeight = function (value, fontStyle) {\n        if (value.includes('bold')) {\n            fontStyle |= PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontFamily = function (value) {\n        return value.replace(/^'+|'+$/g, '').trim();\n    };\n    PdfFreeTextAnnotation.prototype._parseFontStyle = function (value, fontStyle) {\n        if (value.includes('normal') || value.includes('regular')) {\n            return PdfFontStyle.regular;\n        }\n        if (value.includes('underline')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('strikeout')) {\n            return PdfFontStyle.strikeout;\n        }\n        if (value.includes('italic')) {\n            return PdfFontStyle.italic;\n        }\n        if (value.includes('bold')) {\n            return PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextDecoration = function (value, fontStyle) {\n        if (value.includes('word')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('line-through')) {\n            return PdfFontStyle.strikeout;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlign = function (value) {\n        switch (value.trim().toLowerCase()) {\n            case 'left': return PdfTextAlignment.left;\n            case 'right': return PdfTextAlignment.right;\n            case 'center': return PdfTextAlignment.center;\n            case 'justify': return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._rgbStringToArray = function (rgbString) {\n        var regex = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n        var match = rgbString.match(regex);\n        if (match) {\n            var r = parseInt(match[1], 10);\n            var g = parseInt(match[2], 10);\n            var b = parseInt(match[3], 10);\n            return [r, g, b];\n        }\n        else {\n            throw new Error('Invalid RGB string format');\n        }\n    };\n    PdfFreeTextAnnotation.prototype._fontCollection = function (fontCollection, font, nameSpaceURI, alignment, brush) {\n        return fontCollection.concat([font, alignment, nameSpaceURI, brush]);\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._page.annotations.remove(this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                if (appearance && appearance instanceof _PdfDictionary) {\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    _removeDuplicateReference(appearance, this._crossReference, 'R');\n                }\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && _isNullOrUndefined(this.overlayText) && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.top);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, this.bounds.width - this.border.width, this.bounds.height - this.border.width];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, format);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isTransparentBorderColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor();\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            if (this._page && this._page._isNew && this._page._pageSettings) {\n                this._dictionary.update('Rect', _updateBounds(this));\n            }\n            else {\n                this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics.drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded && !this._page._isNew) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._parseBorderColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor)) {\n            if (typeof this._borderColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        this._borderColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            value = this._borderColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._updateBorderColor = function (value) {\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._field) {\n                    this._setCheckedStatus(value);\n                    this._field._setAppearance = true;\n                }\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._setCheckedStatus = function (value) {\n        var check = value;\n        var fieldValue = this._getItemValue(this._dictionary);\n        this._unCheckOthers(this, fieldValue, value);\n        if (check) {\n            if (!fieldValue) {\n                fieldValue = 'Yes';\n            }\n            this._field._dictionary.update('V', fieldValue);\n            this._dictionary.update('AS', _PdfName.get(fieldValue));\n            this._dictionary.update('V', _PdfName.get(fieldValue));\n        }\n        else if (this._field._dictionary) {\n            if (this._field._dictionary.has('V')) {\n                var v = this._field._dictionary.get('V');\n                if (v && v.name === fieldValue) {\n                    delete this._field._dictionary._map.V;\n                }\n            }\n            this._field._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    PdfStateItem.prototype._unCheckOthers = function (child, value, isChecked) {\n        if (!this._field._isUpdating) {\n            this._field._isUpdating = true;\n            var count = this._field.itemsCount;\n            for (var i = 0; i < count; ++i) {\n                var item = this._field.itemAt(i);\n                if (item) {\n                    if (item !== child) {\n                        item.checked = ((this._getItemValue(item._dictionary) === value) && isChecked);\n                    }\n                    else if (!item.checked) {\n                        item.checked = true;\n                    }\n                }\n            }\n        }\n    };\n    PdfStateItem.prototype._getItemValue = function (dictionary) {\n        var itemValue = '';\n        if (dictionary && dictionary.has('AS')) {\n            var asValue = dictionary.get('AS');\n            if (asValue && asValue.name !== 'Off') {\n                itemValue = 'Off';\n            }\n        }\n        if (itemValue === '') {\n            if (dictionary && dictionary.has('AP')) {\n                var apDictionary = dictionary.get('AP');\n                if (apDictionary && apDictionary.has('N')) {\n                    var normalAppearance = apDictionary.get('N');\n                    var keyList_1 = [];\n                    normalAppearance.forEach(function (key, value) {\n                        keyList_1.push(key);\n                    });\n                    if (keyList_1.length > 0) {\n                        for (var i = 0; i < keyList_1.length; i++) {\n                            var key = keyList_1[Number.parseInt(i.toString(), 10)];\n                            if (key && key !== 'Off') {\n                                itemValue = key;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return itemValue;\n    };\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics.drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview, _isNullOrUndefined } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        if (_isNullOrUndefined(array)) {\n            this._annotations = array;\n        }\n        else {\n            this._annotations = [];\n        }\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (dictionary && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (dictionary && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page && this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation && annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation && annotation._ref) {\n            var index = this._annotations.lastIndexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation && annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary && dictionary.has('Subtype') && this._page !== null && typeof this._page !== 'undefined') {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (this._page) {\n            if (dictionary && dictionary.has('A')) {\n                var remote = dictionary.get('A');\n                if (remote && remote.has('S')) {\n                    var link = remote.get('S');\n                    if (link && link.name === 'GoToR' && remote.has('F')) {\n                        annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                    }\n                    else if (link && link.name === 'URI') {\n                        annot = PdfUriAnnotation._load(this._page, dictionary);\n                    }\n                }\n            }\n            else {\n                annot = PdfUriAnnotation._load(this._page, dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary && annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        if (annotation) {\n            this._annotation = annotation;\n        }\n        this._isReview = isReview;\n        if (annotation && this._annotation._isLoaded || annotation._page) {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _isNullOrUndefined, _obtainDestination, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmarkBase.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('Count')) {\n                return (this._dictionary.get('Count') >= 0);\n            }\n            else {\n                return this._isExpanded;\n            }\n        },\n        /**\n         * Sets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @param {boolean} value whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the boolean flag indicating whether the bookmark is expanded or not\n         * bookmark.isExpanded = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isExpanded = value;\n            if (this.count > 0 && this._dictionary) {\n                this._dictionary.update('Count', value ? this._bookMarkList.length : (-this._bookMarkList.length));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (_isNullOrUndefined(this._bookMarkList) && this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype.add = function (title, index) {\n        var bookmark;\n        if (this._dictionary) {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.update('Parent', this._reference);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, dictionary);\n            bookmark = new PdfBookmark(dictionary, this._crossReference);\n            bookmark._reference = reference;\n            bookmark.title = title;\n            if (typeof index === 'undefined') {\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                }\n                else {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                }\n                this._bookMarkList.push(bookmark);\n            }\n            else {\n                if (index < 0 || index > this.count) {\n                    throw new Error('Index out of range');\n                }\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === this.count) {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === 0) {\n                    var first = this.at(0);\n                    this._dictionary.update('First', reference);\n                    if (first && first._reference) {\n                        dictionary.update('Next', first._reference);\n                        first._dictionary.update('Prev', reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n                else {\n                    var next = this.at(index);\n                    var prev = this.at(index - 1);\n                    if (prev && prev._reference && next && next._reference) {\n                        dictionary.update('Prev', prev._reference);\n                        prev._dictionary.update('Next', reference);\n                        next._dictionary.update('Prev', reference);\n                        dictionary.update('Next', next._reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n            }\n            this._updateCount();\n        }\n        return bookmark;\n    };\n    PdfBookmarkBase.prototype.remove = function (value) {\n        if (typeof value === 'string') {\n            for (var i = this._bookMarkList.length - 1; i >= 0; i--) {\n                var bookmark = this.at(i);\n                if (bookmark.title === value) {\n                    this.remove(i);\n                }\n                else if (bookmark.count > 0) {\n                    bookmark.remove(value);\n                }\n            }\n        }\n        else {\n            if (value >= 0 && value < this.count) {\n                if (this.count === 1) {\n                    this._removeFirst(this._dictionary);\n                    this._removeLast(this._dictionary);\n                    this._removeCount(this._dictionary);\n                    this._bookMarkList = [];\n                }\n                else {\n                    if (value === 0) {\n                        var next = this.at(value + 1);\n                        if (this._dictionary && next && next._reference) {\n                            this._removePrevious(next._dictionary);\n                            this._dictionary.update('First', next._reference);\n                        }\n                    }\n                    else if (value === this.count - 1) {\n                        var prev = this.at(value - 1);\n                        if (this._dictionary && prev && prev._reference) {\n                            this._removeNext(prev._dictionary);\n                            this._dictionary.update('Last', prev._reference);\n                        }\n                    }\n                    else {\n                        var prev = this.at(value - 1);\n                        var next = this.at(value + 1);\n                        if (prev && prev._reference && next && next._reference) {\n                            prev._dictionary.update('Next', next._reference);\n                            next._dictionary.update('Prev', prev._reference);\n                        }\n                    }\n                    this._updateBookmarkList(value);\n                    if (this._dictionary) {\n                        this._updateCount();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Removes all the bookmark from the collection.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Remove all the bookmark from the collection.\n     * bookmarks.clear();\n     * // Get count after removal of all outlines.\n     * let count: number = bookmarks.count;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.clear = function () {\n        this._removeFirst(this._dictionary);\n        this._removeLast(this._dictionary);\n        this._removeCount(this._dictionary);\n        this._bookMarkList = [];\n    };\n    PdfBookmarkBase.prototype._removeFirst = function (dictionary) {\n        if (dictionary && dictionary.has('First')) {\n            delete dictionary._map.First;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeLast = function (dictionary) {\n        if (dictionary && dictionary.has('Last')) {\n            delete dictionary._map.Last;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeNext = function (dictionary) {\n        if (dictionary && dictionary.has('Next')) {\n            delete dictionary._map.Next;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removePrevious = function (dictionary) {\n        if (dictionary && dictionary.has('Prev')) {\n            delete dictionary._map.Prev;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeCount = function (dictionary) {\n        if (dictionary && dictionary.has('Count')) {\n            delete dictionary._map.Count;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._updateBookmarkList = function (index, bookmark) {\n        var updatedList = [];\n        if (typeof bookmark === 'undefined') {\n            for (var i = 0; i < this.count; i++) {\n                var entry = this._bookMarkList[Number.parseInt(i.toString(), 10)];\n                if (i !== index) {\n                    updatedList.push(entry);\n                }\n                else {\n                    var reference = entry._reference;\n                    if (reference && this._crossReference._cacheMap.has(reference)) {\n                        this._crossReference._cacheMap.get(reference)._updated = false;\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < this.count; i++) {\n                if (i === index) {\n                    updatedList.push(bookmark);\n                }\n                updatedList.push(this._bookMarkList[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this._bookMarkList = updatedList;\n    };\n    PdfBookmarkBase.prototype._updateCount = function () {\n        if (this.isExpanded || !this._dictionary.has('Count')) {\n            this._dictionary.update('Count', this._bookMarkList.length);\n        }\n        else {\n            this._dictionary.update('Count', -this._bookMarkList.length);\n        }\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var firstBookmark = this._getBookmark(this);\n        var isBookmark = (firstBookmark) ? true : false;\n        while (isBookmark && firstBookmark._dictionary) {\n            this._bookMarkList.push(firstBookmark);\n            firstBookmark = firstBookmark._next;\n            isBookmark = (firstBookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getBookmark = function (bookmarkBase, isFirst) {\n        if (isFirst === void 0) { isFirst = true; }\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has(isFirst ? 'First' : 'Last')) {\n            var reference = bookmarkBaseDictionary._get(isFirst ? 'First' : 'Last');\n            if (_isNullOrUndefined(reference)) {\n                var bookMarkDictionary = this._crossReference._fetch(reference);\n                if (bookMarkDictionary) {\n                    bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n                    bookMark._reference = reference;\n                }\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (_this._dictionary && !_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._destination) {\n                var namedDestination = this._obtainNamedDestination();\n                if (namedDestination === null || typeof namedDestination === 'undefined') {\n                    this._destination = _obtainDestination(this._dictionary, 'Dest');\n                }\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Set the destination\n         * bookmark.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination.\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        /**\n         * Sets the named destination.\n         *\n         * @param {PdfNamedDestination} value Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._namedDestination !== value && this._dictionary) {\n                this._namedDestination = value;\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('D', value.title);\n                dictionary.update('S', _PdfName.get('GoTo'));\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._dictionary.update('A', reference);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title.\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                if (this._dictionary && this._dictionary.has('Title')) {\n                    this._title = this._dictionary.get('Title');\n                }\n                else {\n                    this._title = '';\n                }\n            }\n            return this._title;\n        },\n        /**\n         * Sets the bookmark title.\n         *\n         * @param {string} value Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark title\n         * bookmark.title = 'Syncfusion';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._title = value;\n            if (this._dictionary) {\n                this._dictionary.update('Title', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color.\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary && this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        /**\n         * Sets the bookmark color.\n         *\n         * @param {number[]} value Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark color\n         * bookmark.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._color = value;\n            if (this._dictionary) {\n                this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                    Number.parseFloat((value[1] / 255).toFixed(7)),\n                    Number.parseFloat((value[2] / 255).toFixed(7))]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the text style.\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        /**\n         * Sets the text style.\n         *\n         * @param {PdfTextStyle} value Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the textStyle\n         * bookmark.textStyle = PdfTextStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textStyle = value;\n            this._updateTextStyle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary && this._dictionary.has('Next')) {\n                var reference = this._dictionary._get('Next');\n                if (_isNullOrUndefined(reference)) {\n                    var dictionary = this._crossReference._fetch(reference);\n                    if (dictionary) {\n                        nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                        nextBookmark._reference = reference;\n                    }\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._updateTextStyle = function (value) {\n        if (value === PdfTextStyle.regular) {\n            if (this._dictionary && this._dictionary.has('F')) {\n                delete this._dictionary._map.F;\n            }\n        }\n        else if (this._dictionary) {\n            this._dictionary.update('F', value);\n        }\n    };\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary && this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary) {\n                if (dictionary.has('A')) {\n                    var action = dictionary.get('A');\n                    if (action && action.has('D')) {\n                        destination = action.get('D');\n                    }\n                }\n                else if (dictionary.has('Dest')) {\n                    destination = dictionary.get('Dest');\n                }\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    function PdfNamedDestination(element, crossReference) {\n        if (typeof element === 'string') {\n            this._initialize();\n            this.title = element;\n        }\n        else {\n            this._dictionary = element;\n            this._crossReference = crossReference;\n        }\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title && this._dictionary) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfNamedDestination.prototype._initialize = function () {\n        this._dictionary = new _PdfDictionary();\n        this._dictionary.update('S', _PdfName.get('GoTo'));\n    };\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        this._findDestination(destinationArray[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._findDestination = function (destination) {\n        if (destination) {\n            if (destination.has('Names')) {\n                this._addCollection(destination);\n            }\n            else if (destination.has('Kids')) {\n                var kids = destination.getArray('Kids'); // eslint-disable-line\n                if (kids && Array.isArray(kids) && kids.length > 0) {\n                    for (var i = 0; i < kids.length; i++) {\n                        this._findDestination(kids[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    };\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements && elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference && reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (reference_1 && destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty, _isNullOrUndefined } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfTemplate } from './graphics/pdf-template';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._isNew = false;\n        this._isDuplicate = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                        var widgets_1;\n                        if (this._crossReference._document._catalog._catalogDictionary.has('AcroForm')) {\n                            widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        }\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n                var cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n                var width = 0;\n                var height = 0;\n                var rotate = this._pageDictionary && this._pageDictionary.has('Rotate')\n                    ? _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent')\n                    : 0;\n                if (cBox && rotate !== null && typeof rotate !== 'undefined') {\n                    width = cBox[2] - cBox[0];\n                    height = cBox[3] - cBox[1];\n                    var isValidCropBox = !(mBox && (mBox[2] - mBox[0]) < width);\n                    if (!(((rotate === 0 || rotate === 180) && (width < height)) ||\n                        ((rotate === 90 || rotate === 270) && (width > height) || isValidCropBox)) && (rotate === 0 && mBox)) {\n                        width = mBox[2] - mBox[0];\n                        height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                    }\n                }\n                else if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                else {\n                    this._pageDictionary.update('MediaBox', [0, 0, 612, 792]);\n                    width = 612;\n                    height = 792;\n                }\n                this._size = [Math.abs(width), Math.abs(height)];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n                if (angle < 0) {\n                    angle += 360;\n                }\n                this._rotation = (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n            }\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the rotation angle of the PDF page\n         * page.rotate = PdfRotationAngle.angle90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isNew) {\n                this._rotation = value;\n                var rotate = Math.floor(this._rotation) * 90;\n                if (rotate >= 360) {\n                    rotate = rotate % 360;\n                }\n                this._pageDictionary.update('Rotate', rotate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            var annotsRef = this._pageDictionary.getRaw('Annots'); // eslint-disable-line\n            annots = this._getProperty('Annots');\n            if (annotsRef && annotsRef instanceof _PdfReference) {\n                delete this._pageDictionary._map.Annots;\n                this._pageDictionary.update('Annots', annots);\n            }\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        if (!this._isNew) {\n            var rotation = this.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._pageDictionary.has('Rotate')) {\n                    rotate = this._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._g._clipBounds;\n                if (rotate === 90) {\n                    this._g.translateTransform(0, size[1]);\n                    this._g.rotateTransform(-90);\n                    this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._g.translateTransform(size[0], size[1]);\n                    this._g.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._g.translateTransform(size[0], 0);\n                    this._g.rotateTransform(-270);\n                    this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._isNew && this._pageSettings) {\n            var clipBounds = this._getActualBounds(this._pageSettings);\n            this._g._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._getActualBounds = function (pageSettings) {\n        var actualSize = pageSettings._getActualSize();\n        return [pageSettings.margins.left, pageSettings.margins.top, actualSize[0], actualSize[1]];\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj && obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary) {\n            if (this._pageDictionary.has('CropBox')) {\n                box = this._pageDictionary.getArray('CropBox');\n            }\n            else if (this._pageDictionary.has('MediaBox')) {\n                box = this._pageDictionary.getArray('MediaBox');\n            }\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary && this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    Object.defineProperty(PdfPage.prototype, \"_contentTemplate\", {\n        get: function () {\n            this._loadContents();\n            this._fetchResources();\n            var array;\n            var list = [];\n            var count = this._contents.length;\n            list.push(new Uint8Array([32, 113, 32, 10]));\n            for (var i = 0; i < count; i++) {\n                var reference = this._contents[Number.parseInt(i.toString(), 10)];\n                var base = this._crossReference._fetch(reference); // eslint-disable-line\n                if (base) {\n                    if (base instanceof _PdfContentStream) {\n                        array = new Uint8Array(base._bytes);\n                    }\n                    else if (base instanceof _PdfBaseStream) {\n                        array = base.getBytes();\n                    }\n                    if (array) {\n                        list.push(array);\n                        list.push(new Uint8Array([13, 10]));\n                    }\n                }\n            }\n            list.push(new Uint8Array([32, 81, 32, 10]));\n            list.push(new Uint8Array([13, 10]));\n            var targetArray = this._combineIntoSingleArray(list);\n            var targetStream = new _PdfContentStream(Array.from(targetArray));\n            var template = new PdfTemplate(targetStream, this._crossReference);\n            template._content.dictionary.set('Resources', this._resourceObject);\n            if (this.cropBox[0] > 0 || this.cropBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.cropBox);\n                template._size = [this.cropBox[0], this.cropBox[1]];\n            }\n            else if (this.mediaBox[0] > 0 || this.mediaBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.mediaBox);\n                template._size = [this.mediaBox[0], this.mediaBox[1]];\n            }\n            else {\n                template._content.dictionary.set('BBox', [0, 0, this.size[0], this.size[1]]);\n                template._size = [this.size[0], this.size[1]];\n            }\n            return template;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._combineIntoSingleArray = function (arrays) {\n        var totalLength = arrays.reduce(function (length, arr) { return length + arr.length; }, 0);\n        var targetArray = new Uint8Array(totalLength);\n        var offset = 0;\n        arrays.forEach(function (sourceArray) {\n            targetArray.set(sourceArray, offset);\n            offset += sourceArray.length;\n        });\n        return targetArray;\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        if (page && page._pageDictionary) {\n            var element = page._pageDictionary;\n            if (typeof element !== 'undefined' && element !== null) {\n                this._array.push(this._page._ref);\n            }\n            switch (this._destinationMode) {\n                case PdfDestinationMode.location:\n                    this._array.push(_PdfName.get('XYZ'));\n                    if (typeof page !== 'undefined' && page !== null) {\n                        this._array.push(this._location[0]);\n                        this._array.push(this._page.graphics._size[1] - this._location[1]);\n                    }\n                    else {\n                        this._array.push(0);\n                        this._array.push(0);\n                    }\n                    this._array.push(this._zoom);\n                    break;\n                case PdfDestinationMode.fitToPage:\n                    this._array.push(_PdfName.get('Fit'));\n                    break;\n                case PdfDestinationMode.fitR:\n                    this._array.push(_PdfName.get('FitR'));\n                    this._array.push(this._destinationBounds[0]);\n                    this._array.push(this._destinationBounds[1]);\n                    this._array.push(this._destinationBounds[2]);\n                    this._array.push(this._destinationBounds[3]);\n                    break;\n                case PdfDestinationMode.fitH:\n                    this._array.push(_PdfName.get('FitH'));\n                    this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                    break;\n            }\n            if (this._parent) {\n                this._parent._dictionary.set(this._parent instanceof PdfNamedDestination ? 'D' : 'Dest', this._array);\n                this._parent._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    function _ImageDecoder() {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n    }\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count, stream) {\n        if (stream && Array.isArray(stream)) {\n            var result = 0;\n            if (count <= stream.length && stream.length - offset >= count) {\n                for (var i = 0; i < count; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = stream[Number.parseInt(offset.toString(), 10)];\n                    offset++;\n                    result++;\n                }\n            }\n            return { 'outputBuffer': buffer, 'offset': offset, 'length': result };\n        }\n        else {\n            for (var index = offset; index < count; index++) {\n                var position = this._position;\n                buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n                this._position++;\n            }\n        }\n    };\n    _ImageDecoder.prototype._readString = function (length) {\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += String.fromCharCode(this._readByte());\n        }\n        return result;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._readUnsigned32 = function (offset) {\n        var i1 = this._getBuffer(offset + 3);\n        var i2 = this._getBuffer(offset + 2);\n        var i3 = this._getBuffer(offset + 1);\n        var i4 = this._getBuffer(offset);\n        return i1 | (i2 << 8) | (i3 << 16) | (i4 << 24);\n    };\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _JpegDecoder = /** @class */ (function (_super) {\n    __extends(_JpegDecoder, _super);\n    /**\n     * Initializes a new instance of the `_JpegDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _JpegDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._initialize();\n        return _this;\n    }\n    Object.defineProperty(_JpegDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _JpegDecoder.prototype._initialize = function () {\n        this._format = _ImageFormat.jpeg;\n        this._readHeader();\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _JpegDecoder.prototype._readHeader = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _JpegDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _JpegDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _JpegDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _JpegDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _JpegDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _JpegDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    return _JpegDecoder;\n}(_ImageDecoder));\nexport { _JpegDecoder };\n","export var _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nexport var _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nimport { _bytesToString, _toUnsigned, _toSigned32 } from './../../utils';\nimport { _DeflateStream } from './../../compression/deflate-stream';\n/* eslint-disable */\nvar _PngDecoder = /** @class */ (function (_super) {\n    __extends(_PngDecoder, _super);\n    /**\n     * Initializes a new instance of the `_PngDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _PngDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._format = _ImageFormat.png;\n        _this._isRedGreenBlue = false;\n        _this._isDecode = false;\n        _this._shades = false;\n        _this._ideateDecode = true;\n        _this._colors = 0;\n        _this._bitsPerPixel = 0;\n        _this._idatLength = 0;\n        _this._inputBands = 0;\n        _this._position = 8;\n        _this._initialize();\n        return _this;\n    }\n    _PngDecoder.prototype._initialize = function () {\n        var header;\n        var result = this._hasValidChunkType(header);\n        while (result.hasValidChunk) {\n            header = result.type;\n            switch (header) {\n                case _PngChunkTypes.iHDR:\n                    this._readHeader();\n                    break;\n                case _PngChunkTypes.iDAT:\n                    this._readImageData();\n                    break;\n                case _PngChunkTypes.sRGB:\n                    this._isRedGreenBlue = true;\n                    this._ignoreChunk();\n                    break;\n                case _PngChunkTypes.pLTE:\n                    this._readPhotoPlate();\n                    break;\n                case _PngChunkTypes.iEND:\n                    this._decodeImageData();\n                    break;\n                case _PngChunkTypes.tRNS:\n                    this._readTransparency();\n                    break;\n                case _PngChunkTypes.tEXt:\n                case _PngChunkTypes.iTXt:\n                case _PngChunkTypes.zTXt:\n                case _PngChunkTypes.hIST:\n                case _PngChunkTypes.sBIT:\n                case _PngChunkTypes.iCCP:\n                case _PngChunkTypes.pHYs:\n                case _PngChunkTypes.tIME:\n                case _PngChunkTypes.bKGD:\n                case _PngChunkTypes.gAMA:\n                case _PngChunkTypes.cHRM:\n                case _PngChunkTypes.unknown:\n                    this._ignoreChunk();\n                    break;\n                default:\n                    break;\n            }\n            result = this._hasValidChunkType(header);\n        }\n    };\n    _PngDecoder.prototype._hasValidChunkType = function (type) {\n        type = _PngChunkTypes.unknown;\n        if (this._position + 8 <= this._stream.byteLength) {\n            this._currentChunkLength = this._readUnsigned32(this._position);\n            this._seek(4);\n            var chunk = this._readString(4);\n            var header = this._getChunkType(chunk);\n            if (typeof header !== 'undefined' && header !== null) {\n                type = header;\n                return { 'type': type, 'hasValidChunk': true };\n            }\n            if (this._stream.byteLength === this._position) {\n                return { 'type': type, 'hasValidChunk': false };\n            }\n            else {\n                return { 'type': type, 'hasValidChunk': true };\n            }\n        }\n        else {\n            return { 'type': type, 'hasValidChunk': false };\n        }\n    };\n    _PngDecoder.prototype._ignoreChunk = function () {\n        if (this._currentChunkLength > 0) {\n            this._seek(this._currentChunkLength + 4);\n        }\n    };\n    _PngDecoder.prototype._readHeader = function () {\n        this._header = new _PngHeader();\n        this._header._width = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._height = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._bitDepth = this._readByte();\n        this._header._colorType = this._readByte();\n        this._header._compression = this._readByte();\n        this._header._filter = this._getFilterType(this._readByte());\n        this._header._interlace = this._readByte();\n        this._colors = (this._header._colorType === 3 || (this._header._colorType & 2) === 0) ? 1 : 3;\n        this._width = this._header._width;\n        this._height = this._header._height;\n        this._bitsPerComponent = this._header._bitDepth;\n        this._setBitsPerPixel();\n        this._seek(4);\n    };\n    _PngDecoder.prototype._setBitsPerPixel = function () {\n        this._bitsPerPixel = this._header._bitDepth === 16 ? 2 : 1;\n        if (this._header._colorType === 0) {\n            this._idatLength = Number.parseInt(((this._bitsPerComponent * this._width + 7) / 8).toString(), 10) * this._height;\n            this._inputBands = 1;\n        }\n        else if (this._header._colorType === 2) {\n            this._idatLength = this._width * this._height * 3;\n            this._inputBands = 3;\n            this._bitsPerPixel *= 3;\n        }\n        else if (this._header._colorType === 3) {\n            if (this._header._interlace === 1 || this._header._interlace === 0) {\n                this._idatLength = Number.parseInt(((this._header._bitDepth * this._width + 7) / 8).toString(), 10) * this._height;\n            }\n            this._inputBands = 1;\n            this._bitsPerPixel = 1;\n        }\n        else if (this._header._colorType === 4) {\n            this._idatLength = this._width * this._height;\n            this._inputBands = 2;\n            this._bitsPerPixel *= 2;\n        }\n        else if (this._header._colorType === 6) {\n            this._idatLength = this._width * 3 * this._height;\n            this._inputBands = 4;\n            this._bitsPerPixel *= 4;\n        }\n    };\n    _PngDecoder.prototype._readImageData = function () {\n        if (!this._encodedStream || this._encodedStream.length === 0) {\n            this._encodedStream = [];\n        }\n        if (this._currentChunkLength <= this._stream.byteLength && this._stream.byteLength - this._position >= this._currentChunkLength) {\n            for (var i = 0; i < this._currentChunkLength; i++) {\n                this._encodedStream.push(this._readByte());\n            }\n        }\n        this._seek(4);\n    };\n    _PngDecoder.prototype._readPhotoPlate = function () {\n        if (this._header._colorType === 3) {\n            this._colorSpace = [];\n            this._colorSpace.push(_PdfName.get('Indexed'));\n            this._colorSpace.push(this._getPngColorSpace());\n            this._colorSpace.push(this._currentChunkLength / 3 - 1);\n            var buffer = new Uint8Array(this._currentChunkLength);\n            this._read(buffer, 0, this._currentChunkLength);\n            this._colorSpace.push(_bytesToString(buffer));\n            this._seek(4);\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._readTransparency = function () {\n        if (this._header._colorType === 3) {\n            var alpha = new Uint8Array(this._currentChunkLength);\n            this._read(alpha, 0, this._currentChunkLength);\n            this._seek(4);\n            this._alpha = [];\n            for (var i = 0; i < alpha.length; i++) {\n                this._alpha.push(alpha[Number.parseInt(i.toString(), 10)]);\n                var sh = alpha[Number.parseInt(i.toString(), 10)] & 0xff;\n                if (sh !== 0 && sh !== 255) {\n                    this._shades = true;\n                }\n            }\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._getPngColorSpace = function () {\n        if (!this._isRedGreenBlue) {\n            if ((this._header._colorType & 2) === 0) {\n                return _PdfName.get('DeviceGray');\n            }\n            else {\n                return _PdfName.get('DeviceRGB');\n            }\n        }\n        else {\n            var colorspace = [];\n            var calRGB = new _PdfDictionary();\n            var whitePoint = [1, 1, 1];\n            var gammaArray = [2.2, 2.2, 2.2];\n            calRGB.set('Gamma', gammaArray);\n            if (this._isRedGreenBlue) {\n                var wpX = 0.3127;\n                var wpY = 0.329;\n                var redX = 0.64;\n                var redY = 0.33;\n                var greenX = 0.3;\n                var greenY = 0.6;\n                var bX = 0.15;\n                var bY = 0.06;\n                var t = wpY * ((greenX - bX) * redY - (redX - bX) * greenY + (redX - greenX) * bY);\n                var alphaY = redY * ((greenX - bX) * wpY - (wpX - bX) * greenY + (wpX - greenX) * bY) / t;\n                var alphaX = alphaY * redX / redY;\n                var alphaZ = alphaY * ((1 - redX) / redY - 1);\n                var blueY = -greenY * ((redX - bX) * wpY - (wpX - bX) * redY + (wpX - redX) * bY) / t;\n                var blueX = blueY * greenX / greenY;\n                var blueZ = blueY * ((1 - greenX) / greenY - 1);\n                var colorY = bY * ((redX - greenX) * wpY - (wpX - greenX) * wpY + (wpX - redX) * greenY) / t;\n                var colorX = colorY * bX / bY;\n                var colorZ = colorY * ((1 - bX) / bY - 1);\n                var whiteX = alphaX + blueX + colorX;\n                var whiteY = 1;\n                var whiteZ = alphaZ + blueZ + colorZ;\n                whitePoint = [whiteX, whiteY, whiteZ];\n                calRGB.set('Matrix', [alphaX, alphaY, alphaZ, blueX, blueY, blueZ, colorX, colorY, colorZ]);\n            }\n            calRGB.set('WhitePoint', whitePoint);\n            colorspace.push(_PdfName.get('CalRGB'));\n            colorspace.push(calRGB);\n            return colorspace;\n        }\n    };\n    _PngDecoder.prototype._decodeImageData = function () {\n        var header = this._header;\n        this._isDecode = (header._interlace === 1) || (header._bitDepth === 16) || ((header._colorType & 4) !== 0) || this._shades;\n        if (this._isDecode) {\n            if ((header._colorType & 4) !== 0 || this._shades) {\n                this._maskData = Array(this._width * this._height).fill(0);\n            }\n            if (this._encodedStream) {\n                this._dataStream = this._getDeflatedData(this._encodedStream);\n                this._dataStreamOffset = 0;\n            }\n            if (this._idatLength > 0) {\n                this._decodedImageData = Array(this._idatLength).fill(0);\n            }\n            this._readDecodeData();\n            if (this._decodedImageData && this._decodedImageData.length === 0 && this._shades) {\n                this._ideateDecode = false;\n                this._decodedImageData = this._encodedStream;\n            }\n        }\n        else {\n            this._ideateDecode = false;\n            this._decodedImageData = this._encodedStream;\n        }\n    };\n    _PngDecoder.prototype._getDeflatedData = function (data) {\n        var idatData = data.slice(2, data.length - 4);\n        var deflateStream = new _DeflateStream(idatData, 0, true);\n        var buffer = Array(4096).fill(0);\n        var numRead = 0;\n        var outputData = [];\n        do {\n            var result = deflateStream._read(buffer, 0, buffer.length);\n            numRead = result.count;\n            buffer = result.data;\n            for (var i = 0; i < numRead; i++) {\n                outputData.push(buffer[Number.parseInt(i.toString(), 10)]);\n            }\n        } while (numRead > 0);\n        return outputData;\n    };\n    _PngDecoder.prototype._readDecodeData = function () {\n        if (this._header._interlace !== 1) {\n            this._decodeData(0, 0, 1, 1, this._width, this._height);\n        }\n        else {\n            this._decodeData(0, 0, 8, 8, Math.floor((this._width + 7) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(4, 0, 8, 8, Math.floor((this._width + 3) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(0, 4, 4, 8, Math.floor((this._width + 3) / 4), Math.floor((this._height + 3) / 8));\n            this._decodeData(2, 0, 4, 4, Math.floor((this._width + 1) / 4), Math.floor((this._height + 3) / 4));\n            this._decodeData(0, 2, 2, 4, Math.floor((this._width + 1) / 2), Math.floor((this._height + 1) / 4));\n            this._decodeData(1, 0, 2, 2, Math.floor(this._width / 2), Math.floor((this._height + 1) / 2));\n            this._decodeData(0, 1, 1, 2, this._width, Math.floor(this._height / 2));\n        }\n    };\n    _PngDecoder.prototype._decodeData = function (xOffset, yOffset, xStep, yStep, width, height) {\n        if ((width === 0) || (height === 0)) {\n            return;\n        }\n        else {\n            var bytesPerRow = Math.floor((this._inputBands * width * this._header._bitDepth + 7) / 8);\n            var current = Array(bytesPerRow).fill(0);\n            var prior = Array(bytesPerRow).fill(0);\n            for (var sourceY = 0, destinationY = yOffset; sourceY < height; sourceY++, destinationY += yStep) {\n                var filter = this._dataStream[this._dataStreamOffset];\n                this._dataStreamOffset = this._dataStreamOffset + 1;\n                this._dataStreamOffset = this._readStream(this._dataStream, this._dataStreamOffset, current, bytesPerRow);\n                switch (this._getFilterType(filter)) {\n                    case _PngFilterTypes.none:\n                        break;\n                    case _PngFilterTypes.sub:\n                        this._decompressSub(current, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.up:\n                        this._decompressUp(current, prior, bytesPerRow);\n                        break;\n                    case _PngFilterTypes.average:\n                        this._decompressAverage(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.paeth:\n                        this._decompressPaeth(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    default:\n                        throw new Error('Unknown PNG filter');\n                }\n                this._processPixels(current, xOffset, xStep, destinationY, width);\n                var tmp = prior;\n                prior = current;\n                current = tmp;\n            }\n        }\n    };\n    _PngDecoder.prototype._readStream = function (stream, streamOffset, data, count) {\n        var result = this._read(data, streamOffset, count, stream);\n        data = result.outputBuffer;\n        streamOffset = result.offset;\n        var n = result.length;\n        if (n <= 0) {\n            throw new Error('Insufficient data');\n        }\n        return streamOffset;\n    };\n    _PngDecoder.prototype._decompressSub = function (data, count, bitsPerPixel) {\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (data[i - bitsPerPixel] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressUp = function (data, pData, count) {\n        for (var i = 0; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressAverage = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val) + pr / 2), 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val + Math.floor((pp + pr) / 2))), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressPaeth = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        var prp;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(val + pr, 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            prp = pData[i - bitsPerPixel] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((val + this._paethPredictor(pp, pr, prp)), 8);\n        }\n    };\n    _PngDecoder.prototype._paethPredictor = function (a, b, c) {\n        var p = a + b - c;\n        var pa = Math.abs(p - a);\n        var pb = Math.abs(p - b);\n        var pc = Math.abs(p - c);\n        if ((pa <= pb) && (pa <= pc)) {\n            return a;\n        }\n        else if (pb <= pc) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    };\n    _PngDecoder.prototype._processPixels = function (data, x, step, y, width) {\n        var sourceX = 0;\n        var destX = 0;\n        var size = 0;\n        var pixel = this._getPixel(data);\n        if (this._header._colorType === 0 || this._header._colorType === 3 || this._header._colorType === 4) {\n            size = 1;\n        }\n        else if (this._header._colorType === 2 || this._header._colorType === 6) {\n            size = 3;\n        }\n        if (this._decodedImageData && this._decodedImageData.length > 0) {\n            destX = x;\n            var depth = (this._header._bitDepth === 16) ? 8 : this._header._bitDepth;\n            var yStep = Math.floor((size * width * depth + 7) / 8);\n            for (sourceX = 0; sourceX < width; sourceX++) {\n                this._decodedImageData = this._setPixel(this._decodedImageData, pixel, this._inputBands * sourceX, size, destX, y, this._header._bitDepth, yStep);\n                destX += step;\n            }\n        }\n        var shades = (this._header._colorType & 4) !== 0 || this._shades;\n        if (shades) {\n            if ((this._header._colorType & 4) !== 0) {\n                if (this._header._bitDepth === 16) {\n                    for (var i = 0; i < width; ++i) {\n                        var temp = i * this._inputBands + size;\n                        var unsigned = _toUnsigned(pixel[Number.parseInt(temp.toString(), 10)], 32);\n                        pixel[Number.parseInt(temp.toString(), 10)] = _toSigned32(unsigned >> 8);\n                    }\n                }\n                var yStep = width;\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    this._maskData = this._setPixel(this._maskData, pixel, this._inputBands * sourceX + size, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n            else {\n                var yStep = width;\n                var dt = [0];\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    var index = pixel[Number.parseInt(sourceX.toString(), 10)];\n                    if (index < this._alpha.length) {\n                        dt[0] = this._alpha[Number.parseInt(index.toString(), 10)];\n                    }\n                    else {\n                        dt[0] = 255;\n                    }\n                    this._maskData = this._setPixel(this._maskData, dt, 0, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n        }\n    };\n    _PngDecoder.prototype._getPixel = function (data) {\n        if (this._header._bitDepth === 8) {\n            var pixel = Array(data.length).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            }\n            return pixel;\n        }\n        else if (this._header._bitDepth === 16) {\n            var pixel = Array(Math.floor(data.length / 2)).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = ((data[i * 2] & 0xff) << 8) + (data[i * 2 + 1] & 0xff);\n            }\n            return pixel;\n        }\n        else {\n            var pixel = Array(Math.floor((data.length * 8) / this._header._bitDepth)).fill(0);\n            var index = 0;\n            var p = Math.floor(8 / this._header._bitDepth);\n            var mask = (1 << this._header._bitDepth) - 1;\n            for (var n = 0; n < data.length; ++n) {\n                for (var i = p - 1; i >= 0; --i) {\n                    var hb = this._header._bitDepth * i;\n                    var d = data[Number.parseInt(n.toString(), 10)];\n                    pixel[index++] = ((hb < 1) ? d : _toSigned32(_toUnsigned(d, 32) >> hb)) & mask;\n                }\n            }\n            return pixel;\n        }\n    };\n    _PngDecoder.prototype._setPixel = function (imageData, data, offset, size, x, y, bitDepth, bpr) {\n        if (bitDepth === 8) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned(data[i + offset], 8);\n            }\n        }\n        else if (bitDepth === 16) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned((data[i + offset] >> 8), 8);\n            }\n        }\n        else {\n            var position = Math.floor((bpr * y + x) / (8 / bitDepth));\n            var t = data[Number.parseInt(offset.toString(), 10)]\n                << Number.parseInt((8 - bitDepth * (x % (8 / bitDepth)) - bitDepth).toString(), 10);\n            imageData[Number.parseInt(position.toString(), 10)] = imageData[Number.parseInt(position.toString(), 10)] | _toUnsigned(t, 8);\n        }\n        return imageData;\n    };\n    _PngDecoder.prototype._getImageDictionary = function () {\n        var data = [];\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var decodedString = '';\n        for (var i = 0; i < this._decodedImageData.length; i++) {\n            decodedString += String.fromCharCode(this._decodedImageData[Number.parseInt(i.toString(), 10)]);\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = this._isDecode && this._ideateDecode;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        if (this._bitsPerComponent === 16) {\n            dictionary.set('BitsPerComponent', 8);\n        }\n        else {\n            dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        }\n        if (!this._isDecode || !this._ideateDecode) {\n            dictionary.set('Filter', new _PdfName('FlateDecode'));\n        }\n        if ((this._header._colorType & 2) === 0) {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n        }\n        else {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceRGB'));\n        }\n        if (!this._isDecode || this._shades && !this._ideateDecode) {\n            dictionary.set('DecodeParms', this._getDecodeParams());\n        }\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        this._setMask();\n        return this._imageStream;\n    };\n    _PngDecoder.prototype._setMask = function () {\n        if (this._maskData && this._maskData.length > 0) {\n            this._maskStream = new _PdfStream(this._maskData, new _PdfDictionary());\n            this._maskStream._isCompress = this._isDecode && this._ideateDecode;\n            var dictionary = new _PdfDictionary();\n            dictionary.set('Type', new _PdfName('XObject'));\n            dictionary.set('Subtype', new _PdfName('Image'));\n            dictionary.set('Width', this._width);\n            dictionary.set('Height', this._height);\n            if (this._bitsPerComponent === 16) {\n                dictionary.set('BitsPerComponent', 8);\n            }\n            else {\n                dictionary.set('BitsPerComponent', this._bitsPerComponent);\n            }\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n            this._maskStream.dictionary = dictionary;\n            this._maskStream.bytes = new Uint8Array(this._maskData);\n            this._maskStream.end = this._maskStream.bytes.length;\n            this._maskStream.dictionary._updated = true;\n        }\n    };\n    _PngDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('Colors', this._colors);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _PngDecoder.prototype._getChunkType = function (chunk) {\n        switch (chunk) {\n            case 'IHDR':\n                return _PngChunkTypes.iHDR;\n            case 'PLTE':\n                return _PngChunkTypes.pLTE;\n            case 'IDAT':\n                return _PngChunkTypes.iDAT;\n            case 'IEND':\n                return _PngChunkTypes.iEND;\n            case 'bKGD':\n                return _PngChunkTypes.bKGD;\n            case 'cHRM':\n                return _PngChunkTypes.cHRM;\n            case 'gAMA':\n                return _PngChunkTypes.gAMA;\n            case 'hIST':\n                return _PngChunkTypes.hIST;\n            case 'pHYs':\n                return _PngChunkTypes.pHYs;\n            case 'sBIT':\n                return _PngChunkTypes.sBIT;\n            case 'tEXt':\n                return _PngChunkTypes.tEXt;\n            case 'tIME':\n                return _PngChunkTypes.tIME;\n            case 'tRNS':\n                return _PngChunkTypes.tRNS;\n            case 'zTXt':\n                return _PngChunkTypes.zTXt;\n            case 'sRGB':\n                return _PngChunkTypes.sRGB;\n            case 'iCCP':\n                return _PngChunkTypes.iCCP;\n            case 'iTXt':\n                return _PngChunkTypes.iTXt;\n            case 'Unknown':\n                return _PngChunkTypes.unknown;\n            default:\n                return null;\n        }\n    };\n    _PngDecoder.prototype._getFilterType = function (type) {\n        switch (type) {\n            case 1:\n                return _PngFilterTypes.sub;\n            case 2:\n                return _PngFilterTypes.up;\n            case 3:\n                return _PngFilterTypes.average;\n            case 4:\n                return _PngFilterTypes.paeth;\n            default:\n                return _PngFilterTypes.none;\n        }\n    };\n    return _PngDecoder;\n}(_ImageDecoder));\nexport { _PngDecoder };\nvar _PngHeader = /** @class */ (function () {\n    function _PngHeader() {\n        this._width = 0;\n        this._height = 0;\n        this._colorType = 0;\n        this._compression = 0;\n        this._bitDepth = 0;\n        this._interlace = 0;\n        this._filter = _PngFilterTypes.none;\n    }\n    return _PngHeader;\n}());\nvar _PngChunkTypes;\n(function (_PngChunkTypes) {\n    _PngChunkTypes[_PngChunkTypes[\"iHDR\"] = 0] = \"iHDR\";\n    _PngChunkTypes[_PngChunkTypes[\"pLTE\"] = 1] = \"pLTE\";\n    _PngChunkTypes[_PngChunkTypes[\"iDAT\"] = 2] = \"iDAT\";\n    _PngChunkTypes[_PngChunkTypes[\"iEND\"] = 3] = \"iEND\";\n    _PngChunkTypes[_PngChunkTypes[\"bKGD\"] = 4] = \"bKGD\";\n    _PngChunkTypes[_PngChunkTypes[\"cHRM\"] = 5] = \"cHRM\";\n    _PngChunkTypes[_PngChunkTypes[\"gAMA\"] = 6] = \"gAMA\";\n    _PngChunkTypes[_PngChunkTypes[\"hIST\"] = 7] = \"hIST\";\n    _PngChunkTypes[_PngChunkTypes[\"pHYs\"] = 8] = \"pHYs\";\n    _PngChunkTypes[_PngChunkTypes[\"sBIT\"] = 9] = \"sBIT\";\n    _PngChunkTypes[_PngChunkTypes[\"tEXt\"] = 10] = \"tEXt\";\n    _PngChunkTypes[_PngChunkTypes[\"tIME\"] = 11] = \"tIME\";\n    _PngChunkTypes[_PngChunkTypes[\"tRNS\"] = 12] = \"tRNS\";\n    _PngChunkTypes[_PngChunkTypes[\"zTXt\"] = 13] = \"zTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"sRGB\"] = 14] = \"sRGB\";\n    _PngChunkTypes[_PngChunkTypes[\"iCCP\"] = 15] = \"iCCP\";\n    _PngChunkTypes[_PngChunkTypes[\"iTXt\"] = 16] = \"iTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"unknown\"] = 17] = \"unknown\";\n})(_PngChunkTypes || (_PngChunkTypes = {}));\nvar _PngFilterTypes;\n(function (_PngFilterTypes) {\n    _PngFilterTypes[_PngFilterTypes[\"none\"] = 0] = \"none\";\n    _PngFilterTypes[_PngFilterTypes[\"sub\"] = 1] = \"sub\";\n    _PngFilterTypes[_PngFilterTypes[\"up\"] = 2] = \"up\";\n    _PngFilterTypes[_PngFilterTypes[\"average\"] = 3] = \"average\";\n    _PngFilterTypes[_PngFilterTypes[\"paeth\"] = 4] = \"paeth\";\n})(_PngFilterTypes || (_PngFilterTypes = {}));\n","import { _copyRange } from './../utils';\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                _copyRange(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            _copyRange(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        _copyRange(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\nexport { _DecompressedOutput };\n","import { _toUnsigned } from './../utils';\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return (_toUnsigned(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = _toUnsigned(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\nexport { _InBuffer };\n","import { _toUnsigned, _toSigned16 } from './../utils';\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = _toSigned16(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = _toSigned16(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = _toSigned16(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = _toSigned16(-avail);\n                            value = _toSigned16(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = _toSigned16(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = _toUnsigned((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\nexport { _HuffmanTree };\n","import { _InflaterState, _BlockType } from './enum';\nimport { _DecompressedOutput } from './decompressed-output';\nimport { _InBuffer } from './in-buffer';\nimport { _HuffmanTree } from './huffman-tree';\nimport { _toUnsigned, _copyRange } from './../utils';\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _DecompressedOutput();\n        this._input = new _InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_HuffmanTree._maxLengthTree + _HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _InflaterState.done || this._inflaterState === _InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _InflaterState.readingBType;\n        }\n        if (this._inflaterState === _InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _BlockType.dynamicType) {\n                this._inflaterState = _InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _BlockType.staticType) {\n                this._llTree = new _HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _InflaterState.decodeTop;\n            }\n            else if (this._blockType === _BlockType.unCompressedType) {\n                this._inflaterState = _InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.unCompressedByte1:\n                case _InflaterState.unCompressedByte2:\n                case _InflaterState.unCompressedByte3:\n                case _InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = _toUnsigned(bits, 8);\n        if (this._inflaterState === _InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if (_toUnsigned(this._bLength, 16) !== _toUnsigned((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write(_toUnsigned(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingTcBefore:\n            case _InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_HuffmanTree._maxLengthTree).fill(0);\n        _copyRange(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_HuffmanTree._maxDepthTree).fill(0);\n        _copyRange(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = _toUnsigned(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = _toUnsigned(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = _toUnsigned(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _BlockType.unCompressedType) {\n            return _BlockType.unCompressedType;\n        }\n        else if (type === _BlockType.staticType) {\n            return _BlockType.staticType;\n        }\n        else {\n            return _BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _InflaterState.readingHeader;\n            case 2:\n                return _InflaterState.readingBFinal;\n            case 3:\n                return _InflaterState.readingBType;\n            case 4:\n                return _InflaterState.readingNlCodes;\n            case 5:\n                return _InflaterState.readingNdCodes;\n            case 6:\n                return _InflaterState.readingCodes;\n            case 7:\n                return _InflaterState.readingClCodes;\n            case 8:\n                return _InflaterState.readingTcBefore;\n            case 9:\n                return _InflaterState.readingTcAfter;\n            case 10:\n                return _InflaterState.decodeTop;\n            case 11:\n                return _InflaterState.iLength;\n            case 12:\n                return _InflaterState.fLength;\n            case 13:\n                return _InflaterState.dCode;\n            case 15:\n                return _InflaterState.unCompressedAligning;\n            case 16:\n                return _InflaterState.unCompressedByte1;\n            case 17:\n                return _InflaterState.unCompressedByte2;\n            case 18:\n                return _InflaterState.unCompressedByte3;\n            case 19:\n                return _InflaterState.unCompressedByte4;\n            case 20:\n                return _InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _InflaterState.srFooter;\n            case 22:\n                return _InflaterState.rFooter;\n            case 23:\n                return _InflaterState.vFooter;\n            case 24:\n                return _InflaterState.done;\n            default:\n                return _InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _InflaterState.readingHeader:\n                return 0;\n            case _InflaterState.readingBFinal:\n                return 2;\n            case _InflaterState.readingBType:\n                return 3;\n            case _InflaterState.readingNlCodes:\n                return 4;\n            case _InflaterState.readingNdCodes:\n                return 5;\n            case _InflaterState.readingCodes:\n                return 6;\n            case _InflaterState.readingClCodes:\n                return 7;\n            case _InflaterState.readingTcBefore:\n                return 8;\n            case _InflaterState.readingTcAfter:\n                return 9;\n            case _InflaterState.decodeTop:\n                return 10;\n            case _InflaterState.iLength:\n                return 11;\n            case _InflaterState.fLength:\n                return 12;\n            case _InflaterState.dCode:\n                return 13;\n            case _InflaterState.unCompressedAligning:\n                return 15;\n            case _InflaterState.unCompressedByte1:\n                return 16;\n            case _InflaterState.unCompressedByte2:\n                return 17;\n            case _InflaterState.unCompressedByte3:\n                return 18;\n            case _InflaterState.unCompressedByte4:\n                return 19;\n            case _InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _InflaterState.srFooter:\n                return 21;\n            case _InflaterState.rFooter:\n                return 22;\n            case _InflaterState.vFooter:\n                return 23;\n            case _InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\nexport { _Inflater };\n","import { _isNullOrUndefined } from '../utils';\nimport { _Inflater } from './inflater';\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        if (_isNullOrUndefined(data)) {\n            this._data = data;\n        }\n        else {\n            this._data = [];\n        }\n        if (_isNullOrUndefined(leaveOpen)) {\n            this._leaveOpen = leaveOpen;\n        }\n        this._offset = offset;\n        this._inflater = new _Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if (_isNullOrUndefined(this._offset) && this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\nexport { _DeflateStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString, _bytesToString, _isNullOrUndefined } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n        this._isImage = false;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex, bytes) {\n        if (isHex === void 0) { isHex = false; }\n        if (typeof bytes === 'undefined' || bytes === null) {\n            bytes = this.getBytes();\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            return _bytesToString(bytes);\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        if (_isNullOrUndefined(bytes)) {\n            _this._bytes = bytes;\n        }\n        else {\n            _this._bytes = [];\n        }\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        this._crossReference._allowCatalog = true;\n        form._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef && pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj && obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O'), false, true).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U'), false, true).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id, false, true);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password, false, true);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'), false, true);\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'), false, true);\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'), false, true);\n            var userEncryption = _stringToBytes(dictionary.get('UE'), false, true);\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        var stringBytes = _stringToBytes(s, false, true);\n        var decryptedBytes = this._stringCipher._decryptBlock(stringBytes, true);\n        return _bytesToString(decryptedBytes);\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s, false, true), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s, false, true)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference, _isName } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException, _decodeText } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nimport { _CipherTransform } from './security/encryptor';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode, encryptor) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this._isColorSpace = false;\n        this._isPassword = false;\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this._encryptor = encryptor;\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (arguement1, arguement2, arguement3) {\n        var cipherTransform;\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                        return this.makeInlineImage(arguement1, arguement2, arguement3);\n                    }\n                    else if (arguement1 instanceof _CipherTransform) {\n                        return this.makeInlineImage(arguement1);\n                    }\n                    else {\n                        return this.makeInlineImage();\n                    }\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        var entry = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            entry = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            cipherTransform = arguement1;\n                            entry = this.getObject(arguement1);\n                        }\n                        else {\n                            entry = this.getObject(arguement1);\n                        }\n                        if (array.length === 0 && _isName(entry, 'Indexed')) {\n                            this._isColorSpace = true;\n                        }\n                        entry = _decodeText(entry, this._isColorSpace, this._isPassword);\n                        array.push(entry);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this._isColorSpace = false;\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        if (key === 'U' || key === 'O' || key === 'ID') {\n                            this._isPassword = true;\n                        }\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                        }\n                        var value = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            value = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            value = this.getObject(arguement1);\n                        }\n                        else {\n                            value = this.getObject();\n                        }\n                        value = _decodeText(value, this._isColorSpace, this._isPassword);\n                        this._isPassword = false;\n                        dictionary.set(key, value);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            if (arguement1 instanceof _CipherTransform) {\n                                cipherTransform = arguement1;\n                            }\n                            else if (arguement3 && typeof arguement2 === 'number') {\n                                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            }\n                            if (typeof arguement2 === 'boolean' && arguement2) {\n                                return this.makeStream(dictionary, cipherTransform, arguement2);\n                            }\n                            else {\n                                return this.makeStream(dictionary, cipherTransform);\n                            }\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (arguement1, arguement2, arguement3) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        var cipherTransform;\n        if (arguement3) {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n        }\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            if (arguement1 instanceof _CipherTransform) {\n                dictionary.set(key, this.getObject(arguement1));\n            }\n            else {\n                dictionary.set(key, this.getObject(arguement1, arguement2, arguement3));\n            }\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform, makeFilter) {\n        if (makeFilter === void 0) { makeFilter = false; }\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (!makeFilter) {\n            if (cipherTransform) {\n                stream = cipherTransform.createStream(stream, length);\n            }\n            stream = this.filter(stream, dictionary, length);\n        }\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString, _stringToBigEndianBytes, _getSize } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._offsetReference = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n        this._offsets = [];\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n        if (typeof this._prevXRefOffset === 'undefined' || this._prevXRefOffset === null) {\n            this._prevXRefOffset = startXRef;\n        }\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        var entrySize = trailerDictionary.get('Size');\n        if (this._entries.length < entrySize || this._entries.length === entrySize) {\n            this._nextReferenceNumber = entrySize;\n        }\n        else if (this._entries.length > entrySize) {\n            this._nextReferenceNumber = this._entries.length > 0 ? this._entries.length : 1;\n        }\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._document.fileStructure.isIncrementalUpdate) {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n            }\n            else {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.table;\n            }\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, makeFilter) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, false, this._encrypt);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !makeFilter) {\n            entry = parser.getObject(reference.objectNumber, reference.generationNumber, true);\n        }\n        else {\n            entry = parser.getObject(null, makeFilter);\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var buffer = [37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        if (!this._document.fileStructure.isIncrementalUpdate) {\n            this._currentLength = 0;\n            var objectCollection = new _PdfMainObjectCollection(this);\n            this._writeObjectCollection(objectCollection._mainObjectCollection, buffer);\n            var stream = new _PdfStream(buffer);\n            this._stream = stream;\n            this._document._stream = stream;\n            var array = new Uint8Array(this._stream.length);\n            array.set(this._stream.bytes);\n            array.set(buffer, 0);\n            return array;\n        }\n        else {\n            this._currentLength = this._stream.length;\n            var buffer_1 = [37, 80, 68, 70, 45];\n            this._writeString(\"\" + this._version + this._newLine, buffer_1);\n            buffer_1.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n            this._writeString(this._newLine, buffer_1);\n            if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                this._saveAsStream(this._currentLength, buffer_1);\n            }\n            else {\n                this._saveAsTable(this._currentLength, buffer_1);\n            }\n            var array = new Uint8Array(this._stream.length + buffer_1.length);\n            array.set(this._stream.bytes);\n            array.set(buffer_1, this._stream.length);\n            return array;\n        }\n    };\n    _PdfCrossReference.prototype._saveAsStream = function (currentLength, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var cipher = void 0;\n                if (_this._encrypt) {\n                    cipher = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                }\n                _this._updatedDictionary(currentLength, key, buffer, value, cipher);\n            }\n        });\n        this._cacheMap.forEach(function (value, key) {\n            if (value instanceof _PdfDictionary) {\n                if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                    _this._writeArchieveStream(objectStreamCollection, key, value);\n                }\n            }\n            else if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    _this._updatedDictionary(currentLength, key, buffer, value);\n                }\n            }\n        });\n        this._objectStream = undefined;\n        this._objectStreamCollection = objectStreamCollection;\n        this._writeXrefStream(buffer);\n    };\n    _PdfCrossReference.prototype._updatedDictionary = function (currentLength, key, buffer, value, // eslint-disable-line\n    cipher) {\n        this._indexes.push(key.objectNumber, 1);\n        this._offsets.push(currentLength + buffer.length);\n        this._writeObject(value, buffer, key, cipher);\n        value._updated = false;\n    };\n    _PdfCrossReference.prototype._writeXrefStream = function (buffer) {\n        var _this = this;\n        this._objectStreamCollection.forEach(function (value, key) {\n            value._save(buffer, _this._currentLength);\n            for (var i = 0; i < value._collection.length; i++) {\n                _this._indexes.push(value._collection[Number.parseInt(i.toString(), 10)]);\n            }\n            _this._indexes.push(key.objectNumber, 1);\n        });\n        var formatValue = Math.max(_getSize(this._currentLength + buffer.length), _getSize(this._nextReferenceNumber));\n        var newRef = this._getNextReference();\n        this._indexes.push(newRef.objectNumber, 1);\n        var newStartXref = this._currentLength + buffer.length;\n        var newXref = new _PdfDictionary(this);\n        newXref.set('Type', _PdfName.get('XRef'));\n        newXref.set('Index', this._indexes);\n        newXref.set('W', [1, formatValue, 1]);\n        this._copyTrailer(newXref);\n        if (this._ids && this._ids.length > 0) {\n            newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n        }\n        var newXrefData = [];\n        this._writeLong(0, 1, newXrefData);\n        this._writeLong(0, formatValue, newXrefData);\n        this._writeLong(-1, 1, newXrefData);\n        if (this._offsets.length > 0) {\n            for (var index = 0; index < this._offsets.length; index++) {\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(this._offsets[index], formatValue, newXrefData); // eslint-disable-line\n                this._writeLong(0, 1, newXrefData);\n            }\n        }\n        if (this._objectStreamCollection.size > 0) {\n            this._objectStreamCollection.forEach(function (value, key) {\n                for (var index = 0; index < value._length; index++) {\n                    _this._writeLong(2, 1, newXrefData);\n                    _this._writeLong(key.objectNumber, formatValue, newXrefData);\n                    _this._writeLong(index, 1, newXrefData);\n                }\n                _this._writeLong(1, 1, newXrefData);\n                _this._writeLong(value._archiveOffset, formatValue, newXrefData);\n                _this._writeLong(0, 1, newXrefData);\n            });\n        }\n        this._writeLong(1, 1, newXrefData);\n        this._writeLong(newStartXref, formatValue, newXrefData);\n        this._writeLong(0, 1, newXrefData);\n        newXref.set('Length', newXrefData.length);\n        var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n        var cipher;\n        if (this._encrypt) {\n            cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n        }\n        this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._saveAsTable = function (currentLength, buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfDictionary) {\n                dictionary = value;\n            }\n            else if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var offsetString = _this._processString((currentLength + buffer.length).toString(), 10);\n                var genString = _this._processString(key.generationNumber.toString(), 5);\n                tempBuffer += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                _this._writeObject(value, buffer, key);\n            }\n        });\n        var newStartXref = buffer.length + currentLength;\n        this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._writeXref = function (buffer, tempBuffer, newStartXref) {\n        this._writeString(tempBuffer, buffer);\n        this._writeString(\"trailer\" + this._newLine, buffer);\n        var newXref = new _PdfDictionary(this);\n        this._copyTrailer(newXref);\n        this._writeDictionary(newXref, buffer, this._newLine);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeXrefTable = function (buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        var collection = this._getSortedReferences(this._offsetReference); // eslint-disable-line\n        collection.forEach(function (value, key) {\n            var offsetString = _this._processString(value.toString(), 10);\n            var genString = _this._processString(key.generationNumber ? '0' : '', 5);\n            if (value !== 0) {\n                tempBuffer += offsetString + \" \" + genString + \" n\" + _this._newLine;\n            }\n            else {\n                tempBuffer += offsetString + \" \" + genString + \" f\" + _this._newLine;\n            }\n        });\n        var newStartXref = buffer.length;\n        var xrefHeader = \"xref\" + this._newLine;\n        var xrefEntry = \"0 \" + (collection.size + 1) + this._newLine;\n        var initialEntry = \"0000000000 65535 f\" + this._newLine;\n        this._writeString(xrefHeader + xrefEntry + initialEntry, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._processString = function (value, length) {\n        while (value.length < length) {\n            value = '0' + value;\n        }\n        return value;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        var reference = this._getNextReference();\n        newXref.set('Size', reference.objectNumber);\n        if (this._document.fileStructure.isIncrementalUpdate) {\n            newXref.set('Prev', this._prevXRefOffset);\n        }\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, // eslint-disable-line\n    buffer, reference, transform, isCrossReference) {\n        var _this = this;\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        else if (Array.isArray(obj) && obj.length > 0) {\n            this._writeString('[ ', buffer);\n            obj.forEach(function (value, index) {\n                if (value instanceof _PdfReference) {\n                    _this._writeString(value.objectNumber + \" \" + value.generationNumber + \" R\", buffer);\n                }\n                else if (Array.isArray(value)) {\n                    _this._writeString('[ ', buffer);\n                    value.forEach(function (nestedValue) {\n                        if (nestedValue instanceof _PdfReference) {\n                            _this._writeString(nestedValue.objectNumber + \" \" + nestedValue.generationNumber + \" R\", buffer);\n                        }\n                        else if (nestedValue instanceof _PdfName) {\n                            _this._writeString(\"/\" + nestedValue.name, buffer);\n                        }\n                        else {\n                            _this._writeString(nestedValue + \" \", buffer);\n                        }\n                    });\n                    _this._writeString(']', buffer);\n                }\n                else if (value instanceof _PdfName) {\n                    _this._writeString(\"/\" + value.name, buffer);\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, buffer, _this._newLine, transform, isCrossReference);\n                }\n                else {\n                    _this._writeString(value + \"\\n\", buffer);\n                }\n                if (index < obj.length - 1) {\n                    _this._writeString(' ', buffer);\n                }\n            });\n            this._writeString(']', buffer);\n            this._writeString('\\n', buffer);\n        }\n        else if (typeof obj === 'number') {\n            this._writeString(obj + \"\\n\", buffer);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var streamBuffer = [];\n        var value = stream.getString();\n        if (!isCrossReference) {\n            var byteArray = [];\n            for (var i = 0; i < value.length; i++) {\n                byteArray.push(value.charCodeAt(i));\n            }\n            if (stream._isCompress && !stream._isImage) {\n                var dataArray = new Uint8Array(byteArray);\n                var sw = new CompressedStreamWriter();\n                sw.write(dataArray, 0, dataArray.length);\n                sw.close();\n                value = sw.getCompressedString;\n                stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            if (value.name.indexOf(' ') !== -1) {\n                value.name = value.name.replace(/ /g, '#20'); // eslint-disable-line\n            }\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            var isUnicode = false;\n            for (var i = 0; i < value.length; i++) {\n                if (value.charCodeAt([i]) > 255) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            if (isUnicode) {\n                this._writeUnicodeString(value, buffer);\n            }\n            else {\n                this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeUnicodeString = function (value, buffer) {\n        var byteValues = _stringToBigEndianBytes(value);\n        byteValues.unshift(254, 255);\n        var data = [];\n        for (var i = 0; i < byteValues.length; i++) {\n            var byte = byteValues[Number.parseInt(i.toString(), 10)];\n            switch (byte) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                default:\n                    data.push(byte);\n                    break;\n            }\n        }\n        buffer.push('('.charCodeAt(0) & 0xff);\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[Number.parseInt(i.toString(), 10)] & 0xff);\n        }\n        buffer.push(')'.charCodeAt(0) & 0xff);\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        if (this._pendingRefs) {\n            this._pendingRefs.clear();\n            this._pendingRefs = undefined;\n        }\n        if (this._cacheMap) {\n            this._cacheMap.clear();\n        }\n        if (this._offsetReference) {\n            this._offsetReference.clear();\n        }\n        if (this._objectStreamCollection) {\n            this._objectStreamCollection.clear();\n        }\n        this._offsets = [];\n        this._startXRefQueue = [];\n        this._root = undefined;\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    _PdfCrossReference.prototype._writeObjectCollection = function (objectCollection, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        objectCollection.forEach(function (value, key) {\n            _this._writeObjectToBuffer(key, value, buffer, objectStreamCollection);\n        });\n        if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            this._objectStream = undefined;\n            this._objectStreamCollection = objectStreamCollection;\n            this._writeXrefStream(buffer);\n        }\n        else {\n            this._writeXrefTable(buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeArchieveStream = function (objectStreamCollection, key, value) {\n        if (typeof this._objectStream === 'undefined' || this._objectStream._length === 100) {\n            var archiveObj = new _PdfArchievedStream(this);\n            objectStreamCollection.set(archiveObj._reference, archiveObj);\n            this._objectStream = archiveObj;\n        }\n        this._objectStream._writeObject(key, value);\n    };\n    _PdfCrossReference.prototype._writeObjectToBuffer = function (key, value, buffer, // eslint-disable-line\n    objectStreamCollection) {\n        var cipher;\n        if (value instanceof _PdfDictionary && value.isCatalog) {\n            this._writeToBuffer(buffer, key, value);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var type = value.get('Filter');\n            var typeIsFilter = type && type.name === 'Standard';\n            if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                if (!typeIsFilter) {\n                    this._writeArchieveStream(objectStreamCollection, key, value);\n                }\n                else {\n                    this._writeToBuffer(buffer, key, value);\n                }\n            }\n            else {\n                this._offsetReference.set(key, buffer.length);\n                this._indexes.push(key.objectNumber, 1);\n                this._writeObject(value, buffer, key);\n            }\n        }\n        else {\n            if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && !dictionary.isCatalog) {\n                    if (this._encrypt) {\n                        cipher = this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    dictionary._updated = false;\n                }\n            }\n            else if ((!Array.isArray(value) || value.length === 0) && typeof value !== 'number') {\n                return;\n            }\n            this._writeToBuffer(buffer, key, value, cipher);\n        }\n    };\n    _PdfCrossReference.prototype._writeToBuffer = function (buffer, key, value, cipher) {\n        this._offsets.push(buffer.length);\n        this._offsetReference.set(key, buffer.length);\n        this._indexes.push(key.objectNumber, 1);\n        this._writeObject(value, buffer, key, cipher);\n    };\n    _PdfCrossReference.prototype._getSortedReferences = function (collection) {\n        var entriesArray = []; // eslint-disable-line\n        collection.forEach(function (value, key) {\n            entriesArray.push([key, value]);\n        });\n        entriesArray.sort(function (a, b) {\n            return a[0].objectNumber - b[0].objectNumber;\n        });\n        var sortedCollection = new Map(); // eslint-disable-line\n        var lastObjectNumber = 1;\n        for (var _i = 0, entriesArray_1 = entriesArray; _i < entriesArray_1.length; _i++) {\n            var _a = entriesArray_1[_i], key = _a[0], value = _a[1];\n            var currentObjectNumber = key.objectNumber;\n            while (lastObjectNumber < currentObjectNumber) {\n                sortedCollection.set({ objectNumber: lastObjectNumber }, 0);\n                lastObjectNumber++;\n            }\n            sortedCollection.set(key, value);\n            lastObjectNumber = currentObjectNumber + 1;\n        }\n        return sortedCollection;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\nvar _PdfArchievedStream = /** @class */ (function () {\n    function _PdfArchievedStream(crossReference) {\n        this._indexes = '';\n        this._length = 0;\n        this._crossReference = crossReference;\n        this._reference = crossReference._getNextReference();\n        this._archiveXRef = '';\n        this._updatedStream = [];\n        this._collection = [];\n    }\n    _PdfArchievedStream.prototype._writeObject = function (key, value) {\n        this._archiveXRef += key.objectNumber + \" \" + this._updatedStream.length + this._crossReference._newLine;\n        this._collection.push(key.objectNumber, 1);\n        this._crossReference._writeObject(value, this._updatedStream);\n        this._length++;\n    };\n    _PdfArchievedStream.prototype._save = function (buffer, currentLength) {\n        var data = [];\n        this._crossReference._writeString(this._archiveXRef, data);\n        this._crossReference._writeBytes(this._updatedStream, data);\n        var newDict = new _PdfDictionary(this._crossReference);\n        newDict.set('Type', _PdfName.get('ObjStm'));\n        newDict.set('N', this._length);\n        newDict.set('First', this._archiveXRef.length);\n        newDict.set('Length', data.length);\n        var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n        this._archiveOffset = currentLength + buffer.length;\n        var cipher;\n        if (this._crossReference._encrypt) {\n            cipher = this._crossReference._encrypt._createCipherTransform(this._reference.objectNumber, this._reference.generationNumber);\n        }\n        this._crossReference._writeObject(archiveStream, buffer, this._reference, cipher);\n    };\n    return _PdfArchievedStream;\n}());\nvar _PdfMainObjectCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_PdfMainObjectCollection` class.\n     *\n     * @private\n     * @param { _PdfCrossReference } collection - The cross-reference collection containing the PDF objects.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Create a new object collection instance\n     * let mainObjectCollection = new _PdfMainObjectCollection(document._crossReference);\n     * // Access the main object collection\n     * let objects = mainObjectCollection._mainObjectCollection;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function _PdfMainObjectCollection(collection) {\n        var _this = this;\n        this._pointer = 0;\n        if (!(collection._cacheMap instanceof Map)) {\n            throw new Error('Expected _cacheMap to be a Map.');\n        }\n        this._reference = [];\n        this._cache = collection._cacheMap;\n        this._mainObjectCollection = new Map(); // eslint-disable-line\n        var foundCatalog = false;\n        this._crossReference = collection;\n        this._cache.forEach(function (value, key) {\n            if (!foundCatalog && value instanceof _PdfDictionary && value.isCatalog) {\n                _this._addToMainObjectCollection(key, value);\n                foundCatalog = true;\n            }\n        });\n        this._parseObjectCollection();\n    }\n    _PdfMainObjectCollection.prototype._parseObjectCollection = function () {\n        var _this = this;\n        var _loop_1 = function () {\n            var collection = new Map(); // eslint-disable-line\n            var currentIndex = 0;\n            this_1._mainObjectCollection.forEach(function (value, key) {\n                if (currentIndex === _this._pointer) {\n                    collection.set(key, value);\n                    _this._parse(key, value);\n                }\n                currentIndex++;\n            });\n            this_1._pointer++;\n        };\n        var this_1 = this;\n        while (this._pointer < this._mainObjectCollection.size) {\n            _loop_1();\n        }\n        this._addReferencesToMainCollection();\n        return this._mainObjectCollection;\n    };\n    _PdfMainObjectCollection.prototype._addToMainObjectCollection = function (key, value) {\n        this._reference.push(key);\n        this._mainObjectCollection.set(key, value);\n    };\n    _PdfMainObjectCollection.prototype._parseFetchValue = function (reference) {\n        var fetchvalue = this._crossReference._fetch(reference); // eslint-disable-line\n        this._parse(reference, fetchvalue);\n    };\n    _PdfMainObjectCollection.prototype._parse = function (key, value) {\n        var _this = this;\n        if (value instanceof _PdfDictionary) {\n            this._parseDictionary(value);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._parseStream(key, value);\n        }\n        else if (value instanceof _PdfReference) {\n            this._parseFetchValue(value);\n        }\n        else if (Array.isArray(value) && value.length > 0) {\n            var isPdfReferenceArray = value.every(function (value) { return value instanceof _PdfReference; }); // eslint-disable-line\n            if (isPdfReferenceArray) {\n                value.forEach(function (ref) { return _this._parseFetchValue(ref); }); // eslint-disable-line\n            }\n            else {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        _this._parseFetchValue(item);\n                    }\n                });\n                if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                    this._addToMainObjectCollection(key, value);\n                }\n            }\n        }\n        else if (typeof value === 'number') {\n            if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                this._addToMainObjectCollection(key, value);\n            }\n        }\n    };\n    _PdfMainObjectCollection.prototype._addReferencesToMainCollection = function () {\n        var _this = this;\n        var objectsToWrite = []; // eslint-disable-line\n        this._cache.forEach(function (value, key) {\n            if (!_this._mainObjectCollection.has(key)) {\n                objectsToWrite.push({ key: key, value: value });\n            }\n        });\n        objectsToWrite.forEach(function (_a) {\n            var key = _a.key, value = _a.value;\n            _this._addToMainObjectCollection(key, value);\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseDictionary = function (element) {\n        var _this = this;\n        element.forEach(function (key, value) {\n            var processReference = function (ref) {\n                if (!_this._mainObjectCollection.has(ref) && _this._reference.indexOf(ref) === -1) {\n                    var fetchValue = _this._crossReference._fetch(ref); // eslint-disable-line\n                    if (fetchValue instanceof _PdfReference) {\n                        fetchValue = _this._crossReference._fetch(fetchValue);\n                    }\n                    if (fetchValue instanceof _PdfBaseStream) {\n                        _this._parseStream(ref, fetchValue);\n                    }\n                    else {\n                        _this._addToMainObjectCollection(ref, fetchValue);\n                    }\n                }\n            };\n            if (value instanceof _PdfReference) {\n                processReference(value);\n            }\n            else if (Array.isArray(value)) {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        processReference(item);\n                    }\n                    else if (item instanceof _PdfDictionary) {\n                        _this._parseDictionary(item);\n                    }\n                });\n            }\n            else if (value instanceof _PdfDictionary) {\n                _this._parseDictionary(value);\n            }\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseStream = function (key, element) {\n        this._parseDictionary(element.dictionary);\n        if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n            var type = element.dictionary.get('Type');\n            var subtype = element.dictionary.get('Subtype');\n            var isUpdated = element.dictionary._updated;\n            var uncompressedValue = void 0;\n            if (isUpdated || (type && (type.name === 'XObject' || type.name === 'Metadata') &&\n                (subtype.name === 'Form' || subtype.name === 'XML'))) {\n                uncompressedValue = this._crossReference._fetch(key);\n            }\n            else {\n                uncompressedValue = this._crossReference._fetch(key, true);\n                uncompressedValue._isCompress = false;\n            }\n            this._addToMainObjectCollection(key, uncompressedValue);\n        }\n    };\n    return _PdfMainObjectCollection;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex, _isNullOrUndefined } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfWidgetAnnotation } from './../annotations/annotation';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._isDefaultAppearance = false;\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._isNeedAppearances = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n            this._isNeedAppearances = true;\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                field = this._parseFields(dictionary, ref);\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    PdfForm.prototype._parseFields = function (dictionary, reference) {\n        var field;\n        if (dictionary) {\n            var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n            var fieldFlags = 0;\n            var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n            if (typeof flag !== 'undefined') {\n                fieldFlags = flag;\n            }\n            if (key) {\n                switch (key.name.toLowerCase()) {\n                    case 'tx':\n                        field = PdfTextBoxField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                    case 'btn':\n                        if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                            field = PdfButtonField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                            field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfCheckBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'ch':\n                        if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                            field = PdfComboBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfListBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'sig':\n                        field = PdfSignatureField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._root._updated = true;\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        this._isNeedAppearances = true;\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = void 0;\n                    if (item) {\n                        page = item._getPage();\n                        if (page) {\n                            page._removeAnnotation(item._ref);\n                        }\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n            this._reorderParsedAnnotations(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    PdfForm.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedFields.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedFields = result;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._isDefaultAppearance = value;\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (_isNullOrUndefined(this._fieldCollection) && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var hasNoKids = false;\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(fieldDictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                hasNoKids = true;\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (fieldDictionary) {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        if (hasNoKids && (fieldFlags & _FieldFlag.radio) !== 0) {\n                            continue;\n                        }\n                        else {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (_isNullOrUndefined(kids) && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (_isNullOrUndefined(entry)) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (dictionary && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference && kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference && kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (kidDictionary && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten, pageToImport) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field && !field._isLoaded && typeof field._tabIndex !== 'undefined' && field._tabIndex >= 0) {\n                var page = field._page;\n                if (page &&\n                    page._pageDictionary.has('Annots') &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual || this._tabOrder === PdfFormFieldsTabOrder.manual)) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    for (var i_1 = 0; i_1 < field.itemsCount; i_1++) {\n                        var item = field.itemAt(i_1);\n                        if (item && item instanceof PdfWidgetAnnotation) {\n                            var index = annots.indexOf(item._ref);\n                            if (index < 0) {\n                                index = field._annotationIndex;\n                            }\n                            if (index >= 0) {\n                                var annotations = page.annotations._reArrange(field._ref, field._tabIndex, index);\n                                page._pageDictionary.update('Annots', annotations);\n                                page._pageDictionary._updated = true;\n                            }\n                        }\n                    }\n                }\n            }\n            if (field && ((pageToImport && field.page === pageToImport) || !pageToImport)) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten || (isFlatten && pageToImport && field.page === pageToImport)) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && !page1._isNew && page1 instanceof PdfPage && page2 && !page2._isNew && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none ||\n                        this._tabOrder === PdfFormFieldsTabOrder.structure ||\n                        this._tabOrder === PdfFormFieldsTabOrder.widget) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary && dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (_isNullOrUndefined(kids) && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (_isNullOrUndefined(this._annotationObjects) && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (_isNullOrUndefined(this._table) && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary) {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    if (annotations._comments && annotations._comments.length > 0) {\n                                        annotations._comments = [];\n                                    }\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (this._groupHolders && this._groupHolders.length > 0) {\n                for (var i = 0; i < this._groupHolders.length; i++) {\n                    var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                    if (dictionary && dictionary.has('IRT')) {\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo) {\n                            if (this._groupReferences && this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n            }\n            this._groupHolders = [];\n            this._groupReferences = new Map();\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (_this._crossReference && _this._crossReference._fetch && primitive) {\n                            var inReplyToDictionary = _this._crossReference._fetch(primitive);\n                            if (inReplyToDictionary && inReplyToDictionary.has('NM')) {\n                                var input = inReplyToDictionary.get('NM');\n                                if (input !== null && typeof input !== 'undefined') {\n                                    _this.fdfString += '(' + _this._getFormattedString(input) + ')';\n                                }\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (_isNullOrUndefined(array) && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n        this._incrementalUpdate = true;\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFileStructure.prototype, \"isIncrementalUpdate\", {\n        /**\n         * Gets the boolean flag indicating whether the update is incremental.\n         *\n         * @returns { boolean } - Returns true if the PDF document supports incremental updates, otherwise false\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the incremental update\n         * let incrementalUpdate: boolean = fileStructure.isIncrementalUpdate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._incrementalUpdate;\n        },\n        /**\n         * Sets the boolean flag indicating whether the update is incremental.\n         *\n         * @param {boolean} value - If `true`, enables incremental updates for the PDF document; otherwise, disables it.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the incremental updates\n         * fileStructure.isIncrementalUpdate = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._incrementalUpdate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","/**\n * `PdfPageImportOptions` class represents to customize the support of import PDF pages\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Options to customize the support of import PDF pages.\n * let options: PdfPageImportOptions = new PdfPageImportOptions();\n * // Sets the target page index to import\n * options.targetIndex = 1;\n * // Sets the rotation angle of the page to import\n * options.rotation = PdfRotationAngle.angle180;\n * // Sets the boolean value indicating whether the optimize resources while import pages or not\n * options.optimizeResources = true;\n * // Copy the first page and add it as second page with page rotation\n * document.importPage(0, options);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageImportOptions = /** @class */ (function () {\n    function PdfPageImportOptions() {\n        this._optimizeResources = true;\n        this._groupFormFields = false;\n    }\n    Object.defineProperty(PdfPageImportOptions.prototype, \"targetIndex\", {\n        /**\n         * Gets the target page index to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the target page index to import\n         * let targetIndex: number = options.targetIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._targetIndex;\n        },\n        /**\n         * Sets the target page index to import\n         *\n         * @param {number} value Target page index to import.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the target page index to import\n         * options.targetIndex = 1;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._targetIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the rotation angle of the page to import\n         * let rotation: PdfRotationAngle = options.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the page to import\n         *\n         * @param {PdfRotationAngle} value Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the rotation angle of the page to import\n         * options.rotation = PdfRotationAngle.angle270;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"optimizeResources\", {\n        /**\n         * Gets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @returns {boolean} Indicates resource optimization.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the optimize resources while import pages or not\n         * let resource: optimizeResources = options.optimizeResources;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._optimizeResources;\n        },\n        /**\n         * Sets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @param {boolean} value Indicates resource optimization.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the optimize resources while import pages or not\n         * options.optimizeResources = true;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._optimizeResources = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"groupFormFields\", {\n        /**\n         * Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @returns {boolean} value Indicates form fields grouping.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * let groupFormfields: number = options.groupFormFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._groupFormFields;\n        },\n        /**\n         * Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @param {boolean} value Indicates form fields grouping\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * options.groupFormFields = true;\n         * // Copy the first page and add it as second page.\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._groupFormFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageImportOptions;\n}());\nexport { PdfPageImportOptions };\n","import { PdfWidgetAnnotation } from './annotations/annotation';\nimport { PdfPageOrientation } from './enumerator';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfButtonField, PdfCheckBoxField, PdfComboBoxField, PdfListField, PdfRadioButtonListField, PdfSignatureField, PdfTextBoxField } from './form/field';\nimport { PdfPageSettings } from './pdf-document';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfDestination } from './pdf-page';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _getItemValue } from './utils';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './base-stream';\nvar _PdfMergeHelper = /** @class */ (function () {\n    function _PdfMergeHelper(crossReference, destination, source, pageReference, options) {\n        this._namedDestinations = []; // eslint-disable-line\n        this._bookmarks = []; // eslint-disable-line\n        this._fields = []; // eslint-disable-line\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference = new Map();\n        this._destination = []; // eslint-disable-line\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._isLayersPresent = false;\n        this._fieldNames = [];\n        this._options = new PdfPageImportOptions();\n        this._kidsReference = []; // eslint-disable-line\n        this._formFieldsCollection = new Map();\n        this._formFields = [];\n        this._isDuplicatePage = false;\n        this._fieldCount = 0;\n        this._crossReference = crossReference;\n        this._destinationDocument = destination;\n        this._sourceDocument = source;\n        this._pageReference = pageReference;\n        if (typeof options !== 'undefined') {\n            this._options = options;\n        }\n        this._copier = new _PdfCopier(this._crossReference, this._sourceDocument._crossReference);\n    }\n    _PdfMergeHelper.prototype._importPages = function (page, index, layers, isCopiedPage, options, isSplitDocument) {\n        var _this = this;\n        var template;\n        var newPage;\n        var pageDictionary = page._pageDictionary;\n        this._isDuplicatePage = isCopiedPage;\n        if (!options) {\n            this._options.rotation = page.rotation;\n        }\n        else {\n            this._options.rotation = options.rotation;\n        }\n        if (typeof index === 'number') {\n            newPage = this._insertNewPage(page, index);\n        }\n        else if (this._isDuplicatePage) {\n            newPage = this._insertNewPage(page, page._pageIndex + 1);\n        }\n        else {\n            newPage = this._insertNewPage(page);\n        }\n        if ((isCopiedPage || isSplitDocument) && this._options.optimizeResources) {\n            var newContents_1 = []; // eslint-disable-line\n            pageDictionary.forEach(function (key, value) {\n                if (key === 'Contents' && newContents_1.length === 0) {\n                    var contents = value; // eslint-disable-line\n                    if (contents instanceof _PdfReference) {\n                        var pageContent = isSplitDocument ? _this._copier._copy(contents) : contents; // eslint-disable-line\n                        newPage._pageDictionary.update(key, pageContent);\n                    }\n                    else if (contents instanceof Array) {\n                        for (var i = 0; i < contents.length; i++) {\n                            var newContent = isSplitDocument ? (_this._copier._copy(contents[Number.parseInt(i.toString(), 10)])) : // eslint-disable-line\n                                contents[Number.parseInt(i.toString(), 10)];\n                            newContents_1.push(newContent);\n                        }\n                        newPage._pageDictionary.update(key, newContents_1);\n                    }\n                }\n                else if (key === 'Resources' && value) {\n                    var resourceValue = isSplitDocument ? _this._copier._copy(value) : value; // eslint-disable-line\n                    if (resourceValue) {\n                        newPage._pageDictionary.update(key, resourceValue);\n                    }\n                }\n                else if (key !== 'Resources' && key !== 'MediaBox' && key !== 'CropBox' && key !== 'Parent' && key !== 'Annots'\n                    && key !== 'Contents' && key !== 'Rotate') {\n                    newPage._pageDictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            template = page._contentTemplate;\n            newPage.graphics.drawTemplate(template, { x: 0, y: 0, width: template._size[0], height: template._size[1] });\n            template._content.dictionary.update('Resources', this._copier._copy(pageDictionary.getRaw('Resources')));\n            this._pageReference.set(pageDictionary, newPage);\n            if (!isCopiedPage) {\n                this._bookmarksPageLinkReference.set(page._ref, newPage._pageIndex);\n            }\n        }\n        if (pageDictionary.has('Annots')) {\n            this._importAnnotation(page, newPage);\n            if (typeof this._options !== 'undefined' && this._options.groupFormFields && this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._formFieldsGroupingSupport(this._sourceDocument.form, page, newPage);\n            }\n            else if (this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._importFormField(page, this._sourceDocument.form, newPage, this._sourceDocument._crossReference);\n            }\n        }\n        if (!isCopiedPage) {\n            var bookMarkMap = this._sourceDocument._parseBookmarkDestination();\n            if (bookMarkMap && bookMarkMap.has(page)) {\n                var bookmarks = bookMarkMap.get(page);\n                for (var i = 0; i < bookmarks.length; i++) {\n                    this._bookmarks.push(bookmarks[Number.parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if ((!isCopiedPage && layers) || !this._options.optimizeResources) {\n            this._mergeLayer(newPage._pageDictionary, pageDictionary, this._sourceDocument._crossReference);\n        }\n        newPage._pageDictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importAnnotation = function (page, newPage) {\n        var array = []; // eslint-disable-line\n        var dest; // eslint-disable-line\n        var isDestination = false;\n        var oldCollection = page.annotations;\n        var count = oldCollection.count;\n        for (var i = 0; i < count; i++) {\n            var annotationReference = oldCollection._annotations[Number.parseInt(i.toString(), 10)];\n            if (annotationReference) {\n                var annotationDictionary = this._sourceDocument._crossReference._fetch(annotationReference);\n                if (annotationDictionary) {\n                    if (annotationDictionary.has('Dest')) {\n                        dest = [];\n                        var destinationArray = annotationDictionary.get('Dest'); // eslint-disable-line\n                        var destination = annotationDictionary._get('Dest'); // eslint-disable-line\n                        if (destinationArray instanceof Array) {\n                            var destArray = destinationArray; // eslint-disable-line\n                            for (var j = 0; j < destArray.length; j++) {\n                                dest.push(destArray[Number.parseInt(j.toString(), 10)]);\n                            }\n                            isDestination = true;\n                        }\n                        else if (destination instanceof _PdfReference) {\n                            dest.push(destination);\n                        }\n                    }\n                    if (dest && dest.length > 0) {\n                        this._destination.push(dest);\n                    }\n                    if (annotationDictionary.has('OC')) {\n                        var reference = annotationDictionary.getRaw('OC'); // eslint-disable-line\n                        if (reference instanceof _PdfReference) {\n                            this._annotationLayer.set(i, reference);\n                        }\n                    }\n                    var copiedAnnotationReference = this._copier._copy(annotationReference);\n                    var copiedAnnotationDictionary = this._destinationDocument._crossReference.\n                        _fetch(copiedAnnotationReference);\n                    if (isDestination) {\n                        copiedAnnotationDictionary.update('Dest', dest);\n                    }\n                    copiedAnnotationDictionary.update('P', newPage._ref);\n                    this._crossReference._cacheMap.set(copiedAnnotationReference, copiedAnnotationDictionary);\n                    array.push(copiedAnnotationReference);\n                }\n            }\n            isDestination = false;\n            dest = [];\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._formFieldsGroupingSupport = function (form, oldPage, newPage) {\n        var array = [];\n        var fieldNames = [];\n        var kidsArray = [];\n        var formFields;\n        var drEntry = form._dictionary.get('DR');\n        if (form._dictionary.has('DR')) {\n            drEntry = form._dictionary.get('DR');\n        }\n        if (newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        if (oldPage._pageDictionary.has('Annots')) {\n            kidsArray = oldPage._pageDictionary.get('Annots');\n        }\n        if (!this._isDuplicatePage) {\n            formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                fieldNames.push(formFields.fieldAt(k).name);\n            }\n        }\n        for (var i = 0; i < form.count; i++) {\n            var field = form.fieldAt(i);\n            var formField = void 0;\n            var destinationKids = [];\n            var sourceKids = field._dictionary.get('Kids');\n            if (fieldNames.indexOf(field.name) !== -1 || this._isDuplicatePage) {\n                if (!this._isDuplicatePage) {\n                    formField = formFields.fieldAt(fieldNames.indexOf(field.name));\n                    if (formField._dictionary.get('Kids')) {\n                        destinationKids = formField._dictionary.get('Kids');\n                    }\n                }\n                else {\n                    formField = field;\n                    destinationKids = sourceKids;\n                }\n                field._isDuplicatePage = true;\n                if ((field instanceof PdfSignatureField && formField instanceof PdfSignatureField) || !(field instanceof\n                    PdfSignatureField)) {\n                    if (sourceKids !== undefined && sourceKids.length > 0) {\n                        for (var j = 0; j < sourceKids.length; j++) {\n                            var fieldItem = field.itemAt(j); // eslint-disable-line\n                            if (fieldItem.page === oldPage) {\n                                formField._page = newPage;\n                                array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, j, i, drEntry, fieldItem);\n                            }\n                        }\n                    }\n                    else {\n                        array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, 0, i, drEntry);\n                    }\n                }\n            }\n            else {\n                array = this._insertFormFields(i, form._crossReference, field, form, newPage._ref, array, kidsArray);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._groupFormFieldsKids = function (destinationField, field, kidsArray, destKids, oldKids, ref, array, index, fieldIndex, drEntry, widget) {\n        if (field._dictionary.has('Kids') && destinationField._dictionary.has('Kids')) {\n            if (kidsArray.indexOf(oldKids[Number.parseInt(index.toString(), 10)]) !== -1) {\n                var oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n                var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n                dictionary.update('P', ref);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                array.push(reference);\n                dictionary.update('Parent', destinationField._ref);\n                destKids.push(reference);\n                dictionary._updated = true;\n                destinationField._dictionary._updated = true;\n                if (!this._isDuplicatePage) {\n                    if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n                        delete dictionary._map.AS;\n                    }\n                    this._createAppearance(destinationField, field, oldDictionary, dictionary, drEntry, widget);\n                }\n            }\n        }\n        else if (field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids') || this._isDuplicatePage) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary, !this._isDuplicatePage);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, destinationField._dictionary);\n        }\n        else if ((!field._dictionary.has('Kids') && destinationField._dictionary.has('Kids'))) {\n            var fieldDict = this._copier._copyDictionary(field._dictionary);\n            this._updateFieldDictionary(fieldDict, ref, destinationField._ref);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, fieldDict);\n            destKids.push(reference);\n            array.push(reference);\n            destinationField._dictionary._updated = true;\n            this._createAppearance(destinationField, field, field._dictionary, fieldDict, drEntry, widget);\n        }\n        else if (!field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids')) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary);\n            var formFieldDict = this._copier._copyDictionary(field._dictionary, !this._isDuplicatePage);\n            this._removeFieldDictionary(formFieldDict, ['Parent', 'FT', 'T', 'Ff']);\n            formFieldDict.update('P', ref);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDict);\n        }\n        return array;\n    };\n    _PdfMergeHelper.prototype._updateFieldsWithKids = function (destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDictionary) {\n        var newFieldReference = this._crossReference._getNextReference();\n        var newFieldDict = this._createNewFieldDictionary(fieldDictionary, destinationField._dictionary);\n        newFieldDict.objId = newFieldReference.toString();\n        this._crossReference._cacheMap.set(newFieldReference, newFieldDict);\n        var newField = this._destinationDocument.form._parseFields(newFieldDict, newFieldReference);\n        destinationField._dictionary.update('Parent', newFieldReference);\n        newField._dictionary._updated = true;\n        this._updateFieldDictionary(fieldDictionary, ref, newFieldReference);\n        this._destinationDocument.form._dictionary._updated = true;\n        var oldDictionary;\n        if (oldKids !== undefined && oldKids.length > 0) {\n            oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n        }\n        else {\n            oldDictionary = formFieldDictionary;\n        }\n        var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n        if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n            delete dictionary._map.AS;\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, dictionary);\n        dictionary.update('P', ref);\n        array.push(reference);\n        dictionary.update('Parent', newField._ref);\n        var kidsElement = [];\n        kidsElement.push(destinationField._ref);\n        kidsElement.push(reference);\n        dictionary._updated = true;\n        destinationField._dictionary._updated = true;\n        newFieldDict.update('Kids', kidsElement);\n        newField._kids = kidsElement;\n        this._formFieldsCollection.set(fieldIndex, newFieldReference);\n        this._destinationDocument.form._parsedFields.set(fieldIndex, newField);\n        if (!this._isDuplicatePage) {\n            this._createAppearance(newField, field, oldDictionary, dictionary, drEntry);\n        }\n        newFieldDict._updated = true;\n    };\n    _PdfMergeHelper.prototype._removeFieldDictionary = function (dictionary, keys) {\n        keys.forEach(function (key) {\n            if (dictionary.has(key)) {\n                delete dictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return dictionary;\n    };\n    _PdfMergeHelper.prototype._updateFieldDictionary = function (dictionary, pageRef, parentRef) {\n        dictionary = this._removeFieldDictionary(dictionary, ['Parent', 'FT', 'T', 'Ff']);\n        dictionary.update('P', pageRef);\n        dictionary.update('Parent', parentRef);\n        dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._createNewFieldDictionary = function (fieldDictionary, destDictionary) {\n        var newFieldDict = new _PdfDictionary(this._crossReference);\n        ['Parent', 'FT', 'T', 'V', 'Ff', 'TU', 'Opt', 'I'].forEach(function (key) {\n            if (fieldDictionary.has(key)) {\n                newFieldDict.update(key, fieldDictionary.get(key));\n                delete fieldDictionary._map[key]; // eslint-disable-line\n                delete destDictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return newFieldDict;\n    };\n    _PdfMergeHelper.prototype._getItemStyle = function (item, field) {\n        var mkDictionary = item._dictionary.get('MK');\n        if (mkDictionary && mkDictionary.has('CA')) {\n            item._styleText = mkDictionary.get('CA').charAt(0);\n        }\n        else {\n            item._styleText = (field instanceof PdfRadioButtonListField) ? 'l' : '4';\n        }\n    };\n    _PdfMergeHelper.prototype._createAppearance = function (destinationField, field, oldDictionary, dictionary, drEntry, widget) {\n        var previousIndex = destinationField._kidsCount - 1;\n        var itemValue;\n        if (destinationField instanceof PdfCheckBoxField) {\n            var item = destinationField.itemAt(previousIndex);\n            item._enableGrouping = true;\n            this._getItemStyle(item, destinationField);\n            if (field instanceof PdfRadioButtonListField) {\n                item._dictionary.update('AS', _PdfName.get('Off'));\n                itemValue = _getItemValue(oldDictionary);\n            }\n            else {\n                item._postProcess(destinationField.checked ? 'Yes' : 'Off');\n            }\n            destinationField._drawAppearance(item, itemValue);\n        }\n        else if (destinationField instanceof PdfRadioButtonListField) {\n            var item = destinationField.itemAt(previousIndex);\n            this._getItemStyle(item, destinationField);\n            if (item._dictionary.has('AS')) {\n                item._postProcess(item._dictionary.get('AS').name);\n            }\n            else {\n                item._postProcess('Off');\n            }\n            item._enableGrouping = true;\n            destinationField._enableGrouping = true;\n            destinationField._drawAppearance(item);\n        }\n        else if (destinationField instanceof PdfListField) {\n            var item = destinationField.itemAt(previousIndex);\n            if (typeof widget !== 'undefined') {\n                item.rotationAngle = widget.rotationAngle;\n            }\n            if (item && !destinationField._checkFieldFlag(item._dictionary)) {\n                item._enableGrouping = true;\n                var template = destinationField._createAppearance(item);\n                destinationField._addAppearance(item._dictionary, template, 'N');\n                item._dictionary._updated = true;\n            }\n        }\n        else if (destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof\n            PdfSignatureField) {\n            var widgetAnnotation = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n            if (typeof widget !== 'undefined' && widget !== null && destinationField instanceof PdfSignatureField) {\n                destinationField._createAppearance(widget, false);\n            }\n            else {\n                widgetAnnotation.setAppearance(true);\n                widgetAnnotation._enableGrouping = true;\n                var pdfFont = void 0;\n                if (typeof widget !== 'undefined' && widget !== null) {\n                    pdfFont = this._obtainFont(widget._dictionary, drEntry);\n                }\n                else {\n                    pdfFont = this._obtainFont(dictionary, drEntry);\n                }\n                widgetAnnotation._pdfFont = pdfFont;\n                if (destinationField instanceof PdfSignatureField) {\n                    destinationField._createAppearance(widgetAnnotation, false);\n                }\n                else {\n                    destinationField._postProcess(false, widgetAnnotation);\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._obtainFont = function (item, formDictionary) {\n        var fontFamily = '';\n        var fontSize = 8;\n        var pdfFont;\n        if (item && (item.has('DS') || item.has('DA'))) {\n            if (item.has('DS')) {\n                var collection = item.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    if (fontSize === 0) {\n                        fontSize = 8;\n                    }\n                }\n            }\n        }\n        fontFamily = fontFamily.trim();\n        var fontStyle = PdfFontStyle.regular;\n        var baseFontName;\n        if (typeof formDictionary != 'undefined' && formDictionary.has('Font')) {\n            var dictionary = formDictionary.get('Font').get(fontFamily);\n            if (typeof dictionary !== 'undefined') {\n                baseFontName = dictionary.get('BaseFont').name;\n                fontStyle = this._getFontStyle(baseFontName);\n            }\n        }\n        switch (fontFamily) {\n            case 'Helv':\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n            case 'Courier':\n            case 'Cour':\n                pdfFont = new PdfStandardFont(PdfFontFamily.courier, fontSize, fontStyle);\n                break;\n            case 'Symb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.symbol, fontSize, fontStyle);\n                break;\n            case 'TiRo':\n            case 'TiIt':\n                pdfFont = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, fontStyle);\n                break;\n            case 'ZaDb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, fontStyle);\n                break;\n            default:\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n        }\n        return pdfFont;\n    };\n    _PdfMergeHelper.prototype._getFontStyle = function (fontStyle) {\n        var style = PdfFontStyle.regular;\n        if (fontStyle.includes('Bold')) {\n            style = PdfFontStyle.bold;\n        }\n        else if (fontStyle.includes('Italic')) {\n            style = PdfFontStyle.italic;\n        }\n        return style;\n    };\n    _PdfMergeHelper.prototype._importFormField = function (page, pdfForm, newPage, crossReference) {\n        var form = this._destinationDocument.form;\n        var array = [];\n        if (newPage && newPage._pageDictionary && newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        var kidsArray = [];\n        var widgetArray = [];\n        if (this._destinationDocument.form._dictionary.has('Fields')) {\n            var formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                var name_2 = formFields.fieldAt(k).name;\n                this._fieldNames.push(name_2);\n            }\n        }\n        if (page._pageDictionary.has('Annots')) {\n            widgetArray = page._pageDictionary.get('Annots');\n        }\n        var count = pdfForm.count;\n        for (var i = 0; i < count; ++i) {\n            var pdfField = pdfForm.fieldAt(i);\n            if (pdfField._dictionary.has('Kids')) {\n                kidsArray = pdfField._dictionary.get('Kids');\n                if (kidsArray.length > 1) {\n                    for (var j = 0; j < kidsArray.length; j++) {\n                        var fieldItem = pdfField.itemAt(j); // eslint-disable-line\n                        if (fieldItem.page === page) {\n                            array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                            break;\n                        }\n                    }\n                }\n                else if (kidsArray.length === 1) {\n                    if (pdfField.page === page) {\n                        array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                    }\n                }\n            }\n            else {\n                if (pdfField.page === page) {\n                    array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                }\n            }\n        }\n        if (pdfForm._dictionary.has('DR')) {\n            var dr = pdfForm._dictionary.get('DR');\n            var drDictionary = this._copier._copyDictionary(dr); // eslint-disable-line\n            var font = void 0; // eslint-disable-line\n            if (drDictionary.has('Font')) {\n                font = drDictionary.get('Font');\n            }\n            if (this._destinationDocument.form._dictionary.has('DR')) {\n                var curreneDR = this._destinationDocument.form._dictionary.get('DR');\n                if (curreneDR.has('Font')) {\n                    var currentFont_1 = curreneDR.get('Font'); // eslint-disable-line\n                    if (font) {\n                        font.forEach(function (key, value) {\n                            currentFont_1.set(key, value);\n                        });\n                    }\n                    currentFont_1._updated = true;\n                }\n            }\n            else {\n                this._destinationDocument.form._dictionary.update('DR', drDictionary);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._insertFormFields = function (index, crossReference, pdfField, form, ref, array, kidsArray) {\n        var dictionary = new _PdfDictionary();\n        if (pdfField._dictionary.has('Kids')) {\n            pdfField._dictionary.forEach(function (key, value) {\n                if (key !== 'Kids') {\n                    dictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            dictionary = this._copier._copyDictionary(pdfField._dictionary);\n        }\n        var newReference = this._crossReference._getNextReference();\n        dictionary.objId = newReference.toString();\n        var field = form._parseFields(dictionary, ref);\n        this._crossReference._cacheMap.set(newReference, field._dictionary);\n        if (pdfField._dictionary.has('Kids')) {\n            var oldKids = pdfField._dictionary.get('Kids');\n            var kids = [];\n            for (var j = 0; j < oldKids.length; j++) {\n                if ((kidsArray.indexOf(oldKids[Number.parseInt(j.toString(), 10)]) !== -1)) {\n                    var oldDictionary = pdfField._crossReference._fetch(oldKids[Number.parseInt(j.toString(), 10)]);\n                    var dict = this._copier._copyDictionary(oldDictionary);\n                    dict.update('P', ref);\n                    dict.update('Parent', newReference);\n                    dict._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, dict);\n                    array.push(reference);\n                    kids.push(reference);\n                }\n            }\n            dictionary.update('Kids', kids);\n            field._kids = kids;\n        }\n        else {\n            field._dictionary.update('P', ref);\n            array.push(newReference);\n        }\n        field._dictionary._updated = true;\n        var i = 0;\n        var fieldName = field.name;\n        var modified = false;\n        while (this._fieldNames.indexOf(fieldName) !== -1) {\n            fieldName = field.name + i;\n            modified = true;\n            ++i;\n        }\n        if (modified) {\n            field._dictionary.update('T', fieldName);\n            field._name = fieldName;\n        }\n        field._dictionary._updated = true;\n        if (this._fieldCount > 0) {\n            this._destinationDocument.form._parsedFields.set(this._fieldCount, field);\n            field._annotationIndex = this._fieldCount;\n            this._fieldCount++;\n        }\n        else {\n            this._destinationDocument.form._parsedFields.set(index, field);\n            field._annotationIndex = index;\n        }\n        this._destinationDocument.form._fields.push(newReference);\n        return array;\n    };\n    _PdfMergeHelper.prototype._mergeFormFieldsWithDocument = function () {\n        var pdfFields;\n        if (this._formFieldsCollection.size > 0) {\n            pdfFields = this._destinationDocument.form._dictionary.get('Fields');\n            this._formFieldsCollection.forEach(function (value, key) {\n                pdfFields[Number.parseInt(key.toString(), 10)] = value;\n            });\n        }\n        else {\n            pdfFields = this._destinationDocument.form._fields;\n        }\n        if (this._destinationDocument.form._dictionary.get('NeedAppearances')) {\n            this._destinationDocument.form._dictionary.set('NeedAppearances', false);\n        }\n        this._destinationDocument.form._dictionary.set('Fields', pdfFields);\n        this._destinationDocument.form._fields = pdfFields;\n        this._destinationDocument.form._dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importLayers = function (ocProperties, layers) {\n        this._isLayersPresent = layers;\n        if (this._isLayersPresent && this._destinationDocument._catalog._catalogDictionary.has('OCProperties')) {\n            var destinationOCProperties = this._destinationDocument._catalog._catalogDictionary.get('OCProperties');\n            var currentOCProperties = ocProperties.get('OCProperties');\n            if (destinationOCProperties.has('OCGs')) {\n                var ocgs = destinationOCProperties.get('OCGs'); // eslint-disable-line\n                var Cocgs = currentOCProperties.get('OCGs'); // eslint-disable-line\n                if (ocgs.length > 0) {\n                    for (var i = 0; i < Cocgs.length; i++) {\n                        ocgs.push(Cocgs[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            destinationOCProperties._updated = true;\n            if (destinationOCProperties.has('D') && currentOCProperties.has('D')) {\n                var curreneDefaultView = destinationOCProperties.get('D');\n                var existingDefaultView = currentOCProperties.get('D');\n                if (curreneDefaultView && existingDefaultView) {\n                    if (curreneDefaultView.has('Order') && existingDefaultView.has('Order')) {\n                        var order = curreneDefaultView.get('Order'); // eslint-disable-line\n                        var existingOrder = existingDefaultView.get('Order'); // eslint-disable-line\n                        if (order.length > 0 && existingOrder.length > 0) {\n                            for (var i = 0; i < existingOrder.length; i++) {\n                                order.push(existingOrder[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('Order')) {\n                        curreneDefaultView.set('Order', existingDefaultView.get('Order'));\n                    }\n                    if (curreneDefaultView.has('RBGroups') && existingDefaultView.has('RBGroups')) {\n                        var groups = curreneDefaultView.get('RBGroups'); // eslint-disable-line\n                        var existingRBGroups = existingDefaultView.get('RBGroups'); // eslint-disable-line\n                        if (groups.length > 0 && existingRBGroups.length > 0) {\n                            for (var i = 0; i < existingRBGroups.length; i++) {\n                                groups.push(existingRBGroups[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('RBGroups')) {\n                        curreneDefaultView.set('RBGroups', existingDefaultView.get('RBGroups'));\n                        curreneDefaultView._updated = true;\n                    }\n                    if (curreneDefaultView.has('ON') && existingDefaultView.has('ON')) {\n                        var on = curreneDefaultView.get('ON'); // eslint-disable-line\n                        var existingON = existingDefaultView.get('ON'); // eslint-disable-line\n                        if (on.length > 0 && existingON.length > 0) {\n                            for (var i = 0; i < existingON.length; i++) {\n                                on.push(existingON[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('ON')) {\n                        curreneDefaultView.set('ON', existingDefaultView.get('ON'));\n                    }\n                    if (curreneDefaultView.has('AS') && existingDefaultView.has('AS')) {\n                        var elements = curreneDefaultView.get('AS'); // eslint-disable-line\n                        var existingElements = existingDefaultView.get('AS'); // eslint-disable-line\n                        if (elements.length > 0 && existingElements.length > 0) {\n                            var asDictionary = existingElements[0];\n                            var currentASDictionary = elements[0];\n                            if (asDictionary instanceof _PdfReference && currentASDictionary instanceof _PdfReference) {\n                                asDictionary = this._crossReference._fetch(asDictionary);\n                                currentASDictionary = this._crossReference._fetch(currentASDictionary);\n                            }\n                            if (asDictionary.has('OCGs') && currentASDictionary.has('OCGs')) {\n                                var usageGroup = asDictionary.get('OCGs'); // eslint-disable-line\n                                var currentUsageGroup = currentASDictionary.get('OCGs'); // eslint-disable-line\n                                if (usageGroup.length > 0 && currentUsageGroup.length > 0) {\n                                    for (var i = 0; i < usageGroup.length; i++) {\n                                        currentUsageGroup.push(usageGroup[Number.parseInt(i.toString(), 10)]);\n                                    }\n                                }\n                            }\n                            for (var i = 0; i < existingElements.length; i++) {\n                                elements.push(existingElements[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('AS')) {\n                        curreneDefaultView.set('AS', existingDefaultView.get('AS'));\n                    }\n                    if (curreneDefaultView.has('OFF') && existingDefaultView.has('OFF')) {\n                        var off = curreneDefaultView.get('OFF'); // eslint-disable-line\n                        var existingOff = existingDefaultView.get('OFF'); // eslint-disable-line\n                        if (off.length > 0 && existingOff.length > 0) {\n                            for (var i = 0; i < existingOff.length; i++) {\n                                off.push(existingOff[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('OFF')) {\n                        curreneDefaultView.set('OFF', existingDefaultView.get('OFF'));\n                    }\n                }\n                if (curreneDefaultView.has('Locked') && existingDefaultView.has('Locked')) {\n                    var locked = curreneDefaultView.get('Locked'); // eslint-disable-line\n                    var existingLocked = existingDefaultView.get('Locked'); // eslint-disable-line\n                    if (locked.length > 0 && existingLocked.length > 0) {\n                        for (var i = 0; i < existingLocked.length; i++) {\n                            locked.push(existingLocked[Number.parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                else if (existingDefaultView.has('Locked')) {\n                    curreneDefaultView.set('Locked', existingDefaultView.get('Locked'));\n                }\n            }\n            else if (currentOCProperties.has('D')) {\n                destinationOCProperties.set('D', currentOCProperties.get('D'));\n            }\n            destinationOCProperties._updated = true;\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n        else if (this._isLayersPresent) {\n            this._destinationDocument._catalog._catalogDictionary.update('OCProperties', ocProperties.get('OCProperties'));\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._mergeLayer = function (newPageDictionary, oldPageDictionary, crossReference) {\n        var _this = this;\n        var res = newPageDictionary.get('Resources');\n        var xobject = res.get('XObject');\n        var xobjdict; // eslint-disable-line\n        if (xobject) {\n            xobject.forEach(function (key, value) {\n                xobjdict = _this._crossReference._fetch(value);\n            });\n        }\n        var resource;\n        if (xobjdict) {\n            resource = xobjdict.dictionary.get('Resources');\n        }\n        var XObject; // eslint-disable-line\n        var oldPageList = new Map();\n        var oldPageResource = oldPageDictionary.get('Resources');\n        var layerDictionary; // eslint-disable-line\n        var dict; // eslint-disable-line\n        if (oldPageResource.has('Properties')) {\n            layerDictionary = oldPageResource.get('Properties');\n            layerDictionary.forEach(function (key, value) {\n                oldPageList.set(key, value);\n            });\n            var properties_1 = new _PdfDictionary(this._crossReference);\n            oldPageList.forEach(function (value, key) {\n                _this._newList.forEach(function (layerValue, layerkey) {\n                    if (value === layerkey) {\n                        properties_1.set(key, layerValue);\n                    }\n                });\n            });\n            resource.set('Properties', properties_1);\n            resource._updated = true;\n            properties_1._updated = true;\n        }\n        else if (oldPageResource.has('XObject')) {\n            XObject = resource.get('XObject');\n            layerDictionary = oldPageResource.get('XObject');\n            layerDictionary.forEach(function (key, value) {\n                if (value instanceof _PdfReference) {\n                    dict = crossReference._fetch(value);\n                    dict.dictionary.forEach(function (annotationKey, annotationValue) {\n                        if (annotationKey === 'OC') {\n                            _this._newList.forEach(function (layerValue, layerKey) {\n                                if (layerKey === annotationValue) {\n                                    if (XObject.has(key)) {\n                                        var xobjDictionary = XObject.get(key); // eslint-disable-line\n                                        xobjDictionary.dictionary.set(annotationKey, layerValue);\n                                        xobjDictionary._updated = true;\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        if (this._annotationLayer.size > 0) {\n            var annotations_1 = newPageDictionary._get('Annots'); // eslint-disable-line\n            this._annotationLayer.forEach(function (reference, index) {\n                var pdfAnnotation = annotations_1[Number.parseInt(index.toString(), 10)]; // eslint-disable-line\n                var annotDictionary = _this._crossReference._fetch(pdfAnnotation);\n                _this._newList.forEach(function (value, oldReference) {\n                    if (reference === oldReference) {\n                        annotDictionary.set('OC', value);\n                    }\n                });\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._exportBookmarks = function (document, pageCount) {\n        var _this = this;\n        if (this._bookmarks.length > 0) {\n            var bookmark = this._bookmarks;\n            var currentBase = this._destinationDocument.bookmarks;\n            var current = document.bookmarks;\n            var bkCollection = void 0; // eslint-disable-line\n            if (current) {\n                var stack = [];\n                var nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                if (document.pageCount !== pageCount) {\n                    nodeInformation = { index: 0, base: currentBase, kids: bookmark };\n                    bkCollection = [];\n                }\n                do {\n                    var _loop_1 = function () {\n                        current = nodeInformation.kids[nodeInformation.index];\n                        if (bookmark.indexOf(current) !== -1 && typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1) {\n                            var bm = current;\n                            var newBm = currentBase.add(bm.title);\n                            var dest = bm.destination;\n                            newBm.color = bm.color;\n                            newBm.textStyle = bm.textStyle;\n                            var newDest = null;\n                            var newPage_1 = null;\n                            var page_1 = null;\n                            var nDest = bm.namedDestination;\n                            if (nDest) {\n                                if (nDest.destination) {\n                                    page_1 = nDest.destination.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_1._ref === key) {\n                                            newPage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newPage_1) {\n                                        var newNameddest = this_1._getNamedDestination(nDest, newPage_1);\n                                        newBm.namedDestination = newNameddest;\n                                        delete newBm._dictionary._map.C;\n                                        this_1._namedDestinations.push(newNameddest._title);\n                                        var reference_1 = this_1._crossReference._getNextReference();\n                                        this_1._crossReference._cacheMap.set(reference_1, newNameddest._dictionary);\n                                        this_1._namedDestinations.push(reference_1);\n                                    }\n                                }\n                            }\n                            else if (dest) {\n                                page_1 = dest.page;\n                                this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                    if (page_1._ref === key) {\n                                        newPage_1 = _this._destinationDocument.getPage(value);\n                                    }\n                                });\n                                if (newPage_1) {\n                                    newDest = new PdfDestination(newPage_1, dest.location);\n                                    newDest.mode = dest.mode;\n                                    newDest.zoom = dest.zoom;\n                                    newDest.location = dest.location;\n                                    newBm.destination = newDest;\n                                }\n                            }\n                            currentBase = newBm;\n                            bkCollection.push(newBm.title);\n                        }\n                        else if (typeof bkCollection === 'undefined' || (typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1)) {\n                            var bm = current;\n                            var dest = bm.destination;\n                            var newDest = null;\n                            var newpage_1 = null;\n                            var page_2 = null;\n                            var nDest = bm.namedDestination;\n                            if (document.pageCount === pageCount) {\n                                var newBm = currentBase.add(bm.title);\n                                if (bm._dictionary.has('A')) {\n                                    newBm._dictionary.update('A', bm._dictionary.get('A'));\n                                }\n                                newBm.textStyle = bm.textStyle;\n                                newBm.color = bm.color;\n                                if (nDest) {\n                                    if (nDest._destination) {\n                                        page_2 = nDest.destination.page;\n                                        this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                            if (page_2._ref === key) {\n                                                newpage_1 = _this._destinationDocument.getPage(value);\n                                            }\n                                        });\n                                        if (newpage_1) {\n                                            var newNameddest = this_1._getNamedDestination(nDest, newpage_1);\n                                            newBm.namedDestination = newNameddest;\n                                            delete newBm._dictionary._map.C;\n                                            this_1._namedDestinations.push(newNameddest._title);\n                                            var reference_2 = this_1._crossReference._getNextReference();\n                                            this_1._crossReference._cacheMap.set(reference_2, newNameddest._dictionary);\n                                            this_1._namedDestinations.push(reference_2);\n                                        }\n                                    }\n                                }\n                                else if (dest) {\n                                    page_2 = dest.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_2._ref === key) {\n                                            newpage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newpage_1) {\n                                        newDest = new PdfDestination(newpage_1, dest.location);\n                                        newDest.mode = dest.mode;\n                                        newDest.zoom = dest.zoom;\n                                        newDest.location = dest.location;\n                                        newBm.destination = newDest;\n                                    }\n                                }\n                                currentBase = newBm;\n                            }\n                        }\n                        nodeInformation.index += 1;\n                        if (current.count > 0) {\n                            stack.push(nodeInformation);\n                            nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                        }\n                        else {\n                            currentBase = nodeInformation.base;\n                        }\n                    };\n                    var this_1 = this;\n                    for (; nodeInformation.index < nodeInformation.kids.length;) {\n                        _loop_1();\n                    }\n                    if (stack.length > 0) {\n                        nodeInformation = stack.pop();\n                        while ((nodeInformation.index === nodeInformation.kids.length) && (stack.length > 0)) {\n                            nodeInformation = stack.pop();\n                        }\n                        currentBase = nodeInformation.base;\n                    }\n                } while (nodeInformation.index < nodeInformation.kids.length);\n            }\n            var reference = void 0;\n            if (this._namedDestinations.length > 0) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Names', this._namedDestinations);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Dests', reference);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._destinationDocument._catalog._catalogDictionary.set('Names', reference);\n            }\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._destinationDocument._catalog._catalogDictionary.isCatalog = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._getNamedDestination = function (nDest, page) {\n        var newNamedDest = new PdfNamedDestination(nDest.title); // eslint-disable-line\n        newNamedDest.destination = this._getDestination(page, nDest.destination);\n        return newNamedDest;\n    };\n    _PdfMergeHelper.prototype._getDestination = function (page, dest) {\n        var newDest = new PdfDestination(page, dest.location);\n        newDest._location = dest._location;\n        newDest.mode = dest.mode;\n        newDest.zoom = dest.zoom;\n        newDest.location = dest.location;\n        return newDest;\n    };\n    _PdfMergeHelper.prototype._writeObject = function (document, table, value, dictionary, key, array, ref) {\n        if (value instanceof _PdfName || typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            this._writeDictionary(value, table, key, array, ref, null);\n        }\n        else if (Array.isArray(value)) {\n            var list = []; // eslint-disable-line\n            this._writeArray(document, list, value, dictionary);\n            this._writeDictionary(null, table, key, array, ref, list);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new _PdfDictionary(this._crossReference);\n            this._writePropertiesDictionary(document, subTable, value);\n            this._writeDictionary(null, table, key, array, ref, subTable);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(document, table, document._crossReference._fetch(value), dictionary, key, array, value);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeDictionary('null', table, key, array, ref, null);\n        }\n    };\n    _PdfMergeHelper.prototype._writeDictionary = function (value, table, key, array, ref, list) {\n        if (key && value) {\n            table.set(key, value);\n        }\n        else if (key && list) {\n            table.set(key, list);\n        }\n        else if (list && !ref) {\n            array.push(list);\n        }\n        else if (value) {\n            array.push(value);\n        }\n        else if (ref) {\n            var reference_3;\n            if (this._newList && this._newList.size > 0) {\n                this._newList.forEach(function (value, key) {\n                    if (key === ref) {\n                        reference_3 = value;\n                    }\n                });\n            }\n            if (reference_3) {\n                array.push(reference_3);\n            }\n            else {\n                var layerList = list;\n                reference_3 = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference_3, layerList);\n                layerList._updated = true;\n                array.push(reference_3);\n                this._newList.set(ref, reference_3);\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._writeArray = function (document, array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(document, null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _PdfMergeHelper.prototype._writePropertiesDictionary = function (document, table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(document, table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._fixDestinations = function (document) {\n        var pageLinkReference = this._pageReference;\n        if (this._destination.length > 0) {\n            for (var i = 0; i < this._destination.length; i++) {\n                var dest = this._destination[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (dest instanceof Array) {\n                    var destination = dest; // eslint-disable-line\n                    if (destination.length > 0 && destination[0] && destination[0] instanceof _PdfReference) {\n                        var ref = document._crossReference._fetch(destination[0]); // eslint-disable-line\n                        var index = pageLinkReference.get(ref);\n                        if (ref && pageLinkReference.has(ref) && index !== null) {\n                            destination[0] = index._ref;\n                        }\n                        if (ref && pageLinkReference.has(ref) && index === null) {\n                            destination[0] = null;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._insertNewPage = function (page, index) {\n        var newPage;\n        var pagesettings = new PdfPageSettings();\n        pagesettings.size = page.size;\n        pagesettings.margins.left = 0;\n        pagesettings.margins.top = 0;\n        pagesettings.margins.right = 0;\n        pagesettings.margins.bottom = 0;\n        if (typeof this._options !== 'undefined' && typeof this._options.rotation !== 'undefined') {\n            pagesettings.rotation = this._options.rotation;\n        }\n        else {\n            pagesettings.rotation = page.rotation;\n        }\n        pagesettings.orientation = (page.size[0] > page.size[1]) ? PdfPageOrientation.landscape : PdfPageOrientation.portrait;\n        if (typeof index !== 'undefined') {\n            newPage = this._destinationDocument.addPage(index, pagesettings);\n        }\n        else {\n            newPage = this._destinationDocument.addPage(pagesettings);\n        }\n        var pageDictionary = page._pageDictionary;\n        if (pageDictionary._get('MediaBox')) {\n            var mBox = pageDictionary._get('MediaBox'); // eslint-disable-line\n            newPage._pageDictionary.update('MediaBox', mBox);\n        }\n        if (pageDictionary._get('CropBox')) {\n            var cBox = pageDictionary._get('CropBox'); // eslint-disable-line\n            newPage._pageDictionary.update('CropBox', cBox);\n        }\n        if (typeof this._options.rotation !== 'undefined' || page._pageDictionary.has('Rotate')) {\n            var rotate = void 0;\n            if (typeof this._options.rotation !== 'undefined') {\n                rotate = Math.floor(this._options.rotation) * 90;\n            }\n            else {\n                rotate = Math.floor(page.rotation) * 90;\n            }\n            rotate = rotate >= 360 ? rotate % 360 : rotate;\n            newPage._pageDictionary.update('Rotate', rotate);\n        }\n        return newPage;\n    };\n    _PdfMergeHelper.prototype._objectDispose = function () {\n        this._bookmarkHashTable = new Map();\n        this._namedDestinations = [];\n        this._bookmarks = [];\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference.clear();\n        this._destination = [];\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._fieldNames = [];\n        if (this._destinationDocument && this._destinationDocument._form && this._destinationDocument._form._widgetReferences) {\n            this._destinationDocument._form._widgetReferences = [];\n        }\n    };\n    return _PdfMergeHelper;\n}());\nexport { _PdfMergeHelper };\nvar _PdfCopier = /** @class */ (function () {\n    function _PdfCopier(targetCrossReference, sourceCrossReference) {\n        this._traversedObjects = new Map();\n        this._isGroupingSupport = false;\n        this._targetCrossReference = targetCrossReference;\n        this._sourceCrossReference = sourceCrossReference;\n    }\n    _PdfCopier.prototype._copy = function (object) {\n        var clonedObject; // eslint-disable-line\n        if (object instanceof _PdfDictionary) {\n            clonedObject = this._copyDictionary(object);\n        }\n        else if (Array.isArray(object)) {\n            clonedObject = this._copyArray(object);\n        }\n        else if (object instanceof _PdfBaseStream) {\n            clonedObject = this._copyStream(object);\n        }\n        else if (object instanceof _PdfReference) {\n            clonedObject = this._copyReference(object);\n        }\n        else if (object instanceof _PdfName || typeof object === 'number' ||\n            typeof object === 'string' || typeof object === 'boolean') {\n            clonedObject = object;\n        }\n        return clonedObject;\n    };\n    _PdfCopier.prototype._copyDictionary = function (element, copiedPage) {\n        var _this = this;\n        var clonedDictionary = new _PdfDictionary(this._targetCrossReference);\n        if (element && element.size > 0) {\n            element.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && copiedPage))) {\n                    var copiedValue = _this._copy(value); // eslint-disable-line\n                    if (copiedValue !== null && typeof copiedValue !== 'undefined') {\n                        clonedDictionary.update(key, copiedValue);\n                    }\n                }\n            });\n        }\n        clonedDictionary._updated = true;\n        return clonedDictionary;\n    };\n    _PdfCopier.prototype._copyArray = function (originalArray) {\n        var newArray = []; // eslint-disable-line \n        for (var i = 0; i < originalArray.length; i++) {\n            newArray.push(this._copy(originalArray[Number.parseInt(i.toString(), 10)]));\n        }\n        return newArray;\n    };\n    _PdfCopier.prototype._copyStream = function (originalStream) {\n        var bytes;\n        var imageStream = false;\n        var baseStream = originalStream; // eslint-disable-line\n        if (originalStream.dictionary.has('Subtype') && originalStream.dictionary.get('Subtype').name === 'Image') {\n            imageStream = true;\n            if (originalStream instanceof _PdfStream) {\n                bytes = originalStream.getByteRange(originalStream.offset, originalStream.end);\n            }\n            else if (originalStream && baseStream.stream && baseStream.stream instanceof _PdfStream) {\n                if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                    var streamLength = baseStream.stream.end - baseStream.stream.start;\n                    baseStream.getBytes(streamLength);\n                    bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                }\n                else {\n                    var stream = baseStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n            }\n            else if (baseStream.stream && baseStream.stream.stream) {\n                var flateStream = baseStream.stream; // eslint-disable-line\n                if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                    var streamLength = flateStream.stream.end - flateStream.stream.start;\n                    flateStream.getBytes(streamLength);\n                    bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                }\n                else if (flateStream.stream && flateStream.stream instanceof _PdfStream) {\n                    var stream = flateStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n                else {\n                    bytes = [];\n                }\n            }\n            else {\n                bytes = originalStream.getBytes();\n                if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                    bytes = originalStream._bytes;\n                }\n            }\n        }\n        else {\n            bytes = originalStream.getBytes();\n            if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                bytes = originalStream._bytes;\n            }\n        }\n        var content = new _PdfContentStream(Array.from(bytes));\n        content._isImage = imageStream;\n        content.dictionary = this._copyDictionary(originalStream.dictionary);\n        content.dictionary._updated = true;\n        return content;\n    };\n    _PdfCopier.prototype._copyReference = function (element) {\n        if (this._traversedObjects.has(element)) {\n            return this._traversedObjects.get(element);\n        }\n        else {\n            this._traversedObjects.set(element, null);\n            var dereferencedValue = this._sourceCrossReference._fetch(element); // eslint-disable-line\n            var copyValue = this._copy(dereferencedValue); // eslint-disable-line\n            if (copyValue instanceof _PdfDictionary || copyValue instanceof _PdfBaseStream) {\n                var newRef = this._addToDestination(copyValue);\n                this._traversedObjects.set(element, newRef);\n                return newRef;\n            }\n            else {\n                this._traversedObjects.set(element, copyValue);\n                return copyValue;\n            }\n        }\n    };\n    _PdfCopier.prototype._addToDestination = function (element) {\n        var newRef = this._targetCrossReference._getNextReference();\n        this._targetCrossReference._cacheMap.set(newRef, element);\n        element.objId = newRef.objectNumber + \" \" + newRef.generationNumber;\n        return newRef;\n    };\n    return _PdfCopier;\n}());\nexport { _PdfCopier };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode, _emptyPdfData, _getNewGuidString, _isNullOrUndefined } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _PdfName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment, PdfPageOrientation, PdfRotationAngle } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\nimport { _PdfMergeHelper } from './pdf-merge';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        this._isDuplicatePage = false;\n        this._isSplitDocument = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog) {\n                if (catalog._catalogDictionary.has('Outlines')) {\n                    var reference = catalog._catalogDictionary._get('Outlines');\n                    var outlines = catalog._catalogDictionary.get('Outlines');\n                    if (outlines) {\n                        this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                        this._bookmarkBase._reference = reference;\n                        if (outlines.has('First')) {\n                            this._bookmarkBase._reproduceTree();\n                        }\n                    }\n                }\n                else {\n                    var outlines = new _PdfDictionary(this._crossReference);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, outlines);\n                    catalog._catalogDictionary.update('Outlines', reference);\n                    this._crossReference._allowCatalog = true;\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    this._bookmarkBase._reference = reference;\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        if (pageIndex < 0 || pageIndex >= this.pageCount) {\n            throw new Error('Invalid page index');\n        }\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.addPage = function (arg1, arg2) {\n        var settings;\n        var pageIndex;\n        if (typeof arg2 !== 'undefined') {\n            settings = arg2;\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        else if (typeof arg1 === 'undefined') {\n            settings = new PdfPageSettings();\n            pageIndex = this.pageCount;\n        }\n        else if (arg1 instanceof PdfPageSettings) {\n            settings = arg1;\n            pageIndex = this.pageCount;\n        }\n        else {\n            settings = new PdfPageSettings();\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        sectionDictionary.update('Count', 1);\n        this._updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', sectionReference);\n        sectionDictionary.update('Kids', [pageReference]);\n        if (this.pageCount === 0) {\n            var parentReference = this._catalog._catalogDictionary._get('Pages');\n            if (parentReference && this._catalog._topPagesDictionary) {\n                this._catalog._topPagesDictionary.update('Kids', [sectionReference]);\n                sectionDictionary.update('Parent', parentReference);\n            }\n            else {\n                this._catalog._catalogDictionary.update('Pages', sectionReference);\n            }\n            this._pages = new Map();\n            this._pageCount = 1;\n        }\n        else {\n            var lastPage_1 = this.getPage(pageIndex === this.pageCount ? (pageIndex - 1) : pageIndex);\n            if (lastPage_1 && lastPage_1._pageDictionary) {\n                var parentReference = lastPage_1._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        if (pageIndex === this.pageCount) {\n                            kids.push(sectionReference);\n                        }\n                        else {\n                            var newKids_1 = [];\n                            kids.forEach(function (entry) {\n                                if (entry === lastPage_1._ref) {\n                                    newKids_1.push(sectionReference);\n                                }\n                                newKids_1.push(entry);\n                            });\n                            kids = newKids_1;\n                            this._updatePageCache(pageIndex);\n                        }\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                        this._updatePageCount(parentDictionary, 1);\n                        this._pageCount = this.pageCount + 1;\n                    }\n                }\n            }\n        }\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = settings;\n        result._isNew = true;\n        this._pages.set(pageIndex, result);\n        return result;\n    };\n    PdfDocument.prototype.removePage = function (argument) {\n        var targetPage = (argument instanceof PdfPage) ? argument : this.getPage(argument);\n        this._removePage(targetPage);\n    };\n    PdfDocument.prototype._checkPageNumber = function (index) {\n        if (index < 0 || index > this.pageCount) {\n            throw new Error('Index out of range');\n        }\n    };\n    PdfDocument.prototype._updatePageCount = function (dictionary, valueToIncrement) {\n        dictionary.update('Count', dictionary.get('Count') + valueToIncrement);\n        if (dictionary.has('Parent')) {\n            var parentDictionary = dictionary.get('Parent');\n            if (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                this._updatePageCount(parentDictionary, valueToIncrement);\n            }\n        }\n    };\n    PdfDocument.prototype._updatePageSettings = function (dictionary, settings) {\n        var bounds = [0, 0, settings.size[0], settings.size[1]];\n        dictionary.update('MediaBox', bounds);\n        dictionary.update('CropBox', bounds);\n        var rotate = Math.floor(settings.rotation) * 90;\n        if (rotate >= 360) {\n            rotate = rotate % 360;\n        }\n        dictionary.update('Rotate', rotate);\n    };\n    PdfDocument.prototype._updatePageCache = function (index, isIncrement) {\n        if (isIncrement === void 0) { isIncrement = true; }\n        var updatedData = new Map();\n        for (var i = this.pageCount - 1; i >= 0; i--) {\n            var page = this.getPage(i);\n            if (isIncrement) {\n                if (i >= index) {\n                    updatedData.set(i + 1, page);\n                    page._pageIndex = i + 1;\n                }\n                else {\n                    updatedData.set(i, page);\n                }\n            }\n            else {\n                if (i > index) {\n                    updatedData.set(i - 1, page);\n                    page._pageIndex = i - 1;\n                }\n                else if (i !== index) {\n                    updatedData.set(i, page);\n                }\n            }\n        }\n        this._pages = updatedData;\n        if (!isIncrement) {\n            this._pageCount = this._pages.size;\n        }\n    };\n    PdfDocument.prototype._removePage = function (pageToRemove) {\n        var bookMarkMap = this._parseBookmarkDestination();\n        if (bookMarkMap && bookMarkMap.has(pageToRemove)) {\n            var bookmarks = bookMarkMap.get(pageToRemove);\n            if (bookmarks) {\n                for (var i = 0; i < bookmarks.length; i++) {\n                    var bookmark = bookmarks[Number.parseInt(i.toString(), 10)];\n                    if (bookmark) {\n                        var bookmarkDictionary = bookmark._dictionary;\n                        if (bookmarkDictionary) {\n                            if (bookmarkDictionary.has('A')) {\n                                bookmarkDictionary.update('A', null);\n                            }\n                            bookmarkDictionary.update('Dest', null);\n                        }\n                    }\n                }\n            }\n        }\n        this._removePageTemplates(pageToRemove);\n        for (var i = this.form.count - 1; i >= 0; --i) {\n            var field = this.form.fieldAt(i);\n            if (field && field.page === pageToRemove) {\n                this.form.removeFieldAt(i);\n            }\n        }\n        this._updatePageCache(pageToRemove._pageIndex, false);\n        this._removeParent(pageToRemove._ref, pageToRemove._pageDictionary);\n        if (this._crossReference._cacheMap.has(pageToRemove._ref)) {\n            pageToRemove._pageDictionary._updated = false;\n        }\n    };\n    PdfDocument.prototype._removeParent = function (referenceToRemove, dictionary) {\n        if (dictionary.has('Parent')) {\n            var parentReference = dictionary._get('Parent');\n            var parentDictionary = this._crossReference._fetch(parentReference);\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                if (_isNullOrUndefined(kids) && kids.length === 1 && parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                    this._removeParent(parentReference, parentDictionary);\n                }\n                else {\n                    kids = kids.filter(function (item) { return item !== referenceToRemove; });\n                    parentDictionary.update('Kids', kids);\n                    this._updatePageCount(parentDictionary, -1);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._parseBookmarkDestination = function () {\n        var current = this.bookmarks;\n        if (typeof this._bookmarkHashTable === 'undefined' && current) {\n            this._bookmarkHashTable = new Map();\n            var stack = [];\n            var nodeInformation = { index: 0, kids: current._bookMarkList };\n            do {\n                for (; nodeInformation.index < nodeInformation.kids.length;) {\n                    current = nodeInformation.kids[nodeInformation.index];\n                    var namedDestination = current.namedDestination;\n                    if (namedDestination) {\n                        if (namedDestination.destination) {\n                            var page = namedDestination.destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    else {\n                        var destination = current.destination;\n                        if (destination) {\n                            var page = destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    nodeInformation.index += 1;\n                    if (current.count > 0) {\n                        stack.push(nodeInformation);\n                        nodeInformation = { index: 0, kids: current._bookMarkList };\n                        continue;\n                    }\n                }\n                if (stack.length > 0) {\n                    nodeInformation = stack.pop();\n                    while (nodeInformation.index === nodeInformation.kids.length && stack.length > 0) {\n                        nodeInformation = stack.pop();\n                    }\n                }\n            } while (nodeInformation.index < nodeInformation.kids.length);\n        }\n        return this._bookmarkHashTable;\n    };\n    PdfDocument.prototype._removePageTemplates = function (page) {\n        var dictionary;\n        if (this._catalog._catalogDictionary.has('Names')) {\n            dictionary = this._catalog._catalogDictionary.get('Names');\n            if (dictionary) {\n                this._removeInternalTemplates(dictionary, 'Pages', page);\n                this._removeInternalTemplates(dictionary, 'Templates', page);\n            }\n        }\n    };\n    PdfDocument.prototype._removeInternalTemplates = function (dictionary, key, page) {\n        if (dictionary.has(key)) {\n            var namedObject = dictionary.get(key);\n            if (namedObject && namedObject.has('Names')) {\n                var nameCollection = namedObject.getArray('Names');\n                if (nameCollection && nameCollection.length > 0) {\n                    var namedPageCollection = this._getUpdatedPageTemplates(nameCollection, page);\n                    var namedPageDictionary = new _PdfDictionary(this._crossReference);\n                    namedPageDictionary.update('Names', namedPageCollection);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, namedPageDictionary);\n                    namedPageDictionary.objId = reference.toString();\n                    dictionary.update(key, reference);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._getUpdatedPageTemplates = function (namedPages, page) {\n        if (namedPages.length > 0) {\n            for (var i = 1; i <= namedPages.length; i = i + 2) {\n                var pageDictionary = namedPages[Number.parseInt(i.toString(), 10)];\n                if (pageDictionary && page._pageDictionary === pageDictionary) {\n                    namedPages.pop();\n                    namedPages.pop();\n                    return namedPages;\n                }\n            }\n        }\n        return namedPages;\n    };\n    /**\n     * Reorders the pages in the PDF document.\n     *\n     * @param {number[]} orderArray The page sequence to arrange the pages.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Reorders the pages in the PDF document\n     * document.reorderPages([3, 2, 1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.reorderPages = function (orderArray) {\n        var _this = this;\n        orderArray.forEach(function (pageNumber) {\n            _this._checkPageNumber(pageNumber);\n        });\n        var sortedArray = this._sortedArray(orderArray);\n        var ascendingOrder = orderArray.slice().sort(function (a, b) { return a - b; });\n        var inputArray = Array.from({ length: this.pageCount }, function (_, i) { return i; });\n        var pagesToRemove = inputArray.filter(function (element) { return sortedArray.indexOf(element) === -1; });\n        for (var i = pagesToRemove.length - 1; i >= 0; i--) {\n            this.removePage(pagesToRemove[Number.parseInt(i.toString(), 10)]);\n        }\n        var newkids = [];\n        var newPages = new Map();\n        var parentReference = this._catalog._catalogDictionary._get('Pages');\n        var _loop_1 = function (i) {\n            var indexPage = this_1.getPage(ascendingOrder.indexOf(sortedArray[Number.parseInt(i.toString(), 10)]));\n            indexPage._pageIndex = i;\n            newPages.set(i, indexPage);\n            var sectionDictionary = new _PdfDictionary(this_1._crossReference);\n            sectionDictionary.update('Type', _PdfName.get('Pages'));\n            sectionDictionary.update('Count', 1);\n            sectionDictionary.update('Parent', parentReference);\n            var sectionReference = this_1._crossReference._getNextReference();\n            sectionDictionary.objId = sectionReference.toString();\n            sectionDictionary.update('Kids', [indexPage._ref]);\n            newkids.push(sectionReference);\n            var parentDictionary = indexPage._pageDictionary.get('Parent');\n            while (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                parentDictionary.forEach(function (key, value) {\n                    switch (key) {\n                        case 'Parent':\n                        case 'Kids':\n                        case 'Type':\n                        case 'Count':\n                            break;\n                        case 'Resources':\n                            _this._cloneResources(parentDictionary.get('Resources'), sectionDictionary);\n                            break;\n                        default:\n                            if (!sectionDictionary.has(key)) {\n                                sectionDictionary.update(key, value);\n                            }\n                            break;\n                    }\n                });\n                if (parentDictionary.has('Parent')) {\n                    parentDictionary = parentDictionary.get('Parent');\n                }\n                else {\n                    break;\n                }\n            }\n            this_1._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n            var pageSection = this_1._crossReference._fetch(indexPage._ref);\n            pageSection.update('Parent', sectionReference);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedArray.length; i++) {\n            _loop_1(i);\n        }\n        this._pages = newPages;\n        if (this._catalog) {\n            var parentDictionary = this._catalog._topPagesDictionary;\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                kids = newkids;\n                parentDictionary.update('Kids', kids);\n            }\n        }\n    };\n    PdfDocument.prototype._sortedArray = function (order) {\n        var sortedArray = [];\n        order.forEach(function (num) {\n            if (sortedArray.indexOf(num) === -1) {\n                sortedArray.push(num);\n            }\n        });\n        return sortedArray;\n    };\n    PdfDocument.prototype._cloneResources = function (source, target) {\n        var _this = this;\n        if (!target.has('Resources')) {\n            target.update('Resources', source);\n        }\n        else {\n            var resourceDictionary_1 = target.get('Resources');\n            source.forEach(function (key, value) {\n                if (resourceDictionary_1.has(key)) {\n                    _this._cloneInnerResources(key, value, resourceDictionary_1);\n                }\n                else {\n                    resourceDictionary_1.update(key, value);\n                }\n            });\n        }\n    };\n    PdfDocument.prototype._cloneInnerResources = function (key, value, resourceDictionary) {\n        if (value instanceof _PdfDictionary) {\n            var oldObject_1 = resourceDictionary.get(key);\n            if (oldObject_1) {\n                var hasNew_1 = false;\n                oldObject_1.forEach(function (innerKey, innerValue) {\n                    if (!oldObject_1.has(innerKey)) {\n                        oldObject_1.update(innerKey, innerValue);\n                        hasNew_1 = true;\n                    }\n                });\n                if (hasNew_1) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n        else if (Array.isArray(value)) {\n            var oldArray_1 = resourceDictionary.get(key); // eslint-disable-line\n            if (oldArray_1) {\n                var hasNew_2 = false;\n                value.forEach(function (entry) {\n                    if (oldArray_1.indexOf(entry) === -1) {\n                        oldArray_1.push(entry);\n                        hasNew_2 = true;\n                    }\n                });\n                if (hasNew_2) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        if (this._pages) {\n            this._pages.clear();\n            this._pages = undefined;\n        }\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n        if (this._mergeHelperCache) {\n            if (this._mergeHelperCache.size > 0) {\n                this._mergeHelperCache.forEach(function (value) {\n                    if (value) {\n                        value._objectDispose();\n                    }\n                });\n            }\n            this._mergeHelperCache.clear();\n            this._mergeHelperCache = undefined;\n        }\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._catalog._catalogDictionary.has('AcroForm')) {\n            this.form._doPostProcess(isFlatten);\n            if (isFlatten) {\n                var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary._updated = true;\n                if (formObject instanceof _PdfReference) {\n                    this._crossReference._cacheMap.set(formObject, dictionary);\n                }\n                else {\n                    this.form._dictionary = dictionary;\n                    this._crossReference._allowCatalog = true;\n                }\n                this.form._clear();\n            }\n            if (this.form._isDefaultAppearance) {\n                this.form._dictionary.update('NeedAppearances', this.form._isDefaultAppearance);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances') && this.form._isNeedAppearances) {\n                this.form._dictionary.update('NeedAppearances', false);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances')) {\n                this.form._dictionary.update('NeedAppearances', this.form.needAppearances);\n            }\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    PdfDocument.prototype.importPageRange = function (sourceDocument, startIndex, endIndex, options) {\n        if (startIndex > endIndex || startIndex >= sourceDocument.pageCount) {\n            throw new Error('The start index is greater then the end index, which might indicate the error in the program.');\n        }\n        this._importPages(sourceDocument, startIndex, endIndex, options);\n    };\n    PdfDocument.prototype._importPages = function (sourceDocument, startIndex, endIndex, options) {\n        var sourceOCProperties;\n        var correspondancePagecount = 0;\n        var ocProperties;\n        if (typeof options !== 'undefined' && typeof options.targetIndex === 'number') {\n            if (options.targetIndex > this.pageCount) {\n                throw new Error('The target index is out of range.');\n            }\n            this._targetIndex = options.targetIndex;\n        }\n        var pageReference = new Map();\n        if (!this._isDuplicatePage) {\n            for (var index = 0; index < sourceDocument.pageCount; index++) {\n                var sourcepage = sourceDocument.getPage(index);\n                pageReference.set(sourcepage._pageDictionary, null);\n            }\n        }\n        var helper;\n        if (!this._mergeHelperCache) {\n            this._mergeHelperCache = new Map();\n        }\n        if (!sourceDocument._uniqueID) {\n            sourceDocument._uniqueID = _getNewGuidString();\n        }\n        if (this._mergeHelperCache.has(sourceDocument._uniqueID)) {\n            helper = this._mergeHelperCache.get(sourceDocument._uniqueID);\n        }\n        else {\n            helper = new _PdfMergeHelper(this._crossReference, this, sourceDocument, pageReference, options);\n            this._mergeHelperCache.set(sourceDocument._uniqueID, helper);\n        }\n        var isLayersPresent = false;\n        if ((!this._isDuplicatePage && sourceDocument._catalog._catalogDictionary.has('OCProperties')) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            isLayersPresent = true;\n            sourceOCProperties = sourceDocument._catalog._catalogDictionary.get('OCProperties');\n            ocProperties = new _PdfDictionary(this._crossReference);\n            helper._writeObject(sourceDocument, ocProperties, sourceOCProperties, sourceOCProperties, 'OCProperties', null, null);\n            ocProperties._updated = true;\n        }\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = sourceDocument.getPage(i);\n            sourceDocument.form._doPostProcess(sourceDocument.flatten, page);\n            if (page.annotations.count > 0) {\n                page.annotations._doPostProcess(sourceDocument.flatten);\n                if (sourceDocument.flatten) {\n                    if (page._pageDictionary.has('Annots')) {\n                        delete page._pageDictionary._map.Annots;\n                        page._pageDictionary._updated = true;\n                    }\n                    page.annotations._clear();\n                }\n            }\n            if (sourceDocument._isSplitDocument) {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options, sourceDocument._isSplitDocument);\n            }\n            else {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options);\n            }\n            correspondancePagecount++;\n            if (typeof this._targetIndex === 'number') {\n                ++this._targetIndex;\n            }\n        }\n        if (!this._isDuplicatePage) {\n            helper._fixDestinations(sourceDocument);\n        }\n        helper._exportBookmarks(sourceDocument, correspondancePagecount);\n        helper._mergeFormFieldsWithDocument();\n        if ((isLayersPresent && !this._isDuplicatePage) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            helper._importLayers(ocProperties, true);\n        }\n        helper._objectDispose();\n        this._isDuplicatePage = false;\n    };\n    PdfDocument.prototype.importPage = function (arg1, arg2, options) {\n        if (typeof arg1 === 'number') {\n            this._isDuplicatePage = true;\n            if (arg2 instanceof PdfPageImportOptions) {\n                this._importPages(this, arg1, arg1, arg2);\n            }\n            else {\n                this._importPages(this, arg1, arg1);\n            }\n        }\n        else if (arg1 instanceof PdfPage && arg2 instanceof PdfDocument) {\n            var index = arg1._pageIndex;\n            this.importPageRange(arg2, index, index, options);\n        }\n    };\n    /**\n     * Splitting a PDF file into individual pages.\n     *\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document into individual pages\n     * document.split();\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.split = function () {\n        this.splitByFixedNumber(1);\n    };\n    /**\n     * Splits the PDF document into parts, each containing a maximum number of pages specified.\n     *\n     * @param {number} fixedNumber specifies the maximum number of pages in each split PDF. The default value is 1.\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByFixedNumber = function (fixedNumber) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent && pageCount >= fixedNumber && fixedNumber > 0) {\n            var splitIndex = 0;\n            for (var tempValue = 0; tempValue < pageCount; tempValue += fixedNumber) {\n                var endIndex = Math.min(tempValue + fixedNumber - 1, pageCount - 1);\n                var pdfData = this._importDocumentPages(tempValue, endIndex);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n        else {\n            throw new Error('Invalid split number. Split number should be greater than zero and less than or equal to page count.');\n        }\n    };\n    /**\n     * Splits the PDF document into multiple parts based on the specified page ranges.\n     *\n     * @param {Array<number[]>} ranges The two dimensional number array specified for start and end page indexes to split PDF documents.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by page ranges specified\n     * document.splitByPageRanges([[0, 4], [5, 9]]);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByPageRanges = function (ranges) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent) {\n            var splitIndex = 0;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[Number.parseInt(i.toString(), 10)];\n                if (Array.isArray(range) && range.length < 2) {\n                    throw new Error('Invalid page range. Start and end page indexes should be specified.');\n                }\n                var start = range[0];\n                var end = range[1];\n                if (start < 0 || end < 0 || start >= pageCount || end >= pageCount || start > end) {\n                    throw new Error('Invalid page range: start (${start}) and end (${end}).');\n                }\n                var pdfData = this._importDocumentPages(start, end);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n    };\n    PdfDocument.prototype._importDocumentPages = function (startIndex, endIndex) {\n        this._isSplitDocument = true;\n        var document = new PdfDocument(_emptyPdfData);\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = this.getPage(i);\n            document.importPage(page, this);\n        }\n        document.removePage(0);\n        var result = document.save();\n        document.destroy();\n        return result;\n    };\n    PdfDocument.prototype._invokeSplitEvent = function (splitIndex, pdfData) {\n        var args = new PdfDocumentSplitEventArgs(splitIndex, pdfData);\n        this.splitEvent(this, args);\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n/**\n * The class provides various settings related to PDF pages.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageSettings = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPageSettings` class\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Create a new PDF page settings instance\n     * let pageSettings: PdfPageSettings = new PdfPageSettings();\n     * // Sets the margins\n     * pageSettings.margins = new PdfMargins(40);\n     * // Sets the page size\n     * pageSettings.size = [595, 842];\n     * // Sets the page orientation\n     * pageSettings.orientation = PdfPageOrientation.landscape;\n     * // Add a new PDF page with page settings\n     * page = document.addPage(pageSettings);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPageSettings() {\n        this._size = [595, 842];\n        this._isOrientation = false;\n        this._orientation = PdfPageOrientation.portrait;\n        this._size = [595, 842];\n        this._margins = new PdfMargins();\n        this._rotation = PdfRotationAngle.angle0;\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page.\n         *\n         * @returns {PdfPageOrientation} The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [842, 595];\n         * // Gets the page orientation\n         * let orientation: PdfPageOrientation = pageSettings.orientation;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._orientation;\n        },\n        /**\n         * Sets the orientation of the page.\n         *\n         * @param {PdfPageOrientation} value The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isOrientation = true;\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this._updateSize(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        /**\n         * Gets the size of the page.\n         *\n         * @returns {number[]} The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        /**\n         * Sets the width and height of the page.\n         *\n         * @param {number[]} value The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isOrientation) {\n                this._updateSize(value);\n            }\n            else {\n                this._size = value;\n                this._updateOrientation();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets the margin value of the page.\n         *\n         * @returns {PdfMargins} PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the margins\n         * let margins: PdfMargins = pageSettings.margins;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._margins;\n        },\n        /**\n         * Sets the margin value of the page.\n         *\n         * @param {PdfMargins} value PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * pageSettings.margins = new PdfMargins(40);\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._margins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the PDF page.\n         *\n         * @returns {PdfRotationAngle} PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the rotation angle\n         * let rotation: PdfRotationAngle = pageSettings.rotation;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page.\n         *\n         * @param {PdfRotationAngle} value PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the rotation angle\n         * pageSettings.rotation = PdfRotationAngle.angle90;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n            if (value >= 4) {\n                this._rotation = (value % 4);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPageSettings.prototype._updateSize = function (value) {\n        var pageOrientation;\n        var pageSize;\n        if (Array.isArray(value)) {\n            pageOrientation = this.orientation;\n            pageSize = value;\n        }\n        else {\n            pageOrientation = value;\n            pageSize = this._size;\n        }\n        if (pageOrientation === PdfPageOrientation.portrait) {\n            this._size = [Math.min(pageSize[0], pageSize[1]), Math.max(pageSize[0], pageSize[1])];\n        }\n        else {\n            this._size = [Math.max(pageSize[0], pageSize[1]), Math.min(pageSize[0], pageSize[1])];\n        }\n    };\n    PdfPageSettings.prototype._updateOrientation = function () {\n        this._orientation = (this._size[1] >= this._size[0]) ? PdfPageOrientation.portrait : PdfPageOrientation.landscape;\n    };\n    PdfPageSettings.prototype._getActualSize = function () {\n        var width = this._size[0] - (this._margins._left + this._margins._right);\n        var height = this._size[1] - (this._margins._top + this._margins._bottom);\n        return [width, height];\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n/**\n * A class representing PDF page margins.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfMargins = /** @class */ (function () {\n    function PdfMargins(all) {\n        if (typeof all === 'undefined') {\n            this._left = this._right = this._top = this._bottom = 40;\n        }\n        else {\n            this._left = this._right = this._top = this._bottom = all;\n        }\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        /**\n         * Gets the left margin value of the page.\n         *\n         * @returns {number} Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the left margin\n         * let left: number = pageSettings.margins.left;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._left;\n        },\n        /**\n         * Sets the left margin value of the page.\n         *\n         * @param {number} value Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._left = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets the right margin value of the page.\n         *\n         * @returns {number} Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the right margin\n         * let right: number = pageSettings.margins.right;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._right;\n        },\n        /**\n         * Sets the right margin value of the page.\n         *\n         * @param {number} value - Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._right = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets the top margin value of the page.\n         *\n         * @returns {number} Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the top margin\n         * let top: number = pageSettings.margins.top;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._top;\n        },\n        /**\n         *Sets the top margin value of the page.\n         *\n         * @param {number} value Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._top = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Get the bottom margin value of the page.\n         *\n         * @returns {number} Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the bottom margin\n         * let bottom: number = pageSettings.margins.bottom;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bottom;\n        },\n        /**\n         * Sets the bottom margin value of the page.\n         *\n         * @param {number} value Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._bottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfMargins;\n}());\nexport { PdfMargins };\n/**\n * Public class to provide data for the document split event, including the split index and PDF data.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * document.splitEvent = documentSplitEvent;\n * // Split PDF document by fixed number of pages\n * document.splitByFixedNumber(1);\n * // Event to invoke while splitting PDF document data\n * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n * }\n * // Destroy the document\n * document.destroy();\n */\nvar PdfDocumentSplitEventArgs = /** @class */ (function () {\n    /*\n     * Initializes a new instance of the `PdfDocumentSplitEventArgs` class.\n     *\n     * @param {number} splitIndex The fixed number to split PDF document pages. The default value is 1.\n     * @param {Uint8Array} pdfData The byte array of the split PDF document data.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfDocumentSplitEventArgs(splitIndex, pdfData) {\n        this._index = splitIndex;\n        this._pdfData = pdfData;\n    }\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"pdfData\", {\n        /*\n         * Gets the byte array of the PDF document data.\n         *\n         * @returns {Uint8Array} The byte array of the PDF document data.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._pdfData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"index\", {\n        /*\n         * Gets the split index of the PDF document.\n         *\n         * @returns {Uint8Array} The index that defines the number of event calls during the PDF document split.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDocumentSplitEventArgs;\n}());\nexport { PdfDocumentSplitEventArgs };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","import { PdfLayoutType, PdfLayoutBreakType } from '../enumerator';\n/**\n * Represent the layout format class for pagination\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create an instance for PDF layout format\n * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set the layout format\n * layout.break = PdfLayoutBreakType.fitPage;\n * layout.layout = pdfLayoutType.paginate;\n * // Draw the items using specified bounds and layout format\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfLayoutFormat = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutFormat` class.\n     *\n     * @param {PdfLayoutFormat}  format Format for pagination.\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page of document\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create an instance of ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Create an instance for layout format for drawing\n     * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n     * // Set the layout format\n     * layout.break = PdfLayoutBreakType.fitPage;\n     * layout.layout = pdfLayoutType.paginate;\n     * // Draw the items using specified bounds and layout format\n     * list.draw(page, 0, 20, layout);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfLayoutFormat(format) {\n        this._boundSet = false;\n        this._paginateBounds = [];\n        if (format) {\n            this.break = format.break;\n            this.layout = format.layout;\n            this.paginateBounds = format.paginateBounds;\n            this._boundSet = format._boundSet;\n        }\n        else {\n            this.layout = PdfLayoutType.paginate;\n            this.break = PdfLayoutBreakType.fitPage;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        /**\n         * Gets the layout type of the page.\n         *\n         * @returns {PdfLayoutType} The layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Retrieve the layout type applied to the page layout format\n         * let layoutType: PdfLayoutType = pageLayout.layout;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._layout;\n        },\n        /**\n         * Sets the layout type of the page.\n         *\n         * @param {PdfLayoutType} value the  layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Initialize an array of string items\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout type to paginate for the page layout format\n         * pageLayout.layout = PdfLayoutType.paginate;\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._layout = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets the layout break type of the page.\n         *\n         * @returns {PdfLayoutBreakType} The layout break type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define an array of products\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the layout break type of the list\n         * let layoutType: PdfLayoutBreakType = pageLayout.break;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._break;\n        },\n        /**\n         * Sets the layout break type for the page.\n         *\n         * @param {PdfLayoutBreakType} value The layout break type to set for the page.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout break type for the page\n         * pageLayout.break = PdfLayoutBreakType.fitPage;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._break = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets the paginate bounds of the page.\n         *\n         * @returns {number[]} Array containing the paginate bounds.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the paginate bounds\n         * let layoutType: paginateBounds = pageLayout.paginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._paginateBounds;\n        },\n        /**\n         * Sets the paginate bounds for the page.\n         *\n         * @param {number[]} value Array representing the paginate bounds to set for the page.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for page layout settings\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the paginate bounds for the page\n         * pageLayout.paginateBounds = [0, 0, 500, 700];\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._paginateBounds = value;\n            this._boundSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets whether to use paginate bounds for pagination.\n         *\n         * @returns {boolean} Whether pagination bounds are used.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get whether paginate bounds are used\n         * let usePaginate:  boolean = pageLayout.usePaginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._boundSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\n/**\n * Represents a class for layout result in PDF generation.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list and access the layout result\n * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLayoutResult = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutResult` class.\n     * Remarks: Internal constructor used to create a new instance of a PDF layout result.\n     *\n     * @param {PdfPage} page The page where the circle annotation is to be placed.\n     * @param {number[]} bounds The bounds within which the list has been drawn.\n     * ```typescript\n     * // Load an existing document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create a new ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list and access the layout result\n     * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfLayoutResult(page, bounds) {\n        this._page = page;\n        this._bounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"Page\", {\n        /**\n         * Gets the page associated with the layout result.\n         *\n         * @returns {PdfPage} value of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the page from the layout result\n         * let resultPage: PdfPage = result.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the bounds associated with the layout result.\n         *\n         * @returns {number[]} The bounds of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the bounds associated with layout result\n         * let bounds: number[] = result.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\nvar _PageLayoutResult = /** @class */ (function () {\n    function _PageLayoutResult() {\n        this.markerWrote = false;\n        this.markerWidth = 0;\n        this.markerX = 0;\n    }\n    return _PageLayoutResult;\n}());\nexport { _PageLayoutResult };\nvar _PdfLayoutParameters = /** @class */ (function () {\n    function _PdfLayoutParameters() {\n    }\n    return _PdfLayoutParameters;\n}());\nexport { _PdfLayoutParameters };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfImage } from './pdf-image';\nimport { _PdfName } from './../../pdf-primitives';\nimport { _decode, _getDecoder } from './../../utils';\nimport { _PdfColorSpace } from './../../enumerator';\nimport { _PngDecoder } from './png-decoder';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = _getDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n        if (this._decoder && this._decoder instanceof _PngDecoder) {\n            var decoder = this._decoder;\n            this._maskStream = decoder._maskStream;\n            if (decoder._isDecode) {\n                if (decoder._colorSpace) {\n                    this._setColorSpace();\n                }\n            }\n            else {\n                this._setColorSpace();\n            }\n        }\n        else {\n            this._setColorSpace();\n        }\n    };\n    PdfBitmap.prototype._setColorSpace = function () {\n        var stream = this._imageStream;\n        var dictionary = stream.dictionary;\n        var color = dictionary.get('ColorSpace');\n        var colorSpace;\n        if (color.name === 'DeviceCMYK') {\n            colorSpace = _PdfColorSpace.cmyk;\n        }\n        else if (color.name === 'DeviceGray') {\n            colorSpace = _PdfColorSpace.grayScale;\n        }\n        if (this._decoder instanceof _PngDecoder) {\n            var cs = this._decoder._colorSpace; // eslint-disable-line\n            if (typeof cs !== 'undefined' && cs !== null) {\n                colorSpace = _PdfColorSpace.indexed;\n            }\n        }\n        switch (colorSpace) {\n            case _PdfColorSpace.cmyk:\n                dictionary.update('Decode', [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceCMYK'));\n                break;\n            case _PdfColorSpace.grayScale:\n                dictionary.update('Decode', [0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceGray'));\n                break;\n            case _PdfColorSpace.rgb:\n                dictionary.update('Decode', [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceRGB'));\n                break;\n            case _PdfColorSpace.indexed:\n                dictionary.update('ColorSpace', this._decoder._colorSpace);\n                break;\n            default:\n                break;\n        }\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * Represents the items of the list.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new list item and add into the collection\n * items.add(new PdfListItem('PDF'));\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItem = /** @class */ (function () {\n    /**\n     * Creates a new `PdfListItem` instance with the specified text and optional settings for font, format, pen, and brush.\n     *\n     * @param {string} text The text content for the list item.\n     * @param {object} [settings] Optional settings for the list item.\n     * @param {PdfFont} [settings.font] The font used for rendering the text.\n     * @param {PdfStringFormat} [settings.format] The string format used for text layout.\n     * @param {PdfBrush} [settings.brush] The brush used for filling shapes or text.\n     * @param {PdfPen} [settings.pen] The pen used for drawing outlines.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create an instance of list item collection by passing the string array\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n     * // Create a new list item\n     * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n     * // Add the list item into the collection\n     * items.add(item);\n     * // Create a new PDF ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list items\n     * list.draw(page, 0, 20);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfListItem(text, settings) {\n        this._textIndent = 0;\n        if (text === null || typeof text === 'undefined') {\n            throw new Error('Text cannot be null or undenfied.');\n        }\n        this._text = text;\n        if (settings) {\n            if (settings.font) {\n                this._font = settings.font;\n            }\n            if (settings.format) {\n                this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                this._brush = settings.brush;\n            }\n        }\n    }\n    Object.defineProperty(PdfListItem.prototype, \"brush\", {\n        /**\n         * Gets the brush associated with the list item.\n         *\n         * @returns {PdfBrush} The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the brush from the list item\n         * let brush: PdfBrush = item.brush;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the brush associated with the list item.\n         *\n         * @param {PdfBrush} value The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the fill color\n         * item.brush = new PdfBrush([255, 0, 0]);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list item.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfPen([255, 0, 0], 1)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the pen from the list item\n         * let pen: PdfPen = item.pen;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `Pdfpen` object associated with the list item.\n         *\n         * @param {PdfPen} value `PdfPen` object used to specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the stroke color\n         * item.pen = new PdfPen([255, 0, 0], 1);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"font\", {\n        /**\n         * Get the `PdfFont` object associated with the list item.\n         *\n         * @returns {PdfFont} The `PdfFont` object used for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfStandardFont(PdfFontFamily.timesRoman, 12)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the font from the list item\n         * let font: PdfFont = item.font;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list item.\n         *\n         * @param {PdfFont} value The `PdfFont` object to be set for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"stringFormat\", {\n        /**\n         * Gets the `PdfStringFormat` object associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object used to specify text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {format: new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the string format from the list item\n         * let format: PdfStringFormat = item.stringFormat;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the `PdfStringFormat` object associated with the list item.\n         *\n         * @param {PdfStringFormat} value The`PdfStringFormat` object to be set for text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"text\", {\n        /**\n         * Gets the text content of the list item.\n         *\n         * @returns {string} The text content of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item1);\n         * // Get the text content of the item\n         * let text: string = item.text;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._text;\n        },\n        /**\n         * Sets string format of the list item.\n         *\n         * @param {string} value The text content to be set.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('Word');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text of the list item\n         * item.text = 'PDF';\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Get the text indent of the item\n         * let textIndent: number = item.textIndent;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list item.\n         *\n         * @param {number} value he text indent value to be set.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Set the text indent for the item\n         * item.textIndent = 30;\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Draw the list items on the specified page at position (10, 50)\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"subList\", {\n        /**\n         * Get the sub-list associated with the current list item.\n         *\n         * @returns {PdfList} The `PdfList` object representing the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('Sub Item 1'));\n         * subList.items.add(new PdfListItem('Sub Item 2'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Get the sublist\n         * let sublist: PdfList = list.items._listitem[0].sublist;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._subList;\n        },\n        /**\n         * Sets the sub-list associated with the current list item.\n         *\n         * @param {PdfList} value The `PdfList` object to be set as the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('PDF'));\n         * subList.items.add(new PdfListItem('Word'));\n         * subList.items.add(new PdfListItem('PPT'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._subList = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfListItem;\n}());\nexport { PdfListItem };\n/**\n * Represents a collection of list items that can be drawn on a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItemCollection = /** @class */ (function () {\n    function PdfListItemCollection(items) {\n        var _this = this;\n        if (!this._listItems) {\n            this._listItems = [];\n        }\n        if (items) {\n            items.forEach(function (item) {\n                _this.add(new PdfListItem(item));\n            });\n        }\n    }\n    Object.defineProperty(PdfListItemCollection.prototype, \"count\", {\n        /**\n         * Gets the count of the list item collection.\n         *\n         * @returns {number} The count of the list items.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Initialize an array of string items\n         * let products: string[] = ['Word', 'Excel', 'PDF', 'Power Point'];\n         * // Add the items to list item collection by passing the array of products\n         * list.items = new PdfListCollection(products);\n         * / Draw the list on the page at specified bounds\n         * list.draw(page,0, 10, 500, 700);\n         * // Get the count of items from the list\n         * let count: number = list.items.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._listItems.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListItemCollection.prototype.add = function (item, itemIndent) {\n        if (item) {\n            this._listItems.push(item);\n            if (itemIndent) {\n                item.textIndent = itemIndent;\n            }\n        }\n        else {\n            throw new Error('item should not be null');\n        }\n    };\n    /**\n     * Retrieves the `PdfListItem` at the specified index in the collection.\n     *\n     * @param {number} index The zero-based index of the item to retrieve.\n     * @returns {PdfListItem} The `PdfListItem` at the specified index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Accessing the first page of the document\n     * let page: PdfPage = document.getpage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = ['Excel', 'Power Point', 'Word', 'Windows', 'MAUI'];\n     * // Add the items to list item collection by passing the array of products\n     * let itemCollection: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Retrieve a specific item from the list collection at a particular index\n     * let item: PdflistItem = list.itemCollection.itemAt(1);\n     * // Draw the list items on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 50, 500, 700);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.at = function (index) {\n        if (index === null) {\n            throw new Error('index should not be null');\n        }\n        var item = this._listItems[Number.parseInt(index.toString(), 10)];\n        return item;\n    };\n    /**\n     * Removes a `PdfListItem` from the collection.\n     *\n     * @param {PdfListItem} item The list item to be removed from the collection.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection\n     * let itemToRemove: PdfListItem = list.items.at(0);\n     * list.items.remove(itemToRemove);\n     * // Draw the list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.remove = function (item) {\n        if (!item) {\n            throw new Error('item should not be null');\n        }\n        var found = false;\n        for (var i = 0; i < this._listItems.length; i++) {\n            if (this._listItems[Number.parseInt(i.toString(), 10)] === item) {\n                found = true;\n                this._listItems.splice(Number.parseInt(i.toString(), 10), 1);\n                break;\n            }\n        }\n        if (!found) {\n            throw new Error('item collection does not contain the given content');\n        }\n    };\n    /**\n     * Removes a `PdfListItem` at the specified index from the collection.\n     *\n     * @param {number} index The zero-based index of the item to remove.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection by its index\n     * list.items.removeAt(1);\n     * // Draw the modified list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._listItems.length) {\n            throw new Error('The index should be less than items count or equal to 0');\n        }\n        this._listItems.splice(index, 1);\n    };\n    /**\n     * Clear the list item collection.\n     *\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Draw the initial list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Clear the list item collection\n     * list.items.clear();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.clear = function () {\n        this._listItems = [];\n    };\n    /**\n     * Inserts a `PdfListItem` into the collection at the specified index.\n     *\n     * @param {number} index The zero-based index at which the item should be inserted.\n     * @param {PdfListItem} item The list item to be inserted into the collection.\n     * @param {number} itemIndent The indent of the list item.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Create a new PdfListItem instance with some text\n     * let item: PdfListItem = new PdfListItem('text');\n     * // Insert the new item into the list at index 1 with an indent of 40\n     * list.items.insert(1, item, 40);\n     * // Draw the updated list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.insert = function (index, item, itemIndent) {\n        if (index < 0 || index > this._listItems.length) {\n            throw new Error('Index should be within the range of items count (inclusive).');\n        }\n        if (!item) {\n            throw new Error('Item cannot be null.');\n        }\n        if (itemIndent) {\n            item.textIndent = itemIndent;\n        }\n        this._listItems.splice(index, 0, item);\n    };\n    /**\n     * Finds the index of a `PdfListItem` in the collection.\n     *\n     * @param {PdfListItem} item The list item to find in the collection.\n     * @returns {number} The zero-based index of the item in the collection, or -1 if not found.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Retrieve the first item from the collection\n     * let item: PdfListItem = item._listItems[0];\n     * // Find the index of the first item in the collection\n     * let index: number = list.items.indexOf(item);\n     * // Draw the list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.indexOf = function (item) {\n        if (!item) {\n            throw new Error('Item should be defined.');\n        }\n        return this._listItems.indexOf(item);\n    };\n    return PdfListItemCollection;\n}());\nexport { PdfListItemCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfListMarkerAlignment, PdfLayoutType, PdfNumberStyle, PdfTextAlignment, PdfUnorderedListStyle } from '../enumerator';\nimport { PdfFontFamily, PdfStandardFont, PdfStringFormat, _PdfStringLayouter } from '../fonts';\nimport { PdfBrush } from '../graphics/pdf-graphics';\nimport { PdfTemplate } from '../graphics/pdf-template';\nimport { PdfLayoutResult, PdfLayoutFormat, _PdfLayoutParameters, _PageLayoutResult } from '../graphics';\nimport { PdfPage } from '../pdf-page';\nimport { PdfListItemCollection } from './pdf-list-item';\nimport { _convertNumber } from './../utils';\n/**\n * Represents base class for lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Initialize a new brush\n * let brush: PdfBrush =  new PdfBrush([0, 255, 255])\n * // Add an item to item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new instance of ordered list\n * let list: PdfList = new PdfOrderedList(items);\n * // Draw the ordered list with specified items\n * list.draw(page, 0, 20, 500, 700);\n * // Get the brush associated with the ordered list\n * let listBrush: PdfBrush = list.brush;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfList = /** @class */ (function () {\n    function PdfList() {\n        this._textIndent = 5;\n        this._indent = 10;\n        this._alignment = PdfListMarkerAlignment.left;\n        this._delimiter = '.';\n        this._suffix = '.';\n        this._enableHierarchy = false;\n        this._currentIndex = 0;\n        this._size = [0, 0];\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n    }\n    Object.defineProperty(PdfList.prototype, \"brush\", {\n        /**\n         * Gets the `PdfBrush` object associated with the list.\n         *\n         * @returns {PdfBrush} The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Initialize a new brush\n         * let brush: PdfBrush =  new PdfBrush([0, 255, 255]);\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the brush associated with the ordered list\n         * let listBrush: PdfBrush = list.brush;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the `PdfBrush` object associated with the list.\n         *\n         * @param {PdfBrush} value The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new Ordered list and set the brush\n         * let list: PdfOrderedList = new PdfOrderedList(items, {brush: new PdfBrush([255, 0, 0])});\n         * // Set fill color to the list\n         * list.brush = brush;\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify stroke properties for text rendering.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // create a new ordered list and draw the list\n         * let list: PdfOrderedList = new PdfOrderedList(items, {pen: new PdfPen([0, 255, 255], 1)});\n         * list.draw(page, 0, 20, 500, 700);\n         * // Retrieve the pen associated with the ordered list\n         * let itemPen: PdfPen = list.pen;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `PdfPen` object associated with the list.\n         *\n         * @param {PdfPen} value The `PdfPen` object to specify fill text rendering mode.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new pen\n         * let pen: PdfPen =  new PdfPen([0, 255, 255], 1);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the pen for the ordered list\n         * list.pen = pen;\n         * // Draw the list associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"font\", {\n        /**\n         * Gets the font of the list item.\n         *\n         * @returns {PdfFont} The font used for the list items.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * /// Retrieve the font used for the list items\n         * let itemPen: PdfFont = list.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list.\n         *\n         * @param {PdfFont} value The `PdfPen` object to to set for the list items.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new font for list\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Create a new ordered list with items and font\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * list.font = font;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"stringFormat\", {\n        /**\n         * Gets the text layout format associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to  listitem collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list with items\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Getting the text layout format used by the list items\n         * let itemFormat: PdfStringFormat = list.stringFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the text layout format of the list item.\n         *\n         * @param {PdfStringFormat} value The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new  format with alignment settings for list\n         * let itemFormat: PdfStringFormat =  new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(items);\n         * // Create a ordered list with the item collection\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Set the text layout format for the list\n         * list.stringFormat = itemFormat;\n         * // Draw the items on the page with the updated format\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"indent\", {\n        /**\n         * Gets the indent of the list.\n         *\n         * @returns {number} The indent value of the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current indent value used by the list\n         * let itemIndent: number = list.indent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._indent;\n        },\n        /**\n         * Sets the indent of the list.\n         *\n         * @param {number} value The indent value to set for the list.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the indent value for the list\n         * list.indent = 40;\n         * // Draw the items on the page with the specified indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._indent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current text indent value of the list\n         * let textIndent: number = list.textIndent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list.\n         *\n         * @param {number} value The text indent value to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text indent value for the list\n         * list.textIndent = 40;\n         * // Draw the items on the page with the updated text indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"delimiter\", {\n        /**\n         * Gets the delimiter string used to separate items in the list.\n         *\n         * @returns {string} The delimiter string used in the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of PdfListItemCollection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the delimiter used in the list\n         * let delimiter: string = list.delimiter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._delimiter;\n        },\n        /**\n         * Sets the delimiter string used to separate items in the list.\n         *\n         * @param {string} value The delimiter string to be set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the delimiter for the list\n         * list.delimiter = ')';\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._delimiter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"suffix\", {\n        get: function () {\n            return this._suffix;\n        },\n        set: function (value) {\n            this._suffix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"enableHierarchy\", {\n        /**\n         * Gets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @returns {boolean} `true` if hierarchical structure is enabled; otherwise, `false`.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items associated with the items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the hierarchical structure status\n         * let enableHierarchy: boolean = list.enableHierarchy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._enableHierarchy;\n        },\n        /**\n         * Sets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @param {boolean} value The boolean flag to enable or disable hierarchical structure.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the hierarchical structure status\n         * list.enableHierarchy = true;\n         * / Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._enableHierarchy = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"alignment\", {\n        /**\n         * Gets the text alignment of the list.\n         *\n         * @returns {PdfTextAlignment} The text alignment.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the alignment of the list\n         * let listAlignment: PdfTextAlignment = list.alignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._alignment;\n        },\n        /**\n         * Sets the text alignment of the list.\n         *\n         * @param {PdfTextAlignment} value The text alignment to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the alignment for the list\n         * list.alignment = PdfTextAlignment.left;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._alignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"items\", {\n        /**\n         * Gets the item collection of the list.\n         *\n         * @returns {PdfListItemCollection} The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the item collection\n         * let collection: PdfListItemCollection = list.items;\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._itemCollection;\n        },\n        /**\n         * Sets the item collection of the list.\n         *\n         * @param {PdfListItemCollection} value The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Sets the item collection\n         * list.items = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._itemCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"_markerRightToLeft\", {\n        get: function () {\n            return this._alignment === PdfListMarkerAlignment.right;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfList.prototype.draw = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPage) {\n            if (arg1._isNew) {\n                return this._drawInternal(arg1, arg2, arg3, arg4, arg5, arg6);\n            }\n            else {\n                (new _PdfListLayouter(this)).layout(arg1.graphics, [arg2, arg3, 0, 0]);\n            }\n        }\n        else {\n            (new _PdfListLayouter(this)).layout(arg1, [arg2, arg3, 0, 0]);\n        }\n    };\n    PdfList.prototype._drawInternal = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        var parameter = new _PdfLayoutParameters();\n        parameter._page = arg1;\n        if (arg4 === null || typeof arg4 === 'undefined') {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = new PdfLayoutFormat();\n        }\n        else if (typeof arg4 === 'number') {\n            parameter._bounds = [arg2, arg3, arg4, arg5];\n            if (arg6) {\n                parameter._format = arg6;\n            }\n            else {\n                parameter._format = new PdfLayoutFormat();\n            }\n        }\n        else if (arg4 instanceof PdfLayoutFormat) {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = arg4;\n        }\n        return this._layout(parameter);\n    };\n    PdfList.prototype._layout = function (parameter) {\n        return (new _PdfListLayouter(this)).layoutInternal(parameter);\n    };\n    return PdfList;\n}());\nexport { PdfList };\n/**\n * Represents an ordered list in a PDF document.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define an array of strings representing items to be added\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the ordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfOrderedList = /** @class */ (function (_super) {\n    __extends(PdfOrderedList, _super);\n    function PdfOrderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        _this._startNumber = 1;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfNumberStyle.numeric;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfNumberStyle.numeric;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfOrderedList.prototype, \"style\", {\n        /**\n         * Gets the numbering style used for the ordered list.\n         *\n         * @returns {PdfNumberStyle} The numbering style used for the ordered list.\n         *  ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the numbering style used for the ordered list\n         * let style: PdfNumberStyle = list.style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the numbering style used for the ordered list.\n         *\n         * @param {PdfNumberStyle} value The numbering style used for the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         *  // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Define a style for the list\n         * let style: PdfNumberStyle = PdfNumberStyle.lowerLatin;\n         * // Set the numbering style for the list items\n         * list.style = style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfOrderedList.prototype, \"startNumber\", {\n        /**\n         * Gets the starting number used for the ordered list.\n         *\n         * @returns {number} The starting number of the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the starting number used for the ordered list\n         * let startnumber: number = list.startNumber;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._startNumber;\n        },\n        /**\n         * Sets the starting number to be used for the ordered list.\n         *\n         * @param {number} value The starting number to set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the starting number for the ordered list\n         * list.startNumber = 5;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('Start number should be greater than 0.');\n            }\n            this._startNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfOrderedList.prototype._getNumber = function () {\n        return _convertNumber(this._startNumber + this._currentIndex, this._style);\n    };\n    return PdfOrderedList;\n}(PdfList));\nexport { PdfOrderedList };\n/**\n * Represents the Unordered lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define the items in the unordered list\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Create an instance of PdfListItemCollection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of PdfUnorderedList\n * let list: PdfUnorderedList = new PdfUnorderedList();\n * // Draw the unordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfUnorderedList = /** @class */ (function (_super) {\n    __extends(PdfUnorderedList, _super);\n    function PdfUnorderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfUnorderedListStyle.disk;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfUnorderedListStyle.disk;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUnorderedList.prototype, \"style\", {\n        /**\n         * Gets the style used for the unordered list.\n         *\n         * @returns {PdfUnorderedListStyle} The style used for the unordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Get the style used for the unordered list\n         * let style: PdfUnorderedListStyle = list.style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style used for the unordered list.\n         *\n         * @param {PdfUnorderedListStyle} value The style to set for the unordered list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Initialize a style for the unordered list\n         * let style: PdfUnorderedListStyle = PdfUnorderedListStyle.circle;\n         * // Set the style for the unordered list items\n         * list.style = style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUnorderedList.prototype._getStyledText = function () {\n        switch (this._style) {\n            case PdfUnorderedListStyle.disk:\n                return '\\x6C';\n            case PdfUnorderedListStyle.square:\n                return '\\x6E';\n            case PdfUnorderedListStyle.asterisk:\n                return '\\x5D';\n            case PdfUnorderedListStyle.circle:\n                return '\\x6D';\n            default:\n                return '';\n        }\n    };\n    PdfUnorderedList.prototype._draw = function (graphics, x, y, brush, pen) {\n        var template = new PdfTemplate([0, 0, this._size[0], this._size[1]], graphics._crossReference);\n        var bounds = [0, 0, 0, 0];\n        if (pen) {\n            bounds[0] = bounds[0] + pen._width;\n            bounds[1] = bounds[1] + pen._width;\n        }\n        template.graphics.drawString(this._getStyledText(), this._unicodeFont, bounds, pen, brush);\n        graphics.drawTemplate(template, { x: x, y: y, width: template.size[0], height: template.size[1] });\n    };\n    return PdfUnorderedList;\n}(PdfList));\nexport { PdfUnorderedList };\nvar _PdfListInfo = /** @class */ (function () {\n    function _PdfListInfo(list, index, number) {\n        this._list = list;\n        this._index = index;\n        this._number = number;\n    }\n    return _PdfListInfo;\n}());\nexport { _PdfListInfo };\nvar _PdfListLayouter = /** @class */ (function () {\n    function _PdfListLayouter(element) {\n        this._indent = 0;\n        this._information = [];\n        this._markerMaxWidth = 0;\n        this._finish = false;\n        this._usePaginateBounds = true;\n        this._resultHeight = 0;\n        this._size = [0, 0];\n        this._index = 0;\n        this._element = element;\n    }\n    _PdfListLayouter.prototype.layout = function (graphics, bounds) {\n        this._graphics = graphics;\n        var parameter = new _PdfLayoutParameters();\n        parameter._bounds = bounds;\n        parameter._format = new PdfLayoutFormat();\n        parameter._format.layout = PdfLayoutType.onePage;\n        this.layoutInternal(parameter);\n    };\n    _PdfListLayouter.prototype.layoutInternal = function (parameter) {\n        this._currentPage = parameter._page;\n        this._bounds = parameter._bounds.slice();\n        if (this._currentPage) {\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            this._graphics = this._currentPage.graphics;\n        }\n        var pageResult = new _PageLayoutResult();\n        pageResult.broken = false;\n        pageResult.y = this._bounds[1];\n        this._curList = this._element;\n        this._indent = this._curList.indent;\n        this._setCurrentParameters(this._curList);\n        if (!this._curList.brush) {\n            this._currentBrush = new PdfBrush([0, 0, 0]);\n        }\n        if (!this._curList.font) {\n            this._currentFont = this._curList._defaultFont;\n        }\n        if (this._curList instanceof PdfOrderedList) {\n            this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n        }\n        var useOnPage = parameter._format.layout === PdfLayoutType.onePage;\n        while (!this._finish) {\n            pageResult.y = this._bounds[1];\n            pageResult = this._layoutOnPage(pageResult);\n            if (useOnPage) {\n                break;\n            }\n            if (this._currentPage && !this._finish) {\n                this._currentPage = this._getNextPage(this._currentPage);\n            }\n            this._graphics = this._currentPage.graphics;\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            if (parameter._format && parameter._format.usePaginateBounds && this._usePaginateBounds) {\n                this._bounds = parameter._format._paginateBounds;\n            }\n        }\n        this._information = [];\n        var finalBounds = [this._bounds[0], pageResult.y, this._bounds[2], this._resultHeight];\n        var result = new PdfLayoutResult(this._currentPage, finalBounds);\n        if (this._currentFormat) {\n            this._currentFormat._isList = false;\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._layoutOnPage = function (pageResult) {\n        var height = 0;\n        var resultantHeight = 0;\n        var y = this._bounds[1];\n        var x = this._bounds[0];\n        this._size = [this._bounds[2] - this._indent, this._bounds[3]];\n        while (true) { // eslint-disable-line\n            for (; this._index < this._curList.items.count; ++this._index) {\n                var item = this._curList.items.at(this._index);\n                var result = this._drawItem(pageResult, x, this._curList, this._index, this._indent, this._information, item, height, y);\n                pageResult = result.pageResult;\n                height = result.height;\n                y = result.y;\n                resultantHeight += height;\n                if (pageResult.broken) {\n                    return pageResult;\n                }\n                pageResult.markerWrote = false;\n                if (item.subList && item.subList.items.count > 0) {\n                    if (this._curList instanceof PdfOrderedList) {\n                        var oList = this._curList;\n                        oList._currentIndex = this._index;\n                        var info = new _PdfListInfo(this._curList, this._index, oList._getNumber());\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        info._markerWidth = this._markerMaxWidth;\n                        this._information.push(info);\n                    }\n                    else {\n                        var info = new _PdfListInfo(this._curList, this._index);\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        this._information.push(info);\n                    }\n                    this._curList = item.subList;\n                    if (this._curList instanceof PdfOrderedList) {\n                        this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n                    }\n                    this._index = -1;\n                    this._indent += this._curList.indent;\n                    this._size[0] = this._size[0] - this._curList.indent;\n                    this._setCurrentParameters(item);\n                    this._setCurrentParameters(this._curList);\n                }\n            }\n            if (this._information.length === 0) {\n                this._resultHeight = resultantHeight;\n                this._finish = true;\n                break;\n            }\n            var listInfo = this._information.pop();\n            this._index = listInfo._index + 1;\n            this._indent -= this._curList.indent;\n            this._size[0] = this._size[0] + this._curList.indent;\n            this._markerMaxWidth = listInfo._markerWidth;\n            this._currentBrush = listInfo._brush;\n            this._currentPen = listInfo._pen;\n            this._currentFont = listInfo._font;\n            this._currentFormat = listInfo._format;\n            this._curList = listInfo._list;\n        }\n        return pageResult;\n    };\n    _PdfListLayouter.prototype._drawItem = function (pageResult, x, curList, index, indent, info, item, height, y) {\n        var layouter = new _PdfStringLayouter();\n        var result;\n        var textIndent = curList.textIndent;\n        var posY = height + y;\n        var posX = indent + x;\n        var itemHeight = 0;\n        var itemSize = this._size;\n        var text = item.text;\n        var markerText;\n        var itemBrush = this._currentBrush;\n        var markerHeight = 0;\n        if (item.brush) {\n            itemBrush = item.brush;\n        }\n        var itemPen = this._currentPen;\n        if (item.pen) {\n            itemPen = item.pen;\n        }\n        var itemFont = this._currentFont;\n        if (item.font) {\n            itemFont = item.font;\n        }\n        var itemFormat = this._currentFormat;\n        if (item.stringFormat) {\n            itemFormat = item.stringFormat;\n        }\n        if ((this._size[0] <= 0 || this._size[0] < itemFont.size) && this._currentPage) {\n            throw new Error('There is not enough space to layout list.');\n        }\n        this._size[1] = this._size[1] - height;\n        if (pageResult.broken) {\n            text = pageResult.itemText;\n            markerText = pageResult.markerText;\n        }\n        var canDrawMarker = true;\n        var markerResult = this._createMarkerResult(index, curList, info, item);\n        if (markerResult) {\n            if (curList instanceof PdfOrderedList) {\n                posX += this._markerMaxWidth;\n                pageResult.markerWidth = this._markerMaxWidth;\n            }\n            else {\n                posX += markerResult._actualSize[0];\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            markerHeight = markerResult._actualSize[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n            if (markerResult._empty) {\n                canDrawMarker = false;\n            }\n        }\n        else {\n            posX += curList._size[0];\n            pageResult.markerWidth = curList._size[0];\n            markerHeight = curList._size[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n        }\n        if (!markerText || markerText === '') {\n            canDrawMarker = true;\n        }\n        if (text && canDrawMarker) {\n            itemSize = this._size;\n            itemSize[0] = itemSize[0] - pageResult.markerWidth;\n            if (item.textIndent === 0) {\n                itemSize[0] = itemSize[0] - textIndent;\n            }\n            else {\n                itemSize[0] = itemSize[0] - item.textIndent;\n            }\n            if ((itemSize[0] <= 0 || itemSize[0] < itemFont.size) && this._currentPage) {\n                throw new Error('Not enough space to layout the text. The marker is too long or there is not enough space to draw it.');\n            }\n            var itemX = posX;\n            if (!curList._markerRightToLeft) {\n                if (item.textIndent === 0) {\n                    itemX += textIndent;\n                }\n                else {\n                    itemX += item.textIndent;\n                }\n            }\n            else {\n                itemX -= pageResult.markerWidth;\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    itemX -= indent;\n                }\n            }\n            if (!this._currentPage && itemFormat) {\n                itemFormat = Object.assign({}, itemFormat);\n                itemFormat.alignment = PdfTextAlignment.left;\n            }\n            result = layouter._layout(text, itemFont, itemFormat, itemSize);\n            var rect = [itemX, posY, itemSize[0], itemSize[1]];\n            this._graphics._drawStringLayoutResult(result, itemFont, itemPen, itemBrush, rect, itemFormat);\n            y = posY;\n            itemHeight = result._actualSize[1];\n        }\n        height = (itemHeight < markerHeight) ? markerHeight : itemHeight;\n        if ((result && result._remainder && result._remainder !== '') ||\n            (markerResult && markerResult._remainder && markerResult._remainder !== '') ||\n            !canDrawMarker) {\n            y = 0;\n            height = 0;\n            if (result) {\n                pageResult.itemText = result._remainder;\n                if (result._remainder === item.text) {\n                    canDrawMarker = false;\n                }\n            }\n            else {\n                if (canDrawMarker) {\n                    pageResult.itemText = undefined;\n                }\n                else {\n                    pageResult.itemText = item.text;\n                }\n            }\n            if (markerResult) {\n                pageResult.markerText = markerResult._remainder;\n            }\n            else {\n                pageResult.markerText = undefined;\n            }\n            pageResult.broken = true;\n            pageResult.y = 0;\n            this._bounds[1] = 0;\n        }\n        else {\n            pageResult.broken = false;\n        }\n        if (result) {\n            pageResult.markerX = posX;\n            if (itemFormat) {\n                switch (itemFormat.alignment) {\n                    case PdfTextAlignment.right:\n                        pageResult.markerX = posX + itemSize[0] - result._actualSize[0];\n                        break;\n                    case PdfTextAlignment.center:\n                        pageResult.markerX = posX + (itemSize[0] / 2) - (result._actualSize[0] / 2);\n                        break;\n                }\n            }\n            if (curList._markerRightToLeft) {\n                pageResult.markerX += result._actualSize[0];\n                if (item.textIndent === 0) {\n                    pageResult.markerX += textIndent;\n                }\n                else {\n                    pageResult.markerX += item.textIndent;\n                }\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    pageResult.markerX -= indent;\n                }\n            }\n        }\n        if (canDrawMarker && !pageResult.markerWrote) {\n            pageResult.markerWrote = this._drawMarker(curList, item, markerResult, posY, pageResult.markerX);\n            if (curList instanceof PdfOrderedList) {\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            else {\n                pageResult.markerWidth = curList._size[0];\n            }\n        }\n        return { pageResult: pageResult, height: height, y: y };\n    };\n    _PdfListLayouter.prototype._createMarkerResult = function (index, curList, info, item) {\n        if (curList instanceof PdfOrderedList) {\n            return this._createOrderedMarkerResult(curList, item, index, info, false);\n        }\n        else {\n            return this._createUnorderedMarkerResult(curList, item);\n        }\n    };\n    _PdfListLayouter.prototype._drawMarker = function (curList, item, markerResult, posY, posX) {\n        if (curList instanceof PdfOrderedList) {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n                this._drawOrderedMarker(curList, markerResult, item, posX, posY);\n            }\n        }\n        else {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n            }\n            this._drawUnorderedMarker(curList, markerResult, item, posX, posY);\n        }\n        return true;\n    };\n    _PdfListLayouter.prototype._drawUnorderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        if (markerResult) {\n            curList._size = markerResult._actualSize;\n            curList._unicodeFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n            curList._draw(this._graphics, posX - markerResult._actualSize[0], posY, markerBrush, markerPen);\n        }\n        else {\n            curList._size = [markerFont.size, markerFont.size];\n            curList._draw(this._graphics, posX - markerFont.size, posY, markerBrush, markerPen);\n        }\n    };\n    _PdfListLayouter.prototype._drawOrderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        var rect = [posX - this._markerMaxWidth, posY, this._markerMaxWidth, markerResult._actualSize[1]];\n        var markerFormat = this._setMarkerStringFormat(curList, this._getMarkerFormat(curList, item));\n        this._graphics._drawStringLayoutResult(markerResult, markerFont, markerPen, markerBrush, rect, markerFormat);\n    };\n    _PdfListLayouter.prototype._setCurrentParameters = function (element) {\n        if (element.brush) {\n            this._currentBrush = element.brush;\n        }\n        if (element.pen) {\n            this._currentPen = element.pen;\n        }\n        if (element.font) {\n            this._currentFont = element.font;\n        }\n        if (element.stringFormat) {\n            this._currentFormat = element.stringFormat;\n            if (element instanceof PdfList) {\n                this._currentFormat._isList = true;\n            }\n        }\n    };\n    _PdfListLayouter.prototype._getMarkerMaxWidth = function (list, infromation) {\n        var width = -1;\n        for (var i = 0; i < list.items.count; i++) {\n            var result = this._createOrderedMarkerResult(list, list.items.at(i), i + list.startNumber, infromation, true);\n            if (width < result._actualSize[0]) {\n                width = result._actualSize[0];\n            }\n        }\n        return width;\n    };\n    _PdfListLayouter.prototype._createUnorderedMarkerResult = function (list, item) {\n        var markerFont = this._getMarkerFont(list, item);\n        var layouter = new _PdfStringLayouter();\n        var uFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n        var result = layouter._layout(list._getStyledText(), uFont, null, this._size);\n        list._size = result._actualSize;\n        if (list.pen) {\n            result._size = [result._actualSize[0] + 2 * list.pen._width, result._actualSize[1] + 2 * list.pen._width];\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._createOrderedMarkerResult = function (list, item, index, infromation, findMaxWidth) {\n        list._currentIndex = index;\n        var text = '';\n        if (list.style !== PdfNumberStyle.none) {\n            text = list._getNumber() + list.suffix;\n        }\n        if (list.enableHierarchy) {\n            var collection = infromation.slice();\n            for (var i = 0; i < collection.length; i++) {\n                var listInfo = collection[Number.parseInt(i.toString(), 10)];\n                var orderedList = listInfo._list;\n                if (!(orderedList && orderedList instanceof PdfOrderedList && orderedList.style !== PdfNumberStyle.none)) {\n                    break;\n                }\n                text = listInfo._number + orderedList.delimiter + text;\n                if (!orderedList.enableHierarchy) {\n                    break;\n                }\n            }\n        }\n        var layouter = new _PdfStringLayouter();\n        var font = this._getMarkerFont(list, item);\n        var format = this._getMarkerFormat(list, item);\n        var markerSize = [0, 0];\n        if (!findMaxWidth) {\n            markerSize[0] = this._markerMaxWidth;\n            format = this._setMarkerStringFormat(list, format);\n        }\n        return layouter._layout(text, font, format, markerSize);\n    };\n    _PdfListLayouter.prototype._setMarkerStringFormat = function (list, format) {\n        if (format) {\n            format = Object.assign({}, format);\n        }\n        else {\n            format = new PdfStringFormat();\n        }\n        if (!list.stringFormat) {\n            format.alignment = PdfTextAlignment.right;\n            if (list._markerRightToLeft) {\n                format.alignment = PdfTextAlignment.left;\n            }\n        }\n        if (!this._currentPage && format) {\n            format = Object.assign({}, format);\n            format.alignment = PdfTextAlignment.left;\n        }\n        return format;\n    };\n    _PdfListLayouter.prototype._getMarkerFont = function (list, item) {\n        var markerFont = list.font;\n        if (!markerFont) {\n            markerFont = item.font;\n            if (!markerFont) {\n                markerFont = this._currentFont;\n            }\n        }\n        list.font = markerFont;\n        return markerFont;\n    };\n    _PdfListLayouter.prototype._getMarkerFormat = function (list, item) {\n        var markerFormat = list.stringFormat;\n        if (!markerFormat) {\n            markerFormat = item.stringFormat;\n            if (!markerFormat) {\n                markerFormat = this._currentFormat;\n            }\n        }\n        return markerFormat;\n    };\n    _PdfListLayouter.prototype._getMarkerPen = function (list, item) {\n        var markerPen = list.pen;\n        if (!markerPen) {\n            markerPen = item.pen;\n            if (!markerPen) {\n                markerPen = this._currentPen;\n            }\n        }\n        return markerPen;\n    };\n    _PdfListLayouter.prototype._getMarkerBrush = function (list, item) {\n        var markerBrush = list.brush;\n        if (!markerBrush) {\n            markerBrush = item.brush;\n            if (!markerBrush) {\n                markerBrush = this._currentBrush;\n            }\n        }\n        return markerBrush;\n    };\n    _PdfListLayouter.prototype._getNextPage = function (page) {\n        var document = page._crossReference._document;\n        if (page._pageIndex < document.pageCount - 1) {\n            return document.getPage(page._pageIndex + 1);\n        }\n        else {\n            return document.addPage();\n        }\n    };\n    return _PdfListLayouter;\n}());\nexport { _PdfListLayouter };\n"],"names":["_toUnsigned","value","bits","Math","pow","_toSigned16","_toSigned32","_copyRange","target","at","source","start","end","length","max","min","i","j","Number","parseInt","toString","_checkType","imageData","header","_getDecoder","decoder","_JpegDecoder","Error","_PngDecoder","_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","code","String","fromCharCode","charAt","isDirect","isPassword","destination","bytes","charCode","Uint8Array","_areArrayEqual","first","second","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","isJson","stringBuffer","_decodeUnicodeBytes","apply","chunkEnd","chunk","subarray","byte","codePoint","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decodeChunk","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_decode","outputChunks","decodedChunk","offset","_i","outputChunks_1","set","from","_encodeChunk","isLastChunk","byte1","byte2","byte3","value1","value2","value3","value4","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","matrix","_PdfTransformationMatrix","_translate","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_encodeValue","hex","_getCommentsOrReview","annotation","isReview","reviewHistory","comments","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","regular","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","PdfLineAnnotation","_isLoaded","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","_checkInkPoints","inkPointsCollection","previousCollection","_obtainDestination","destinationArray","_document","bottom","right","zoom","pageNumber","document_1","leftValue","angle0","PdfDestination","_index","_setValidation","PdfDestinationMode","fitR","fitH","fitToPage","_updateBounds","bounds","_bounds","_page","_pageSettings","pageSettings","pageBounds","margins","top","cropBoxOrMediaBox","_getCropOrMediaBox","_decodeText","isColorSpace","startsWith","endsWith","codeUnit","_getSize","_stringToBigEndianBytes","_convertNumber","intArabic","numberStyle","PdfNumberStyle","numeric","lowerLatin","_arabicToLetter","lowerRoman","_arabicToRoman","upperLatin","upperRoman","retval","romanNumerals_1","_a","numeral","arabic","remainder","floor","_appendChar","_isNullOrUndefined","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PathPointType","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","_PdfColorSpace","PdfUnorderedListStyle","PdfLayoutType","PdfLayoutBreakType","PdfListMarkerAlignment","_PdfStreamWriter","this","_newLine","_whiteSpace","_stream","_writeOperator","write","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","arg2","arg3","colorSpaceName","rgb","cmyk","grayScale","_setColor","forStroking","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_setLeading","leading","_write","_showText","_writeText","string","builder","data","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","_setTextRenderingMode","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","wordSpacing","_showNextLineText","unicode","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_beginMarkupSequence","_endMarkupSequence","_clear","_bytes","currentData","PdfStringFormat","arg1","horizontalScalingFactor","rightToLeft","_wordWrapType","word","_isList","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","characterSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","defineProperty","enumerable","configurable","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","_size","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_initialize","_doLayout","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte4","_writeBytes","buff","i_1","written","read","_createInternals","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","shapeText","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","_reArrange","pstart","pend","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","fontBox","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","fontBoxItalic","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","PdfPath","pathTypes","_points","_pathTypes","_isRoundedRectangle","_fillMode","winding","_isStart","_isXps","_brush","_pen","addPath","_addPath","pathPoints","slice","addLine","_addPoints","_addLines","linePoints","_addPoint","startIndex","endIndex","lastPoint","addArc","startAngle","sweepAngle","list","bezier","addRectangle","startFigure","closeFigure","addPolygon","newPoints","addEllipse","addBezier","startX","startY","firstX","firstY","secondX","secondY","endX","endY","_addBezierPoints","pointsCollection","inner1","inner2","addPie","closePath","closeAllFigures","pointType","_getBounds","xmin","xmax","ymin","ymax","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","graphics","needSave","save","translateTransform","drawImage","restore","horizontalResolution","ucX","_PdfUnitConvertor","ucY","_convertUnits","pixel","PdfGraphics","content","xref","_pendingResource","_hasResourceReference","PdfPage","_source","_template","_resourceObject","_sw","_clipBounds","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_graphicsState","_doRestore","pop","_transformationMatrix","drawRectangle","_setPenBrush","_drawGraphicsPath","pen","brush","drawBezier","_stateControl","drawPie","_constructPiePath","drawPolygon","drawEllipse","_constructArcPath","drawArc","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","keyName","isNew","_updateImageResource","resource","drawTemplate","_isExported","_isResourceExport","_importStream","scaleX","scaleY","needScale","trunc","needTransform","_origin","_isAnnotationTemplate","_needScale","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_scale","keyName_1","ref_1","isReference","_resources","base","_getNextReference","_processResources","_updatePendingResource","_reference","_updateFontResource","image","_imageStream","_maskStream","_maskReference","internal","drawPath","path","_buildUpPath","fillMode","drawRoundedRectangle","radius","diameter","arc","sweep","_writePen","_dashPattern","setPattern","_dashOffset","_lineJoin","_lineCap","_miterLimit","_color","drawString","layouter","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_mediaBoxUpperRightBound","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","hasResource","PdfPen","PdfBrush","layoutRectangle","shouldClip","clipRegion","clipBounds","middle","setClip","isItalic","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_skewTransform","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","_pageIndex","addPage","tm","_TextRenderingMode","fill","setLineWidth","fillStroke","stroke","fontName","isBoldFont","toLocaleLowerCase","isBold","clipFlag","cs","ws","ttfFont","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","center","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justify","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","drawLine","textSize","layoutedRectangle","needClosing","isBrush","isPen","alternate","_initializeCoordinates","cbox","location_1","needTransformation","mbox","_cropBox","scaleTransform","_multiply","rotateTransform","setTransparency","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_clipTranslateMargins","angleX","angleY","_getSkewTransform","_skew","_Matrix","tanA","tan","_degreeToRadians","tanB","skew","degreesX","arg6","_clone","_transform","_offsetX","_offsetY","_g","_dashStyle","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","_XmlWriter","isAppearance","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_set","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","splice","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_destroy","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","isValid","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","test","previousTop","_ExportHelper","_asPerSpecification","_fileName","_formKey","_exportEmptyFields","_groupReferences","_groupHolders","_richTextPrefix","_table","_fields","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","fieldName","_getEncodedValue","selectedValue","_getExportValue","PdfListBoxField","PdfComboBoxField","_obtainSelectedValue","radioButton","PdfRadioButtonListField","selectedIndex","options","isNaN","PdfCheckBoxField","_getAppearanceStateValue","itemAt","_defaultIndex","_exportFormFieldData","replaceValue","PdfTextBoxField","multiLine","PdfListField","_getAnnotationType","subtype","_getValue","primitive","_getValidString","colorArray","_getColor","kids","kid","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","holder","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_fontName","_addReferenceToGroup","_handlePopup","annotations","annotationDictionary","popupReference","popup","popupAnnotation","_parseAnnotation","_annotations","_parsedAnnotations","_importField","richTextValue","_getFieldIndex","fieldAt","_importFieldData","selectedValues_1","indexes_1","options_1","_options","option","AP","lowerCase","_containsExportValue","_kidsCount","_checkSelected","asEntry","normalTemplate","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","fileName","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","_root","parentElements","newTable","pageIndex","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","_writeAnnotationData","hasAppearance","borderEffect","_writeDictionary","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","vertices","elementCount","_writeRawData","defaultStyle","inkList","textWriter","_writeAppearanceDictionary","_writeObject","_writePrefix","_writeArray","streamDictionary","getString","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","skip","name_1","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_isImported","_ref","_comments","isValidType","points_1","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","this_1","childElement","popupDictionary","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","inkChild","inkChildElement","points_2","pointsArray_1","_addStreamData","parent","raw","_addFileAttachment","_addSound","soundStream","_PdfContentStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getName","_getBoolean","_getData","isImage","_isCompress","Length","Filter","_addArrayElements","name_3","floatValue","intValue","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","_isImport","_isColorSpace","_isGroupingSupport","isAnnotationAdded","_exportAnnotation","_convertToJson","clear","rcValue","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","bytes_1","vertice","json","details","parentTable","appearanceTable","isNewReference","_writeTable","_convertToJsonArray","isTabSpace","_hasUnicodeCharacters","dataTable","streamTable","baseStream","isImageStream","dataArray","sw","CompressedStreamWriter","close","getCompressedString","_initialized","_cipher","streamLength","bufferLength","flateStream","map","unicodeRegex","some","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","outColor","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","count_1","styleKey","styleValue","gestureKeys","gesture","interactionKeys","convertString","stringify","objectNumber","generationNumber","dashArray","dash","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","unicodeData","dataKeys","byteString","_parseStreamElements","_pendingResources","_templateOriginalSize","_isReadOnly","_writeTransformation","_isTemplateGraphics","_exportStream","jsonDocument","resourceTable","_appearance","hasCrossReference","isResourceExport","resourceDictionary","PdfAction","_next","PdfGoToAction","arg","_destination","PdfFieldActions","_field","_mouseEnter","_getPdfAction","_updateAction","_mouseLeave","_mouseUp","_mouseDown","_gotFocus","_lostFocus","action","_destinationMode","location","_enableGrouping","_isDuplicatePage","_visible","_isTransparentBackColor","_isTransparentBorderColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_isUpdating","_kids","_form","names","_actualName","_mappingName","mappingName","_alternateName","toolTip","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","rotate","_defaultAppearance","_da","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","_parseBorderColor","_updateBorderColor","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","rotationAngle","noExport","index1","_tabIndex","tabOrder","manual","_tabOrder","annotationCollection","PdfAnnotationCollection","_annotationIndex","widgetRef","_gray","_silver","_white","_black","mkDictionary","_mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_hasBorderColor","borderColor","BC","bsDictionary","W","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","parsedItems_1","removeItem","da","bs","_checkFieldFlag","_initializeFont","fontDict","_drawRectangularControl","parameter","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","_drawRadioButton","checkSymbol","unchecked","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","leftTop","rightBottom","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","size_1","z","_addToKid","currentIndex","_drawTemplate","_addToOptions","_listValues","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","_autoResizeText","_defaultValue","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","appearanceStream","_PaintParameter","backcolor","insertSpaces","pdfFont","stringFormat","enableGrouping","_drawTextBox","scrollable","multiline","scroll","startlocation","isAutoFontSize","_actions","_assignText","fieldDictionary","pushButton","pressed","isPressed","isSizeZero","font_1","previousFont","currentFont","textWidth","_drawPressedButton","_drawButton","PdfStateItem","V","AS","_drawAppearance","_styleText","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","name_5","PdfRadioButtonListItem","_setField","parsedItems_2","radio","_optionValue","checkName","asName","actualValue","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","_getFontHeight","selectedIndexes","combo","acroForm","fontString","verticalAlignment","_drawComboBox","doubleBorderWidth","padding","itemTextBound","x_3","itemFont","widths_1","h","_drawListBox","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_isTransparentColor","_isRotated","_isChanged","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getMediaOrCropBox","cropOrMediaBox","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","remove","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","measure","flatten","_needInitializeGraphics","rubberStampAnnotation","PdfAngleMeasurementAnnotation","_o","radians","_drawCloudStyle","overlap","_isClockWise","sortedPoints","previousPoint","circles","circleOverlap","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","intensity","_createRectangleAppearance","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","_colorToHex","col","_componentToHex","_getRotatedBounds","rotateAngle","corners","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","_getPoints","polygonPoints","modifiedPoints","PdfComment","PdfPopupAnnotationCollection","_reviewHistory","_unit","_unitString","lineAnnotation","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","_appearanceTemplate","_createLineMeasureAppearance","isUpdated","boundsArray","_obtainLineBounds","updatedBounds","rectangleBounds","flattenPopups","reference_1","_isFlatten","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","leaderLineValue","_drawLine","PdfCircleAnnotation","_measureType","circleAnnotation","_createCircleMeasureAppearance","reference_2","fontsize","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","pageSize","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","_isEnableControlPoints","inkAnnotation","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","removeAt","inkPoints","pathPointCont","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","containsCropOrMediaBox","modifiedInkList","_updateInkListCollection","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","_comment","_commentSecondHalf","_note","_help","_helpSecondHalf","_insert","_keySecondHalf","_newParagraph","_newParagraphSecondHalf","_paragraph","_paragraphSecondHalf","_obtainIconName","_createPopupAppearance","fileLinkAnnotation","_action","actionDictionary","_addAction","nextAction","uri","_uri","uriAnnotation","linkDict","documentLinkAnnotation","_initializePrimitive","_addDocument","_getDestination","top_3","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_getNamedDestination","catalog","_catalog","_catalogDictionary","_getNamedObjectFromTree","_extractDestination","found","currentDictionary","_getProperKid","_findName","destinationReference","lowerIndex","topIndex","cmp","_stringCompare","kidsArray","_checkLimits","limits","lowerLimit","higherLimit","lowCompare","highCompare","byteArray1","commonSize","resultValue","_array","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","fileAttachmentAnnotation","_addAttachment","fileSpecification","fileSpectDictionary","toTimeString","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","yCrop","heightCrop","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","defaultRect","pathPointsCount","zigZag","textQuadLocation","margin","noofRect","isContainscropOrMediaBox","cropOrMediaBoxX","cropOrMediaBoxY","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","dictionary_1","PdfRubberStampAnnotation","_stampWidth","_alterRotateBounds","_stampAppearanceFont","createTemplate","templateDictionary","mMatrix","_transformBBox","_createRubberStampAppearance","innerBounds","_obtainInnerBounds","_parseStampAppearance","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","rubberFont","_drawRubberStamp","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","_isContentUpdated","freeTextAnnotation","_parsedXMLData","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","rcColor","_updateStyle","rcAlignment","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_parseXMLData","_setPaddings","paddings","_paddings","_saveFreeTextDictionary","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","angle_1","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","rcFont","alignmentText","body","textDecoration","decorationText","_getXmlFormattedString","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","first_2","second_2","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","isContent","markUpText","_rcText","hasAlignment","pointY","pointX","annotationIntent","markupText","rcContent","xdocument","fontCollection","nameSpaceURI","namespaceURI","styleMap","_collectStyles","_extractStylesToInput","fontDetails","_getFontDetails","_updateFontProperties","updatedFontName","updatedFontStyle","updatedBrush","obtainFont","_fontCollection","nodeStyle","window","getComputedStyle","error","tagName","firstElementChild","nextElementSibling","propertyName","propertyValue","getPropertyValue","property","_obtainFontStyle","_parseTextAlignment","_parseFont","_parseFontSize","_parseFontWeight","_parseFontFamily","_rgbStringToArray","_parseFontStyle","_parseTextDecoration","_parseTextAlign","part","rgbString","match","concat","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_9","document_2","_backColor","_setCheckedStatus","fieldValue","_unCheckOthers","isChecked","asValue","apDictionary","keyList_1","_initializeItem","_getBorderEffect","_styleToEffect","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","_getProperty","actualIndex","_reorderParsedAnnotations","_updateChildReference","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","parentReference","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","remaining","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","title","PdfBookmark","_updateBookmarkList","prev","_updateCount","_removeFirst","_removeLast","_removeCount","_removePrevious","_removeNext","First","Last","Next","Prev","Count","updatedList","isExpanded","firstBookmark","_getBookmark","isBookmark","bookmarkBase","isFirst","bookMark","bookmarkBaseDictionary","bookMarkDictionary","namedDestination","_obtainNamedDestination","_parent","_namedDestination","_title","_textStyle","_obtainTextStyle","_updateTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","_findDestination","destinationObject","_location","_zoom","_isValid","_isAnnotationParsed","widgets_1","_parseWidgetReferences","validAnnotations_1","cBox","isValidCropBox","_rotation","_obtainTabOrder","tabs","column","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","annotsRef","Annots","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","cx","cy","crx","cry","origin","sign","clip","_getActualBounds","actualSize","_getActualSize","_fetchResources","targetArray","_combineIntoSingleArray","targetStream","arrays","reduce","arr","sourceArray","_destinationBounds","_ImageDecoder","_bitsPerComponent","_noOfComponents","_reset","_getBuffer","outputBuffer","_seek","byteLength","_toUnsigned16","_readUnsigned32","_imageData","jpeg","_readHeader","imgData","isLengthExceed","_readExceededJpegImage","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","skippedByte","marker","_InflaterState","_BlockType","_PngChunkTypes","_DecompressedOutput","_usedBytes","_dOutput","_dOutSize","_dOutMask","_writeLD","copyStart","_copyFrom","copied","tailLen","_copyTo","sourceStart","sourceStartIndex_1","sourceStartIndex","_InBuffer","_bBuffer","_bInBuffer","_needsInput","_availableBits","_load16Bits","_getBitMask","_getBits","bitBuffer","avail","_setInput","_skipBits","_skipByteBoundary","_HuffmanTree","_clArray","_loadTree","isLengthTree","_getLengthTree","_getDepthTree","_maxLengthTree","_tBits","_tMask","_createTable","lTree","_maxDepthTree","_calculateHashCode","bit","_bitReverse","newcode","codeArray","ofBits","bitMask","_getNextSymbol","mask","codeLength","_nCLength","_Inflater","_extraLengthBits","_staticDistanceTreeTable","_lengthBase","_distanceBasePosition","_codeOrder","_bfinal","_bLength","_blBuffer","_blockType","unCompressedType","_caSize","_clCodeCount","_extraBits","_lengthCode","_llCodeCount","_output","_input","_loopCounter","_codeList","_cltcl","_inflaterState","readingBFinal","done","vFooter","inputBytes","_inflate","_finished","eob","readingBType","_getBlockType","dynamicType","readingNlCodes","staticType","_llTree","_distanceTree","decodeTop","unCompressedAligning","_getInflaterStateValue","_decodeDynamicBlockHeader","_decodeBlock","_decodeUncompressedBlock","endBlock","unCompressedByte1","_unCompressedByte","unCompressedByte2","unCompressedByte3","unCompressedByte4","decodeUnCompressedBytes","_unusedBytes","inflaterstate","unCompressedByte","_getInflaterState","fb","dCodeResult","fLengthResult","inLengthResult","_inLength","iLength","fLength","_fLength","dCode","_dcode","_distanceCode","readingNdCodes","_readingNDCodes","readingCodes","_readingCodes","readingClCodes","_readingCLCodes","readingTcBefore","readingTcAfter","_readingTCBefore","literalTreeCodeLength","distanceTreeCodeLength","_dCodeCount","_clTree","repeatCount","previousCode","readingHeader","srFooter","rFooter","_DeflateStream","leaveOpen","_leaveOpen","_inflater","cOffset","rCount","inflateResult","png","_isRedGreenBlue","_isDecode","_shades","_ideateDecode","_colors","_bitsPerPixel","_idatLength","_inputBands","_hasValidChunkType","hasValidChunk","iHDR","iDAT","_readImageData","sRGB","_ignoreChunk","pLTE","_readPhotoPlate","iEND","_decodeImageData","tRNS","_readTransparency","tEXt","iTXt","zTXt","hIST","sBIT","iCCP","pHYs","tIME","bKGD","gAMA","cHRM","_currentChunkLength","_getChunkType","_header","_PngHeader","_bitDepth","_colorType","_compression","_filter","_getFilterType","_interlace","_setBitsPerPixel","_encodedStream","_colorSpace","_getPngColorSpace","alpha","_alpha","sh","colorspace","calRGB","whitePoint","gammaArray","wpY","alphaY","redY","blueY","blueX","blueZ","colorY","bY","alphaX","alphaZ","_maskData","_dataStream","_getDeflatedData","_dataStreamOffset","_decodedImageData","_readDecodeData","idatData","deflateStream","numRead","outputData","_decodeData","xStep","yStep","bytesPerRow","prior","sourceY","destinationY","filter","_readStream","_PngFilterTypes","sub","_decompressSub","_decompressUp","average","_decompressAverage","paeth","_decompressPaeth","_processPixels","tmp","streamOffset","bitsPerPixel","pData","pp","pr","prp","_paethPredictor","pa","pb","pc","step","sourceX","destX","_getPixel","depth","_setPixel","unsigned","dt","hb","bitDepth","bpr","_setMask","BaseException","message","FormatError","ParserEndOfFileException","_emptyPdfData","gen","_PdfReferenceSet","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_b","_c","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","_isImage","getByte","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","isHex","getBaseStreams","arrayBuffer","dataStream2","strEnd","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","minBufferLength","ensureBuffer","requested","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_nextChunk","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","_allowCatalog","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","kk","prevRow","upLeft","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","ii","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","createStream","decryptString","stringBytes","encryptString","pad","repeat","crypto","getRandomValues","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","encryptor","_isPassword","imageCache","_encryptor","refill","tryShift","arguement1","arguement2","arguement3","cipherTransform","makeInlineImage","_checkEnd","makeStream","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","bytesLength","makeFilter","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","endOffset","_Linearization","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfCrossReference","_entries","_crossReferencePosition","_offsetReference","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_prevXRefOffset","_parse","trailerDictionary","_indexObjects","_readXRef","entrySize","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","fileStructure","isIncrementalUpdate","crossReferenceType","hasRoot","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_fileStructure","_crossReferenceType","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","_currentLength","buffer_1","_saveAsStream","_saveAsTable","objectCollection","_PdfMainObjectCollection","_writeObjectCollection","_mainObjectCollection","currentLength","objectStreamCollection","_updatedDictionary","_writeArchieveStream","_objectStream","_objectStreamCollection","_writeXrefStream","formatValue","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","_archiveOffset","newXrefStream","tempBuffer","offsetString","_processString","genString","_writeXref","_writeXrefTable","_getSortedReferences","xrefHeader","initialEntry","now","crossReferenceInfo","transform","isCrossReference","_writeStream","nestedValue","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","value_1","_writeUnicodeString","_escapeString","byteValues","_writeObjectToBuffer","archiveObj","_PdfArchievedStream","_writeToBuffer","typeIsFilter","entriesArray","sortedCollection","lastObjectNumber","entriesArray_1","currentObjectNumber","_archiveXRef","_updatedStream","newDict","archiveStream","_pointer","_cache","foundCatalog","_addToMainObjectCollection","_parseObjectCollection","_addReferencesToMainCollection","_parseFetchValue","fetchvalue","every","objectsToWrite","processReference","fetchValue","uncompressedValue","PdfForm","_isDefaultAppearance","_hasKids","_fieldCollection","_signFlag","_isNeedAppearances","_parsedFields","_createFields","_needAppearances","_parseFields","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","hasNoKids","nodes","fieldKids","kidsDict","_isNode","isNode","_widgetReferences","fieldReference","kidReference","kidDictionary","pageToImport","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","inReplyToDictionary","_appendElement","_XmlDocument","_checkXml","xmlDocument","PdfFileStructure","_incrementalUpdate","PdfPageImportOptions","_optimizeResources","_groupFormFields","_targetIndex","_PdfMergeHelper","pageReference","_bookmarks","_pageReference","_bookmarksPageLinkReference","_newList","_annotationLayer","_isLayersPresent","_kidsReference","_formFieldsCollection","_formFields","_fieldCount","_destinationDocument","_sourceDocument","_copier","_PdfCopier","_importPages","layers","isCopiedPage","isSplitDocument","newPage","_insertNewPage","optimizeResources","newContents_1","pageContent","_copy","newContent","resourceValue","_contentTemplate","_importAnnotation","groupFormFields","_formFieldsGroupingSupport","_importFormField","bookMarkMap","_parseBookmarkDestination","bookmarks","_mergeLayer","dest","isDestination","oldCollection","annotationReference","destArray","copiedAnnotationReference","copiedAnnotationDictionary","oldPage","formFields","fieldNames","drEntry","formField","destinationKids","sourceKids","_groupFormFieldsKids","_insertFormFields","destinationField","destKids","oldKids","oldDictionary","_copyDictionary","_updateFieldsWithKids","fieldDict","_updateFieldDictionary","formFieldDict","_removeFieldDictionary","formFieldDictionary","newFieldReference","newFieldDict","_createNewFieldDictionary","newField","kidsElement","pageRef","parentRef","destDictionary","_getItemStyle","previousIndex","formDictionary","baseFontName","pdfForm","widgetArray","pdfField","dr","drDictionary","curreneDR","currentFont_1","newReference","modified","_mergeFormFieldsWithDocument","pdfFields","_importLayers","ocProperties","destinationOCProperties","currentOCProperties","ocgs","Cocgs","curreneDefaultView","existingDefaultView","order","existingOrder","groups","existingRBGroups","on","existingON","existingElements","asDictionary","currentASDictionary","usageGroup","currentUsageGroup","off","existingOff","existingLocked","newPageDictionary","oldPageDictionary","xobjdict","xobject","XObject","oldPageList","oldPageResource","layerValue","layerkey","annotationKey","annotationValue","layerKey","xobjDictionary","annotDictionary","oldReference","_exportBookmarks","currentBase","bkCollection","stack","nodeInformation","bm","newBm","newDest","newPage_1","nDest","newNameddest","C","newpage_1","page_2","newNamedDest","_writePropertiesDictionary","layerList","_fixDestinations","pageLinkReference","pagesettings","PdfPageSettings","orientation","_objectDispose","_bookmarkHashTable","targetCrossReference","sourceCrossReference","_traversedObjects","_targetCrossReference","_sourceCrossReference","object","clonedObject","_copyArray","_copyStream","_copyReference","copiedPage","clonedDictionary","copiedValue","originalArray","newArray","originalStream","dereferencedValue","copyValue","_addToDestination","PdfDocument","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_isSplitDocument","_pages","_checkHeader","_startXRef","_linear","err","_linearization","_find","startXRefLength","_pageCount","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","settings","_checkPageNumber","sectionDictionary","_updatePageSettings","sectionReference","lastPage_1","parentDictionary","newKids_1","_updatePageCache","_updatePageCount","removePage","argument","targetPage","_removePage","valueToIncrement","isIncrement","updatedData","pageToRemove","bookmarkDictionary","_removePageTemplates","_removeParent","referenceToRemove","_removeInternalTemplates","namedObject","nameCollection","namedPageCollection","_getUpdatedPageTemplates","namedPageDictionary","namedPages","reorderPages","orderArray","sortedArray","_sortedArray","ascendingOrder","pagesToRemove","_","newkids","newPages","indexPage","_cloneResources","num","resourceDictionary_1","_cloneInnerResources","oldObject_1","hasNew_1","innerKey","oldArray_1","hasNew_2","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_mergeHelperCache","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","needAppearances","_addWatermarkText","importPageRange","sourceDocument","sourceOCProperties","correspondancePagecount","targetIndex","sourcepage","_uniqueID","isLayersPresent","importPage","splitByFixedNumber","fixedNumber","splitEvent","splitIndex","tempValue","pdfData","_importDocumentPages","_invokeSplitEvent","splitByPageRanges","ranges","range","args","PdfDocumentSplitEventArgs","_exportAppearance","_exportName","_isOrientation","_margins","PdfMargins","_updateSize","_updateOrientation","pageOrientation","all","_pdfData","_PdfPaddings","PdfLayoutFormat","_boundSet","_paginateBounds","break","layout","paginateBounds","paginate","fitPage","_break","PdfLayoutResult","_PageLayoutResult","markerWrote","markerWidth","markerX","_PdfLayoutParameters","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder","colorSpace","indexed","PdfListItem","_textIndent","_subList","PdfListItemCollection","items","_listItems","itemIndent","textIndent","PdfList","_indent","_alignment","_delimiter","_suffix","_enableHierarchy","_currentIndex","_itemCollection","_drawInternal","_PdfListLayouter","layoutInternal","PdfOrderedList","_startNumber","indent","delimiter","suffix","PdfUnorderedList","disk","_getStyledText","asterisk","_draw","_unicodeFont","_PdfListInfo","_list","_number","_information","_markerMaxWidth","_finish","_usePaginateBounds","_resultHeight","_element","_graphics","onePage","_currentPage","pageResult","broken","_curList","_setCurrentParameters","_getMarkerMaxWidth","useOnPage","_layoutOnPage","usePaginateBounds","finalBounds","_currentFormat","resultantHeight","_drawItem","oList","_markerWidth","listInfo","curList","markerText","posY","posX","itemHeight","itemSize","itemBrush","markerHeight","itemPen","itemFormat","itemText","canDrawMarker","markerResult","_createMarkerResult","itemX","_markerRightToLeft","_drawMarker","_createOrderedMarkerResult","_createUnorderedMarkerResult","_drawOrderedMarker","_drawUnorderedMarker","markerFont","_getMarkerFont","markerPen","_getMarkerPen","markerBrush","_getMarkerBrush","markerFormat","_setMarkerStringFormat","_getMarkerFormat","infromation","startNumber","uFont","findMaxWidth","enableHierarchy","orderedList","markerSize"],"mappings":"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AAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxG,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACpH,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACpH,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MAE7GxmB,KAAKymB,MAAQ,IACbzmB,KAAK0mB,WAAa,IAClB1mB,KAAK2mB,gBAAkB,IACvB3mB,KAAK4mB,WAAa,IAClB5mB,KAAK6mB,KAAO,IACZ7mB,KAAK8mB,OAAS,IACd9mB,KAAK+mB,iBAAmB,IACxB/mB,KAAKgnB,YAAc,IACnBhnB,KAAKinB,YAAc,IACnBjnB,KAAKknB,UAAY,IACjBlnB,KAAKmnB,UAAY,IACjBnnB,KAAKonB,KAAO,IACZpnB,KAAKqnB,UAAY,IACjBrnB,KAAKsnB,KAAO,IACZtnB,KAAKunB,UAAY,IACjBvnB,KAAKwnB,QAAU,IACfxnB,KAAKynB,OAAS,IACdznB,KAAK0nB,KAAO,IACZ1nB,KAAK2nB,OAAS,IACd3nB,KAAK4nB,QAAU,IACf5nB,KAAK6nB,OAAS,IACd7nB,KAAK8nB,MAAQ,IACb9nB,KAAK+nB,UAAY,IACjB/nB,KAAKgoB,WAAa,IAClBhoB,KAAKioB,OAAS,EACdjoB,KAAKkoB,gBAAkB,GAAIC,IAC3B,KAAK,GAAIntC,GAAI,EAAGA,EAAIglB,KAAKwmB,iBAAiB3rC,OAAQG,IAC9CglB,KAAKkoB,gBAAgB3lC,IAAIyd,KAAKwmB,iBAAiBtrC,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAI4kB,KAAKwmB,iBAAiBtrC,OAAOC,SAASH,EAAEI,WAAY,MAgNlJ,MA7MAmrC,GAAqBzwB,UAAUsyB,mBAAqB,SAAU/mC,EAAO1E,GACjE,GAAK0E,GAAS2e,KAAK8mB,QAAYzlC,GAAS2e,KAAK8nB,MAAQ,CAEjD,GAAI9nB,KAAKkoB,gBAAgBjkC,IAAI5C,GAEzB,MADQ2e,MAAKkoB,gBAAgBjkC,IAAI5C,GACpB1E,EAAQ,OAGxB,IAAI0E,GAAS2e,KAAK6nB,QAAUxmC,GAAS2e,KAAK0nB,KAC3C,QAEJ,OAAOrmC,IAEXklC,EAAqBzwB,UAAUuyB,OAAS,SAAUn5B,GAG9C,IAAK,GAFD0T,GAAU,GACV3oB,EAAQ,GACHe,EAAI,EAAGA,EAAIkU,EAAKrU,OAAQG,IAAK,CAClC,GAAIuL,GAAI2I,EAAKhU,OAAOC,SAASH,EAAEI,WAAY,IACvCmL,IAAK,KAAOA,GAAK,IACjBtM,GAAgBsM,GAGZtM,EAAMY,OAAS,IAEf+nB,GADI0lB,EAAYtoB,KAAKuoB,SAAStuC,EAAMmB,WAAY,GAEhDnB,EAAQ,IAEZ2oB,GAAoBrc,GAG5B,GAAItM,EAAMY,OAAS,EAAG,CAClB,GAAIytC,GAAYtoB,KAAKuoB,SAAStuC,EAAMmB,WAAY,EAChDwnB,IAAoB0lB,EAExB,MAAO1lB,GAAQxnB,YAEnBmrC,EAAqBzwB,UAAUyyB,SAAW,SAAUlnC,EAAOmnC,GAQvD,IAPA,GAAIC,GAAM,GAENhb,EAAM,EACNzyB,EAAI,EACJ0tC,EAAO,GACPC,EAAW,GAAIC,IACfC,EAAU,GAAID,IACX5tC,EAAIqG,EAAMxG,QAGb,GAFA6tC,EAAOrnC,EAAMrG,KAEI,IADNglB,KAAK8oB,UAAUJ,EAAMG,GACZ,CAChB,GAAIE,GAAa/oB,KAAKgpB,eAAeN,EACrCjb,GAAsB,IAAfsb,EAAoB,EAAI,EAC3BJ,EAASM,QAAU,IACnBxb,GAAO,GAEXA,GAAaob,EAAgB,QAC7BA,EAAQK,YAAclpB,KAAKooB,mBAAmBS,EAAQK,YAAazb,GACnEgb,EAAMzoB,KAAKmpB,QAAQV,EAAKE,EAAUH,GAClCG,EAAWE,GACXA,EAAU,GAAID,KACNM,YAAcR,EACtBG,EAAQI,QAAUF,EAClBF,EAAQO,iBAQhB,MALA3b,GAAOkb,EAASM,QAAU,EAAK,EAAI,EACnCxb,GAAaob,EAAgB,QAC7BA,EAAQK,YAAclpB,KAAKooB,mBAAmBS,EAAQK,YAAazb,GACnEgb,EAAMzoB,KAAKmpB,QAAQV,EAAKE,EAAUH,IAClCC,EAAMzoB,KAAKmpB,QAAQV,EAAKI,EAASL,IACtBptC,YAEfmrC,EAAqBzwB,UAAUqzB,QAAU,SAAUvmB,EAASymB,EAAOb,GAuB/D,MAtB0B,KAAtBa,EAAMH,cACNtmB,GAAoBymB,EAAMH,YAC1BG,EAAMD,gBAAkB,EACC,KAArBC,EAAMC,aACwB,IAAzBd,EAAQxoB,KAAKioB,SACdrlB,GAAoBymB,EAAMC,WAC1BD,EAAMD,gBAAkB,GAGxBC,EAAMD,gBAAkB,GAGN,KAAtBC,EAAME,cACwB,IAAzBf,EAAQxoB,KAAKioB,SACdrlB,GAAoBymB,EAAME,YAC1BF,EAAMD,gBAAkB,GAGxBC,EAAMD,gBAAkB,IAI7BxmB,GAEX2jB,EAAqBzwB,UAAUgzB,UAAY,SAAU7uC,EAAOovC,GACxD,GAA0B,KAAtBA,EAAMH,YAAoB,CAC1B,GAAItpC,GAAS,CACb,IAAK3F,GAAS+lB,KAAK+nB,WAAa9tC,GAAS+lB,KAAKinB,aAAgBhtC,IAAU+lB,KAAKgoB,WAAY,CAKrF,GAJApoC,EAAS,EACkB,KAAtBypC,EAAME,aAAwBtvC,IAAU+lB,KAAKwnB,UAC9C5nC,EAAS,GAET3F,IAAU+lB,KAAKwnB,QAAS,CACxB,GAAyB,KAArB6B,EAAMC,WAIN,MAAO,EAHPD,GAAMC,WAAatpB,KAAKwnB,YAMvBvtC,KAAU+lB,KAAKinB,YAChBoC,EAAMH,cAAgBlpB,KAAKymB,OAC3B4C,EAAMH,YAAclpB,KAAK2mB,gBACzB/mC,EAAS,GAEJypC,EAAMH,cAAgBlpB,KAAK0nB,MAChC2B,EAAMH,YAAclpB,KAAK4nB,QACzBhoC,EAAS,GAGTypC,EAAMC,WAAatpB,KAAKinB,YAGvBhtC,IAAU+lB,KAAKgnB,YAChBqC,EAAMH,cAAgBlpB,KAAKymB,OAC3B4C,EAAMH,YAAclpB,KAAK0mB,WACzB9mC,EAAS,GAEJypC,EAAMH,cAAgBlpB,KAAK0nB,MAChC2B,EAAMH,YAAclpB,KAAK2nB,OACzB/nC,EAAS,GAEJypC,EAAMH,cAAgBlpB,KAAKonB,MAChCiC,EAAMH,YAAclpB,KAAKknB,UACzBtnC,EAAS,GAEJypC,EAAMH,cAAgBlpB,KAAKsnB,MAAQ+B,EAAMH,cAAgBlpB,KAAKqnB,WACnEgC,EAAMH,cAAgBlpB,KAAKunB,WAC3B8B,EAAMH,YAAclpB,KAAKmnB,UACzBvnC,EAAS,GAGTypC,EAAMC,WAAatpB,KAAKgnB,YAGvB/sC,IAAU+lB,KAAKynB,OAChB4B,EAAMH,cAAgBlpB,KAAKymB,QAC3B4C,EAAMH,YAAclpB,KAAK4mB,WACzBhnC,EAAS,GAIbypC,EAAME,YAActvC,CAKxB,OAHe,KAAX2F,GACAypC,EAAMD,iBAEHxpC,EAEX,MAA0B,KAAtBypC,EAAME,YACC,GAEPF,EAAMH,cAAgBlpB,KAAK6mB,OACvB5sC,IAAU+lB,KAAKymB,OACf4C,EAAMH,YAAclpB,KAAK0nB,KACzB2B,EAAMJ,QAAU,EAChBrpC,EAAS,GAEJ3F,IAAU+lB,KAAK0mB,YACpB2C,EAAMH,YAAclpB,KAAK2nB,OACzB0B,EAAMJ,QAAU,EAChBrpC,EAAS,GAEJ3F,IAAU+lB,KAAK2mB,iBACpB0C,EAAMH,YAAclpB,KAAK4nB,QACzByB,EAAMJ,QAAU,EAChBrpC,EAAS,GAEJ3F,IAAU+lB,KAAK4mB,aACpByC,EAAMH,YAAclpB,KAAK6nB,OACzBwB,EAAMJ,QAAU,EAChBrpC,EAAS,IAGVA,GAGP,MAAO,IAGf2mC,EAAqBzwB,UAAUkzB,eAAiB,SAAUK,GACtD,GAAKA,GAASrpB,KAAK8mB,QAAYuC,GAASrpB,KAAK8nB,SAAauB,GAASrpB,KAAK+nB,WAAasB,GAASrpB,KAAKinB,aAC5FoC,IAAUrpB,KAAKgoB,YAAa,CAE/B,GAAIhoB,KAAKkoB,gBAAgBjkC,IAAIolC,GAEzB,MADIrpB,MAAKkoB,gBAAgBjkC,IAAIolC,GACpBxuC,OAAS,MAGrB,IAAIwuC,IAAUrpB,KAAK+mB,iBACpB,MAAO,EAEX,OAAO,IAEJR,KAGPqC,GAA8B,WAC9B,QAASA,KACL5oB,KAAKkpB,YAAc,GACnBlpB,KAAKspB,WAAa,GAClBtpB,KAAKupB,YAAc,GACnBvpB,KAAKopB,eAAiB,EACtBppB,KAAKipB,QAAU,EAEnB,MAAOL,MC7RPY,GAAgC,WAMhC,QAASA,KACLxpB,KAAKypB,YACLzpB,KAAK0pB,gBACL1pB,KAAK2pB,gBAAkB,GAAIja,IAC3B1P,KAAK4pB,UAgaT,MA9ZAJ,GAAe1zB,UAAU+zB,iBAAmB,SAAU36B,GAElD,IAAK,GADDtP,MACK5E,EAAI,EAAGA,EAAIkU,EAAKrU,OAAQG,IAC7B,GAAoE,IAAP,EAAvDglB,KAAK0pB,aAAaxuC,OAAOC,SAASH,EAAEI,WAAY,OAC/C4kB,KAAK2pB,gBAAgBvP,YAAYlrB,EAAKhU,OAAOC,SAASH,EAAEI,WAAY,KAAK6C,WAAW,IAAK,CAC5F,GAAIhE,GAAQiV,EAAKhU,OAAOC,SAASH,EAAEI,WAAY,KAAK6C,WAAW,EAC/D2B,GAAO1E,OAAOC,SAASH,EAAEI,WAAY,KAAOuD,OAAOC,aAAaohB,KAAK2pB,gBAAgBtY,SAASp3B,QAG9F2F,GAAO1E,OAAOC,SAASH,EAAEI,WAAY,KAAO8T,EAAKhU,OAAOC,SAASH,EAAEI,WAAY,KAAKA,UAI5F,KAAK,GADD0uC,GAAM,GACD7uC,EAAI,EAAGA,EAAI2E,EAAO/E,OAAQI,IAC/B6uC,GAAYlqC,EAAO1E,OAAOC,SAASF,EAAEG,WAAY,IAErD,OAAO0uC,IAEXN,EAAe1zB,UAAUi0B,0BAA4B,SAAUC,EAAWC,GACtE,GAAIC,GAAgB,GAAIC,GACxBnqB,MAAK0pB,aAAeQ,EAAcE,gBAAgBJ,EAAWC,GAC7DjqB,KAAKqqB,wBACLrqB,KAAKsqB,SAAS,EAAGtqB,KAAK0pB,aAAa7uC,OAAS,EAG5C,KAAK,GAFDqU,GAAO8Q,KAAK6pB,iBAAiBG,GAC7BO,EAAgB,GACXvvC,EAAI,EAAGA,EAAIglB,KAAKypB,SAAS5uC,OAAQG,IAAK,CAC3C,GAAI2B,GAAQqjB,KAAKypB,SAASvuC,OAAOC,SAASH,EAAEI,WAAY,IACxDmvC,IAAiBr7B,EAAKhU,OAAOC,SAASwB,EAAMvB,WAAY,KAE5D,MAAOmvC,GAAcnvC,YAEzBouC,EAAe1zB,UAAUu0B,sBAAwB,WAC7C,IAAK,GAAIrvC,GAAI,EAAGA,EAAIglB,KAAK0pB,aAAa7uC,OAAQG,IAC1CglB,KAAKypB,SAASvuC,OAAOC,SAASH,EAAEI,WAAY,KAAOJ,GAG3DwuC,EAAe1zB,UAAUw0B,SAAW,SAAUE,EAAQC,GAKlD,IAAK,GAJD3vC,GAAMklB,KAAK0pB,aAAaxuC,OAAOC,SAASqvC,EAAOpvC,WAAY,KAC3DL,EAAMD,EACN4vC,EAAM5vC,EACN6vC,EAAO7vC,EACFE,EAAIwvC,EAAS,EAAGxvC,GAAKyvC,IAAUzvC,EAAG,CACvC,GAAI6nB,GAAO7C,KAAK0pB,aAAaxuC,OAAOC,SAASH,EAAEI,WAAY,IACvDynB,GAAO/nB,EACPA,EAAM+nB,EAEDA,EAAO9nB,IACZA,EAAM8nB,GAEV6nB,GAAO7nB,EACP8nB,GAAQ9nB,EAEZ,GAAmB,IAAP,EAAP8nB,GAAL,CAGA,GAAkB,IAAP,EAAND,GAED,WADA1qB,MAAK4qB,WAAWJ,EAAQC,EAAS,EAIrC,KADA1vC,GAAO,EACAD,GAAOC,GAAK,CAEf,IADA,GAAI8vC,GAASL,IACA,CACT,KAAOK,GAAUJ,KACTzqB,KAAK0pB,aAAaxuC,OAAOC,SAAS0vC,EAAOzvC,WAAY,MAAQN,IAGjE+vC,GAAU,CAEd,IAAIA,EAASJ,EACT,KAGJ,KADA,GAAIK,GAAOD,EAAS,EACbC,GAAQL,KACPzqB,KAAK0pB,aAAaxuC,OAAOC,SAAS2vC,EAAK1vC,WAAY,KAAON,IAG9DgwC,GAAQ,CAEZ9qB,MAAK4qB,WAAWC,EAAQC,GACxBD,EAASC,EAAO,EAEpBhwC,GAAO,KAGf0uC,EAAe1zB,UAAU80B,WAAa,SAAU5vC,EAAGC,GAC/C,GAAIJ,IAAUG,EAAIC,GAAK,CAEvB,OADEA,EACKD,EAAIH,IAAUG,IAAKC,EAAG,CACzB,GAAI8vC,GAAO/qB,KAAKypB,SAASvuC,OAAOC,SAASH,EAAEI,WAAY,IACvD4kB,MAAKypB,SAASvuC,OAAOC,SAASH,EAAEI,WAAY,KAAO4kB,KAAKypB,SAASvuC,OAAOC,SAASF,EAAEG,WAAY,KAC/F4kB,KAAKypB,SAASvuC,OAAOC,SAASF,EAAEG,WAAY,KAAO2vC,IAG3DvB,EAAe1zB,UAAU8zB,QAAU,WAC/B5pB,KAAK2pB,gBAAgB7Y,SAAS,GAAI,IAClC9Q,KAAK2pB,gBAAgB7Y,SAAS,GAAI,IAClC9Q,KAAK2pB,gBAAgB7Y,SAAS,GAAI,IAClC9Q,KAAK2pB,gBAAgB7Y,SAAS,GAAI,IAClC9Q,KAAK2pB,gBAAgB7Y,SAAS,GAAI,IAClC9Q,KAAK2pB,gBAAgB7Y,SAAS,GAAI,IAClC9Q,KAAK2pB,gBAAgB7Y,SAAS,IAAK,KACnC9Q,KAAK2pB,gBAAgB7Y,SAAS,IAAK,KACnC9Q,KAAK2pB,gBAAgB7Y,SAAS,IAAK,KACnC9Q,KAAK2pB,gBAAgB7Y,SAAS,IAAK,KACnC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,OACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,OACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,OACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,OACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,OACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,OACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAM,MACpC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,MACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,KAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,KAAK2pB,gBAAgB7Y,SAAS,MAAO,OACrC9Q,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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCpE,EAA+BwE,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK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"}